
/********************************************************
*                                                       *
*   Package generated using UEDumper by Spuckwaffel.    *
*                                                       *
********************************************************/

/// Package Engine.

/// Struct /Script/Engine.MaterialInput
/// Size: 0x0028 (0x000000 - 0x000028)
struct FMaterialInput
{ 
	UMaterialExpression*                               Expression;                                                 // 0x0000   (0x0008)  
	int32_t                                            OutputIndex;                                                // 0x0008   (0x0004)  
	FName                                              InputName;                                                  // 0x000C   (0x0008)  
	int32_t                                            Mask;                                                       // 0x0014   (0x0004)  
	int32_t                                            MaskR;                                                      // 0x0018   (0x0004)  
	int32_t                                            MaskG;                                                      // 0x001C   (0x0004)  
	int32_t                                            MaskB;                                                      // 0x0020   (0x0004)  
	int32_t                                            MaskA;                                                      // 0x0024   (0x0004)  
};

/// Struct /Script/Engine.ColorMaterialInput
/// Size: 0x0008 (0x000028 - 0x000030)
struct FColorMaterialInput : FMaterialInput
{ 
	bool                                               UseConstant : 1;                                            // 0x0028:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0029   (0x0003)  MISSED
	FColor                                             Constant;                                                   // 0x002C   (0x0004)  
};

/// Struct /Script/Engine.DistributionLookupTable
/// Size: 0x0020 (0x000000 - 0x000020)
struct FDistributionLookupTable
{ 
	float                                              TimeScale;                                                  // 0x0000   (0x0004)  
	float                                              TimeBias;                                                   // 0x0004   (0x0004)  
	TArray<float>                                      Values;                                                     // 0x0008   (0x0010)  
	char                                               Op;                                                         // 0x0018   (0x0001)  
	char                                               EntryCount;                                                 // 0x0019   (0x0001)  
	char                                               EntryStride;                                                // 0x001A   (0x0001)  
	char                                               SubEntryStride;                                             // 0x001B   (0x0001)  
	char                                               LockFlag;                                                   // 0x001C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x001D   (0x0003)  MISSED
};

/// Struct /Script/Engine.ExpressionInput
/// Size: 0x0028 (0x000000 - 0x000028)
struct FExpressionInput
{ 
	UMaterialExpression*                               Expression;                                                 // 0x0000   (0x0008)  
	int32_t                                            OutputIndex;                                                // 0x0008   (0x0004)  
	FName                                              InputName;                                                  // 0x000C   (0x0008)  
	int32_t                                            Mask;                                                       // 0x0014   (0x0004)  
	int32_t                                            MaskR;                                                      // 0x0018   (0x0004)  
	int32_t                                            MaskG;                                                      // 0x001C   (0x0004)  
	int32_t                                            MaskB;                                                      // 0x0020   (0x0004)  
	int32_t                                            MaskA;                                                      // 0x0024   (0x0004)  
};

/// Struct /Script/Engine.ExpressionOutput
/// Size: 0x001C (0x000000 - 0x00001C)
struct FExpressionOutput
{ 
	FName                                              OutputName;                                                 // 0x0000   (0x0008)  
	int32_t                                            Mask;                                                       // 0x0008   (0x0004)  
	int32_t                                            MaskR;                                                      // 0x000C   (0x0004)  
	int32_t                                            MaskG;                                                      // 0x0010   (0x0004)  
	int32_t                                            MaskB;                                                      // 0x0014   (0x0004)  
	int32_t                                            MaskA;                                                      // 0x0018   (0x0004)  
};

/// Struct /Script/Engine.FloatDistribution
/// Size: 0x0020 (0x000000 - 0x000020)
struct FFloatDistribution
{ 
	FDistributionLookupTable                           Table;                                                      // 0x0000   (0x0020)  
};

/// Struct /Script/Engine.FloatRK4SpringInterpolator
/// Size: 0x0008 (0x000000 - 0x000008)
struct FFloatRK4SpringInterpolator
{ 
	float                                              StiffnessConstant;                                          // 0x0000   (0x0004)  
	float                                              DampeningRatio;                                             // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.FormatArgumentData
/// Size: 0x0050 (0x000000 - 0x000050)
struct FFormatArgumentData
{ 
	FString                                            ArgumentName;                                               // 0x0000   (0x0010)  
	TEnumAsByte<EFormatArgumentType>                   ArgumentValueType;                                          // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0011   (0x0007)  MISSED
	FText                                              ArgumentValue;                                              // 0x0018   (0x0018)  
	int64_t                                            ArgumentValueInt;                                           // 0x0030   (0x0008)  
	float                                              ArgumentValueFloat;                                         // 0x0038   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	double                                             ArgumentValueDouble;                                        // 0x0040   (0x0008)  
	ETextGender                                        ArgumentValueGender;                                        // 0x0048   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0049   (0x0007)  MISSED
};

/// Struct /Script/Engine.MaterialAttributesInput
/// Size: 0x0008 (0x000028 - 0x000030)
struct FMaterialAttributesInput : FExpressionInput
{ 
	int32_t                                            PropertyConnectedBitmask;                                   // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/Engine.RawDistribution
/// Size: 0x0020 (0x000000 - 0x000020)
struct FRawDistribution
{ 
	FDistributionLookupTable                           Table;                                                      // 0x0000   (0x0020)  
};

/// Struct /Script/Engine.ScalarMaterialInput
/// Size: 0x0008 (0x000028 - 0x000030)
struct FScalarMaterialInput : FMaterialInput
{ 
	bool                                               UseConstant : 1;                                            // 0x0028:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0029   (0x0003)  MISSED
	float                                              Constant;                                                   // 0x002C   (0x0004)  
};

/// Struct /Script/Engine.ShadingModelMaterialInput
/// Size: 0x0000 (0x000028 - 0x000028)
struct FShadingModelMaterialInput : FMaterialInput
{ 
};

/// Struct /Script/Engine.StrataMaterialInput
/// Size: 0x0000 (0x000028 - 0x000028)
struct FStrataMaterialInput : FMaterialInput
{ 
};

/// Struct /Script/Engine.Vector2MaterialInput
/// Size: 0x0010 (0x000028 - 0x000038)
struct FVector2MaterialInput : FMaterialInput
{ 
	bool                                               UseConstant : 1;                                            // 0x0028:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0029   (0x0003)  MISSED
	float                                              ConstantX;                                                  // 0x002C   (0x0004)  
	float                                              ConstantY;                                                  // 0x0030   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/Engine.Vector4Distribution
/// Size: 0x0020 (0x000000 - 0x000020)
struct FVector4Distribution
{ 
	FDistributionLookupTable                           Table;                                                      // 0x0000   (0x0020)  
};

/// Struct /Script/Engine.VectorDistribution
/// Size: 0x0020 (0x000000 - 0x000020)
struct FVectorDistribution
{ 
	FDistributionLookupTable                           Table;                                                      // 0x0000   (0x0020)  
};

/// Struct /Script/Engine.VectorMaterialInput
/// Size: 0x0010 (0x000028 - 0x000038)
struct FVectorMaterialInput : FMaterialInput
{ 
	bool                                               UseConstant : 1;                                            // 0x0028:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0029   (0x0003)  MISSED
	FVector3f                                          Constant;                                                   // 0x002C   (0x000C)  
};

/// Struct /Script/Engine.VectorRK4SpringInterpolator
/// Size: 0x0008 (0x000000 - 0x000008)
struct FVectorRK4SpringInterpolator
{ 
	float                                              StiffnessConstant;                                          // 0x0000   (0x0004)  
	float                                              DampeningRatio;                                             // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.AnimDataModelNotifPayload
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAnimDataModelNotifPayload
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/Engine.HitResult
/// Size: 0x00E8 (0x000000 - 0x0000E8)
struct FHitResult
{ 
	int32_t                                            FaceIndex;                                                  // 0x0000   (0x0004)  
	float                                              Time;                                                       // 0x0004   (0x0004)  
	float                                              Distance;                                                   // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FVector_NetQuantize                                Location;                                                   // 0x0010   (0x0018)  
	FVector_NetQuantize                                ImpactPoint;                                                // 0x0028   (0x0018)  
	FVector_NetQuantizeNormal                          Normal;                                                     // 0x0040   (0x0018)  
	FVector_NetQuantizeNormal                          ImpactNormal;                                               // 0x0058   (0x0018)  
	FVector_NetQuantize                                TraceStart;                                                 // 0x0070   (0x0018)  
	FVector_NetQuantize                                TraceEnd;                                                   // 0x0088   (0x0018)  
	float                                              PenetrationDepth;                                           // 0x00A0   (0x0004)  
	int32_t                                            MyItem;                                                     // 0x00A4   (0x0004)  
	int32_t                                            Item;                                                       // 0x00A8   (0x0004)  
	char                                               ElementIndex;                                               // 0x00AC   (0x0001)  
	bool                                               bBlockingHit : 1;                                           // 0x00AD:0 (0x0001)  
	bool                                               bStartPenetrating : 1;                                      // 0x00AD:1 (0x0001)  
	unsigned char                                      UnknownData01_4[0x2];                                       // 0x00AE   (0x0002)  MISSED
	TWeakObjectPtr<UPhysicalMaterial*>                 PhysMaterial;                                               // 0x00B0   (0x0008)  
	FActorInstanceHandle                               HitObjectHandle;                                            // 0x00B8   (0x0018)  
	TWeakObjectPtr<UPrimitiveComponent*>               Component;                                                  // 0x00D0   (0x0008)  
	FName                                              BoneName;                                                   // 0x00D8   (0x0008)  
	FName                                              MyBoneName;                                                 // 0x00E0   (0x0008)  
};

/// Struct /Script/Engine.ActorInstanceHandle
/// Size: 0x0018 (0x000000 - 0x000018)
struct FActorInstanceHandle
{ 
	TWeakObjectPtr<AActor*>                            Actor;                                                      // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0008   (0x0010)  MISSED
};

/// Struct /Script/Engine.Vector_NetQuantize
/// Size: 0x0000 (0x000018 - 0x000018)
struct FVector_NetQuantize : FVector
{ 
};

/// Struct /Script/Engine.Vector_NetQuantizeNormal
/// Size: 0x0000 (0x000018 - 0x000018)
struct FVector_NetQuantizeNormal : FVector
{ 
};

/// Struct /Script/Engine.SubtitleCue
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSubtitleCue
{ 
	FText                                              Text;                                                       // 0x0000   (0x0018)  
	float                                              Time;                                                       // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/Engine.PlatformInterfaceDelegateResult
/// Size: 0x0038 (0x000000 - 0x000038)
struct FPlatformInterfaceDelegateResult
{ 
	bool                                               bSuccessful;                                                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FPlatformInterfaceData                             Data;                                                       // 0x0008   (0x0030)  
};

/// Struct /Script/Engine.PlatformInterfaceData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FPlatformInterfaceData
{ 
	FName                                              DataName;                                                   // 0x0000   (0x0008)  
	TEnumAsByte<EPlatformInterfaceDataType>            Type;                                                       // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            IntValue;                                                   // 0x000C   (0x0004)  
	float                                              FloatValue;                                                 // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            StringValue;                                                // 0x0018   (0x0010)  
	UObject*                                           ObjectValue;                                                // 0x0028   (0x0008)  
};

/// Struct /Script/Engine.BranchingPointNotifyPayload
/// Size: 0x0020 (0x000000 - 0x000020)
struct FBranchingPointNotifyPayload
{ 
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0000   (0x0020)  MISSED
};

/// Struct /Script/Engine.TickFunction
/// Size: 0x0028 (0x000000 - 0x000028)
struct FTickFunction
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	TEnumAsByte<ETickingGroup>                         TickGroup;                                                  // 0x0008   (0x0001)  
	TEnumAsByte<ETickingGroup>                         EndTickGroup;                                               // 0x0009   (0x0001)  
	bool                                               bTickEvenWhenPaused : 1;                                    // 0x000A:0 (0x0001)  
	bool                                               bCanEverTick : 1;                                           // 0x000A:1 (0x0001)  
	bool                                               bStartWithTickEnabled : 1;                                  // 0x000A:2 (0x0001)  
	bool                                               bAllowTickOnDedicatedServer : 1;                            // 0x000A:3 (0x0001)  
	unsigned char                                      UnknownData01_4[0x1];                                       // 0x000B   (0x0001)  MISSED
	float                                              TickInterval;                                               // 0x000C   (0x0004)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x0010   (0x0018)  MISSED
};

/// Struct /Script/Engine.ActorComponentTickFunction
/// Size: 0x0008 (0x000028 - 0x000030)
struct FActorComponentTickFunction : FTickFunction
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Struct /Script/Engine.InterpControlPoint
/// Size: 0x0028 (0x000000 - 0x000028)
struct FInterpControlPoint
{ 
	FVector                                            PositionControlPoint;                                       // 0x0000   (0x0018)  
	bool                                               bPositionIsRelative;                                        // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0019   (0x000F)  MISSED
};

/// Struct /Script/Engine.DebugFloatHistory
/// Size: 0x0020 (0x000000 - 0x000020)
struct FDebugFloatHistory
{ 
	TArray<float>                                      Samples;                                                    // 0x0000   (0x0010)  
	int32_t                                            MaxSamples;                                                 // 0x0010   (0x0004)  
	float                                              MinValue;                                                   // 0x0014   (0x0004)  
	float                                              MaxValue;                                                   // 0x0018   (0x0004)  
	bool                                               bAutoAdjustMinMax;                                          // 0x001C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x001D   (0x0003)  MISSED
};

/// Struct /Script/Engine.LatentActionInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FLatentActionInfo
{ 
	int32_t                                            Linkage;                                                    // 0x0000   (0x0004)  
	int32_t                                            UUID;                                                       // 0x0004   (0x0004)  
	FName                                              ExecutionFunction;                                          // 0x0008   (0x0008)  
	UObject*                                           CallbackTarget;                                             // 0x0010   (0x0008)  
};

/// Struct /Script/Engine.TimerHandle
/// Size: 0x0008 (0x000000 - 0x000008)
struct FTimerHandle
{ 
	uint64_t                                           Handle;                                                     // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.CollisionProfileName
/// Size: 0x0008 (0x000000 - 0x000008)
struct FCollisionProfileName
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.GenericStruct
/// Size: 0x0004 (0x000000 - 0x000004)
struct FGenericStruct
{ 
	int32_t                                            Data;                                                       // 0x0000   (0x0004)  
};

/// Struct /Script/Engine.UserActivity
/// Size: 0x0018 (0x000000 - 0x000018)
struct FUserActivity
{ 
	FString                                            ActionName;                                                 // 0x0000   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0010   (0x0008)  MISSED
};

/// Struct /Script/Engine.CurveTableRowHandle
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCurveTableRowHandle
{ 
	UCurveTable*                                       CurveTable;                                                 // 0x0000   (0x0008)  
	FName                                              RowName;                                                    // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.Vector_NetQuantize10
/// Size: 0x0000 (0x000018 - 0x000018)
struct FVector_NetQuantize10 : FVector
{ 
};

/// Struct /Script/Engine.Vector_NetQuantize100
/// Size: 0x0000 (0x000018 - 0x000018)
struct FVector_NetQuantize100 : FVector
{ 
};

/// Struct /Script/Engine.DataTableRowHandle
/// Size: 0x0010 (0x000000 - 0x000010)
struct FDataTableRowHandle
{ 
	UDataTable*                                        DataTable;                                                  // 0x0000   (0x0008)  
	FName                                              RowName;                                                    // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.BodyInstanceAsyncPhysicsTickHandle
/// Size: 0x0008 (0x000000 - 0x000008)
struct FBodyInstanceAsyncPhysicsTickHandle
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/Engine.WalkableSlopeOverride
/// Size: 0x0010 (0x000000 - 0x000010)
struct FWalkableSlopeOverride
{ 
	TEnumAsByte<EWalkableSlopeBehavior>                WalkableSlopeBehavior;                                      // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              WalkableSlopeAngle;                                         // 0x0004   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0008   (0x0008)  MISSED
};

/// Struct /Script/Engine.BodyInstance
/// Size: 0x0178 (0x000018 - 0x000190)
struct FBodyInstance : FBodyInstanceCore
{ 
	unsigned char                                      UnknownData00_2[0x6];                                       // 0x0018   (0x0006)  MISSED
	TEnumAsByte<ECollisionChannel>                     ObjectType;                                                 // 0x001E   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x001F   (0x0001)  MISSED
	TEnumAsByte<ECollisionEnabled>                     CollisionEnabled;                                           // 0x0020   (0x0001)  
	unsigned char                                      UnknownData02_5[0x38];                                      // 0x0021   (0x0038)  MISSED
	ESleepFamily                                       SleepFamily;                                                // 0x0059   (0x0001)  
	TEnumAsByte<EDOFMode>                              DOFMode;                                                    // 0x005A   (0x0001)  
	bool                                               bUseCCD : 1;                                                // 0x005B:0 (0x0001)  
	bool                                               bIgnoreAnalyticCollisions : 1;                              // 0x005B:1 (0x0001)  
	bool                                               bNotifyRigidBodyCollision : 1;                              // 0x005B:2 (0x0001)  
	unsigned char                                      UnknownBit03 : 1;                                           // 0x005B:3 (0x0001)  MISSED
	bool                                               bSmoothEdgeCollisions : 1;                                  // 0x005B:4 (0x0001)  
	bool                                               bLockTranslation : 1;                                       // 0x005B:5 (0x0001)  
	bool                                               bLockRotation : 1;                                          // 0x005B:6 (0x0001)  
	bool                                               bLockXTranslation : 1;                                      // 0x005B:7 (0x0001)  
	bool                                               bLockYTranslation : 1;                                      // 0x005C:0 (0x0001)  
	bool                                               bLockZTranslation : 1;                                      // 0x005C:1 (0x0001)  
	bool                                               bLockXRotation : 1;                                         // 0x005C:2 (0x0001)  
	bool                                               bLockYRotation : 1;                                         // 0x005C:3 (0x0001)  
	bool                                               bLockZRotation : 1;                                         // 0x005C:4 (0x0001)  
	bool                                               bOverrideMaxAngularVelocity : 1;                            // 0x005C:5 (0x0001)  
	unsigned char                                      UnknownBit04 : 1;                                           // 0x005C:6 (0x0001)  MISSED
	unsigned char                                      UnknownBit05 : 1;                                           // 0x005C:7 (0x0001)  MISSED
	bool                                               bOverrideMaxDepenetrationVelocity : 1;                      // 0x005D:0 (0x0001)  
	bool                                               bOverrideWalkableSlopeOnInstance : 1;                       // 0x005D:1 (0x0001)  
	bool                                               bInterpolateWhenSubStepping : 1;                            // 0x005D:2 (0x0001)  
	unsigned char                                      UnknownBit06 : 1;                                           // 0x005D:3 (0x0001)  MISSED
	bool                                               bInertiaConditioning : 1;                                   // 0x005D:4 (0x0001)  
	unsigned char                                      UnknownData07_4[0x1A];                                      // 0x005E   (0x001A)  MISSED
	FName                                              CollisionProfileName;                                       // 0x0078   (0x0008)  
	char                                               PositionSolverIterationCount;                               // 0x0080   (0x0001)  
	char                                               VelocitySolverIterationCount;                               // 0x0081   (0x0001)  
	unsigned char                                      UnknownData08_5[0x6];                                       // 0x0082   (0x0006)  MISSED
	FCollisionResponse                                 CollisionResponses;                                         // 0x0088   (0x0030)  
	float                                              MaxDepenetrationVelocity;                                   // 0x00B8   (0x0004)  
	float                                              MassInKgOverride;                                           // 0x00BC   (0x0004)  
	unsigned char                                      UnknownData09_5[0x8];                                       // 0x00C0   (0x0008)  MISSED
	float                                              LinearDamping;                                              // 0x00C8   (0x0004)  
	float                                              AngularDamping;                                             // 0x00CC   (0x0004)  
	FVector                                            CustomDOFPlaneNormal;                                       // 0x00D0   (0x0018)  
	FVector                                            COMNudge;                                                   // 0x00E8   (0x0018)  
	float                                              MassScale;                                                  // 0x0100   (0x0004)  
	unsigned char                                      UnknownData10_5[0x4];                                       // 0x0104   (0x0004)  MISSED
	FVector                                            InertiaTensorScale;                                         // 0x0108   (0x0018)  
	unsigned char                                      UnknownData11_5[0x10];                                      // 0x0120   (0x0010)  MISSED
	FWalkableSlopeOverride                             WalkableSlopeOverride;                                      // 0x0130   (0x0010)  
	UPhysicalMaterial*                                 PhysMaterialOverride;                                       // 0x0140   (0x0008)  
	float                                              MaxAngularVelocity;                                         // 0x0148   (0x0004)  
	float                                              CustomSleepThresholdMultiplier;                             // 0x014C   (0x0004)  
	float                                              StabilizationThresholdMultiplier;                           // 0x0150   (0x0004)  
	float                                              PhysicsBlendWeight;                                         // 0x0154   (0x0004)  
	unsigned char                                      UnknownData12_6[0x38];                                      // 0x0158   (0x0038)  MISSED
};

/// Struct /Script/Engine.CollisionResponse
/// Size: 0x0030 (0x000000 - 0x000030)
struct FCollisionResponse
{ 
	FCollisionResponseContainer                        ResponseToChannels;                                         // 0x0000   (0x0020)  
	TArray<FResponseChannel>                           ResponseArray;                                              // 0x0020   (0x0010)  
};

/// Struct /Script/Engine.ResponseChannel
/// Size: 0x000C (0x000000 - 0x00000C)
struct FResponseChannel
{ 
	FName                                              Channel;                                                    // 0x0000   (0x0008)  
	TEnumAsByte<ECollisionResponse>                    Response;                                                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0009   (0x0003)  MISSED
};

/// Struct /Script/Engine.CollisionResponseContainer
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCollisionResponseContainer
{ 
	TEnumAsByte<ECollisionResponse>                    WorldStatic;                                                // 0x0000   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    WorldDynamic;                                               // 0x0001   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    Pawn;                                                       // 0x0002   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    Visibility;                                                 // 0x0003   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    Camera;                                                     // 0x0004   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    PhysicsBody;                                                // 0x0005   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    Vehicle;                                                    // 0x0006   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    Destructible;                                               // 0x0007   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    EngineTraceChannel1;                                        // 0x0008   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    EngineTraceChannel2;                                        // 0x0009   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    EngineTraceChannel3;                                        // 0x000A   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    EngineTraceChannel4;                                        // 0x000B   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    EngineTraceChannel5;                                        // 0x000C   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    EngineTraceChannel6;                                        // 0x000D   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel1;                                          // 0x000E   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel2;                                          // 0x000F   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel3;                                          // 0x0010   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel4;                                          // 0x0011   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel5;                                          // 0x0012   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel6;                                          // 0x0013   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel7;                                          // 0x0014   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel8;                                          // 0x0015   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel9;                                          // 0x0016   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel10;                                         // 0x0017   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel11;                                         // 0x0018   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel12;                                         // 0x0019   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel13;                                         // 0x001A   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel14;                                         // 0x001B   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel15;                                         // 0x001C   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel16;                                         // 0x001D   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel17;                                         // 0x001E   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel18;                                         // 0x001F   (0x0001)  
};

/// Struct /Script/Engine.CustomPrimitiveData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCustomPrimitiveData
{ 
	TArray<float>                                      Data;                                                       // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.LightingChannels
/// Size: 0x0001 (0x000000 - 0x000001)
struct FLightingChannels
{ 
	bool                                               bChannel0 : 1;                                              // 0x0000:0 (0x0001)  
	bool                                               bChannel1 : 1;                                              // 0x0000:1 (0x0001)  
	bool                                               bChannel2 : 1;                                              // 0x0000:2 (0x0001)  
};

/// Struct /Script/Engine.TableRowBase
/// Size: 0x0008 (0x000000 - 0x000008)
struct FTableRowBase
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/Engine.KeyHandleLookupTable
/// Size: 0x0088 (0x000000 - 0x000088)
struct FKeyHandleLookupTable
{ 
	unsigned char                                      UnknownData00_1[0x88];                                      // 0x0000   (0x0088)  MISSED
};

/// Struct /Script/Engine.PostProcessSettings
/// Size: 0x06E0 (0x000000 - 0x0006E0)
struct FPostProcessSettings
{ 
	bool                                               bOverride_TemperatureType : 1;                              // 0x0000:0 (0x0001)  
	bool                                               bOverride_WhiteTemp : 1;                                    // 0x0000:1 (0x0001)  
	bool                                               bOverride_WhiteTint : 1;                                    // 0x0000:2 (0x0001)  
	bool                                               bOverride_ColorSaturation : 1;                              // 0x0000:3 (0x0001)  
	bool                                               bOverride_ColorContrast : 1;                                // 0x0000:4 (0x0001)  
	bool                                               bOverride_ColorGamma : 1;                                   // 0x0000:5 (0x0001)  
	bool                                               bOverride_ColorGain : 1;                                    // 0x0000:6 (0x0001)  
	bool                                               bOverride_ColorOffset : 1;                                  // 0x0000:7 (0x0001)  
	bool                                               bOverride_ColorSaturationShadows : 1;                       // 0x0001:0 (0x0001)  
	bool                                               bOverride_ColorContrastShadows : 1;                         // 0x0001:1 (0x0001)  
	bool                                               bOverride_ColorGammaShadows : 1;                            // 0x0001:2 (0x0001)  
	bool                                               bOverride_ColorGainShadows : 1;                             // 0x0001:3 (0x0001)  
	bool                                               bOverride_ColorOffsetShadows : 1;                           // 0x0001:4 (0x0001)  
	bool                                               bOverride_ColorSaturationMidtones : 1;                      // 0x0001:5 (0x0001)  
	bool                                               bOverride_ColorContrastMidtones : 1;                        // 0x0001:6 (0x0001)  
	bool                                               bOverride_ColorGammaMidtones : 1;                           // 0x0001:7 (0x0001)  
	bool                                               bOverride_ColorGainMidtones : 1;                            // 0x0002:0 (0x0001)  
	bool                                               bOverride_ColorOffsetMidtones : 1;                          // 0x0002:1 (0x0001)  
	bool                                               bOverride_ColorSaturationHighlights : 1;                    // 0x0002:2 (0x0001)  
	bool                                               bOverride_ColorContrastHighlights : 1;                      // 0x0002:3 (0x0001)  
	bool                                               bOverride_ColorGammaHighlights : 1;                         // 0x0002:4 (0x0001)  
	bool                                               bOverride_ColorGainHighlights : 1;                          // 0x0002:5 (0x0001)  
	bool                                               bOverride_ColorOffsetHighlights : 1;                        // 0x0002:6 (0x0001)  
	bool                                               bOverride_ColorCorrectionShadowsMax : 1;                    // 0x0002:7 (0x0001)  
	bool                                               bOverride_ColorCorrectionHighlightsMin : 1;                 // 0x0003:0 (0x0001)  
	bool                                               bOverride_ColorCorrectionHighlightsMax : 1;                 // 0x0003:1 (0x0001)  
	bool                                               bOverride_BlueCorrection : 1;                               // 0x0003:2 (0x0001)  
	bool                                               bOverride_ExpandGamut : 1;                                  // 0x0003:3 (0x0001)  
	bool                                               bOverride_ToneCurveAmount : 1;                              // 0x0003:4 (0x0001)  
	bool                                               bOverride_FilmSlope : 1;                                    // 0x0003:5 (0x0001)  
	bool                                               bOverride_FilmToe : 1;                                      // 0x0003:6 (0x0001)  
	bool                                               bOverride_FilmShoulder : 1;                                 // 0x0003:7 (0x0001)  
	bool                                               bOverride_FilmBlackClip : 1;                                // 0x0004:0 (0x0001)  
	bool                                               bOverride_FilmWhiteClip : 1;                                // 0x0004:1 (0x0001)  
	bool                                               bOverride_SceneColorTint : 1;                               // 0x0004:2 (0x0001)  
	bool                                               bOverride_SceneFringeIntensity : 1;                         // 0x0004:3 (0x0001)  
	bool                                               bOverride_ChromaticAberrationStartOffset : 1;               // 0x0004:4 (0x0001)  
	bool                                               bOverride_AmbientCubemapTint : 1;                           // 0x0004:5 (0x0001)  
	bool                                               bOverride_AmbientCubemapIntensity : 1;                      // 0x0004:6 (0x0001)  
	bool                                               bOverride_BloomMethod : 1;                                  // 0x0004:7 (0x0001)  
	bool                                               bOverride_BloomIntensity : 1;                               // 0x0005:0 (0x0001)  
	bool                                               bOverride_BloomThreshold : 1;                               // 0x0005:1 (0x0001)  
	bool                                               bOverride_Bloom1Tint : 1;                                   // 0x0005:2 (0x0001)  
	bool                                               bOverride_Bloom1Size : 1;                                   // 0x0005:3 (0x0001)  
	bool                                               bOverride_Bloom2Size : 1;                                   // 0x0005:4 (0x0001)  
	bool                                               bOverride_Bloom2Tint : 1;                                   // 0x0005:5 (0x0001)  
	bool                                               bOverride_Bloom3Tint : 1;                                   // 0x0005:6 (0x0001)  
	bool                                               bOverride_Bloom3Size : 1;                                   // 0x0005:7 (0x0001)  
	bool                                               bOverride_Bloom4Tint : 1;                                   // 0x0006:0 (0x0001)  
	bool                                               bOverride_Bloom4Size : 1;                                   // 0x0006:1 (0x0001)  
	bool                                               bOverride_Bloom5Tint : 1;                                   // 0x0006:2 (0x0001)  
	bool                                               bOverride_Bloom5Size : 1;                                   // 0x0006:3 (0x0001)  
	bool                                               bOverride_Bloom6Tint : 1;                                   // 0x0006:4 (0x0001)  
	bool                                               bOverride_Bloom6Size : 1;                                   // 0x0006:5 (0x0001)  
	bool                                               bOverride_BloomSizeScale : 1;                               // 0x0006:6 (0x0001)  
	bool                                               bOverride_BloomConvolutionTexture : 1;                      // 0x0006:7 (0x0001)  
	bool                                               bOverride_BloomConvolutionScatterDispersion : 1;            // 0x0007:0 (0x0001)  
	bool                                               bOverride_BloomConvolutionSize : 1;                         // 0x0007:1 (0x0001)  
	bool                                               bOverride_BloomConvolutionCenterUV : 1;                     // 0x0007:2 (0x0001)  
	bool                                               bOverride_BloomConvolutionPreFilter : 1;                    // 0x0007:3 (0x0001)  
	bool                                               bOverride_BloomConvolutionPreFilterMin : 1;                 // 0x0007:4 (0x0001)  
	bool                                               bOverride_BloomConvolutionPreFilterMax : 1;                 // 0x0007:5 (0x0001)  
	bool                                               bOverride_BloomConvolutionPreFilterMult : 1;                // 0x0007:6 (0x0001)  
	bool                                               bOverride_BloomConvolutionBufferScale : 1;                  // 0x0007:7 (0x0001)  
	bool                                               bOverride_BloomDirtMaskIntensity : 1;                       // 0x0008:0 (0x0001)  
	bool                                               bOverride_BloomDirtMaskTint : 1;                            // 0x0008:1 (0x0001)  
	bool                                               bOverride_BloomDirtMask : 1;                                // 0x0008:2 (0x0001)  
	bool                                               bOverride_CameraShutterSpeed : 1;                           // 0x0008:3 (0x0001)  
	bool                                               bOverride_CameraISO : 1;                                    // 0x0008:4 (0x0001)  
	bool                                               bOverride_AutoExposureMethod : 1;                           // 0x0008:5 (0x0001)  
	bool                                               bOverride_AutoExposureLowPercent : 1;                       // 0x0008:6 (0x0001)  
	bool                                               bOverride_AutoExposureHighPercent : 1;                      // 0x0008:7 (0x0001)  
	bool                                               bOverride_AutoExposureMinBrightness : 1;                    // 0x0009:0 (0x0001)  
	bool                                               bOverride_AutoExposureMaxBrightness : 1;                    // 0x0009:1 (0x0001)  
	bool                                               bOverride_AutoExposureCalibrationConstant : 1;              // 0x0009:2 (0x0001)  
	bool                                               bOverride_AutoExposureSpeedUp : 1;                          // 0x0009:3 (0x0001)  
	bool                                               bOverride_AutoExposureSpeedDown : 1;                        // 0x0009:4 (0x0001)  
	bool                                               bOverride_AutoExposureBias : 1;                             // 0x0009:5 (0x0001)  
	bool                                               bOverride_AutoExposureBiasCurve : 1;                        // 0x0009:6 (0x0001)  
	bool                                               bOverride_AutoExposureMeterMask : 1;                        // 0x0009:7 (0x0001)  
	bool                                               bOverride_AutoExposureApplyPhysicalCameraExposure : 1;      // 0x000A:0 (0x0001)  
	bool                                               bOverride_HistogramLogMin : 1;                              // 0x000A:1 (0x0001)  
	bool                                               bOverride_HistogramLogMax : 1;                              // 0x000A:2 (0x0001)  
	bool                                               bOverride_LocalExposureContrastScale : 1;                   // 0x000A:3 (0x0001)  
	bool                                               bOverride_LocalExposureHighlightContrastScale : 1;          // 0x000A:4 (0x0001)  
	bool                                               bOverride_LocalExposureShadowContrastScale : 1;             // 0x000A:5 (0x0001)  
	bool                                               bOverride_LocalExposureDetailStrength : 1;                  // 0x000A:6 (0x0001)  
	bool                                               bOverride_LocalExposureBlurredLuminanceBlend : 1;           // 0x000A:7 (0x0001)  
	bool                                               bOverride_LocalExposureBlurredLuminanceKernelSizePercent : 1; // 0x000B:0 (0x0001)  
	bool                                               bOverride_LocalExposureMiddleGreyBias : 1;                  // 0x000B:1 (0x0001)  
	bool                                               bOverride_LensFlareIntensity : 1;                           // 0x000B:2 (0x0001)  
	bool                                               bOverride_LensFlareTint : 1;                                // 0x000B:3 (0x0001)  
	bool                                               bOverride_LensFlareTints : 1;                               // 0x000B:4 (0x0001)  
	bool                                               bOverride_LensFlareBokehSize : 1;                           // 0x000B:5 (0x0001)  
	bool                                               bOverride_LensFlareBokehShape : 1;                          // 0x000B:6 (0x0001)  
	bool                                               bOverride_LensFlareThreshold : 1;                           // 0x000B:7 (0x0001)  
	bool                                               bOverride_VignetteIntensity : 1;                            // 0x000C:0 (0x0001)  
	bool                                               bOverride_GrainIntensity : 1;                               // 0x000C:1 (0x0001)  
	bool                                               bOverride_GrainJitter : 1;                                  // 0x000C:2 (0x0001)  
	bool                                               bOverride_FilmGrainIntensity : 1;                           // 0x000C:3 (0x0001)  
	bool                                               bOverride_FilmGrainIntensityShadows : 1;                    // 0x000C:4 (0x0001)  
	bool                                               bOverride_FilmGrainIntensityMidtones : 1;                   // 0x000C:5 (0x0001)  
	bool                                               bOverride_FilmGrainIntensityHighlights : 1;                 // 0x000C:6 (0x0001)  
	bool                                               bOverride_FilmGrainShadowsMax : 1;                          // 0x000C:7 (0x0001)  
	bool                                               bOverride_FilmGrainHighlightsMin : 1;                       // 0x000D:0 (0x0001)  
	bool                                               bOverride_FilmGrainHighlightsMax : 1;                       // 0x000D:1 (0x0001)  
	bool                                               bOverride_FilmGrainTexelSize : 1;                           // 0x000D:2 (0x0001)  
	bool                                               bOverride_FilmGrainTexture : 1;                             // 0x000D:3 (0x0001)  
	bool                                               bOverride_AmbientOcclusionIntensity : 1;                    // 0x000D:4 (0x0001)  
	bool                                               bOverride_AmbientOcclusionStaticFraction : 1;               // 0x000D:5 (0x0001)  
	bool                                               bOverride_AmbientOcclusionRadius : 1;                       // 0x000D:6 (0x0001)  
	bool                                               bOverride_AmbientOcclusionFadeDistance : 1;                 // 0x000D:7 (0x0001)  
	bool                                               bOverride_AmbientOcclusionFadeRadius : 1;                   // 0x000E:0 (0x0001)  
	bool                                               bOverride_AmbientOcclusionDistance : 1;                     // 0x000E:1 (0x0001)  
	bool                                               bOverride_AmbientOcclusionRadiusInWS : 1;                   // 0x000E:2 (0x0001)  
	bool                                               bOverride_AmbientOcclusionPower : 1;                        // 0x000E:3 (0x0001)  
	bool                                               bOverride_AmbientOcclusionBias : 1;                         // 0x000E:4 (0x0001)  
	bool                                               bOverride_AmbientOcclusionQuality : 1;                      // 0x000E:5 (0x0001)  
	bool                                               bOverride_AmbientOcclusionMipBlend : 1;                     // 0x000E:6 (0x0001)  
	bool                                               bOverride_AmbientOcclusionMipScale : 1;                     // 0x000E:7 (0x0001)  
	bool                                               bOverride_AmbientOcclusionMipThreshold : 1;                 // 0x000F:0 (0x0001)  
	bool                                               bOverride_AmbientOcclusionTemporalBlendWeight : 1;          // 0x000F:1 (0x0001)  
	unsigned char                                      UnknownBit00 : 1;                                           // 0x000F:2 (0x0001)  MISSED
	unsigned char                                      UnknownBit01 : 1;                                           // 0x000F:3 (0x0001)  MISSED
	unsigned char                                      UnknownBit02 : 1;                                           // 0x000F:4 (0x0001)  MISSED
	unsigned char                                      UnknownBit03 : 1;                                           // 0x000F:5 (0x0001)  MISSED
	unsigned char                                      UnknownBit04 : 1;                                           // 0x000F:6 (0x0001)  MISSED
	unsigned char                                      UnknownBit05 : 1;                                           // 0x000F:7 (0x0001)  MISSED
	bool                                               bOverride_RayTracingAO : 1;                                 // 0x0010:0 (0x0001)  
	bool                                               bOverride_RayTracingAOSamplesPerPixel : 1;                  // 0x0010:1 (0x0001)  
	bool                                               bOverride_RayTracingAOIntensity : 1;                        // 0x0010:2 (0x0001)  
	bool                                               bOverride_RayTracingAORadius : 1;                           // 0x0010:3 (0x0001)  
	unsigned char                                      UnknownData06_3[0x3];                                       // 0x0011   (0x0003)  MISSED
	bool                                               bOverride_LPVIntensity : 1;                                 // 0x0014:0 (0x0001)  
	bool                                               bOverride_LPVDirectionalOcclusionIntensity : 1;             // 0x0014:1 (0x0001)  
	bool                                               bOverride_LPVDirectionalOcclusionRadius : 1;                // 0x0014:2 (0x0001)  
	bool                                               bOverride_LPVDiffuseOcclusionExponent : 1;                  // 0x0014:3 (0x0001)  
	bool                                               bOverride_LPVSpecularOcclusionExponent : 1;                 // 0x0014:4 (0x0001)  
	bool                                               bOverride_LPVDiffuseOcclusionIntensity : 1;                 // 0x0014:5 (0x0001)  
	bool                                               bOverride_LPVSpecularOcclusionIntensity : 1;                // 0x0014:6 (0x0001)  
	bool                                               bOverride_LPVSize : 1;                                      // 0x0014:7 (0x0001)  
	bool                                               bOverride_LPVSecondaryOcclusionIntensity : 1;               // 0x0015:0 (0x0001)  
	bool                                               bOverride_LPVSecondaryBounceIntensity : 1;                  // 0x0015:1 (0x0001)  
	bool                                               bOverride_LPVGeometryVolumeBias : 1;                        // 0x0015:2 (0x0001)  
	bool                                               bOverride_LPVVplInjectionBias : 1;                          // 0x0015:3 (0x0001)  
	bool                                               bOverride_LPVEmissiveInjectionIntensity : 1;                // 0x0015:4 (0x0001)  
	bool                                               bOverride_LPVFadeRange : 1;                                 // 0x0015:5 (0x0001)  
	bool                                               bOverride_LPVDirectionalOcclusionFadeRange : 1;             // 0x0015:6 (0x0001)  
	bool                                               bOverride_IndirectLightingColor : 1;                        // 0x0015:7 (0x0001)  
	bool                                               bOverride_IndirectLightingIntensity : 1;                    // 0x0016:0 (0x0001)  
	bool                                               bOverride_ColorGradingIntensity : 1;                        // 0x0016:1 (0x0001)  
	bool                                               bOverride_ColorGradingLUT : 1;                              // 0x0016:2 (0x0001)  
	bool                                               bOverride_DepthOfFieldFocalDistance : 1;                    // 0x0016:3 (0x0001)  
	bool                                               bOverride_DepthOfFieldFstop : 1;                            // 0x0016:4 (0x0001)  
	bool                                               bOverride_DepthOfFieldMinFstop : 1;                         // 0x0016:5 (0x0001)  
	bool                                               bOverride_DepthOfFieldBladeCount : 1;                       // 0x0016:6 (0x0001)  
	bool                                               bOverride_DepthOfFieldSensorWidth : 1;                      // 0x0016:7 (0x0001)  
	bool                                               bOverride_DepthOfFieldSqueezeFactor : 1;                    // 0x0017:0 (0x0001)  
	bool                                               bOverride_DepthOfFieldDepthBlurRadius : 1;                  // 0x0017:1 (0x0001)  
	bool                                               bOverride_DepthOfFieldDepthBlurAmount : 1;                  // 0x0017:2 (0x0001)  
	bool                                               bOverride_DepthOfFieldFocalRegion : 1;                      // 0x0017:3 (0x0001)  
	bool                                               bOverride_DepthOfFieldNearTransitionRegion : 1;             // 0x0017:4 (0x0001)  
	bool                                               bOverride_DepthOfFieldFarTransitionRegion : 1;              // 0x0017:5 (0x0001)  
	bool                                               bOverride_DepthOfFieldScale : 1;                            // 0x0017:6 (0x0001)  
	bool                                               bOverride_DepthOfFieldNearBlurSize : 1;                     // 0x0017:7 (0x0001)  
	bool                                               bOverride_DepthOfFieldFarBlurSize : 1;                      // 0x0018:0 (0x0001)  
	bool                                               bOverride_MobileHQGaussian : 1;                             // 0x0018:1 (0x0001)  
	bool                                               bOverride_DepthOfFieldOcclusion : 1;                        // 0x0018:2 (0x0001)  
	bool                                               bOverride_DepthOfFieldSkyFocusDistance : 1;                 // 0x0018:3 (0x0001)  
	bool                                               bOverride_DepthOfFieldVignetteSize : 1;                     // 0x0018:4 (0x0001)  
	bool                                               bOverride_MotionBlurAmount : 1;                             // 0x0018:5 (0x0001)  
	bool                                               bOverride_MotionBlurMax : 1;                                // 0x0018:6 (0x0001)  
	bool                                               bOverride_MotionBlurTargetFPS : 1;                          // 0x0018:7 (0x0001)  
	bool                                               bOverride_MotionBlurPerObjectSize : 1;                      // 0x0019:0 (0x0001)  
	bool                                               bOverride_ScreenPercentage : 1;                             // 0x0019:1 (0x0001)  
	bool                                               bOverride_ReflectionMethod : 1;                             // 0x0019:2 (0x0001)  
	bool                                               bOverride_LumenReflectionQuality : 1;                       // 0x0019:3 (0x0001)  
	bool                                               bOverride_ScreenSpaceReflectionIntensity : 1;               // 0x0019:4 (0x0001)  
	bool                                               bOverride_ScreenSpaceReflectionQuality : 1;                 // 0x0019:5 (0x0001)  
	bool                                               bOverride_ScreenSpaceReflectionMaxRoughness : 1;            // 0x0019:6 (0x0001)  
	bool                                               bOverride_ScreenSpaceReflectionRoughnessScale : 1;          // 0x0019:7 (0x0001)  
	unsigned char                                      UnknownData07_3[0x1];                                       // 0x001B   (0x0001)  MISSED
	bool                                               bOverride_ReflectionsType : 1;                              // 0x001C:0 (0x0001)  
	bool                                               bOverride_RayTracingReflectionsMaxRoughness : 1;            // 0x001C:1 (0x0001)  
	bool                                               bOverride_RayTracingReflectionsMaxBounces : 1;              // 0x001C:2 (0x0001)  
	bool                                               bOverride_RayTracingReflectionsSamplesPerPixel : 1;         // 0x001C:3 (0x0001)  
	bool                                               bOverride_RayTracingReflectionsShadows : 1;                 // 0x001C:4 (0x0001)  
	bool                                               bOverride_RayTracingReflectionsTranslucency : 1;            // 0x001C:5 (0x0001)  
	bool                                               bOverride_TranslucencyType : 1;                             // 0x001C:6 (0x0001)  
	bool                                               bOverride_RayTracingTranslucencyMaxRoughness : 1;           // 0x001C:7 (0x0001)  
	bool                                               bOverride_RayTracingTranslucencyRefractionRays : 1;         // 0x001D:0 (0x0001)  
	bool                                               bOverride_RayTracingTranslucencySamplesPerPixel : 1;        // 0x001D:1 (0x0001)  
	bool                                               bOverride_RayTracingTranslucencyShadows : 1;                // 0x001D:2 (0x0001)  
	bool                                               bOverride_RayTracingTranslucencyRefraction : 1;             // 0x001D:3 (0x0001)  
	bool                                               bOverride_DynamicGlobalIlluminationMethod : 1;              // 0x001D:4 (0x0001)  
	bool                                               bOverride_LumenSceneLightingQuality : 1;                    // 0x001D:5 (0x0001)  
	bool                                               bOverride_LumenSceneDetail : 1;                             // 0x001D:6 (0x0001)  
	bool                                               bOverride_LumenSceneViewDistance : 1;                       // 0x001D:7 (0x0001)  
	bool                                               bOverride_LumenSceneLightingUpdateSpeed : 1;                // 0x001E:0 (0x0001)  
	bool                                               bOverride_LumenFinalGatherQuality : 1;                      // 0x001E:1 (0x0001)  
	bool                                               bOverride_LumenFinalGatherLightingUpdateSpeed : 1;          // 0x001E:2 (0x0001)  
	bool                                               bOverride_LumenMaxTraceDistance : 1;                        // 0x001E:3 (0x0001)  
	bool                                               bOverride_LumenDiffuseColorBoost : 1;                       // 0x001E:4 (0x0001)  
	bool                                               bOverride_LumenSkylightLeaking : 1;                         // 0x001E:5 (0x0001)  
	bool                                               bOverride_LumenFullSkylightLeakingDistance : 1;             // 0x001E:6 (0x0001)  
	unsigned char                                      UnknownData08_3[0x1];                                       // 0x001F   (0x0001)  MISSED
	bool                                               bOverride_LumenRayLightingMode : 1;                         // 0x0020:0 (0x0001)  
	bool                                               bOverride_LumenFrontLayerTranslucencyReflections : 1;       // 0x0020:1 (0x0001)  
	bool                                               bOverride_LumenSurfaceCacheResolution : 1;                  // 0x0020:2 (0x0001)  
	unsigned char                                      UnknownData09_3[0x3];                                       // 0x0021   (0x0003)  MISSED
	bool                                               bOverride_RayTracingGI : 1;                                 // 0x0024:0 (0x0001)  
	bool                                               bOverride_RayTracingGIMaxBounces : 1;                       // 0x0024:1 (0x0001)  
	bool                                               bOverride_RayTracingGISamplesPerPixel : 1;                  // 0x0024:2 (0x0001)  
	bool                                               bOverride_PathTracingMaxBounces : 1;                        // 0x0024:3 (0x0001)  
	bool                                               bOverride_PathTracingSamplesPerPixel : 1;                   // 0x0024:4 (0x0001)  
	bool                                               bOverride_PathTracingFilterWidth : 1;                       // 0x0024:5 (0x0001)  
	bool                                               bOverride_PathTracingEnableEmissive : 1;                    // 0x0024:6 (0x0001)  
	bool                                               bOverride_PathTracingMaxPathExposure : 1;                   // 0x0024:7 (0x0001)  
	bool                                               bOverride_PathTracingEnableReferenceDOF : 1;                // 0x0025:0 (0x0001)  
	bool                                               bOverride_PathTracingEnableReferenceAtmosphere : 1;         // 0x0025:1 (0x0001)  
	bool                                               bOverride_PathTracingEnableDenoiser : 1;                    // 0x0025:2 (0x0001)  
	unsigned char                                      UnknownData10_3[0x2];                                       // 0x0026   (0x0002)  MISSED
	bool                                               bMobileHQGaussian : 1;                                      // 0x0028:0 (0x0001)  
	TEnumAsByte<EBloomMethod>                          BloomMethod;                                                // 0x0029   (0x0001)  
	TEnumAsByte<EAutoExposureMethod>                   AutoExposureMethod;                                         // 0x002A   (0x0001)  
	TEnumAsByte<ETemperatureMethod>                    TemperatureType;                                            // 0x002B   (0x0001)  
	float                                              WhiteTemp;                                                  // 0x002C   (0x0004)  
	float                                              WhiteTint;                                                  // 0x0030   (0x0004)  
	unsigned char                                      UnknownData11_5[0xC];                                       // 0x0034   (0x000C)  MISSED
	FVector4                                           ColorSaturation;                                            // 0x0040   (0x0020)  
	FVector4                                           ColorContrast;                                              // 0x0060   (0x0020)  
	FVector4                                           ColorGamma;                                                 // 0x0080   (0x0020)  
	FVector4                                           ColorGain;                                                  // 0x00A0   (0x0020)  
	FVector4                                           ColorOffset;                                                // 0x00C0   (0x0020)  
	FVector4                                           ColorSaturationShadows;                                     // 0x00E0   (0x0020)  
	FVector4                                           ColorContrastShadows;                                       // 0x0100   (0x0020)  
	FVector4                                           ColorGammaShadows;                                          // 0x0120   (0x0020)  
	FVector4                                           ColorGainShadows;                                           // 0x0140   (0x0020)  
	FVector4                                           ColorOffsetShadows;                                         // 0x0160   (0x0020)  
	FVector4                                           ColorSaturationMidtones;                                    // 0x0180   (0x0020)  
	FVector4                                           ColorContrastMidtones;                                      // 0x01A0   (0x0020)  
	FVector4                                           ColorGammaMidtones;                                         // 0x01C0   (0x0020)  
	FVector4                                           ColorGainMidtones;                                          // 0x01E0   (0x0020)  
	FVector4                                           ColorOffsetMidtones;                                        // 0x0200   (0x0020)  
	FVector4                                           ColorSaturationHighlights;                                  // 0x0220   (0x0020)  
	FVector4                                           ColorContrastHighlights;                                    // 0x0240   (0x0020)  
	FVector4                                           ColorGammaHighlights;                                       // 0x0260   (0x0020)  
	FVector4                                           ColorGainHighlights;                                        // 0x0280   (0x0020)  
	FVector4                                           ColorOffsetHighlights;                                      // 0x02A0   (0x0020)  
	float                                              ColorCorrectionHighlightsMin;                               // 0x02C0   (0x0004)  
	float                                              ColorCorrectionHighlightsMax;                               // 0x02C4   (0x0004)  
	float                                              ColorCorrectionShadowsMax;                                  // 0x02C8   (0x0004)  
	float                                              BlueCorrection;                                             // 0x02CC   (0x0004)  
	float                                              ExpandGamut;                                                // 0x02D0   (0x0004)  
	float                                              ToneCurveAmount;                                            // 0x02D4   (0x0004)  
	float                                              FilmSlope;                                                  // 0x02D8   (0x0004)  
	float                                              FilmToe;                                                    // 0x02DC   (0x0004)  
	float                                              FilmShoulder;                                               // 0x02E0   (0x0004)  
	float                                              FilmBlackClip;                                              // 0x02E4   (0x0004)  
	float                                              FilmWhiteClip;                                              // 0x02E8   (0x0004)  
	FLinearColor                                       SceneColorTint;                                             // 0x02EC   (0x0010)  
	float                                              SceneFringeIntensity;                                       // 0x02FC   (0x0004)  
	float                                              ChromaticAberrationStartOffset;                             // 0x0300   (0x0004)  
	float                                              BloomIntensity;                                             // 0x0304   (0x0004)  
	float                                              BloomThreshold;                                             // 0x0308   (0x0004)  
	float                                              BloomSizeScale;                                             // 0x030C   (0x0004)  
	float                                              Bloom1Size;                                                 // 0x0310   (0x0004)  
	float                                              Bloom2Size;                                                 // 0x0314   (0x0004)  
	float                                              Bloom3Size;                                                 // 0x0318   (0x0004)  
	float                                              Bloom4Size;                                                 // 0x031C   (0x0004)  
	float                                              Bloom5Size;                                                 // 0x0320   (0x0004)  
	float                                              Bloom6Size;                                                 // 0x0324   (0x0004)  
	FLinearColor                                       Bloom1Tint;                                                 // 0x0328   (0x0010)  
	FLinearColor                                       Bloom2Tint;                                                 // 0x0338   (0x0010)  
	FLinearColor                                       Bloom3Tint;                                                 // 0x0348   (0x0010)  
	FLinearColor                                       Bloom4Tint;                                                 // 0x0358   (0x0010)  
	FLinearColor                                       Bloom5Tint;                                                 // 0x0368   (0x0010)  
	FLinearColor                                       Bloom6Tint;                                                 // 0x0378   (0x0010)  
	float                                              BloomConvolutionScatterDispersion;                          // 0x0388   (0x0004)  
	float                                              BloomConvolutionSize;                                       // 0x038C   (0x0004)  
	UTexture2D*                                        BloomConvolutionTexture;                                    // 0x0390   (0x0008)  
	FVector2D                                          BloomConvolutionCenterUV;                                   // 0x0398   (0x0010)  
	float                                              BloomConvolutionPreFilterMin;                               // 0x03A8   (0x0004)  
	float                                              BloomConvolutionPreFilterMax;                               // 0x03AC   (0x0004)  
	float                                              BloomConvolutionPreFilterMult;                              // 0x03B0   (0x0004)  
	float                                              BloomConvolutionBufferScale;                                // 0x03B4   (0x0004)  
	UTexture*                                          BloomDirtMask;                                              // 0x03B8   (0x0008)  
	float                                              BloomDirtMaskIntensity;                                     // 0x03C0   (0x0004)  
	FLinearColor                                       BloomDirtMaskTint;                                          // 0x03C4   (0x0010)  
	TEnumAsByte<EDynamicGlobalIlluminationMethod>      DynamicGlobalIlluminationMethod;                            // 0x03D4   (0x0001)  
	unsigned char                                      UnknownData12_5[0x3];                                       // 0x03D5   (0x0003)  MISSED
	FLinearColor                                       IndirectLightingColor;                                      // 0x03D8   (0x0010)  
	float                                              IndirectLightingIntensity;                                  // 0x03E8   (0x0004)  
	float                                              LumenSceneLightingQuality;                                  // 0x03EC   (0x0004)  
	float                                              LumenSceneDetail;                                           // 0x03F0   (0x0004)  
	float                                              LumenSceneViewDistance;                                     // 0x03F4   (0x0004)  
	float                                              LumenSceneLightingUpdateSpeed;                              // 0x03F8   (0x0004)  
	float                                              LumenFinalGatherQuality;                                    // 0x03FC   (0x0004)  
	float                                              LumenFinalGatherLightingUpdateSpeed;                        // 0x0400   (0x0004)  
	float                                              LumenMaxTraceDistance;                                      // 0x0404   (0x0004)  
	float                                              LumenDiffuseColorBoost;                                     // 0x0408   (0x0004)  
	float                                              LumenSkylightLeaking;                                       // 0x040C   (0x0004)  
	float                                              LumenFullSkylightLeakingDistance;                           // 0x0410   (0x0004)  
	float                                              LumenSurfaceCacheResolution;                                // 0x0414   (0x0004)  
	ERayTracingGlobalIlluminationType                  RayTracingGIType;                                           // 0x0418   (0x0001)  
	unsigned char                                      UnknownData13_5[0x3];                                       // 0x0419   (0x0003)  MISSED
	int32_t                                            RayTracingGIMaxBounces;                                     // 0x041C   (0x0004)  
	int32_t                                            RayTracingGISamplesPerPixel;                                // 0x0420   (0x0004)  
	TEnumAsByte<EReflectionMethod>                     ReflectionMethod;                                           // 0x0424   (0x0001)  
	EReflectionsType                                   ReflectionsType;                                            // 0x0425   (0x0001)  
	unsigned char                                      UnknownData14_5[0x2];                                       // 0x0426   (0x0002)  MISSED
	float                                              LumenReflectionQuality;                                     // 0x0428   (0x0004)  
	ELumenRayLightingModeOverride                      LumenRayLightingMode;                                       // 0x042C   (0x0001)  
	bool                                               LumenFrontLayerTranslucencyReflections : 1;                 // 0x042D:0 (0x0001)  
	unsigned char                                      UnknownData15_4[0x2];                                       // 0x042E   (0x0002)  MISSED
	float                                              ScreenSpaceReflectionIntensity;                             // 0x0430   (0x0004)  
	float                                              ScreenSpaceReflectionQuality;                               // 0x0434   (0x0004)  
	float                                              ScreenSpaceReflectionMaxRoughness;                          // 0x0438   (0x0004)  
	float                                              RayTracingReflectionsMaxRoughness;                          // 0x043C   (0x0004)  
	int32_t                                            RayTracingReflectionsMaxBounces;                            // 0x0440   (0x0004)  
	int32_t                                            RayTracingReflectionsSamplesPerPixel;                       // 0x0444   (0x0004)  
	EReflectedAndRefractedRayTracedShadows             RayTracingReflectionsShadows;                               // 0x0448   (0x0001)  
	bool                                               RayTracingReflectionsTranslucency : 1;                      // 0x0449:0 (0x0001)  
	unsigned char                                      UnknownData16_4[0x2];                                       // 0x044A   (0x0002)  MISSED
	FLinearColor                                       AmbientCubemapTint;                                         // 0x044C   (0x0010)  
	float                                              AmbientCubemapIntensity;                                    // 0x045C   (0x0004)  
	UTextureCube*                                      AmbientCubemap;                                             // 0x0460   (0x0008)  
	float                                              CameraShutterSpeed;                                         // 0x0468   (0x0004)  
	float                                              CameraISO;                                                  // 0x046C   (0x0004)  
	float                                              DepthOfFieldFstop;                                          // 0x0470   (0x0004)  
	float                                              DepthOfFieldMinFstop;                                       // 0x0474   (0x0004)  
	int32_t                                            DepthOfFieldBladeCount;                                     // 0x0478   (0x0004)  
	float                                              AutoExposureBias;                                           // 0x047C   (0x0004)  
	float                                              AutoExposureBiasBackup;                                     // 0x0480   (0x0004)  
	bool                                               bOverride_AutoExposureBiasBackup : 1;                       // 0x0484:0 (0x0001)  
	unsigned char                                      UnknownData17_3[0x3];                                       // 0x0485   (0x0003)  MISSED
	bool                                               AutoExposureApplyPhysicalCameraExposure : 1;                // 0x0488:0 (0x0001)  
	unsigned char                                      UnknownData18_4[0x7];                                       // 0x0489   (0x0007)  MISSED
	UCurveFloat*                                       AutoExposureBiasCurve;                                      // 0x0490   (0x0008)  
	UTexture*                                          AutoExposureMeterMask;                                      // 0x0498   (0x0008)  
	float                                              AutoExposureLowPercent;                                     // 0x04A0   (0x0004)  
	float                                              AutoExposureHighPercent;                                    // 0x04A4   (0x0004)  
	float                                              AutoExposureMinBrightness;                                  // 0x04A8   (0x0004)  
	float                                              AutoExposureMaxBrightness;                                  // 0x04AC   (0x0004)  
	float                                              AutoExposureSpeedUp;                                        // 0x04B0   (0x0004)  
	float                                              AutoExposureSpeedDown;                                      // 0x04B4   (0x0004)  
	float                                              HistogramLogMin;                                            // 0x04B8   (0x0004)  
	float                                              HistogramLogMax;                                            // 0x04BC   (0x0004)  
	float                                              AutoExposureCalibrationConstant;                            // 0x04C0   (0x0004)  
	float                                              LocalExposureContrastScale;                                 // 0x04C4   (0x0004)  
	float                                              LocalExposureHighlightContrastScale;                        // 0x04C8   (0x0004)  
	float                                              LocalExposureShadowContrastScale;                           // 0x04CC   (0x0004)  
	float                                              LocalExposureDetailStrength;                                // 0x04D0   (0x0004)  
	float                                              LocalExposureBlurredLuminanceBlend;                         // 0x04D4   (0x0004)  
	float                                              LocalExposureBlurredLuminanceKernelSizePercent;             // 0x04D8   (0x0004)  
	float                                              LocalExposureMiddleGreyBias;                                // 0x04DC   (0x0004)  
	float                                              LensFlareIntensity;                                         // 0x04E0   (0x0004)  
	FLinearColor                                       LensFlareTint;                                              // 0x04E4   (0x0010)  
	float                                              LensFlareBokehSize;                                         // 0x04F4   (0x0004)  
	float                                              LensFlareThreshold;                                         // 0x04F8   (0x0004)  
	unsigned char                                      UnknownData19_5[0x4];                                       // 0x04FC   (0x0004)  MISSED
	UTexture*                                          LensFlareBokehShape;                                        // 0x0500   (0x0008)  
	FLinearColor                                       LensFlareTints;                                             // 0x0508   (0x0080)  
	float                                              VignetteIntensity;                                          // 0x0588   (0x0004)  
	float                                              GrainJitter;                                                // 0x058C   (0x0004)  
	float                                              GrainIntensity;                                             // 0x0590   (0x0004)  
	float                                              FilmGrainIntensity;                                         // 0x0594   (0x0004)  
	float                                              FilmGrainIntensityShadows;                                  // 0x0598   (0x0004)  
	float                                              FilmGrainIntensityMidtones;                                 // 0x059C   (0x0004)  
	float                                              FilmGrainIntensityHighlights;                               // 0x05A0   (0x0004)  
	float                                              FilmGrainShadowsMax;                                        // 0x05A4   (0x0004)  
	float                                              FilmGrainHighlightsMin;                                     // 0x05A8   (0x0004)  
	float                                              FilmGrainHighlightsMax;                                     // 0x05AC   (0x0004)  
	float                                              FilmGrainTexelSize;                                         // 0x05B0   (0x0004)  
	unsigned char                                      UnknownData20_5[0x4];                                       // 0x05B4   (0x0004)  MISSED
	UTexture2D*                                        FilmGrainTexture;                                           // 0x05B8   (0x0008)  
	float                                              AmbientOcclusionIntensity;                                  // 0x05C0   (0x0004)  
	float                                              AmbientOcclusionStaticFraction;                             // 0x05C4   (0x0004)  
	float                                              AmbientOcclusionRadius;                                     // 0x05C8   (0x0004)  
	bool                                               AmbientOcclusionRadiusInWS : 1;                             // 0x05CC:0 (0x0001)  
	unsigned char                                      UnknownData21_4[0x3];                                       // 0x05CD   (0x0003)  MISSED
	float                                              AmbientOcclusionFadeDistance;                               // 0x05D0   (0x0004)  
	float                                              AmbientOcclusionFadeRadius;                                 // 0x05D4   (0x0004)  
	float                                              AmbientOcclusionDistance;                                   // 0x05D8   (0x0004)  
	float                                              AmbientOcclusionPower;                                      // 0x05DC   (0x0004)  
	float                                              AmbientOcclusionBias;                                       // 0x05E0   (0x0004)  
	float                                              AmbientOcclusionQuality;                                    // 0x05E4   (0x0004)  
	float                                              AmbientOcclusionMipBlend;                                   // 0x05E8   (0x0004)  
	float                                              AmbientOcclusionMipScale;                                   // 0x05EC   (0x0004)  
	float                                              AmbientOcclusionMipThreshold;                               // 0x05F0   (0x0004)  
	float                                              AmbientOcclusionTemporalBlendWeight;                        // 0x05F4   (0x0004)  
	bool                                               RayTracingAO : 1;                                           // 0x05F8:0 (0x0001)  
	unsigned char                                      UnknownData22_4[0x3];                                       // 0x05F9   (0x0003)  MISSED
	int32_t                                            RayTracingAOSamplesPerPixel;                                // 0x05FC   (0x0004)  
	float                                              RayTracingAOIntensity;                                      // 0x0600   (0x0004)  
	float                                              RayTracingAORadius;                                         // 0x0604   (0x0004)  
	float                                              ColorGradingIntensity;                                      // 0x0608   (0x0004)  
	unsigned char                                      UnknownData23_5[0x4];                                       // 0x060C   (0x0004)  MISSED
	UTexture*                                          ColorGradingLUT;                                            // 0x0610   (0x0008)  
	float                                              DepthOfFieldSensorWidth;                                    // 0x0618   (0x0004)  
	float                                              DepthOfFieldSqueezeFactor;                                  // 0x061C   (0x0004)  
	float                                              DepthOfFieldFocalDistance;                                  // 0x0620   (0x0004)  
	float                                              DepthOfFieldDepthBlurAmount;                                // 0x0624   (0x0004)  
	float                                              DepthOfFieldDepthBlurRadius;                                // 0x0628   (0x0004)  
	float                                              DepthOfFieldFocalRegion;                                    // 0x062C   (0x0004)  
	float                                              DepthOfFieldNearTransitionRegion;                           // 0x0630   (0x0004)  
	float                                              DepthOfFieldFarTransitionRegion;                            // 0x0634   (0x0004)  
	float                                              DepthOfFieldScale;                                          // 0x0638   (0x0004)  
	float                                              DepthOfFieldNearBlurSize;                                   // 0x063C   (0x0004)  
	float                                              DepthOfFieldFarBlurSize;                                    // 0x0640   (0x0004)  
	float                                              DepthOfFieldOcclusion;                                      // 0x0644   (0x0004)  
	float                                              DepthOfFieldSkyFocusDistance;                               // 0x0648   (0x0004)  
	float                                              DepthOfFieldVignetteSize;                                   // 0x064C   (0x0004)  
	float                                              MotionBlurAmount;                                           // 0x0650   (0x0004)  
	float                                              MotionBlurMax;                                              // 0x0654   (0x0004)  
	int32_t                                            MotionBlurTargetFPS;                                        // 0x0658   (0x0004)  
	float                                              MotionBlurPerObjectSize;                                    // 0x065C   (0x0004)  
	float                                              LPVIntensity;                                               // 0x0660   (0x0004)  
	float                                              LPVVplInjectionBias;                                        // 0x0664   (0x0004)  
	float                                              LPVSize;                                                    // 0x0668   (0x0004)  
	float                                              LPVSecondaryOcclusionIntensity;                             // 0x066C   (0x0004)  
	float                                              LPVSecondaryBounceIntensity;                                // 0x0670   (0x0004)  
	float                                              LPVGeometryVolumeBias;                                      // 0x0674   (0x0004)  
	float                                              LPVEmissiveInjectionIntensity;                              // 0x0678   (0x0004)  
	float                                              LPVDirectionalOcclusionIntensity;                           // 0x067C   (0x0004)  
	float                                              LPVDirectionalOcclusionRadius;                              // 0x0680   (0x0004)  
	float                                              LPVDiffuseOcclusionExponent;                                // 0x0684   (0x0004)  
	float                                              LPVSpecularOcclusionExponent;                               // 0x0688   (0x0004)  
	float                                              LPVDiffuseOcclusionIntensity;                               // 0x068C   (0x0004)  
	float                                              LPVSpecularOcclusionIntensity;                              // 0x0690   (0x0004)  
	ETranslucencyType                                  TranslucencyType;                                           // 0x0694   (0x0001)  
	unsigned char                                      UnknownData24_5[0x3];                                       // 0x0695   (0x0003)  MISSED
	float                                              RayTracingTranslucencyMaxRoughness;                         // 0x0698   (0x0004)  
	int32_t                                            RayTracingTranslucencyRefractionRays;                       // 0x069C   (0x0004)  
	int32_t                                            RayTracingTranslucencySamplesPerPixel;                      // 0x06A0   (0x0004)  
	EReflectedAndRefractedRayTracedShadows             RayTracingTranslucencyShadows;                              // 0x06A4   (0x0001)  
	bool                                               RayTracingTranslucencyRefraction : 1;                       // 0x06A5:0 (0x0001)  
	unsigned char                                      UnknownData25_4[0x2];                                       // 0x06A6   (0x0002)  MISSED
	int32_t                                            PathTracingMaxBounces;                                      // 0x06A8   (0x0004)  
	int32_t                                            PathTracingSamplesPerPixel;                                 // 0x06AC   (0x0004)  
	float                                              PathTracingFilterWidth;                                     // 0x06B0   (0x0004)  
	bool                                               PathTracingEnableEmissive : 1;                              // 0x06B4:0 (0x0001)  
	unsigned char                                      UnknownData26_4[0x3];                                       // 0x06B5   (0x0003)  MISSED
	float                                              PathTracingMaxPathExposure;                                 // 0x06B8   (0x0004)  
	bool                                               PathTracingEnableReferenceDOF : 1;                          // 0x06BC:0 (0x0001)  
	bool                                               PathTracingEnableReferenceAtmosphere : 1;                   // 0x06BC:1 (0x0001)  
	bool                                               PathTracingEnableDenoiser : 1;                              // 0x06BC:2 (0x0001)  
	unsigned char                                      UnknownData27_4[0x3];                                       // 0x06BD   (0x0003)  MISSED
	float                                              LPVFadeRange;                                               // 0x06C0   (0x0004)  
	float                                              LPVDirectionalOcclusionFadeRange;                           // 0x06C4   (0x0004)  
	float                                              ScreenPercentage;                                           // 0x06C8   (0x0004)  
	unsigned char                                      UnknownData28_5[0x4];                                       // 0x06CC   (0x0004)  MISSED
	FWeightedBlendables                                WeightedBlendables;                                         // 0x06D0   (0x0010)  
};

/// Struct /Script/Engine.WeightedBlendables
/// Size: 0x0010 (0x000000 - 0x000010)
struct FWeightedBlendables
{ 
	TArray<FWeightedBlendable>                         Array;                                                      // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.WeightedBlendable
/// Size: 0x0010 (0x000000 - 0x000010)
struct FWeightedBlendable
{ 
	float                                              Weight;                                                     // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	UObject*                                           Object;                                                     // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.UniqueNetIdRepl
/// Size: 0x002F (0x000001 - 0x000030)
struct FUniqueNetIdRepl : FUniqueNetIdWrapper
{ 
	unsigned char                                      UnknownData00_2[0x1F];                                      // 0x0001   (0x001F)  MISSED
	TArray<char>                                       ReplicationBytes;                                           // 0x0020   (0x0010)  
};

/// Struct /Script/Engine.AnimNode_Base
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAnimNode_Base
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/Engine.InputScaleBiasClamp
/// Size: 0x0030 (0x000000 - 0x000030)
struct FInputScaleBiasClamp
{ 
	bool                                               bMapRange;                                                  // 0x0000   (0x0001)  
	bool                                               bClampResult;                                               // 0x0001   (0x0001)  
	bool                                               bInterpResult;                                              // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0003   (0x0001)  MISSED
	FInputRange                                        InRange;                                                    // 0x0004   (0x0008)  
	FInputRange                                        OutRange;                                                   // 0x000C   (0x0008)  
	float                                              Scale;                                                      // 0x0014   (0x0004)  
	float                                              Bias;                                                       // 0x0018   (0x0004)  
	float                                              ClampMin;                                                   // 0x001C   (0x0004)  
	float                                              ClampMax;                                                   // 0x0020   (0x0004)  
	float                                              InterpSpeedIncreasing;                                      // 0x0024   (0x0004)  
	float                                              InterpSpeedDecreasing;                                      // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/Engine.InputRange
/// Size: 0x0008 (0x000000 - 0x000008)
struct FInputRange
{ 
	float                                              Min;                                                        // 0x0000   (0x0004)  
	float                                              Max;                                                        // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.InputAlphaBoolBlend
/// Size: 0x0048 (0x000000 - 0x000048)
struct FInputAlphaBoolBlend
{ 
	float                                              BlendInTime;                                                // 0x0000   (0x0004)  
	float                                              BlendOutTime;                                               // 0x0004   (0x0004)  
	EAlphaBlendOption                                  BlendOption;                                                // 0x0008   (0x0001)  
	bool                                               bInitialized;                                               // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x000A   (0x0006)  MISSED
	UCurveFloat*                                       CustomCurve;                                                // 0x0010   (0x0008)  
	FAlphaBlend                                        AlphaBlend;                                                 // 0x0018   (0x0030)  
};

/// Struct /Script/Engine.AlphaBlend
/// Size: 0x0030 (0x000000 - 0x000030)
struct FAlphaBlend
{ 
	UCurveFloat*                                       CustomCurve;                                                // 0x0000   (0x0008)  
	float                                              BlendTime;                                                  // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x000C   (0x0018)  MISSED
	EAlphaBlendOption                                  BlendOption;                                                // 0x0024   (0x0001)  
	unsigned char                                      UnknownData01_6[0xB];                                       // 0x0025   (0x000B)  MISSED
};

/// Struct /Script/Engine.InputScaleBias
/// Size: 0x0008 (0x000000 - 0x000008)
struct FInputScaleBias
{ 
	float                                              Scale;                                                      // 0x0000   (0x0004)  
	float                                              Bias;                                                       // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.PoseLinkBase
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPoseLinkBase
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	int32_t                                            LinkID;                                                     // 0x0008   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/Engine.ComponentSpacePoseLink
/// Size: 0x0000 (0x000010 - 0x000010)
struct FComponentSpacePoseLink : FPoseLinkBase
{ 
};

/// Struct /Script/Engine.RuntimeFloatCurve
/// Size: 0x0088 (0x000000 - 0x000088)
struct FRuntimeFloatCurve
{ 
	FRichCurve                                         EditorCurveData;                                            // 0x0000   (0x0080)  
	UCurveFloat*                                       ExternalCurve;                                              // 0x0080   (0x0008)  
};

/// Struct /Script/Engine.IndexedCurve
/// Size: 0x0068 (0x000000 - 0x000068)
struct FIndexedCurve
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	FKeyHandleMap                                      KeyHandlesToIndices;                                        // 0x0008   (0x0060)  
};

/// Struct /Script/Engine.KeyHandleMap
/// Size: 0x0060 (0x000000 - 0x000060)
struct FKeyHandleMap
{ 
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x0000   (0x0060)  MISSED
};

/// Struct /Script/Engine.RealCurve
/// Size: 0x0008 (0x000068 - 0x000070)
struct FRealCurve : FIndexedCurve
{ 
	float                                              DefaultValue;                                               // 0x0068   (0x0004)  
	TEnumAsByte<ERichCurveExtrapolation>               PreInfinityExtrap;                                          // 0x006C   (0x0001)  
	TEnumAsByte<ERichCurveExtrapolation>               PostInfinityExtrap;                                         // 0x006D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x006E   (0x0002)  MISSED
};

/// Struct /Script/Engine.RichCurve
/// Size: 0x0010 (0x000070 - 0x000080)
struct FRichCurve : FRealCurve
{ 
	TArray<FRichCurveKey>                              Keys;                                                       // 0x0070   (0x0010)  
};

/// Struct /Script/Engine.RichCurveKey
/// Size: 0x001C (0x000000 - 0x00001C)
struct FRichCurveKey
{ 
	TEnumAsByte<ERichCurveInterpMode>                  InterpMode;                                                 // 0x0000   (0x0001)  
	TEnumAsByte<ERichCurveTangentMode>                 TangentMode;                                                // 0x0001   (0x0001)  
	TEnumAsByte<ERichCurveTangentWeightMode>           TangentWeightMode;                                          // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0003   (0x0001)  MISSED
	float                                              Time;                                                       // 0x0004   (0x0004)  
	float                                              Value;                                                      // 0x0008   (0x0004)  
	float                                              ArriveTangent;                                              // 0x000C   (0x0004)  
	float                                              ArriveTangentWeight;                                        // 0x0010   (0x0004)  
	float                                              LeaveTangent;                                               // 0x0014   (0x0004)  
	float                                              LeaveTangentWeight;                                         // 0x0018   (0x0004)  
};

/// Struct /Script/Engine.BoneReference
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBoneReference
{ 
	FName                                              BoneName;                                                   // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0008   (0x0008)  MISSED
};

/// Struct /Script/Engine.BoneSocketTarget
/// Size: 0x0090 (0x000000 - 0x000090)
struct FBoneSocketTarget
{ 
	bool                                               bUseSocket;                                                 // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FBoneReference                                     BoneReference;                                              // 0x0004   (0x0010)  
	unsigned char                                      UnknownData01_5[0xC];                                       // 0x0014   (0x000C)  MISSED
	FSocketReference                                   SocketReference;                                            // 0x0020   (0x0070)  
};

/// Struct /Script/Engine.SocketReference
/// Size: 0x0070 (0x000000 - 0x000070)
struct FSocketReference
{ 
	unsigned char                                      UnknownData00_2[0x60];                                      // 0x0000   (0x0060)  MISSED
	FName                                              SocketName;                                                 // 0x0060   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0068   (0x0008)  MISSED
};

/// Struct /Script/Engine.AnimNodeReference
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAnimNodeReference
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/Engine.InputBlendPose
/// Size: 0x0010 (0x000000 - 0x000010)
struct FInputBlendPose
{ 
	TArray<FBranchFilter>                              BranchFilters;                                              // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.BranchFilter
/// Size: 0x000C (0x000000 - 0x00000C)
struct FBranchFilter
{ 
	FName                                              BoneName;                                                   // 0x0000   (0x0008)  
	int32_t                                            BlendDepth;                                                 // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.AnimNode_CustomProperty
/// Size: 0x0048 (0x000010 - 0x000058)
struct FAnimNode_CustomProperty : FAnimNode_Base
{ 
	TArray<FName>                                      SourcePropertyNames;                                        // 0x0010   (0x0010)  
	TArray<FName>                                      DestPropertyNames;                                          // 0x0020   (0x0010)  
	UObject*                                           TargetInstance;                                             // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0038   (0x0020)  MISSED
};

/// Struct /Script/Engine.PoseLink
/// Size: 0x0000 (0x000010 - 0x000010)
struct FPoseLink : FPoseLinkBase
{ 
};

/// Struct /Script/Engine.AnimInstanceProxy
/// Size: 0x0880 (0x000000 - 0x000880)
struct FAnimInstanceProxy
{ 
	unsigned char                                      UnknownData00_1[0x880];                                     // 0x0000   (0x0880)  MISSED
};

/// Struct /Script/Engine.BaseComponentReference
/// Size: 0x0020 (0x000000 - 0x000020)
struct FBaseComponentReference
{ 
	FName                                              ComponentProperty;                                          // 0x0000   (0x0008)  
	FString                                            PathToComponent;                                            // 0x0008   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0018   (0x0008)  MISSED
};

/// Struct /Script/Engine.ComponentReference
/// Size: 0x0008 (0x000020 - 0x000028)
struct FComponentReference : FBaseComponentReference
{ 
	TWeakObjectPtr<AActor*>                            OtherActor;                                                 // 0x0020   (0x0008)  
};

/// Struct /Script/Engine.FloatSpringState
/// Size: 0x000C (0x000000 - 0x00000C)
struct FFloatSpringState
{ 
	unsigned char                                      UnknownData00_1[0xC];                                       // 0x0000   (0x000C)  MISSED
};

/// Struct /Script/Engine.VectorSpringState
/// Size: 0x0038 (0x000000 - 0x000038)
struct FVectorSpringState
{ 
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0000   (0x0038)  MISSED
};

/// Struct /Script/Engine.QuaternionSpringState
/// Size: 0x0040 (0x000000 - 0x000040)
struct FQuaternionSpringState
{ 
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x0000   (0x0040)  MISSED
};

/// Struct /Script/Engine.PerPlatformBool
/// Size: 0x0001 (0x000000 - 0x000001)
struct FPerPlatformBool
{ 
	bool                                               Default;                                                    // 0x0000   (0x0001)  
};

/// Struct /Script/Engine.PerPlatformInt
/// Size: 0x0004 (0x000000 - 0x000004)
struct FPerPlatformInt
{ 
	int32_t                                            Default;                                                    // 0x0000   (0x0004)  
};

/// Struct /Script/Engine.PerPlatformFloat
/// Size: 0x0004 (0x000000 - 0x000004)
struct FPerPlatformFloat
{ 
	float                                              Default;                                                    // 0x0000   (0x0004)  
};

/// Struct /Script/Engine.SoftComponentReference
/// Size: 0x0030 (0x000020 - 0x000050)
struct FSoftComponentReference : FBaseComponentReference
{ 
	TWeakObjectPtr<AActor*>                            OtherActor;                                                 // 0x0020   (0x0030)  
};

/// Struct /Script/Engine.RawAnimSequenceTrack
/// Size: 0x0030 (0x000000 - 0x000030)
struct FRawAnimSequenceTrack
{ 
	TArray<FVector3f>                                  PosKeys;                                                    // 0x0000   (0x0010)  
	TArray<FQuat4f>                                    RotKeys;                                                    // 0x0010   (0x0010)  
	TArray<FVector3f>                                  ScaleKeys;                                                  // 0x0020   (0x0010)  
};

/// Struct /Script/Engine.SoundModulationDestinationSettings
/// Size: 0x0060 (0x000000 - 0x000060)
struct FSoundModulationDestinationSettings
{ 
	float                                              Value;                                                      // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	USoundModulatorBase*                               Modulator;                                                  // 0x0008   (0x0008)  
	TSet<USoundModulatorBase*>                         Modulators;                                                 // 0x0010   (0x0050)  
};

/// Struct /Script/Engine.PoseSnapshot
/// Size: 0x0038 (0x000000 - 0x000038)
struct FPoseSnapshot
{ 
	TArray<FTransform>                                 LocalTransforms;                                            // 0x0000   (0x0010)  
	TArray<FName>                                      BoneNames;                                                  // 0x0010   (0x0010)  
	FName                                              SkeletalMeshName;                                           // 0x0020   (0x0008)  
	FName                                              SnapshotName;                                               // 0x0028   (0x0008)  
	bool                                               bIsValid;                                                   // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Struct /Script/Engine.AnimNode_Root
/// Size: 0x0010 (0x000010 - 0x000020)
struct FAnimNode_Root : FAnimNode_Base
{ 
	FPoseLink                                          Result;                                                     // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.AnimNode_AssetPlayerRelevancyBase
/// Size: 0x0000 (0x000010 - 0x000010)
struct FAnimNode_AssetPlayerRelevancyBase : FAnimNode_Base
{ 
};

/// Struct /Script/Engine.AnimNode_AssetPlayerBase
/// Size: 0x0028 (0x000010 - 0x000038)
struct FAnimNode_AssetPlayerBase : FAnimNode_AssetPlayerRelevancyBase
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0010   (0x0010)  MISSED
	float                                              BlendWeight;                                                // 0x0020   (0x0004)  
	float                                              InternalTimeAccumulator;                                    // 0x0024   (0x0004)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Struct /Script/Engine.PerBoneBlendWeight
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPerBoneBlendWeight
{ 
	int32_t                                            SourceIndex;                                                // 0x0000   (0x0004)  
	float                                              BlendWeight;                                                // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.AnimCurveParam
/// Size: 0x000C (0x000000 - 0x00000C)
struct FAnimCurveParam
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0008   (0x0004)  MISSED
};

/// Struct /Script/Engine.InstanceCacheDataBase
/// Size: 0x0058 (0x000000 - 0x000058)
struct FInstanceCacheDataBase
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	TArray<char>                                       SavedProperties;                                            // 0x0008   (0x0010)  
	FDataCacheDuplicatedObjectData                     UniqueTransientPackage;                                     // 0x0018   (0x0010)  
	TArray<FDataCacheDuplicatedObjectData>             DuplicatedObjects;                                          // 0x0028   (0x0010)  
	TArray<UObject*>                                   ReferencedObjects;                                          // 0x0038   (0x0010)  
	TArray<FName>                                      ReferencedNames;                                            // 0x0048   (0x0010)  
};

/// Struct /Script/Engine.DataCacheDuplicatedObjectData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FDataCacheDuplicatedObjectData
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/Engine.ActorComponentInstanceData
/// Size: 0x0010 (0x000058 - 0x000068)
struct FActorComponentInstanceData : FInstanceCacheDataBase
{ 
	UObject*                                           SourceComponentTemplate;                                    // 0x0058   (0x0008)  
	EComponentCreationMethod                           SourceComponentCreationMethod;                              // 0x0060   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0061   (0x0003)  MISSED
	int32_t                                            SourceComponentTypeSerializedIndex;                         // 0x0064   (0x0004)  
};

/// Struct /Script/Engine.SceneComponentInstanceData
/// Size: 0x0050 (0x000068 - 0x0000B8)
struct FSceneComponentInstanceData : FActorComponentInstanceData
{ 
	TMap<USceneComponent*, FTransform>                 AttachedInstanceComponents;                                 // 0x0068   (0x0050)  
};

/// Struct /Script/Engine.RepMovement
/// Size: 0x0070 (0x000000 - 0x000070)
struct FRepMovement
{ 
	FVector                                            LinearVelocity;                                             // 0x0000   (0x0018)  
	FVector                                            AngularVelocity;                                            // 0x0018   (0x0018)  
	FVector                                            Location;                                                   // 0x0030   (0x0018)  
	FRotator                                           Rotation;                                                   // 0x0048   (0x0018)  
	bool                                               bSimulatedPhysicSleep : 1;                                  // 0x0060:0 (0x0001)  
	bool                                               bRepPhysics : 1;                                            // 0x0060:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0061   (0x0003)  MISSED
	int32_t                                            ServerFrame;                                                // 0x0064   (0x0004)  
	int32_t                                            ServerPhysicsHandle;                                        // 0x0068   (0x0004)  
	EVectorQuantization                                LocationQuantizationLevel;                                  // 0x006C   (0x0001)  
	EVectorQuantization                                VelocityQuantizationLevel;                                  // 0x006D   (0x0001)  
	ERotatorQuantization                               RotationQuantizationLevel;                                  // 0x006E   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1];                                       // 0x006F   (0x0001)  MISSED
};

/// Struct /Script/Engine.RepAttachment
/// Size: 0x0060 (0x000000 - 0x000060)
struct FRepAttachment
{ 
	AActor*                                            AttachParent;                                               // 0x0000   (0x0008)  
	FVector_NetQuantize100                             LocationOffset;                                             // 0x0008   (0x0018)  
	FVector_NetQuantize100                             RelativeScale3D;                                            // 0x0020   (0x0018)  
	FRotator                                           RotationOffset;                                             // 0x0038   (0x0018)  
	FName                                              AttachSocket;                                               // 0x0050   (0x0008)  
	USceneComponent*                                   AttachComponent;                                            // 0x0058   (0x0008)  
};

/// Struct /Script/Engine.ActorTickFunction
/// Size: 0x0008 (0x000028 - 0x000030)
struct FActorTickFunction : FTickFunction
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Struct /Script/Engine.ActorDataLayer
/// Size: 0x0008 (0x000000 - 0x000008)
struct FActorDataLayer
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.KAggregateGeom
/// Size: 0x0068 (0x000000 - 0x000068)
struct FKAggregateGeom
{ 
	TArray<FKSphereElem>                               SphereElems;                                                // 0x0000   (0x0010)  
	TArray<FKBoxElem>                                  BoxElems;                                                   // 0x0010   (0x0010)  
	TArray<FKSphylElem>                                SphylElems;                                                 // 0x0020   (0x0010)  
	TArray<FKConvexElem>                               ConvexElems;                                                // 0x0030   (0x0010)  
	TArray<FKTaperedCapsuleElem>                       TaperedCapsuleElems;                                        // 0x0040   (0x0010)  
	TArray<FKLevelSetElem>                             LevelSetElems;                                              // 0x0050   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0060   (0x0008)  MISSED
};

/// Struct /Script/Engine.KShapeElem
/// Size: 0x0030 (0x000000 - 0x000030)
struct FKShapeElem
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	float                                              RestOffset;                                                 // 0x0008   (0x0004)  
	FName                                              Name;                                                       // 0x000C   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	bool                                               bContributeToMass : 1;                                      // 0x0018:0 (0x0001)  
	TEnumAsByte<ECollisionEnabled>                     CollisionEnabled;                                           // 0x0019   (0x0001)  
	unsigned char                                      UnknownData02_6[0x16];                                      // 0x001A   (0x0016)  MISSED
};

/// Struct /Script/Engine.KLevelSetElem
/// Size: 0x0070 (0x000030 - 0x0000A0)
struct FKLevelSetElem : FKShapeElem
{ 
	FTransform                                         Transform;                                                  // 0x0030   (0x0060)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0090   (0x0010)  MISSED
};

/// Struct /Script/Engine.KTaperedCapsuleElem
/// Size: 0x0040 (0x000030 - 0x000070)
struct FKTaperedCapsuleElem : FKShapeElem
{ 
	FVector                                            Center;                                                     // 0x0030   (0x0018)  
	FRotator                                           Rotation;                                                   // 0x0048   (0x0018)  
	float                                              Radius0;                                                    // 0x0060   (0x0004)  
	float                                              Radius1;                                                    // 0x0064   (0x0004)  
	float                                              Length;                                                     // 0x0068   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x006C   (0x0004)  MISSED
};

/// Struct /Script/Engine.KConvexElem
/// Size: 0x00D0 (0x000030 - 0x000100)
struct FKConvexElem : FKShapeElem
{ 
	TArray<FVector>                                    VertexData;                                                 // 0x0030   (0x0010)  
	TArray<int32_t>                                    IndexData;                                                  // 0x0040   (0x0010)  
	FBox                                               ElemBox;                                                    // 0x0050   (0x0038)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0088   (0x0008)  MISSED
	FTransform                                         Transform;                                                  // 0x0090   (0x0060)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x00F0   (0x0010)  MISSED
};

/// Struct /Script/Engine.KSphylElem
/// Size: 0x0038 (0x000030 - 0x000068)
struct FKSphylElem : FKShapeElem
{ 
	FVector                                            Center;                                                     // 0x0030   (0x0018)  
	FRotator                                           Rotation;                                                   // 0x0048   (0x0018)  
	float                                              Radius;                                                     // 0x0060   (0x0004)  
	float                                              Length;                                                     // 0x0064   (0x0004)  
};

/// Struct /Script/Engine.KBoxElem
/// Size: 0x0040 (0x000030 - 0x000070)
struct FKBoxElem : FKShapeElem
{ 
	FVector                                            Center;                                                     // 0x0030   (0x0018)  
	FRotator                                           Rotation;                                                   // 0x0048   (0x0018)  
	float                                              X;                                                          // 0x0060   (0x0004)  
	float                                              Y;                                                          // 0x0064   (0x0004)  
	float                                              Z;                                                          // 0x0068   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x006C   (0x0004)  MISSED
};

/// Struct /Script/Engine.KSphereElem
/// Size: 0x0020 (0x000030 - 0x000050)
struct FKSphereElem : FKShapeElem
{ 
	FVector                                            Center;                                                     // 0x0030   (0x0018)  
	float                                              Radius;                                                     // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Struct /Script/Engine.NamedFloat
/// Size: 0x000C (0x000000 - 0x00000C)
struct FNamedFloat
{ 
	float                                              Value;                                                      // 0x0000   (0x0004)  
	FName                                              Name;                                                       // 0x0004   (0x0008)  
};

/// Struct /Script/Engine.NamedVector
/// Size: 0x0020 (0x000000 - 0x000020)
struct FNamedVector
{ 
	FVector                                            Value;                                                      // 0x0000   (0x0018)  
	FName                                              Name;                                                       // 0x0018   (0x0008)  
};

/// Struct /Script/Engine.NamedColor
/// Size: 0x000C (0x000000 - 0x00000C)
struct FNamedColor
{ 
	FColor                                             Value;                                                      // 0x0000   (0x0004)  
	FName                                              Name;                                                       // 0x0004   (0x0008)  
};

/// Struct /Script/Engine.NamedTransform
/// Size: 0x0070 (0x000000 - 0x000070)
struct FNamedTransform
{ 
	FTransform                                         Value;                                                      // 0x0000   (0x0060)  
	FName                                              Name;                                                       // 0x0060   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0068   (0x0008)  MISSED
};

/// Struct /Script/Engine.LocalSpacePose
/// Size: 0x0020 (0x000000 - 0x000020)
struct FLocalSpacePose
{ 
	TArray<FTransform>                                 Transforms;                                                 // 0x0000   (0x0010)  
	TArray<FName>                                      Names;                                                      // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.ComponentSpacePose
/// Size: 0x0020 (0x000000 - 0x000020)
struct FComponentSpacePose
{ 
	TArray<FTransform>                                 Transforms;                                                 // 0x0000   (0x0010)  
	TArray<FName>                                      Names;                                                      // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.AnimationErrorStats
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAnimationErrorStats
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/Engine.AnimCurveBase
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAnimCurveBase
{ 
	FName                                              LastObservedName;                                           // 0x0000   (0x0008)  
	FSmartName                                         Name;                                                       // 0x0008   (0x000C)  
	int32_t                                            CurveTypeFlags;                                             // 0x0014   (0x0004)  
};

/// Struct /Script/Engine.SmartName
/// Size: 0x000C (0x000000 - 0x00000C)
struct FSmartName
{ 
	FName                                              DisplayName;                                                // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0008   (0x0004)  MISSED
};

/// Struct /Script/Engine.FloatCurve
/// Size: 0x0080 (0x000018 - 0x000098)
struct FFloatCurve : FAnimCurveBase
{ 
	FRichCurve                                         FloatCurve;                                                 // 0x0018   (0x0080)  
};

/// Struct /Script/Engine.VectorCurve
/// Size: 0x0180 (0x000018 - 0x000198)
struct FVectorCurve : FAnimCurveBase
{ 
	FRichCurve                                         FloatCurves;                                                // 0x0018   (0x0180)  
};

/// Struct /Script/Engine.TransformCurve
/// Size: 0x04C8 (0x000018 - 0x0004E0)
struct FTransformCurve : FAnimCurveBase
{ 
	FVectorCurve                                       TranslationCurve;                                           // 0x0018   (0x0198)  
	FVectorCurve                                       RotationCurve;                                              // 0x01B0   (0x0198)  
	FVectorCurve                                       ScaleCurve;                                                 // 0x0348   (0x0198)  
};

/// Struct /Script/Engine.CachedFloatCurve
/// Size: 0x0014 (0x000000 - 0x000014)
struct FCachedFloatCurve
{ 
	FName                                              CurveName;                                                  // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0008   (0x000C)  MISSED
};

/// Struct /Script/Engine.RawCurveTracks
/// Size: 0x0010 (0x000000 - 0x000010)
struct FRawCurveTracks
{ 
	TArray<FFloatCurve>                                FloatCurves;                                                // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.EmptyPayload
/// Size: 0x0001 (0x000000 - 0x000001)
struct FEmptyPayload
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.BracketPayload
/// Size: 0x000F (0x000001 - 0x000010)
struct FBracketPayload : FEmptyPayload
{ 
	FString                                            Description;                                                // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.AnimationTrackPayload
/// Size: 0x0007 (0x000001 - 0x000008)
struct FAnimationTrackPayload : FEmptyPayload
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.AnimationTrackAddedPayload
/// Size: 0x0004 (0x000008 - 0x00000C)
struct FAnimationTrackAddedPayload : FAnimationTrackPayload
{ 
	int32_t                                            TrackIndex;                                                 // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.SequenceLengthChangedPayload
/// Size: 0x000B (0x000001 - 0x00000C)
struct FSequenceLengthChangedPayload : FEmptyPayload
{ 
	float                                              PreviousLength;                                             // 0x0000   (0x0004)  
	float                                              T0;                                                         // 0x0004   (0x0004)  
	float                                              T1;                                                         // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.FrameRateChangedPayload
/// Size: 0x0007 (0x000001 - 0x000008)
struct FFrameRateChangedPayload : FEmptyPayload
{ 
	FFrameRate                                         PreviousFrameRate;                                          // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.CurvePayload
/// Size: 0x000F (0x000001 - 0x000010)
struct FCurvePayload : FEmptyPayload
{ 
	FAnimationCurveIdentifier                          Identifier;                                                 // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.AnimationCurveIdentifier
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAnimationCurveIdentifier
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/Engine.CurveScaledPayload
/// Size: 0x0008 (0x000010 - 0x000018)
struct FCurveScaledPayload : FCurvePayload
{ 
	float                                              Factor;                                                     // 0x0010   (0x0004)  
	float                                              Origin;                                                     // 0x0014   (0x0004)  
};

/// Struct /Script/Engine.CurveRenamedPayload
/// Size: 0x0010 (0x000010 - 0x000020)
struct FCurveRenamedPayload : FCurvePayload
{ 
	FAnimationCurveIdentifier                          NewIdentifier;                                              // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.CurveFlagsChangedPayload
/// Size: 0x0004 (0x000010 - 0x000014)
struct FCurveFlagsChangedPayload : FCurvePayload
{ 
	int32_t                                            OldFlags;                                                   // 0x0010   (0x0004)  
};

/// Struct /Script/Engine.AttributePayload
/// Size: 0x003F (0x000001 - 0x000040)
struct FAttributePayload : FEmptyPayload
{ 
	FAnimationAttributeIdentifier                      Identifier;                                                 // 0x0000   (0x0040)  
};

/// Struct /Script/Engine.AnimationAttributeIdentifier
/// Size: 0x0040 (0x000000 - 0x000040)
struct FAnimationAttributeIdentifier
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	FName                                              BoneName;                                                   // 0x0008   (0x0008)  
	int32_t                                            BoneIndex;                                                  // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	UScriptStruct*                                     ScriptStruct;                                               // 0x0018   (0x0008)  
	FSoftObjectPath                                    ScriptStructPath;                                           // 0x0020   (0x0020)  
};

/// Struct /Script/Engine.AnimNodeConstantData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAnimNodeConstantData
{ 
	TScriptInterface<Class>                            AnimClassInterface;                                         // 0x0000   (0x0010)  
	int32_t                                            NodeIndex;                                                  // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/Engine.AnimSubsystem
/// Size: 0x0008 (0x000000 - 0x000008)
struct FAnimSubsystem
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/Engine.AnimSubsystemInstance
/// Size: 0x0008 (0x000000 - 0x000008)
struct FAnimSubsystemInstance
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/Engine.AnimSubsystem_BlendSpaceGraph
/// Size: 0x0010 (0x000008 - 0x000018)
struct FAnimSubsystem_BlendSpaceGraph : FAnimSubsystem
{ 
	TArray<UBlendSpace*>                               BlendSpaces;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.PerBoneBlendWeights
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPerBoneBlendWeights
{ 
	TArray<FPerBoneBlendWeight>                        BoneBlendWeights;                                           // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.AnimLinkableElement
/// Size: 0x0030 (0x000000 - 0x000030)
struct FAnimLinkableElement
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	UAnimMontage*                                      LinkedMontage;                                              // 0x0008   (0x0008)  
	int32_t                                            SlotIndex;                                                  // 0x0010   (0x0004)  
	int32_t                                            SegmentIndex;                                               // 0x0014   (0x0004)  
	TEnumAsByte<EAnimLinkMethod>                       LinkMethod;                                                 // 0x0018   (0x0001)  
	TEnumAsByte<EAnimLinkMethod>                       CachedLinkMethod;                                           // 0x0019   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x001A   (0x0002)  MISSED
	float                                              SegmentBeginTime;                                           // 0x001C   (0x0004)  
	float                                              SegmentLength;                                              // 0x0020   (0x0004)  
	float                                              LinkValue;                                                  // 0x0024   (0x0004)  
	UAnimSequenceBase*                                 LinkedSequence;                                             // 0x0028   (0x0008)  
};

/// Struct /Script/Engine.AnimNotifyEvent
/// Size: 0x0088 (0x000030 - 0x0000B8)
struct FAnimNotifyEvent : FAnimLinkableElement
{ 
	float                                              DisplayTime;                                                // 0x0030   (0x0004)  
	float                                              TriggerTimeOffset;                                          // 0x0034   (0x0004)  
	float                                              EndTriggerTimeOffset;                                       // 0x0038   (0x0004)  
	float                                              TriggerWeightThreshold;                                     // 0x003C   (0x0004)  
	FName                                              NotifyName;                                                 // 0x0040   (0x0008)  
	UAnimNotify*                                       Notify;                                                     // 0x0048   (0x0008)  
	UAnimNotifyState*                                  NotifyStateClass;                                           // 0x0050   (0x0008)  
	float                                              Duration;                                                   // 0x0058   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x005C   (0x0004)  MISSED
	FAnimLinkableElement                               EndLink;                                                    // 0x0060   (0x0030)  
	bool                                               bConvertedFromBranchingPoint;                               // 0x0090   (0x0001)  
	TEnumAsByte<EMontageNotifyTickType>                MontageTickType;                                            // 0x0091   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x0092   (0x0002)  MISSED
	float                                              NotifyTriggerChance;                                        // 0x0094   (0x0004)  
	TEnumAsByte<ENotifyFilterType>                     NotifyFilterType;                                           // 0x0098   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0099   (0x0003)  MISSED
	int32_t                                            NotifyFilterLOD;                                            // 0x009C   (0x0004)  
	bool                                               bTriggerOnDedicatedServer;                                  // 0x00A0   (0x0001)  
	bool                                               bTriggerOnFollower;                                         // 0x00A1   (0x0001)  
	unsigned char                                      UnknownData03_5[0x2];                                       // 0x00A2   (0x0002)  MISSED
	int32_t                                            TrackIndex;                                                 // 0x00A4   (0x0004)  
	unsigned char                                      UnknownData04_6[0x10];                                      // 0x00A8   (0x0010)  MISSED
};

/// Struct /Script/Engine.AnimSyncMarker
/// Size: 0x000C (0x000000 - 0x00000C)
struct FAnimSyncMarker
{ 
	FName                                              MarkerName;                                                 // 0x0000   (0x0008)  
	float                                              Time;                                                       // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.AnimNotifyTrack
/// Size: 0x0038 (0x000000 - 0x000038)
struct FAnimNotifyTrack
{ 
	FName                                              TrackName;                                                  // 0x0000   (0x0008)  
	FLinearColor                                       TrackColor;                                                 // 0x0008   (0x0010)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x0018   (0x0020)  MISSED
};

/// Struct /Script/Engine.MarkerSyncData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FMarkerSyncData
{ 
	TArray<FAnimSyncMarker>                            AuthoredSyncMarkers;                                        // 0x0000   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0010   (0x0010)  MISSED
};

/// Struct /Script/Engine.TrackToSkeletonMap
/// Size: 0x0004 (0x000000 - 0x000004)
struct FTrackToSkeletonMap
{ 
	int32_t                                            BoneTreeIndex;                                              // 0x0000   (0x0004)  
};

/// Struct /Script/Engine.AssetManagerRedirect
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAssetManagerRedirect
{ 
	FString                                            Old;                                                        // 0x0000   (0x0010)  
	FString                                            New;                                                        // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.PrimaryAssetRulesOverride
/// Size: 0x001C (0x000000 - 0x00001C)
struct FPrimaryAssetRulesOverride
{ 
	FPrimaryAssetId                                    PrimaryAssetId;                                             // 0x0000   (0x0010)  
	FPrimaryAssetRules                                 Rules;                                                      // 0x0010   (0x000C)  
};

/// Struct /Script/Engine.PrimaryAssetRules
/// Size: 0x000C (0x000000 - 0x00000C)
struct FPrimaryAssetRules
{ 
	int32_t                                            Priority;                                                   // 0x0000   (0x0004)  
	int32_t                                            ChunkId;                                                    // 0x0004   (0x0004)  
	bool                                               bApplyRecursively;                                          // 0x0008   (0x0001)  
	EPrimaryAssetCookRule                              CookRule;                                                   // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x000A   (0x0002)  MISSED
};

/// Struct /Script/Engine.PrimaryAssetRulesCustomOverride
/// Size: 0x0038 (0x000000 - 0x000038)
struct FPrimaryAssetRulesCustomOverride
{ 
	FPrimaryAssetType                                  PrimaryAssetType;                                           // 0x0000   (0x0008)  
	FDirectoryPath                                     FilterDirectory;                                            // 0x0008   (0x0010)  
	FString                                            FilterString;                                               // 0x0018   (0x0010)  
	FPrimaryAssetRules                                 Rules;                                                      // 0x0028   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/Engine.InterpolationParameter
/// Size: 0x0010 (0x000000 - 0x000010)
struct FInterpolationParameter
{ 
	float                                              InterpolationTime;                                          // 0x0000   (0x0004)  
	float                                              DampingRatio;                                               // 0x0004   (0x0004)  
	float                                              MaxSpeed;                                                   // 0x0008   (0x0004)  
	TEnumAsByte<EFilterInterpolationType>              InterpolationType;                                          // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
};

/// Struct /Script/Engine.BlendParameter
/// Size: 0x0020 (0x000000 - 0x000020)
struct FBlendParameter
{ 
	FString                                            DisplayName;                                                // 0x0000   (0x0010)  
	float                                              Min;                                                        // 0x0010   (0x0004)  
	float                                              Max;                                                        // 0x0014   (0x0004)  
	int32_t                                            GridNum;                                                    // 0x0018   (0x0004)  
	bool                                               bSnapToGrid;                                                // 0x001C   (0x0001)  
	bool                                               bWrapInput;                                                 // 0x001D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x001E   (0x0002)  MISSED
};

/// Struct /Script/Engine.BlendSample
/// Size: 0x0028 (0x000000 - 0x000028)
struct FBlendSample
{ 
	UAnimSequence*                                     Animation;                                                  // 0x0000   (0x0008)  
	FVector                                            SampleValue;                                                // 0x0008   (0x0018)  
	float                                              RateScale;                                                  // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/Engine.BlendSpaceSegment
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBlendSpaceSegment
{ 
	int32_t                                            SampleIndices;                                              // 0x0000   (0x0008)  
	float                                              Vertices;                                                   // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.BlendSpaceTriangleEdgeInfo
/// Size: 0x0028 (0x000000 - 0x000028)
struct FBlendSpaceTriangleEdgeInfo
{ 
	FVector2D                                          Normal;                                                     // 0x0000   (0x0010)  
	int32_t                                            NeighbourTriangleIndex;                                     // 0x0010   (0x0004)  
	int32_t                                            AdjacentPerimeterTriangleIndices;                           // 0x0014   (0x0008)  
	int32_t                                            AdjacentPerimeterVertexIndices;                             // 0x001C   (0x0008)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/Engine.BlendSpaceTriangle
/// Size: 0x00B8 (0x000000 - 0x0000B8)
struct FBlendSpaceTriangle
{ 
	int32_t                                            SampleIndices;                                              // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FVector2D                                          Vertices;                                                   // 0x0010   (0x0030)  
	FBlendSpaceTriangleEdgeInfo                        EdgeInfo;                                                   // 0x0040   (0x0078)  
};

/// Struct /Script/Engine.WeightedBlendSample
/// Size: 0x0008 (0x000000 - 0x000008)
struct FWeightedBlendSample
{ 
	int32_t                                            SampleIndex;                                                // 0x0000   (0x0004)  
	float                                              SampleWeight;                                               // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.BlendSpaceData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FBlendSpaceData
{ 
	TArray<FBlendSpaceSegment>                         Segments;                                                   // 0x0000   (0x0010)  
	TArray<FBlendSpaceTriangle>                        Triangles;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.EditorElement
/// Size: 0x0018 (0x000000 - 0x000018)
struct FEditorElement
{ 
	int32_t                                            Indices;                                                    // 0x0000   (0x000C)  
	float                                              Weights;                                                    // 0x000C   (0x000C)  
};

/// Struct /Script/Engine.GridBlendSample
/// Size: 0x001C (0x000000 - 0x00001C)
struct FGridBlendSample
{ 
	FEditorElement                                     GridElement;                                                // 0x0000   (0x0018)  
	float                                              BlendWeight;                                                // 0x0018   (0x0004)  
};

/// Struct /Script/Engine.PerBoneInterpolation
/// Size: 0x0014 (0x000000 - 0x000014)
struct FPerBoneInterpolation
{ 
	FBoneReference                                     BoneReference;                                              // 0x0000   (0x0010)  
	float                                              InterpolationSpeedPerSec;                                   // 0x0010   (0x0004)  
};

/// Struct /Script/Engine.CompilerNativizationOptions
/// Size: 0x0080 (0x000000 - 0x000080)
struct FCompilerNativizationOptions
{ 
	FName                                              PlatformName;                                               // 0x0000   (0x0008)  
	bool                                               ServerOnlyPlatform;                                         // 0x0008   (0x0001)  
	bool                                               ClientOnlyPlatform;                                         // 0x0009   (0x0001)  
	bool                                               bExcludeMonolithicHeaders;                                  // 0x000A   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x000B   (0x0005)  MISSED
	TArray<FName>                                      ExcludedModules;                                            // 0x0010   (0x0010)  
	TSet<FSoftObjectPath>                              ExcludedAssets;                                             // 0x0020   (0x0050)  
	TArray<FString>                                    ExcludedFolderPaths;                                        // 0x0070   (0x0010)  
};

/// Struct /Script/Engine.BlueprintMacroCosmeticInfo
/// Size: 0x0001 (0x000000 - 0x000001)
struct FBlueprintMacroCosmeticInfo
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.BPVariableMetaDataEntry
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBPVariableMetaDataEntry
{ 
	FName                                              DataKey;                                                    // 0x0000   (0x0008)  
	FString                                            DataValue;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.BPVariableDescription
/// Size: 0x00D0 (0x000000 - 0x0000D0)
struct FBPVariableDescription
{ 
	FName                                              VarName;                                                    // 0x0000   (0x0008)  
	FGuid                                              VarGuid;                                                    // 0x0008   (0x0010)  
	FEdGraphPinType                                    VarType;                                                    // 0x0018   (0x0058)  
	FString                                            FriendlyName;                                               // 0x0070   (0x0010)  
	FText                                              Category;                                                   // 0x0080   (0x0018)  
	uint64_t                                           PropertyFlags;                                              // 0x0098   (0x0008)  
	FName                                              RepNotifyFunc;                                              // 0x00A0   (0x0008)  
	TEnumAsByte<ELifetimeCondition>                    ReplicationCondition;                                       // 0x00A8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00A9   (0x0007)  MISSED
	TArray<FBPVariableMetaDataEntry>                   MetaDataArray;                                              // 0x00B0   (0x0010)  
	FString                                            DefaultValue;                                               // 0x00C0   (0x0010)  
};

/// Struct /Script/Engine.EdGraphPinType
/// Size: 0x0058 (0x000000 - 0x000058)
struct FEdGraphPinType
{ 
	FName                                              PinCategory;                                                // 0x0000   (0x0008)  
	FName                                              PinSubCategory;                                             // 0x0008   (0x0008)  
	TWeakObjectPtr<UObject*>                           PinSubCategoryObject;                                       // 0x0010   (0x0008)  
	FSimpleMemberReference                             PinSubCategoryMemberReference;                              // 0x0018   (0x0020)  
	FEdGraphTerminalType                               PinValueType;                                               // 0x0038   (0x001C)  
	EPinContainerType                                  ContainerType;                                              // 0x0054   (0x0001)  
	bool                                               bIsArray : 1;                                               // 0x0055:0 (0x0001)  
	bool                                               bIsReference : 1;                                           // 0x0055:1 (0x0001)  
	bool                                               bIsConst : 1;                                               // 0x0055:2 (0x0001)  
	bool                                               bIsWeakPointer : 1;                                         // 0x0055:3 (0x0001)  
	bool                                               bIsUObjectWrapper : 1;                                      // 0x0055:4 (0x0001)  
	bool                                               bSerializeAsSinglePrecisionFloat : 1;                       // 0x0055:5 (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0056   (0x0002)  MISSED
};

/// Struct /Script/Engine.EdGraphTerminalType
/// Size: 0x001C (0x000000 - 0x00001C)
struct FEdGraphTerminalType
{ 
	FName                                              TerminalCategory;                                           // 0x0000   (0x0008)  
	FName                                              TerminalSubCategory;                                        // 0x0008   (0x0008)  
	TWeakObjectPtr<UObject*>                           TerminalSubCategoryObject;                                  // 0x0010   (0x0008)  
	bool                                               bTerminalIsConst;                                           // 0x0018   (0x0001)  
	bool                                               bTerminalIsWeakPointer;                                     // 0x0019   (0x0001)  
	bool                                               bTerminalIsUObjectWrapper;                                  // 0x001A   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x001B   (0x0001)  MISSED
};

/// Struct /Script/Engine.SimpleMemberReference
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSimpleMemberReference
{ 
	UObject*                                           MemberParent;                                               // 0x0000   (0x0008)  
	FName                                              MemberName;                                                 // 0x0008   (0x0008)  
	FGuid                                              MemberGuid;                                                 // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.BPInterfaceDescription
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBPInterfaceDescription
{ 
	UClass*                                            Interface;                                                  // 0x0000   (0x0008)  
	TArray<UEdGraph*>                                  Graphs;                                                     // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.EditedDocumentInfo
/// Size: 0x0040 (0x000000 - 0x000040)
struct FEditedDocumentInfo
{ 
	FSoftObjectPath                                    EditedObjectPath;                                           // 0x0000   (0x0020)  
	FVector2D                                          SavedViewOffset;                                            // 0x0020   (0x0010)  
	float                                              SavedZoomAmount;                                            // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	UObject*                                           EditedObject;                                               // 0x0038   (0x0008)  
};

/// Struct /Script/Engine.BPEditorBookmarkNode
/// Size: 0x0038 (0x000000 - 0x000038)
struct FBPEditorBookmarkNode
{ 
	FGuid                                              NodeGuid;                                                   // 0x0000   (0x0010)  
	FGuid                                              ParentGuid;                                                 // 0x0010   (0x0010)  
	FText                                              DisplayName;                                                // 0x0020   (0x0018)  
};

/// Struct /Script/Engine.Bookmark2DJumpToSettings
/// Size: 0x0001 (0x000000 - 0x000001)
struct FBookmark2DJumpToSettings
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.BookmarkBaseJumpToSettings
/// Size: 0x0001 (0x000000 - 0x000001)
struct FBookmarkBaseJumpToSettings
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.GeomSelection
/// Size: 0x000C (0x000000 - 0x00000C)
struct FGeomSelection
{ 
	int32_t                                            Type;                                                       // 0x0000   (0x0004)  
	int32_t                                            Index;                                                      // 0x0004   (0x0004)  
	int32_t                                            SelectionIndex;                                             // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.FloatAnimationAttribute
/// Size: 0x0004 (0x000000 - 0x000004)
struct FFloatAnimationAttribute
{ 
	float                                              Value;                                                      // 0x0000   (0x0004)  
};

/// Struct /Script/Engine.IntegerAnimationAttribute
/// Size: 0x0004 (0x000000 - 0x000004)
struct FIntegerAnimationAttribute
{ 
	int32_t                                            Value;                                                      // 0x0000   (0x0004)  
};

/// Struct /Script/Engine.StringAnimationAttribute
/// Size: 0x0010 (0x000000 - 0x000010)
struct FStringAnimationAttribute
{ 
	FString                                            Value;                                                      // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.TransformAnimationAttribute
/// Size: 0x0060 (0x000000 - 0x000060)
struct FTransformAnimationAttribute
{ 
	FTransform                                         Value;                                                      // 0x0000   (0x0060)  
};

/// Struct /Script/Engine.VectorAnimationAttribute
/// Size: 0x0018 (0x000000 - 0x000018)
struct FVectorAnimationAttribute
{ 
	FVector                                            Value;                                                      // 0x0000   (0x0018)  
};

/// Struct /Script/Engine.QuaternionAnimationAttribute
/// Size: 0x0020 (0x000000 - 0x000020)
struct FQuaternionAnimationAttribute
{ 
	FQuat                                              Value;                                                      // 0x0000   (0x0020)  
};

/// Struct /Script/Engine.NonBlendableQuaternionAnimationAttribute
/// Size: 0x0000 (0x000020 - 0x000020)
struct FNonBlendableQuaternionAnimationAttribute : FQuaternionAnimationAttribute
{ 
};

/// Struct /Script/Engine.NonBlendableVectorAnimationAttribute
/// Size: 0x0000 (0x000018 - 0x000018)
struct FNonBlendableVectorAnimationAttribute : FVectorAnimationAttribute
{ 
};

/// Struct /Script/Engine.NonBlendableTransformAnimationAttribute
/// Size: 0x0000 (0x000060 - 0x000060)
struct FNonBlendableTransformAnimationAttribute : FTransformAnimationAttribute
{ 
};

/// Struct /Script/Engine.NonBlendableFloatAnimationAttribute
/// Size: 0x0000 (0x000004 - 0x000004)
struct FNonBlendableFloatAnimationAttribute : FFloatAnimationAttribute
{ 
};

/// Struct /Script/Engine.NonBlendableIntegerAnimationAttribute
/// Size: 0x0000 (0x000004 - 0x000004)
struct FNonBlendableIntegerAnimationAttribute : FIntegerAnimationAttribute
{ 
};

/// Struct /Script/Engine.MinimalViewInfo
/// Size: 0x07C0 (0x000000 - 0x0007C0)
struct FMinimalViewInfo
{ 
	FVector                                            Location;                                                   // 0x0000   (0x0018)  
	FRotator                                           Rotation;                                                   // 0x0018   (0x0018)  
	float                                              FOV;                                                        // 0x0030   (0x0004)  
	float                                              DesiredFOV;                                                 // 0x0034   (0x0004)  
	float                                              OrthoWidth;                                                 // 0x0038   (0x0004)  
	float                                              OrthoNearClipPlane;                                         // 0x003C   (0x0004)  
	float                                              OrthoFarClipPlane;                                          // 0x0040   (0x0004)  
	float                                              PerspectiveNearClipPlane;                                   // 0x0044   (0x0004)  
	float                                              AspectRatio;                                                // 0x0048   (0x0004)  
	bool                                               bConstrainAspectRatio : 1;                                  // 0x004C:0 (0x0001)  
	bool                                               bUseFieldOfViewForLOD : 1;                                  // 0x004C:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x004D   (0x0003)  MISSED
	TEnumAsByte<ECameraProjectionMode>                 ProjectionMode;                                             // 0x0050   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0051   (0x0003)  MISSED
	float                                              PostProcessBlendWeight;                                     // 0x0054   (0x0004)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0058   (0x0008)  MISSED
	FPostProcessSettings                               PostProcessSettings;                                        // 0x0060   (0x06E0)  
	FVector2D                                          OffCenterProjectionOffset;                                  // 0x0740   (0x0010)  
	unsigned char                                      UnknownData03_6[0x70];                                      // 0x0750   (0x0070)  MISSED
};

/// Struct /Script/Engine.TextSizingParameters
/// Size: 0x0038 (0x000000 - 0x000038)
struct FTextSizingParameters
{ 
	float                                              DrawX;                                                      // 0x0000   (0x0004)  
	float                                              DrawY;                                                      // 0x0004   (0x0004)  
	float                                              DrawXL;                                                     // 0x0008   (0x0004)  
	float                                              DrawYL;                                                     // 0x000C   (0x0004)  
	FVector2D                                          Scaling;                                                    // 0x0010   (0x0010)  
	UFont*                                             DrawFont;                                                   // 0x0020   (0x0008)  
	FVector2D                                          SpacingAdjust;                                              // 0x0028   (0x0010)  
};

/// Struct /Script/Engine.WrappedStringElement
/// Size: 0x0020 (0x000000 - 0x000020)
struct FWrappedStringElement
{ 
	FString                                            Value;                                                      // 0x0000   (0x0010)  
	FVector2D                                          LineExtent;                                                 // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.CharacterNetworkSerializationPackedBits
/// Size: 0x0098 (0x000000 - 0x000098)
struct FCharacterNetworkSerializationPackedBits
{ 
	unsigned char                                      UnknownData00_1[0x98];                                      // 0x0000   (0x0098)  MISSED
};

/// Struct /Script/Engine.CharacterServerMovePackedBits
/// Size: 0x0000 (0x000098 - 0x000098)
struct FCharacterServerMovePackedBits : FCharacterNetworkSerializationPackedBits
{ 
};

/// Struct /Script/Engine.CharacterMoveResponsePackedBits
/// Size: 0x0000 (0x000098 - 0x000098)
struct FCharacterMoveResponsePackedBits : FCharacterNetworkSerializationPackedBits
{ 
};

/// Struct /Script/Engine.CharacterNetworkSerializationPackedBitsNetSerializerConfig
/// Size: 0x0007 (0x000001 - 0x000008)
struct FCharacterNetworkSerializationPackedBitsNetSerializerConfig : FNetSerializerConfig
{ 
	uint32_t                                           MaxAllowedDataBits;                                         // 0x0000   (0x0004)  
	uint32_t                                           MaxAllowedObjectReferences;                                 // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.MeshUVChannelInfo
/// Size: 0x0014 (0x000000 - 0x000014)
struct FMeshUVChannelInfo
{ 
	bool                                               bInitialized;                                               // 0x0000   (0x0001)  
	bool                                               bOverrideDensities;                                         // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0002   (0x0002)  MISSED
	float                                              LocalUVDensities;                                           // 0x0004   (0x0010)  
};

/// Struct /Script/Engine.CustomAttributeSetting
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCustomAttributeSetting
{ 
	FString                                            Name;                                                       // 0x0000   (0x0010)  
	FString                                            Meaning;                                                    // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.TimecodeCustomAttributeNameSettings
/// Size: 0x0038 (0x000000 - 0x000038)
struct FTimecodeCustomAttributeNameSettings
{ 
	FName                                              HourAttributeName;                                          // 0x0000   (0x0008)  
	FName                                              MinuteAttributeName;                                        // 0x0008   (0x0008)  
	FName                                              SecondAttributeName;                                        // 0x0010   (0x0008)  
	FName                                              FrameAttributeName;                                         // 0x0018   (0x0008)  
	FName                                              SubframeAttributeName;                                      // 0x0020   (0x0008)  
	FName                                              RateAttributeName;                                          // 0x0028   (0x0008)  
	FName                                              TakenameAttributeName;                                      // 0x0030   (0x0008)  
};

/// Struct /Script/Engine.CustomAttribute
/// Size: 0x0001 (0x000000 - 0x000001)
struct FCustomAttribute
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.CustomAttributePerBoneData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FCustomAttributePerBoneData
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.BakedStringCustomAttribute
/// Size: 0x0001 (0x000000 - 0x000001)
struct FBakedStringCustomAttribute
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.BakedIntegerCustomAttribute
/// Size: 0x0001 (0x000000 - 0x000001)
struct FBakedIntegerCustomAttribute
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.BakedFloatCustomAttribute
/// Size: 0x0001 (0x000000 - 0x000001)
struct FBakedFloatCustomAttribute
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.BakedCustomAttributePerBoneData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FBakedCustomAttributePerBoneData
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.DebugDisplayProperty
/// Size: 0x0020 (0x000000 - 0x000020)
struct FDebugDisplayProperty
{ 
	UObject*                                           Obj;                                                        // 0x0000   (0x0008)  
	UClass*                                            WithinClass;                                                // 0x0008   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0010   (0x0010)  MISSED
};

/// Struct /Script/Engine.DebugTextInfo
/// Size: 0x0080 (0x000000 - 0x000080)
struct FDebugTextInfo
{ 
	AActor*                                            SrcActor;                                                   // 0x0000   (0x0008)  
	FVector                                            SrcActorOffset;                                             // 0x0008   (0x0018)  
	FVector                                            SrcActorDesiredOffset;                                      // 0x0020   (0x0018)  
	FString                                            DebugText;                                                  // 0x0038   (0x0010)  
	float                                              TimeRemaining;                                              // 0x0048   (0x0004)  
	float                                              Duration;                                                   // 0x004C   (0x0004)  
	FColor                                             TextColor;                                                  // 0x0050   (0x0004)  
	bool                                               bAbsoluteLocation : 1;                                      // 0x0054:0 (0x0001)  
	bool                                               bKeepAttachedToActor : 1;                                   // 0x0054:1 (0x0001)  
	bool                                               bDrawShadow : 1;                                            // 0x0054:2 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0055   (0x0003)  MISSED
	FVector                                            OrigActorLocation;                                          // 0x0058   (0x0018)  
	UFont*                                             Font;                                                       // 0x0070   (0x0008)  
	float                                              FontScale;                                                  // 0x0078   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x007C   (0x0004)  MISSED
};

/// Struct /Script/Engine.RawDistributionFloat
/// Size: 0x0010 (0x000020 - 0x000030)
struct FRawDistributionFloat : FRawDistribution
{ 
	float                                              MinValue;                                                   // 0x0020   (0x0004)  
	float                                              MaxValue;                                                   // 0x0024   (0x0004)  
	UDistributionFloat*                                Distribution;                                               // 0x0028   (0x0008)  
};

/// Struct /Script/Engine.RawDistributionVector
/// Size: 0x0040 (0x000020 - 0x000060)
struct FRawDistributionVector : FRawDistribution
{ 
	float                                              MinValue;                                                   // 0x0020   (0x0004)  
	float                                              MaxValue;                                                   // 0x0024   (0x0004)  
	FVector                                            MinValueVec;                                                // 0x0028   (0x0018)  
	FVector                                            MaxValueVec;                                                // 0x0040   (0x0018)  
	UDistributionVector*                               Distribution;                                               // 0x0058   (0x0008)  
};

/// Struct /Script/Engine.EdGraphPinReference
/// Size: 0x0018 (0x000000 - 0x000018)
struct FEdGraphPinReference
{ 
	TWeakObjectPtr<UEdGraphNode*>                      OwningNode;                                                 // 0x0000   (0x0008)  
	FGuid                                              PinId;                                                      // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.EdGraphSchemaAction
/// Size: 0x0100 (0x000000 - 0x000100)
struct FEdGraphSchemaAction
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	FText                                              MenuDescription;                                            // 0x0008   (0x0018)  
	FText                                              TooltipDescription;                                         // 0x0020   (0x0018)  
	FText                                              Category;                                                   // 0x0038   (0x0018)  
	FText                                              Keywords;                                                   // 0x0050   (0x0018)  
	int32_t                                            Grouping;                                                   // 0x0068   (0x0004)  
	int32_t                                            SectionID;                                                  // 0x006C   (0x0004)  
	TArray<FString>                                    MenuDescriptionArray;                                       // 0x0070   (0x0010)  
	TArray<FString>                                    FullSearchTitlesArray;                                      // 0x0080   (0x0010)  
	TArray<FString>                                    FullSearchKeywordsArray;                                    // 0x0090   (0x0010)  
	TArray<FString>                                    FullSearchCategoryArray;                                    // 0x00A0   (0x0010)  
	TArray<FString>                                    LocalizedMenuDescriptionArray;                              // 0x00B0   (0x0010)  
	TArray<FString>                                    LocalizedFullSearchTitlesArray;                             // 0x00C0   (0x0010)  
	TArray<FString>                                    LocalizedFullSearchKeywordsArray;                           // 0x00D0   (0x0010)  
	TArray<FString>                                    LocalizedFullSearchCategoryArray;                           // 0x00E0   (0x0010)  
	FString                                            SearchText;                                                 // 0x00F0   (0x0010)  
};

/// Struct /Script/Engine.EdGraphSchemaAction_NewNode
/// Size: 0x0008 (0x000100 - 0x000108)
struct FEdGraphSchemaAction_NewNode : FEdGraphSchemaAction
{ 
	UEdGraphNode*                                      NodeTemplate;                                               // 0x0100   (0x0008)  
};

/// Struct /Script/Engine.FullyLoadedPackagesInfo
/// Size: 0x0038 (0x000000 - 0x000038)
struct FFullyLoadedPackagesInfo
{ 
	TEnumAsByte<EFullyLoadPackageType>                 FullyLoadType;                                              // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FString                                            Tag;                                                        // 0x0008   (0x0010)  
	TArray<FName>                                      PackagesToLoad;                                             // 0x0018   (0x0010)  
	TArray<UObject*>                                   LoadedObjects;                                              // 0x0028   (0x0010)  
};

/// Struct /Script/Engine.LevelStreamingStatus
/// Size: 0x0010 (0x000000 - 0x000010)
struct FLevelStreamingStatus
{ 
	FName                                              PackageName;                                                // 0x0000   (0x0008)  
	bool                                               bShouldBeLoaded : 1;                                        // 0x0008:0 (0x0001)  
	bool                                               bShouldBeVisible : 1;                                       // 0x0008:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0009   (0x0003)  MISSED
	uint32_t                                           LODIndex;                                                   // 0x000C   (0x0004)  
};

/// Struct /Script/Engine.NetDriverDefinition
/// Size: 0x001C (0x000000 - 0x00001C)
struct FNetDriverDefinition
{ 
	FName                                              DefName;                                                    // 0x0000   (0x0008)  
	FName                                              DriverClassName;                                            // 0x0008   (0x0008)  
	FName                                              DriverClassNameFallback;                                    // 0x0010   (0x0008)  
	int32_t                                            MaxChannelsOverride;                                        // 0x0018   (0x0004)  
};

/// Struct /Script/Engine.IrisNetDriverConfig
/// Size: 0x0028 (0x000000 - 0x000028)
struct FIrisNetDriverConfig
{ 
	FName                                              NetDriverDefinition;                                        // 0x0000   (0x0008)  
	FName                                              NetDriverName;                                              // 0x0008   (0x0008)  
	FString                                            NetDriverWildcardName;                                      // 0x0010   (0x0010)  
	bool                                               bEnableIris;                                                // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/Engine.NamedNetDriver
/// Size: 0x0010 (0x000000 - 0x000010)
struct FNamedNetDriver
{ 
	UNetDriver*                                        NetDriver;                                                  // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0008   (0x0008)  MISSED
};

/// Struct /Script/Engine.WorldContext
/// Size: 0x02C8 (0x000000 - 0x0002C8)
struct FWorldContext
{ 
	unsigned char                                      UnknownData00_2[0xC0];                                      // 0x0000   (0x00C0)  MISSED
	FURL                                               LastURL;                                                    // 0x00C0   (0x0068)  
	FURL                                               LastRemoteURL;                                              // 0x0128   (0x0068)  
	UPendingNetGame*                                   PendingNetGame;                                             // 0x0190   (0x0008)  
	TArray<FFullyLoadedPackagesInfo>                   PackagesToFullyLoad;                                        // 0x0198   (0x0010)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x01A8   (0x0010)  MISSED
	TArray<ULevel*>                                    LoadedLevelsForPendingMapChange;                            // 0x01B8   (0x0010)  
	unsigned char                                      UnknownData02_5[0x18];                                      // 0x01C8   (0x0018)  MISSED
	TArray<UObjectReferencer*>                         ObjectReferencers;                                          // 0x01E0   (0x0010)  
	TArray<FLevelStreamingStatus>                      PendingLevelStreamingStatusUpdates;                         // 0x01F0   (0x0010)  
	UGameViewportClient*                               GameViewport;                                               // 0x0200   (0x0008)  
	UGameInstance*                                     OwningGameInstance;                                         // 0x0208   (0x0008)  
	TArray<FNamedNetDriver>                            ActiveNetDrivers;                                           // 0x0210   (0x0010)  
	unsigned char                                      UnknownData03_6[0xA8];                                      // 0x0220   (0x00A8)  MISSED
};

/// Struct /Script/Engine.URL
/// Size: 0x0068 (0x000000 - 0x000068)
struct FURL
{ 
	FString                                            Protocol;                                                   // 0x0000   (0x0010)  
	FString                                            Host;                                                       // 0x0010   (0x0010)  
	int32_t                                            Port;                                                       // 0x0020   (0x0004)  
	int32_t                                            Valid;                                                      // 0x0024   (0x0004)  
	FString                                            Map;                                                        // 0x0028   (0x0010)  
	FString                                            RedirectURL;                                                // 0x0038   (0x0010)  
	TArray<FString>                                    Op;                                                         // 0x0048   (0x0010)  
	FString                                            Portal;                                                     // 0x0058   (0x0010)  
};

/// Struct /Script/Engine.StatColorMapEntry
/// Size: 0x0008 (0x000000 - 0x000008)
struct FStatColorMapEntry
{ 
	float                                              In;                                                         // 0x0000   (0x0004)  
	FColor                                             Out;                                                        // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.StatColorMapping
/// Size: 0x0028 (0x000000 - 0x000028)
struct FStatColorMapping
{ 
	FString                                            StatName;                                                   // 0x0000   (0x0010)  
	TArray<FStatColorMapEntry>                         ColorMap;                                                   // 0x0010   (0x0010)  
	bool                                               DisableBlend : 1;                                           // 0x0020:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/Engine.DropNoteInfo
/// Size: 0x0040 (0x000000 - 0x000040)
struct FDropNoteInfo
{ 
	FVector                                            Location;                                                   // 0x0000   (0x0018)  
	FRotator                                           Rotation;                                                   // 0x0018   (0x0018)  
	FString                                            Comment;                                                    // 0x0030   (0x0010)  
};

/// Struct /Script/Engine.ScreenMessageString
/// Size: 0x0038 (0x000000 - 0x000038)
struct FScreenMessageString
{ 
	uint64_t                                           Key;                                                        // 0x0000   (0x0008)  
	FString                                            ScreenMessage;                                              // 0x0008   (0x0010)  
	FColor                                             DisplayColor;                                               // 0x0018   (0x0004)  
	float                                              TimeToDisplay;                                              // 0x001C   (0x0004)  
	float                                              CurrentTimeDisplayed;                                       // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0024   (0x0004)  MISSED
	FVector2D                                          TextScale;                                                  // 0x0028   (0x0010)  
};

/// Struct /Script/Engine.GameNameRedirect
/// Size: 0x0010 (0x000000 - 0x000010)
struct FGameNameRedirect
{ 
	FName                                              OldGameName;                                                // 0x0000   (0x0008)  
	FName                                              NewGameName;                                                // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.ClassRedirect
/// Size: 0x003C (0x000000 - 0x00003C)
struct FClassRedirect
{ 
	FName                                              ObjectName;                                                 // 0x0000   (0x0008)  
	FName                                              OldClassName;                                               // 0x0008   (0x0008)  
	FName                                              NewClassName;                                               // 0x0010   (0x0008)  
	FName                                              OldSubobjName;                                              // 0x0018   (0x0008)  
	FName                                              NewSubobjName;                                              // 0x0020   (0x0008)  
	FName                                              NewClassClass;                                              // 0x0028   (0x0008)  
	FName                                              NewClassPackage;                                            // 0x0030   (0x0008)  
	bool                                               InstanceOnly;                                               // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0039   (0x0003)  MISSED
};

/// Struct /Script/Engine.StructRedirect
/// Size: 0x0010 (0x000000 - 0x000010)
struct FStructRedirect
{ 
	FName                                              OldStructName;                                              // 0x0000   (0x0008)  
	FName                                              NewStructName;                                              // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.PluginRedirect
/// Size: 0x0020 (0x000000 - 0x000020)
struct FPluginRedirect
{ 
	FString                                            OldPluginName;                                              // 0x0000   (0x0010)  
	FString                                            NewPluginName;                                              // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.TickPrerequisite
/// Size: 0x0010 (0x000000 - 0x000010)
struct FTickPrerequisite
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/Engine.ExposureSettings
/// Size: 0x0008 (0x000000 - 0x000008)
struct FExposureSettings
{ 
	float                                              FixedEV100;                                                 // 0x0000   (0x0004)  
	bool                                               bFixed;                                                     // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0005   (0x0003)  MISSED
};

/// Struct /Script/Engine.MaterialShadingModelField
/// Size: 0x0002 (0x000000 - 0x000002)
struct FMaterialShadingModelField
{ 
	uint16_t                                           ShadingModelField;                                          // 0x0000   (0x0002)  
};

/// Struct /Script/Engine.StrataMaterialInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FStrataMaterialInfo
{ 
	uint16_t                                           ShadingModelField;                                          // 0x0000   (0x0002)  
	char                                               bHasShadingModelFromExpression;                             // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0003   (0x0001)  MISSED
	uint32_t                                           ConnectedProperties;                                        // 0x0004   (0x0004)  
	TArray<USubsurfaceProfile*>                        SubsurfaceProfiles;                                         // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.RigidBodyErrorCorrection
/// Size: 0x0034 (0x000000 - 0x000034)
struct FRigidBodyErrorCorrection
{ 
	float                                              PingExtrapolation;                                          // 0x0000   (0x0004)  
	float                                              PingLimit;                                                  // 0x0004   (0x0004)  
	float                                              ErrorPerLinearDifference;                                   // 0x0008   (0x0004)  
	float                                              ErrorPerAngularDifference;                                  // 0x000C   (0x0004)  
	float                                              MaxRestoredStateError;                                      // 0x0010   (0x0004)  
	float                                              MaxLinearHardSnapDistance;                                  // 0x0014   (0x0004)  
	float                                              PositionLerp;                                               // 0x0018   (0x0004)  
	float                                              AngleLerp;                                                  // 0x001C   (0x0004)  
	float                                              LinearVelocityCoefficient;                                  // 0x0020   (0x0004)  
	float                                              AngularVelocityCoefficient;                                 // 0x0024   (0x0004)  
	float                                              ErrorAccumulationSeconds;                                   // 0x0028   (0x0004)  
	float                                              ErrorAccumulationDistanceSq;                                // 0x002C   (0x0004)  
	float                                              ErrorAccumulationSimilarity;                                // 0x0030   (0x0004)  
};

/// Struct /Script/Engine.RigidBodyContactInfo
/// Size: 0x0048 (0x000000 - 0x000048)
struct FRigidBodyContactInfo
{ 
	FVector                                            ContactPosition;                                            // 0x0000   (0x0018)  
	FVector                                            ContactNormal;                                              // 0x0018   (0x0018)  
	float                                              ContactPenetration;                                         // 0x0030   (0x0004)  
	bool                                               bContactProbe;                                              // 0x0034   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0035   (0x0003)  MISSED
	UPhysicalMaterial*                                 PhysMaterial;                                               // 0x0038   (0x0010)  
};

/// Struct /Script/Engine.CollisionImpactData
/// Size: 0x0048 (0x000000 - 0x000048)
struct FCollisionImpactData
{ 
	TArray<FRigidBodyContactInfo>                      ContactInfos;                                               // 0x0000   (0x0010)  
	FVector                                            TotalNormalImpulse;                                         // 0x0010   (0x0018)  
	FVector                                            TotalFrictionImpulse;                                       // 0x0028   (0x0018)  
	bool                                               bIsVelocityDeltaUnderThreshold;                             // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0041   (0x0007)  MISSED
};

/// Struct /Script/Engine.FractureEffect
/// Size: 0x0010 (0x000000 - 0x000010)
struct FFractureEffect
{ 
	UParticleSystem*                                   ParticleSystem;                                             // 0x0000   (0x0008)  
	USoundBase*                                        Sound;                                                      // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.BasedPosition
/// Size: 0x0068 (0x000000 - 0x000068)
struct FBasedPosition
{ 
	AActor*                                            Base;                                                       // 0x0000   (0x0008)  
	FVector                                            Position;                                                   // 0x0008   (0x0018)  
	FVector                                            CachedBaseLocation;                                         // 0x0020   (0x0018)  
	FRotator                                           CachedBaseRotation;                                         // 0x0038   (0x0018)  
	FVector                                            CachedTransPosition;                                        // 0x0050   (0x0018)  
};

/// Struct /Script/Engine.LightmassLightSettings
/// Size: 0x000C (0x000000 - 0x00000C)
struct FLightmassLightSettings
{ 
	float                                              IndirectLightingSaturation;                                 // 0x0000   (0x0004)  
	float                                              ShadowExponent;                                             // 0x0004   (0x0004)  
	bool                                               bUseAreaShadowsForStationaryLight;                          // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0009   (0x0003)  MISSED
};

/// Struct /Script/Engine.LightmassPointLightSettings
/// Size: 0x0000 (0x00000C - 0x00000C)
struct FLightmassPointLightSettings : FLightmassLightSettings
{ 
};

/// Struct /Script/Engine.LightmassDirectionalLightSettings
/// Size: 0x0004 (0x00000C - 0x000010)
struct FLightmassDirectionalLightSettings : FLightmassLightSettings
{ 
	float                                              LightSourceAngle;                                           // 0x000C   (0x0004)  
};

/// Struct /Script/Engine.LightmassPrimitiveSettings
/// Size: 0x0018 (0x000000 - 0x000018)
struct FLightmassPrimitiveSettings
{ 
	bool                                               bUseTwoSidedLighting : 1;                                   // 0x0000:0 (0x0001)  
	bool                                               bShadowIndirectOnly : 1;                                    // 0x0000:1 (0x0001)  
	bool                                               bUseEmissiveForStaticLighting : 1;                          // 0x0000:2 (0x0001)  
	bool                                               bUseVertexNormalForHemisphereGather : 1;                    // 0x0000:3 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              EmissiveLightFalloffExponent;                               // 0x0004   (0x0004)  
	float                                              EmissiveLightExplicitInfluenceRadius;                       // 0x0008   (0x0004)  
	float                                              EmissiveBoost;                                              // 0x000C   (0x0004)  
	float                                              DiffuseBoost;                                               // 0x0010   (0x0004)  
	float                                              FullyOccludedSamplesFraction;                               // 0x0014   (0x0004)  
};

/// Struct /Script/Engine.LightmassDebugOptions
/// Size: 0x0010 (0x000000 - 0x000010)
struct FLightmassDebugOptions
{ 
	bool                                               bDebugMode : 1;                                             // 0x0000:0 (0x0001)  
	bool                                               bStatsEnabled : 1;                                          // 0x0000:1 (0x0001)  
	bool                                               bGatherBSPSurfacesAcrossComponents : 1;                     // 0x0000:2 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              CoplanarTolerance;                                          // 0x0004   (0x0004)  
	bool                                               bUseImmediateImport : 1;                                    // 0x0008:0 (0x0001)  
	bool                                               bImmediateProcessMappings : 1;                              // 0x0008:1 (0x0001)  
	bool                                               bSortMappings : 1;                                          // 0x0008:2 (0x0001)  
	bool                                               bDumpBinaryFiles : 1;                                       // 0x0008:3 (0x0001)  
	bool                                               bDebugMaterials : 1;                                        // 0x0008:4 (0x0001)  
	bool                                               bPadMappings : 1;                                           // 0x0008:5 (0x0001)  
	bool                                               bDebugPaddings : 1;                                         // 0x0008:6 (0x0001)  
	bool                                               bOnlyCalcDebugTexelMappings : 1;                            // 0x0008:7 (0x0001)  
	bool                                               bUseRandomColors : 1;                                       // 0x0009:0 (0x0001)  
	bool                                               bColorBordersGreen : 1;                                     // 0x0009:1 (0x0001)  
	bool                                               bColorByExecutionTime : 1;                                  // 0x0009:2 (0x0001)  
	unsigned char                                      UnknownData01_4[0x2];                                       // 0x000A   (0x0002)  MISSED
	float                                              ExecutionTimeDivisor;                                       // 0x000C   (0x0004)  
};

/// Struct /Script/Engine.SwarmDebugOptions
/// Size: 0x0004 (0x000000 - 0x000004)
struct FSwarmDebugOptions
{ 
	bool                                               bDistributionEnabled : 1;                                   // 0x0000:0 (0x0001)  
	bool                                               bForceContentExport : 1;                                    // 0x0000:1 (0x0001)  
	bool                                               bInitialized : 1;                                           // 0x0000:2 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
};

/// Struct /Script/Engine.MTDResult
/// Size: 0x0020 (0x000000 - 0x000020)
struct FMTDResult
{ 
	FVector                                            Direction;                                                  // 0x0000   (0x0018)  
	float                                              Distance;                                                   // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/Engine.AnimSlotDesc
/// Size: 0x000C (0x000000 - 0x00000C)
struct FAnimSlotDesc
{ 
	FName                                              SlotName;                                                   // 0x0000   (0x0008)  
	int32_t                                            NumChannels;                                                // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.AnimUpdateRateParameters
/// Size: 0x0088 (0x000000 - 0x000088)
struct FAnimUpdateRateParameters
{ 
	unsigned char                                      UnknownData00_2[0x1];                                       // 0x0000   (0x0001)  MISSED
	EUpdateRateShiftBucket                             ShiftBucket;                                                // 0x0001   (0x0001)  
	bool                                               bInterpolateSkippedFrames : 1;                              // 0x0002:0 (0x0001)  
	bool                                               bShouldUseLodMap : 1;                                       // 0x0002:1 (0x0001)  
	bool                                               bShouldUseMinLod : 1;                                       // 0x0002:2 (0x0001)  
	bool                                               bSkipUpdate : 1;                                            // 0x0002:3 (0x0001)  
	bool                                               bSkipEvaluation : 1;                                        // 0x0002:4 (0x0001)  
	unsigned char                                      UnknownData01_4[0x1];                                       // 0x0003   (0x0001)  MISSED
	int32_t                                            UpdateRate;                                                 // 0x0004   (0x0004)  
	int32_t                                            EvaluationRate;                                             // 0x0008   (0x0004)  
	float                                              TickedPoseOffestTime;                                       // 0x000C   (0x0004)  
	float                                              AdditionalTime;                                             // 0x0010   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	int32_t                                            BaseNonRenderedUpdateRate;                                  // 0x0018   (0x0004)  
	int32_t                                            MaxEvalRateForInterpolation;                                // 0x001C   (0x0004)  
	TArray<float>                                      BaseVisibleDistanceFactorThesholds;                         // 0x0020   (0x0010)  
	TMap<int32_t, int32_t>                             LODToFrameSkipMap;                                          // 0x0030   (0x0050)  
	int32_t                                            SkippedUpdateFrames;                                        // 0x0080   (0x0004)  
	int32_t                                            SkippedEvalFrames;                                          // 0x0084   (0x0004)  
};

/// Struct /Script/Engine.POV
/// Size: 0x0038 (0x000000 - 0x000038)
struct FPOV
{ 
	FVector                                            Location;                                                   // 0x0000   (0x0018)  
	FRotator                                           Rotation;                                                   // 0x0018   (0x0018)  
	float                                              FOV;                                                        // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/Engine.MeshBuildSettings
/// Size: 0x0048 (0x000000 - 0x000048)
struct FMeshBuildSettings
{ 
	bool                                               bUseMikkTSpace : 1;                                         // 0x0000:0 (0x0001)  
	bool                                               bRecomputeNormals : 1;                                      // 0x0000:1 (0x0001)  
	bool                                               bRecomputeTangents : 1;                                     // 0x0000:2 (0x0001)  
	bool                                               bComputeWeightedNormals : 1;                                // 0x0000:3 (0x0001)  
	bool                                               bRemoveDegenerates : 1;                                     // 0x0000:4 (0x0001)  
	bool                                               bBuildReversedIndexBuffer : 1;                              // 0x0000:5 (0x0001)  
	bool                                               bUseHighPrecisionTangentBasis : 1;                          // 0x0000:6 (0x0001)  
	bool                                               bUseFullPrecisionUVs : 1;                                   // 0x0000:7 (0x0001)  
	bool                                               bUseBackwardsCompatibleF16TruncUVs : 1;                     // 0x0001:0 (0x0001)  
	bool                                               bGenerateLightmapUVs : 1;                                   // 0x0001:1 (0x0001)  
	bool                                               bGenerateDistanceFieldAsIfTwoSided : 1;                     // 0x0001:2 (0x0001)  
	bool                                               bSupportFaceRemap : 1;                                      // 0x0001:3 (0x0001)  
	unsigned char                                      UnknownData00_4[0x2];                                       // 0x0002   (0x0002)  MISSED
	int32_t                                            MinLightmapResolution;                                      // 0x0004   (0x0004)  
	int32_t                                            SrcLightmapIndex;                                           // 0x0008   (0x0004)  
	int32_t                                            DstLightmapIndex;                                           // 0x000C   (0x0004)  
	float                                              BuildScale;                                                 // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FVector                                            BuildScale3D;                                               // 0x0018   (0x0018)  
	float                                              DistanceFieldResolutionScale;                               // 0x0030   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	UStaticMesh*                                       DistanceFieldReplacementMesh;                               // 0x0038   (0x0008)  
	int32_t                                            MaxLumenMeshCards;                                          // 0x0040   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Struct /Script/Engine.SkeletalMeshBuildSettings
/// Size: 0x0014 (0x000000 - 0x000014)
struct FSkeletalMeshBuildSettings
{ 
	bool                                               bRecomputeNormals : 1;                                      // 0x0000:0 (0x0001)  
	bool                                               bRecomputeTangents : 1;                                     // 0x0000:1 (0x0001)  
	bool                                               bUseMikkTSpace : 1;                                         // 0x0000:2 (0x0001)  
	bool                                               bComputeWeightedNormals : 1;                                // 0x0000:3 (0x0001)  
	bool                                               bRemoveDegenerates : 1;                                     // 0x0000:4 (0x0001)  
	bool                                               bUseHighPrecisionTangentBasis : 1;                          // 0x0000:5 (0x0001)  
	bool                                               bUseFullPrecisionUVs : 1;                                   // 0x0000:6 (0x0001)  
	bool                                               bUseBackwardsCompatibleF16TruncUVs : 1;                     // 0x0000:7 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              ThresholdPosition;                                          // 0x0004   (0x0004)  
	float                                              ThresholdTangentNormal;                                     // 0x0008   (0x0004)  
	float                                              ThresholdUV;                                                // 0x000C   (0x0004)  
	float                                              MorphThresholdPosition;                                     // 0x0010   (0x0004)  
};

/// Struct /Script/Engine.MeshNaniteSettings
/// Size: 0x001C (0x000000 - 0x00001C)
struct FMeshNaniteSettings
{ 
	bool                                               bEnabled : 1;                                               // 0x0000:0 (0x0001)  
	bool                                               bPreserveArea : 1;                                          // 0x0000:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            PositionPrecision;                                          // 0x0004   (0x0004)  
	uint32_t                                           TargetMinimumResidencyInKB;                                 // 0x0008   (0x0004)  
	float                                              KeepPercentTriangles;                                       // 0x000C   (0x0004)  
	float                                              TrimRelativeError;                                          // 0x0010   (0x0004)  
	float                                              FallbackPercentTriangles;                                   // 0x0014   (0x0004)  
	float                                              FallbackRelativeError;                                      // 0x0018   (0x0004)  
};

/// Struct /Script/Engine.ConstrainComponentPropName
/// Size: 0x0008 (0x000000 - 0x000008)
struct FConstrainComponentPropName
{ 
	FName                                              ComponentName;                                              // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.CollectionReference
/// Size: 0x0008 (0x000000 - 0x000008)
struct FCollectionReference
{ 
	FName                                              CollectionName;                                             // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.Redirector
/// Size: 0x0010 (0x000000 - 0x000010)
struct FRedirector
{ 
	FName                                              OldName;                                                    // 0x0000   (0x0008)  
	FName                                              NewName;                                                    // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.DepthFieldGlowInfo
/// Size: 0x0038 (0x000000 - 0x000038)
struct FDepthFieldGlowInfo
{ 
	bool                                               bEnableGlow : 1;                                            // 0x0000:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0001   (0x0003)  MISSED
	FLinearColor                                       GlowColor;                                                  // 0x0004   (0x0010)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FVector2D                                          GlowOuterRadius;                                            // 0x0018   (0x0010)  
	FVector2D                                          GlowInnerRadius;                                            // 0x0028   (0x0010)  
};

/// Struct /Script/Engine.FontRenderInfo
/// Size: 0x0040 (0x000000 - 0x000040)
struct FFontRenderInfo
{ 
	bool                                               bClipText : 1;                                              // 0x0000:0 (0x0001)  
	bool                                               bEnableShadow : 1;                                          // 0x0000:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0001   (0x0007)  MISSED
	FDepthFieldGlowInfo                                GlowInfo;                                                   // 0x0008   (0x0038)  
};

/// Struct /Script/Engine.CanvasUVTri
/// Size: 0x0090 (0x000000 - 0x000090)
struct FCanvasUVTri
{ 
	FVector2D                                          V0_Pos;                                                     // 0x0000   (0x0010)  
	FVector2D                                          V0_UV;                                                      // 0x0010   (0x0010)  
	FLinearColor                                       V0_Color;                                                   // 0x0020   (0x0010)  
	FVector2D                                          V1_Pos;                                                     // 0x0030   (0x0010)  
	FVector2D                                          V1_UV;                                                      // 0x0040   (0x0010)  
	FLinearColor                                       V1_Color;                                                   // 0x0050   (0x0010)  
	FVector2D                                          V2_Pos;                                                     // 0x0060   (0x0010)  
	FVector2D                                          V2_UV;                                                      // 0x0070   (0x0010)  
	FLinearColor                                       V2_Color;                                                   // 0x0080   (0x0010)  
};

/// Struct /Script/Engine.ExponentialHeightFogData
/// Size: 0x000C (0x000000 - 0x00000C)
struct FExponentialHeightFogData
{ 
	float                                              FogDensity;                                                 // 0x0000   (0x0004)  
	float                                              FogHeightFalloff;                                           // 0x0004   (0x0004)  
	float                                              FogHeightOffset;                                            // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.FontImportOptionsData
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FFontImportOptionsData
{ 
	FString                                            FontName;                                                   // 0x0000   (0x0010)  
	float                                              Height;                                                     // 0x0010   (0x0004)  
	bool                                               bEnableAntialiasing : 1;                                    // 0x0014:0 (0x0001)  
	bool                                               bEnableBold : 1;                                            // 0x0014:1 (0x0001)  
	bool                                               bEnableItalic : 1;                                          // 0x0014:2 (0x0001)  
	bool                                               bEnableUnderline : 1;                                       // 0x0014:3 (0x0001)  
	bool                                               bAlphaOnly : 1;                                             // 0x0014:4 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0015   (0x0003)  MISSED
	TEnumAsByte<EFontImportCharacterSet>               CharacterSet;                                               // 0x0018   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0019   (0x0007)  MISSED
	FString                                            Chars;                                                      // 0x0020   (0x0010)  
	FString                                            UnicodeRange;                                               // 0x0030   (0x0010)  
	FString                                            CharsFilePath;                                              // 0x0040   (0x0010)  
	FString                                            CharsFileWildcard;                                          // 0x0050   (0x0010)  
	bool                                               bCreatePrintableOnly : 1;                                   // 0x0060:0 (0x0001)  
	bool                                               bIncludeASCIIRange : 1;                                     // 0x0060:1 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x0061   (0x0003)  MISSED
	FLinearColor                                       ForegroundColor;                                            // 0x0064   (0x0010)  
	bool                                               bEnableDropShadow : 1;                                      // 0x0074:0 (0x0001)  
	unsigned char                                      UnknownData03_4[0x3];                                       // 0x0075   (0x0003)  MISSED
	int32_t                                            TexturePageWidth;                                           // 0x0078   (0x0004)  
	int32_t                                            TexturePageMaxHeight;                                       // 0x007C   (0x0004)  
	int32_t                                            XPadding;                                                   // 0x0080   (0x0004)  
	int32_t                                            YPadding;                                                   // 0x0084   (0x0004)  
	int32_t                                            ExtendBoxTop;                                               // 0x0088   (0x0004)  
	int32_t                                            ExtendBoxBottom;                                            // 0x008C   (0x0004)  
	int32_t                                            ExtendBoxRight;                                             // 0x0090   (0x0004)  
	int32_t                                            ExtendBoxLeft;                                              // 0x0094   (0x0004)  
	bool                                               bEnableLegacyMode : 1;                                      // 0x0098:0 (0x0001)  
	unsigned char                                      UnknownData04_4[0x3];                                       // 0x0099   (0x0003)  MISSED
	int32_t                                            Kerning;                                                    // 0x009C   (0x0004)  
	bool                                               bUseDistanceFieldAlpha : 1;                                 // 0x00A0:0 (0x0001)  
	unsigned char                                      UnknownData05_4[0x3];                                       // 0x00A1   (0x0003)  MISSED
	int32_t                                            DistanceFieldScaleFactor;                                   // 0x00A4   (0x0004)  
	float                                              DistanceFieldScanRadiusScale;                               // 0x00A8   (0x0004)  
	unsigned char                                      UnknownData06_6[0x4];                                       // 0x00AC   (0x0004)  MISSED
};

/// Struct /Script/Engine.BaseAttenuationSettings
/// Size: 0x00C0 (0x000000 - 0x0000C0)
struct FBaseAttenuationSettings
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	EAttenuationDistanceModel                          DistanceAlgorithm;                                          // 0x0008   (0x0001)  
	TEnumAsByte<EAttenuationShape>                     AttenuationShape;                                           // 0x0009   (0x0001)  
	ENaturalSoundFalloffMode                           FalloffMode;                                                // 0x000A   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x000B   (0x0001)  MISSED
	float                                              dBAttenuationAtMax;                                         // 0x000C   (0x0004)  
	FVector                                            AttenuationShapeExtents;                                    // 0x0010   (0x0018)  
	float                                              ConeOffset;                                                 // 0x0028   (0x0004)  
	float                                              FalloffDistance;                                            // 0x002C   (0x0004)  
	float                                              ConeSphereRadius;                                           // 0x0030   (0x0004)  
	float                                              ConeSphereFalloffDistance;                                  // 0x0034   (0x0004)  
	FRuntimeFloatCurve                                 CustomAttenuationCurve;                                     // 0x0038   (0x0088)  
};

/// Struct /Script/Engine.ForceFeedbackAttenuationSettings
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
struct FForceFeedbackAttenuationSettings : FBaseAttenuationSettings
{ 
};

/// Struct /Script/Engine.PredictProjectilePathParams
/// Size: 0x0078 (0x000000 - 0x000078)
struct FPredictProjectilePathParams
{ 
	FVector                                            StartLocation;                                              // 0x0000   (0x0018)  
	FVector                                            LaunchVelocity;                                             // 0x0018   (0x0018)  
	bool                                               bTraceWithCollision;                                        // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	float                                              ProjectileRadius;                                           // 0x0034   (0x0004)  
	float                                              MaxSimTime;                                                 // 0x0038   (0x0004)  
	bool                                               bTraceWithChannel;                                          // 0x003C   (0x0001)  
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                               // 0x003D   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x003E   (0x0002)  MISSED
	TArray<TEnumAsByte>                                ObjectTypes;                                                // 0x0040   (0x0010)  
	TArray<AActor*>                                    ActorsToIgnore;                                             // 0x0050   (0x0010)  
	float                                              SimFrequency;                                               // 0x0060   (0x0004)  
	float                                              OverrideGravityZ;                                           // 0x0064   (0x0004)  
	TEnumAsByte<EDrawDebugTrace>                       DrawDebugType;                                              // 0x0068   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0069   (0x0003)  MISSED
	float                                              DrawDebugTime;                                              // 0x006C   (0x0004)  
	bool                                               bTraceComplex;                                              // 0x0070   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0071   (0x0007)  MISSED
};

/// Struct /Script/Engine.PredictProjectilePathPointData
/// Size: 0x0038 (0x000000 - 0x000038)
struct FPredictProjectilePathPointData
{ 
	FVector                                            Location;                                                   // 0x0000   (0x0018)  
	FVector                                            Velocity;                                                   // 0x0018   (0x0018)  
	float                                              Time;                                                       // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/Engine.PredictProjectilePathResult
/// Size: 0x0130 (0x000000 - 0x000130)
struct FPredictProjectilePathResult
{ 
	TArray<FPredictProjectilePathPointData>            PathData;                                                   // 0x0000   (0x0010)  
	FPredictProjectilePathPointData                    LastTraceDestination;                                       // 0x0010   (0x0038)  
	FHitResult                                         HitResult;                                                  // 0x0048   (0x00E8)  
};

/// Struct /Script/Engine.ActiveHapticFeedbackEffect
/// Size: 0x0048 (0x000000 - 0x000048)
struct FActiveHapticFeedbackEffect
{ 
	UHapticFeedbackEffect_Base*                        HapticEffect;                                               // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x40];                                      // 0x0008   (0x0040)  MISSED
};

/// Struct /Script/Engine.HapticFeedbackDetails_Curve
/// Size: 0x0110 (0x000000 - 0x000110)
struct FHapticFeedbackDetails_Curve
{ 
	FRuntimeFloatCurve                                 Frequency;                                                  // 0x0000   (0x0088)  
	FRuntimeFloatCurve                                 Amplitude;                                                  // 0x0088   (0x0088)  
};

/// Struct /Script/Engine.ClusterNode_DEPRECATED
/// Size: 0x0028 (0x000000 - 0x000028)
struct FClusterNode_DEPRECATED
{ 
	FVector3f                                          BoundMin;                                                   // 0x0000   (0x000C)  
	int32_t                                            FirstChild;                                                 // 0x000C   (0x0004)  
	FVector3f                                          BoundMax;                                                   // 0x0010   (0x000C)  
	int32_t                                            LastChild;                                                  // 0x001C   (0x0004)  
	int32_t                                            FirstInstance;                                              // 0x0020   (0x0004)  
	int32_t                                            LastInstance;                                               // 0x0024   (0x0004)  
};

/// Struct /Script/Engine.ClusterNode
/// Size: 0x0040 (0x000000 - 0x000040)
struct FClusterNode
{ 
	FVector3f                                          BoundMin;                                                   // 0x0000   (0x000C)  
	int32_t                                            FirstChild;                                                 // 0x000C   (0x0004)  
	FVector3f                                          BoundMax;                                                   // 0x0010   (0x000C)  
	int32_t                                            LastChild;                                                  // 0x001C   (0x0004)  
	int32_t                                            FirstInstance;                                              // 0x0020   (0x0004)  
	int32_t                                            LastInstance;                                               // 0x0024   (0x0004)  
	FVector3f                                          MinInstanceScale;                                           // 0x0028   (0x000C)  
	FVector3f                                          MaxInstanceScale;                                           // 0x0034   (0x000C)  
};

/// Struct /Script/Engine.HLODSubActorDesc
/// Size: 0x0001 (0x000000 - 0x000001)
struct FHLODSubActorDesc
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.HLODSubActor
/// Size: 0x0001 (0x000000 - 0x000001)
struct FHLODSubActor
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.InstancedStaticMeshInstanceData
/// Size: 0x0080 (0x000000 - 0x000080)
struct FInstancedStaticMeshInstanceData
{ 
	FMatrix                                            Transform;                                                  // 0x0000   (0x0080)  
};

/// Struct /Script/Engine.InstancedStaticMeshMappingInfo
/// Size: 0x0008 (0x000000 - 0x000008)
struct FInstancedStaticMeshMappingInfo
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/Engine.InstancedStaticMeshRandomSeed
/// Size: 0x0008 (0x000000 - 0x000008)
struct FInstancedStaticMeshRandomSeed
{ 
	int32_t                                            StartInstanceIndex;                                         // 0x0000   (0x0004)  
	int32_t                                            RandomSeed;                                                 // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.InstancedStaticMeshLightMapInstanceData
/// Size: 0x0070 (0x000000 - 0x000070)
struct FInstancedStaticMeshLightMapInstanceData
{ 
	FTransform                                         Transform;                                                  // 0x0000   (0x0060)  
	TArray<FGuid>                                      MapBuildDataIds;                                            // 0x0060   (0x0010)  
};

/// Struct /Script/Engine.InstancedStaticMeshComponentInstanceData
/// Size: 0x00D8 (0x0000B8 - 0x000190)
struct FInstancedStaticMeshComponentInstanceData : FSceneComponentInstanceData
{ 
	UStaticMesh*                                       StaticMesh;                                                 // 0x00B8   (0x0008)  
	FInstancedStaticMeshLightMapInstanceData           CachedStaticLighting;                                       // 0x00C0   (0x0070)  
	TArray<FInstancedStaticMeshInstanceData>           PerInstanceSMData;                                          // 0x0130   (0x0010)  
	TArray<float>                                      PerInstanceSMCustomData;                                    // 0x0140   (0x0010)  
	unsigned char                                      UnknownData00_5[0x20];                                      // 0x0150   (0x0020)  MISSED
	int32_t                                            InstancingRandomSeed;                                       // 0x0170   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0174   (0x0004)  MISSED
	TArray<FInstancedStaticMeshRandomSeed>             AdditionalRandomSeeds;                                      // 0x0178   (0x0010)  
	bool                                               bHasPerInstanceHitProxies;                                  // 0x0188   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0189   (0x0007)  MISSED
};

/// Struct /Script/Engine.UniqueNetIdReplNetSerializerStringStruct
/// Size: 0x0010 (0x000000 - 0x000010)
struct FUniqueNetIdReplNetSerializerStringStruct
{ 
	FString                                            String;                                                     // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.UniqueNetIdReplNetSerializerNameStruct
/// Size: 0x0008 (0x000000 - 0x000008)
struct FUniqueNetIdReplNetSerializerNameStruct
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.ISMClientHandle
/// Size: 0x0014 (0x000000 - 0x000014)
struct FISMClientHandle
{ 
	int32_t                                            Index;                                                      // 0x0000   (0x0004)  
	FGuid                                              Guid;                                                       // 0x0004   (0x0010)  
};

/// Struct /Script/Engine.ISMClientInstanceManagerData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FISMClientInstanceManagerData
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/Engine.NewLevelInstanceParams
/// Size: 0x0048 (0x000000 - 0x000048)
struct FNewLevelInstanceParams
{ 
	ELevelInstanceCreationType                         Type;                                                       // 0x0000   (0x0001)  
	ELevelInstancePivotType                            PivotType;                                                  // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	AActor*                                            PivotActor;                                                 // 0x0008   (0x0008)  
	bool                                               bAlwaysShowDialog;                                          // 0x0010   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0011   (0x0007)  MISSED
	UWorld*                                            TemplateWorld;                                              // 0x0018   (0x0008)  
	FString                                            LevelPackageName;                                           // 0x0020   (0x0010)  
	bool                                               bPromptForSave;                                             // 0x0030   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	UClass*                                            LevelInstanceClass;                                         // 0x0038   (0x0008)  
	bool                                               bExternalActors;                                            // 0x0040   (0x0001)  
	bool                                               bForceExternalActors;                                       // 0x0041   (0x0001)  
	bool                                               bHideCreationType;                                          // 0x0042   (0x0001)  
	unsigned char                                      UnknownData03_6[0x5];                                       // 0x0043   (0x0005)  MISSED
};

/// Struct /Script/Engine.ParameterGroupData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FParameterGroupData
{ 
	FString                                            GroupName;                                                  // 0x0000   (0x0010)  
	int32_t                                            GroupSortPriority;                                          // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/Engine.ExpressionExecOutput
/// Size: 0x0008 (0x000000 - 0x000008)
struct FExpressionExecOutput
{ 
	UMaterialExpression*                               Expression;                                                 // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.MaterialExpressionCollection
/// Size: 0x0030 (0x000000 - 0x000030)
struct FMaterialExpressionCollection
{ 
	TArray<UMaterialExpression*>                       Expressions;                                                // 0x0000   (0x0010)  
	TArray<UMaterialExpressionComment*>                EditorComments;                                             // 0x0010   (0x0010)  
	UMaterialExpressionExecBegin*                      ExpressionExecBegin;                                        // 0x0020   (0x0008)  
	UMaterialExpressionExecEnd*                        ExpressionExecEnd;                                          // 0x0028   (0x0008)  
};

/// Struct /Script/Engine.CustomInput
/// Size: 0x0030 (0x000000 - 0x000030)
struct FCustomInput
{ 
	FName                                              InputName;                                                  // 0x0000   (0x0008)  
	FExpressionInput                                   Input;                                                      // 0x0008   (0x0028)  
};

/// Struct /Script/Engine.CustomOutput
/// Size: 0x000C (0x000000 - 0x00000C)
struct FCustomOutput
{ 
	FName                                              OutputName;                                                 // 0x0000   (0x0008)  
	TEnumAsByte<ECustomMaterialOutputType>             OutputType;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0009   (0x0003)  MISSED
};

/// Struct /Script/Engine.CustomDefine
/// Size: 0x0020 (0x000000 - 0x000020)
struct FCustomDefine
{ 
	FString                                            DefineName;                                                 // 0x0000   (0x0010)  
	FString                                            DefineValue;                                                // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.FunctionExpressionInput
/// Size: 0x0040 (0x000000 - 0x000040)
struct FFunctionExpressionInput
{ 
	UMaterialExpressionFunctionInput*                  ExpressionInput;                                            // 0x0000   (0x0008)  
	FGuid                                              ExpressionInputId;                                          // 0x0008   (0x0010)  
	FExpressionInput                                   Input;                                                      // 0x0018   (0x0028)  
};

/// Struct /Script/Engine.FunctionExpressionOutput
/// Size: 0x0038 (0x000000 - 0x000038)
struct FFunctionExpressionOutput
{ 
	UMaterialExpressionFunctionOutput*                 ExpressionOutput;                                           // 0x0000   (0x0008)  
	FGuid                                              ExpressionOutputId;                                         // 0x0008   (0x0010)  
	FExpressionOutput                                  Output;                                                     // 0x0018   (0x001C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/Engine.CompositeReroute
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCompositeReroute
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	UMaterialExpressionReroute*                        Expression;                                                 // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.MaterialInstanceBasePropertyOverrides
/// Size: 0x0008 (0x000000 - 0x000008)
struct FMaterialInstanceBasePropertyOverrides
{ 
	bool                                               bOverride_OpacityMaskClipValue : 1;                         // 0x0000:0 (0x0001)  
	bool                                               bOverride_BlendMode : 1;                                    // 0x0000:1 (0x0001)  
	bool                                               bOverride_ShadingModel : 1;                                 // 0x0000:2 (0x0001)  
	bool                                               bOverride_DitheredLODTransition : 1;                        // 0x0000:3 (0x0001)  
	bool                                               bOverride_CastDynamicShadowAsMasked : 1;                    // 0x0000:4 (0x0001)  
	bool                                               bOverride_TwoSided : 1;                                     // 0x0000:5 (0x0001)  
	bool                                               bOverride_OutputTranslucentVelocity : 1;                    // 0x0000:6 (0x0001)  
	bool                                               TwoSided : 1;                                               // 0x0000:7 (0x0001)  
	bool                                               DitheredLODTransition : 1;                                  // 0x0001:0 (0x0001)  
	bool                                               bCastDynamicShadowAsMasked : 1;                             // 0x0001:1 (0x0001)  
	bool                                               bOutputTranslucentVelocity : 1;                             // 0x0001:2 (0x0001)  
	TEnumAsByte<EBlendMode>                            BlendMode;                                                  // 0x0002   (0x0001)  
	TEnumAsByte<EMaterialShadingModel>                 ShadingModel;                                               // 0x0003   (0x0001)  
	float                                              OpacityMaskClipValue;                                       // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.LightmassMaterialInterfaceSettings
/// Size: 0x0010 (0x000000 - 0x000010)
struct FLightmassMaterialInterfaceSettings
{ 
	float                                              EmissiveBoost;                                              // 0x0000   (0x0004)  
	float                                              DiffuseBoost;                                               // 0x0004   (0x0004)  
	float                                              ExportResolutionScale;                                      // 0x0008   (0x0004)  
	bool                                               bCastShadowAsMasked : 1;                                    // 0x000C:0 (0x0001)  
	bool                                               bOverrideCastShadowAsMasked : 1;                            // 0x000C:1 (0x0001)  
	bool                                               bOverrideEmissiveBoost : 1;                                 // 0x000C:2 (0x0001)  
	bool                                               bOverrideDiffuseBoost : 1;                                  // 0x000C:3 (0x0001)  
	bool                                               bOverrideExportResolutionScale : 1;                         // 0x000C:4 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
};

/// Struct /Script/Engine.MaterialTextureInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FMaterialTextureInfo
{ 
	float                                              SamplingScale;                                              // 0x0000   (0x0004)  
	int32_t                                            UVChannelIndex;                                             // 0x0004   (0x0004)  
	FName                                              TextureName;                                                // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.MaterialLayersFunctionsEditorOnlyData
/// Size: 0x0070 (0x000000 - 0x000070)
struct FMaterialLayersFunctionsEditorOnlyData
{ 
	TArray<bool>                                       LayerStates;                                                // 0x0000   (0x0010)  
	TArray<FText>                                      LayerNames;                                                 // 0x0010   (0x0010)  
	TArray<bool>                                       RestrictToLayerRelatives;                                   // 0x0020   (0x0010)  
	TArray<bool>                                       RestrictToBlendRelatives;                                   // 0x0030   (0x0010)  
	TArray<FGuid>                                      LayerGuids;                                                 // 0x0040   (0x0010)  
	TArray<EMaterialLayerLinkState>                    LayerLinkStates;                                            // 0x0050   (0x0010)  
	TArray<FGuid>                                      DeletedParentLayerGuids;                                    // 0x0060   (0x0010)  
};

/// Struct /Script/Engine.MaterialLayersFunctionsRuntimeData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FMaterialLayersFunctionsRuntimeData
{ 
	TArray<UMaterialFunctionInterface*>                Layers;                                                     // 0x0000   (0x0010)  
	TArray<UMaterialFunctionInterface*>                Blends;                                                     // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.MaterialLayersFunctions
/// Size: 0x00E0 (0x000020 - 0x000100)
struct FMaterialLayersFunctions : FMaterialLayersFunctionsRuntimeData
{ 
	FMaterialLayersFunctionsEditorOnlyData             EditorOnly;                                                 // 0x0020   (0x0070)  
	TArray<bool>                                       LayerStates;                                                // 0x0090   (0x0010)  
	TArray<FText>                                      LayerNames;                                                 // 0x00A0   (0x0010)  
	TArray<bool>                                       RestrictToLayerRelatives;                                   // 0x00B0   (0x0010)  
	TArray<bool>                                       RestrictToBlendRelatives;                                   // 0x00C0   (0x0010)  
	TArray<FGuid>                                      LayerGuids;                                                 // 0x00D0   (0x0010)  
	TArray<EMaterialLayerLinkState>                    LayerLinkStates;                                            // 0x00E0   (0x0010)  
	TArray<FGuid>                                      DeletedParentLayerGuids;                                    // 0x00F0   (0x0010)  
};

/// Struct /Script/Engine.MaterialProxySettings
/// Size: 0x0094 (0x000000 - 0x000094)
struct FMaterialProxySettings
{ 
	TEnumAsByte<ETextureSizingType>                    TextureSizingType;                                          // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FIntPoint                                          TextureSize;                                                // 0x0004   (0x0008)  
	float                                              TargetTexelDensityPerMeter;                                 // 0x000C   (0x0004)  
	float                                              MeshMaxScreenSizePercent;                                   // 0x0010   (0x0004)  
	float                                              MeshMinDrawDistance;                                        // 0x0014   (0x0004)  
	float                                              GutterSpace;                                                // 0x0018   (0x0004)  
	float                                              MetallicConstant;                                           // 0x001C   (0x0004)  
	float                                              RoughnessConstant;                                          // 0x0020   (0x0004)  
	float                                              AnisotropyConstant;                                         // 0x0024   (0x0004)  
	float                                              SpecularConstant;                                           // 0x0028   (0x0004)  
	float                                              OpacityConstant;                                            // 0x002C   (0x0004)  
	float                                              OpacityMaskConstant;                                        // 0x0030   (0x0004)  
	float                                              AmbientOcclusionConstant;                                   // 0x0034   (0x0004)  
	TEnumAsByte<EMaterialMergeType>                    MaterialMergeType;                                          // 0x0038   (0x0001)  
	TEnumAsByte<EBlendMode>                            BlendMode;                                                  // 0x0039   (0x0001)  
	bool                                               bAllowTwoSidedMaterial : 1;                                 // 0x003A:0 (0x0001)  
	bool                                               bNormalMap : 1;                                             // 0x003A:1 (0x0001)  
	bool                                               bTangentMap : 1;                                            // 0x003A:2 (0x0001)  
	bool                                               bMetallicMap : 1;                                           // 0x003A:3 (0x0001)  
	bool                                               bRoughnessMap : 1;                                          // 0x003A:4 (0x0001)  
	bool                                               bAnisotropyMap : 1;                                         // 0x003A:5 (0x0001)  
	bool                                               bSpecularMap : 1;                                           // 0x003A:6 (0x0001)  
	bool                                               bEmissiveMap : 1;                                           // 0x003A:7 (0x0001)  
	bool                                               bOpacityMap : 1;                                            // 0x003B:0 (0x0001)  
	bool                                               bOpacityMaskMap : 1;                                        // 0x003B:1 (0x0001)  
	bool                                               bAmbientOcclusionMap : 1;                                   // 0x003B:2 (0x0001)  
	FIntPoint                                          DiffuseTextureSize;                                         // 0x003C   (0x0008)  
	FIntPoint                                          NormalTextureSize;                                          // 0x0044   (0x0008)  
	FIntPoint                                          TangentTextureSize;                                         // 0x004C   (0x0008)  
	FIntPoint                                          MetallicTextureSize;                                        // 0x0054   (0x0008)  
	FIntPoint                                          RoughnessTextureSize;                                       // 0x005C   (0x0008)  
	FIntPoint                                          AnisotropyTextureSize;                                      // 0x0064   (0x0008)  
	FIntPoint                                          SpecularTextureSize;                                        // 0x006C   (0x0008)  
	FIntPoint                                          EmissiveTextureSize;                                        // 0x0074   (0x0008)  
	FIntPoint                                          OpacityTextureSize;                                         // 0x007C   (0x0008)  
	FIntPoint                                          OpacityMaskTextureSize;                                     // 0x0084   (0x0008)  
	FIntPoint                                          AmbientOcclusionTextureSize;                                // 0x008C   (0x0008)  
};

/// Struct /Script/Engine.MaterialOverrideNanite
/// Size: 0x0040 (0x000000 - 0x000040)
struct FMaterialOverrideNanite
{ 
	TWeakObjectPtr<UMaterialInterface*>                OverrideMaterialRef;                                        // 0x0000   (0x0030)  
	bool                                               bEnableOverride;                                            // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	UMaterialInterface*                                OverrideMaterial;                                           // 0x0038   (0x0008)  
};

/// Struct /Script/Engine.CollectionParameterBase
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCollectionParameterBase
{ 
	FName                                              ParameterName;                                              // 0x0000   (0x0008)  
	FGuid                                              ID;                                                         // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.CollectionScalarParameter
/// Size: 0x0004 (0x000018 - 0x00001C)
struct FCollectionScalarParameter : FCollectionParameterBase
{ 
	float                                              DefaultValue;                                               // 0x0018   (0x0004)  
};

/// Struct /Script/Engine.CollectionVectorParameter
/// Size: 0x0010 (0x000018 - 0x000028)
struct FCollectionVectorParameter : FCollectionParameterBase
{ 
	FLinearColor                                       DefaultValue;                                               // 0x0018   (0x0010)  
};

/// Struct /Script/Engine.MaterialParameterInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FMaterialParameterInfo
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	TEnumAsByte<EMaterialParameterAssociation>         Association;                                                // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            Index;                                                      // 0x000C   (0x0004)  
};

/// Struct /Script/Engine.ParameterChannelNames
/// Size: 0x0060 (0x000000 - 0x000060)
struct FParameterChannelNames
{ 
	FText                                              R;                                                          // 0x0000   (0x0018)  
	FText                                              G;                                                          // 0x0018   (0x0018)  
	FText                                              B;                                                          // 0x0030   (0x0018)  
	FText                                              A;                                                          // 0x0048   (0x0018)  
};

/// Struct /Script/Engine.StaticComponentMaskValue
/// Size: 0x0004 (0x000000 - 0x000004)
struct FStaticComponentMaskValue
{ 
	bool                                               R;                                                          // 0x0000   (0x0001)  
	bool                                               G;                                                          // 0x0001   (0x0001)  
	bool                                               B;                                                          // 0x0002   (0x0001)  
	bool                                               A;                                                          // 0x0003   (0x0001)  
};

/// Struct /Script/Engine.PurchaseInfo
/// Size: 0x0040 (0x000000 - 0x000040)
struct FPurchaseInfo
{ 
	FString                                            Identifier;                                                 // 0x0000   (0x0010)  
	FString                                            DisplayName;                                                // 0x0010   (0x0010)  
	FString                                            DisplayDescription;                                         // 0x0020   (0x0010)  
	FString                                            DisplayPrice;                                               // 0x0030   (0x0010)  
};

/// Struct /Script/Engine.NavAvoidanceMask
/// Size: 0x0004 (0x000000 - 0x000004)
struct FNavAvoidanceMask
{ 
	bool                                               bGroup0 : 1;                                                // 0x0000:0 (0x0001)  
	bool                                               bGroup1 : 1;                                                // 0x0000:1 (0x0001)  
	bool                                               bGroup2 : 1;                                                // 0x0000:2 (0x0001)  
	bool                                               bGroup3 : 1;                                                // 0x0000:3 (0x0001)  
	bool                                               bGroup4 : 1;                                                // 0x0000:4 (0x0001)  
	bool                                               bGroup5 : 1;                                                // 0x0000:5 (0x0001)  
	bool                                               bGroup6 : 1;                                                // 0x0000:6 (0x0001)  
	bool                                               bGroup7 : 1;                                                // 0x0000:7 (0x0001)  
	bool                                               bGroup8 : 1;                                                // 0x0001:0 (0x0001)  
	bool                                               bGroup9 : 1;                                                // 0x0001:1 (0x0001)  
	bool                                               bGroup10 : 1;                                               // 0x0001:2 (0x0001)  
	bool                                               bGroup11 : 1;                                               // 0x0001:3 (0x0001)  
	bool                                               bGroup12 : 1;                                               // 0x0001:4 (0x0001)  
	bool                                               bGroup13 : 1;                                               // 0x0001:5 (0x0001)  
	bool                                               bGroup14 : 1;                                               // 0x0001:6 (0x0001)  
	bool                                               bGroup15 : 1;                                               // 0x0001:7 (0x0001)  
	bool                                               bGroup16 : 1;                                               // 0x0002:0 (0x0001)  
	bool                                               bGroup17 : 1;                                               // 0x0002:1 (0x0001)  
	bool                                               bGroup18 : 1;                                               // 0x0002:2 (0x0001)  
	bool                                               bGroup19 : 1;                                               // 0x0002:3 (0x0001)  
	bool                                               bGroup20 : 1;                                               // 0x0002:4 (0x0001)  
	bool                                               bGroup21 : 1;                                               // 0x0002:5 (0x0001)  
	bool                                               bGroup22 : 1;                                               // 0x0002:6 (0x0001)  
	bool                                               bGroup23 : 1;                                               // 0x0002:7 (0x0001)  
	bool                                               bGroup24 : 1;                                               // 0x0003:0 (0x0001)  
	bool                                               bGroup25 : 1;                                               // 0x0003:1 (0x0001)  
	bool                                               bGroup26 : 1;                                               // 0x0003:2 (0x0001)  
	bool                                               bGroup27 : 1;                                               // 0x0003:3 (0x0001)  
	bool                                               bGroup28 : 1;                                               // 0x0003:4 (0x0001)  
	bool                                               bGroup29 : 1;                                               // 0x0003:5 (0x0001)  
	bool                                               bGroup30 : 1;                                               // 0x0003:6 (0x0001)  
	bool                                               bGroup31 : 1;                                               // 0x0003:7 (0x0001)  
};

/// Struct /Script/Engine.NavigationLinkBase
/// Size: 0x0030 (0x000000 - 0x000030)
struct FNavigationLinkBase
{ 
	float                                              LeftProjectHeight;                                          // 0x0000   (0x0004)  
	float                                              MaxFallDownLength;                                          // 0x0004   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0008   (0x0004)  MISSED
	float                                              SnapRadius;                                                 // 0x000C   (0x0004)  
	float                                              SnapHeight;                                                 // 0x0010   (0x0004)  
	FNavAgentSelector                                  SupportedAgents;                                            // 0x0014   (0x0004)  
	bool                                               bSupportsAgent0 : 1;                                        // 0x0018:0 (0x0001)  
	bool                                               bSupportsAgent1 : 1;                                        // 0x0018:1 (0x0001)  
	bool                                               bSupportsAgent2 : 1;                                        // 0x0018:2 (0x0001)  
	bool                                               bSupportsAgent3 : 1;                                        // 0x0018:3 (0x0001)  
	bool                                               bSupportsAgent4 : 1;                                        // 0x0018:4 (0x0001)  
	bool                                               bSupportsAgent5 : 1;                                        // 0x0018:5 (0x0001)  
	bool                                               bSupportsAgent6 : 1;                                        // 0x0018:6 (0x0001)  
	bool                                               bSupportsAgent7 : 1;                                        // 0x0018:7 (0x0001)  
	bool                                               bSupportsAgent8 : 1;                                        // 0x0019:0 (0x0001)  
	bool                                               bSupportsAgent9 : 1;                                        // 0x0019:1 (0x0001)  
	bool                                               bSupportsAgent10 : 1;                                       // 0x0019:2 (0x0001)  
	bool                                               bSupportsAgent11 : 1;                                       // 0x0019:3 (0x0001)  
	bool                                               bSupportsAgent12 : 1;                                       // 0x0019:4 (0x0001)  
	bool                                               bSupportsAgent13 : 1;                                       // 0x0019:5 (0x0001)  
	bool                                               bSupportsAgent14 : 1;                                       // 0x0019:6 (0x0001)  
	bool                                               bSupportsAgent15 : 1;                                       // 0x0019:7 (0x0001)  
	unsigned char                                      UnknownData01_4[0x2];                                       // 0x001A   (0x0002)  MISSED
	TEnumAsByte<ENavLinkDirection>                     Direction;                                                  // 0x001C   (0x0001)  
	bool                                               bUseSnapHeight : 1;                                         // 0x001D:0 (0x0001)  
	bool                                               bSnapToCheapestArea : 1;                                    // 0x001D:1 (0x0001)  
	bool                                               bCustomFlag0 : 1;                                           // 0x001D:2 (0x0001)  
	bool                                               bCustomFlag1 : 1;                                           // 0x001D:3 (0x0001)  
	bool                                               bCustomFlag2 : 1;                                           // 0x001D:4 (0x0001)  
	bool                                               bCustomFlag3 : 1;                                           // 0x001D:5 (0x0001)  
	bool                                               bCustomFlag4 : 1;                                           // 0x001D:6 (0x0001)  
	bool                                               bCustomFlag5 : 1;                                           // 0x001D:7 (0x0001)  
	bool                                               bCustomFlag6 : 1;                                           // 0x001E:0 (0x0001)  
	bool                                               bCustomFlag7 : 1;                                           // 0x001E:1 (0x0001)  
	unsigned char                                      UnknownData02_4[0x1];                                       // 0x001F   (0x0001)  MISSED
	UClass*                                            AreaClass;                                                  // 0x0020   (0x0008)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Struct /Script/Engine.NavAgentSelector
/// Size: 0x0004 (0x000000 - 0x000004)
struct FNavAgentSelector
{ 
	bool                                               bSupportsAgent0 : 1;                                        // 0x0000:0 (0x0001)  
	bool                                               bSupportsAgent1 : 1;                                        // 0x0000:1 (0x0001)  
	bool                                               bSupportsAgent2 : 1;                                        // 0x0000:2 (0x0001)  
	bool                                               bSupportsAgent3 : 1;                                        // 0x0000:3 (0x0001)  
	bool                                               bSupportsAgent4 : 1;                                        // 0x0000:4 (0x0001)  
	bool                                               bSupportsAgent5 : 1;                                        // 0x0000:5 (0x0001)  
	bool                                               bSupportsAgent6 : 1;                                        // 0x0000:6 (0x0001)  
	bool                                               bSupportsAgent7 : 1;                                        // 0x0000:7 (0x0001)  
	bool                                               bSupportsAgent8 : 1;                                        // 0x0001:0 (0x0001)  
	bool                                               bSupportsAgent9 : 1;                                        // 0x0001:1 (0x0001)  
	bool                                               bSupportsAgent10 : 1;                                       // 0x0001:2 (0x0001)  
	bool                                               bSupportsAgent11 : 1;                                       // 0x0001:3 (0x0001)  
	bool                                               bSupportsAgent12 : 1;                                       // 0x0001:4 (0x0001)  
	bool                                               bSupportsAgent13 : 1;                                       // 0x0001:5 (0x0001)  
	bool                                               bSupportsAgent14 : 1;                                       // 0x0001:6 (0x0001)  
	bool                                               bSupportsAgent15 : 1;                                       // 0x0001:7 (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0002   (0x0002)  MISSED
};

/// Struct /Script/Engine.NavigationLink
/// Size: 0x0030 (0x000030 - 0x000060)
struct FNavigationLink : FNavigationLinkBase
{ 
	FVector                                            Left;                                                       // 0x0030   (0x0018)  
	FVector                                            Right;                                                      // 0x0048   (0x0018)  
};

/// Struct /Script/Engine.NavigationSegmentLink
/// Size: 0x0060 (0x000030 - 0x000090)
struct FNavigationSegmentLink : FNavigationLinkBase
{ 
	FVector                                            LeftStart;                                                  // 0x0030   (0x0018)  
	FVector                                            LeftEnd;                                                    // 0x0048   (0x0018)  
	FVector                                            RightStart;                                                 // 0x0060   (0x0018)  
	FVector                                            RightEnd;                                                   // 0x0078   (0x0018)  
};

/// Struct /Script/Engine.OverlapResult
/// Size: 0x0028 (0x000000 - 0x000028)
struct FOverlapResult
{ 
	FActorInstanceHandle                               OverlapObjectHandle;                                        // 0x0000   (0x0018)  
	TWeakObjectPtr<UPrimitiveComponent*>               Component;                                                  // 0x0018   (0x0008)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0020   (0x0004)  MISSED
	bool                                               bBlockingHit : 1;                                           // 0x0024:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0025   (0x0003)  MISSED
};

/// Struct /Script/Engine.ParticleBurst
/// Size: 0x000C (0x000000 - 0x00000C)
struct FParticleBurst
{ 
	int32_t                                            Count;                                                      // 0x0000   (0x0004)  
	int32_t                                            CountLow;                                                   // 0x0004   (0x0004)  
	float                                              Time;                                                       // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.ParticleCurvePair
/// Size: 0x0018 (0x000000 - 0x000018)
struct FParticleCurvePair
{ 
	FString                                            CurveName;                                                  // 0x0000   (0x0010)  
	UObject*                                           CurveObject;                                                // 0x0010   (0x0008)  
};

/// Struct /Script/Engine.ParticleRandomSeedInfo
/// Size: 0x0020 (0x000000 - 0x000020)
struct FParticleRandomSeedInfo
{ 
	FName                                              ParameterName;                                              // 0x0000   (0x0008)  
	bool                                               bGetSeedFromInstance : 1;                                   // 0x0008:0 (0x0001)  
	bool                                               bInstanceSeedIsIndex : 1;                                   // 0x0008:1 (0x0001)  
	bool                                               bResetSeedOnEmitterLooping : 1;                             // 0x0008:2 (0x0001)  
	bool                                               bRandomlySelectSeedArray : 1;                               // 0x0008:3 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<int32_t>                                    RandomSeeds;                                                // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.BeamModifierOptions
/// Size: 0x0004 (0x000000 - 0x000004)
struct FBeamModifierOptions
{ 
	bool                                               bModify : 1;                                                // 0x0000:0 (0x0001)  
	bool                                               bScale : 1;                                                 // 0x0000:1 (0x0001)  
	bool                                               Block : 1;                                                  // 0x0000:2 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
};

/// Struct /Script/Engine.ParticleEvent_GenerateInfo
/// Size: 0x0028 (0x000000 - 0x000028)
struct FParticleEvent_GenerateInfo
{ 
	TEnumAsByte<EParticleEventType>                    Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            Frequency;                                                  // 0x0004   (0x0004)  
	int32_t                                            ParticleFrequency;                                          // 0x0008   (0x0004)  
	bool                                               FirstTimeOnly : 1;                                          // 0x000C:0 (0x0001)  
	bool                                               LastTimeOnly : 1;                                           // 0x000C:1 (0x0001)  
	bool                                               UseReflectedImpactVector : 1;                               // 0x000C:2 (0x0001)  
	bool                                               bUseOrbitOffset : 1;                                        // 0x000C:3 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x000D   (0x0003)  MISSED
	FName                                              CustomName;                                                 // 0x0010   (0x0008)  
	TArray<UParticleModuleEventSendToGame*>            ParticleModuleEventsToSendToGame;                           // 0x0018   (0x0010)  
};

/// Struct /Script/Engine.LocationBoneSocketInfo
/// Size: 0x0020 (0x000000 - 0x000020)
struct FLocationBoneSocketInfo
{ 
	FName                                              BoneSocketName;                                             // 0x0000   (0x0008)  
	FVector                                            Offset;                                                     // 0x0008   (0x0018)  
};

/// Struct /Script/Engine.OrbitOptions
/// Size: 0x0004 (0x000000 - 0x000004)
struct FOrbitOptions
{ 
	bool                                               bProcessDuringSpawn : 1;                                    // 0x0000:0 (0x0001)  
	bool                                               bProcessDuringUpdate : 1;                                   // 0x0000:1 (0x0001)  
	bool                                               bUseEmitterTime : 1;                                        // 0x0000:2 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
};

/// Struct /Script/Engine.EmitterDynamicParameter
/// Size: 0x0048 (0x000000 - 0x000048)
struct FEmitterDynamicParameter
{ 
	FName                                              ParamName;                                                  // 0x0000   (0x0008)  
	bool                                               bUseEmitterTime : 1;                                        // 0x0008:0 (0x0001)  
	bool                                               bSpawnTimeOnly : 1;                                         // 0x0008:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0009   (0x0003)  MISSED
	TEnumAsByte<EEmitterDynamicParameterValue>         ValueMethod;                                                // 0x000C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x000D   (0x0003)  MISSED
	bool                                               bScaleVelocityByParamValue : 1;                             // 0x0010:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x7];                                       // 0x0011   (0x0007)  MISSED
	FRawDistributionFloat                              ParamValue;                                                 // 0x0018   (0x0030)  
};

/// Struct /Script/Engine.BeamTargetData
/// Size: 0x000C (0x000000 - 0x00000C)
struct FBeamTargetData
{ 
	FName                                              TargetName;                                                 // 0x0000   (0x0008)  
	float                                              TargetPercentage;                                           // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.GPUSpriteLocalVectorFieldInfo
/// Size: 0x00D0 (0x000000 - 0x0000D0)
struct FGPUSpriteLocalVectorFieldInfo
{ 
	UVectorField*                                      Field;                                                      // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0008   (0x0008)  MISSED
	FTransform                                         Transform;                                                  // 0x0010   (0x0060)  
	FRotator                                           MinInitialRotation;                                         // 0x0070   (0x0018)  
	FRotator                                           MaxInitialRotation;                                         // 0x0088   (0x0018)  
	FRotator                                           RotationRate;                                               // 0x00A0   (0x0018)  
	float                                              Intensity;                                                  // 0x00B8   (0x0004)  
	float                                              Tightness;                                                  // 0x00BC   (0x0004)  
	bool                                               bIgnoreComponentTransform : 1;                              // 0x00C0:0 (0x0001)  
	bool                                               bTileX : 1;                                                 // 0x00C0:1 (0x0001)  
	bool                                               bTileY : 1;                                                 // 0x00C0:2 (0x0001)  
	bool                                               bTileZ : 1;                                                 // 0x00C0:3 (0x0001)  
	bool                                               bUseFixDT : 1;                                              // 0x00C0:4 (0x0001)  
	unsigned char                                      UnknownData01_6[0xF];                                       // 0x00C1   (0x000F)  MISSED
};

/// Struct /Script/Engine.GPUSpriteEmitterInfo
/// Size: 0x0350 (0x000000 - 0x000350)
struct FGPUSpriteEmitterInfo
{ 
	UParticleModuleRequired*                           RequiredModule;                                             // 0x0000   (0x0008)  
	UParticleModuleSpawn*                              SpawnModule;                                                // 0x0008   (0x0008)  
	UParticleModuleSpawnPerUnit*                       SpawnPerUnitModule;                                         // 0x0010   (0x0008)  
	TArray<UParticleModule*>                           SpawnModules;                                               // 0x0018   (0x0010)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0028   (0x0008)  MISSED
	FGPUSpriteLocalVectorFieldInfo                     LocalVectorField;                                           // 0x0030   (0x00D0)  
	FFloatDistribution                                 VectorFieldScale;                                           // 0x0100   (0x0020)  
	FFloatDistribution                                 DragCoefficient;                                            // 0x0120   (0x0020)  
	FFloatDistribution                                 PointAttractorStrength;                                     // 0x0140   (0x0020)  
	FFloatDistribution                                 Resilience;                                                 // 0x0160   (0x0020)  
	FVector                                            ConstantAcceleration;                                       // 0x0180   (0x0018)  
	FVector                                            PointAttractorPosition;                                     // 0x0198   (0x0018)  
	float                                              PointAttractorRadiusSq;                                     // 0x01B0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x01B4   (0x0004)  MISSED
	FVector                                            OrbitOffsetBase;                                            // 0x01B8   (0x0018)  
	FVector                                            OrbitOffsetRange;                                           // 0x01D0   (0x0018)  
	FVector2D                                          InvMaxSize;                                                 // 0x01E8   (0x0010)  
	float                                              InvRotationRateScale;                                       // 0x01F8   (0x0004)  
	float                                              MaxLifetime;                                                // 0x01FC   (0x0004)  
	int32_t                                            MaxParticleCount;                                           // 0x0200   (0x0004)  
	TEnumAsByte<EParticleScreenAlignment>              ScreenAlignment;                                            // 0x0204   (0x0001)  
	TEnumAsByte<EParticleAxisLock>                     LockAxisFlag;                                               // 0x0205   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x0206   (0x0002)  MISSED
	bool                                               bEnableCollision : 1;                                       // 0x0208:0 (0x0001)  
	unsigned char                                      UnknownData03_4[0x3];                                       // 0x0209   (0x0003)  MISSED
	TEnumAsByte<EParticleCollisionMode>                CollisionMode;                                              // 0x020C   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x020D   (0x0003)  MISSED
	bool                                               bRemoveHMDRoll : 1;                                         // 0x0210:0 (0x0001)  
	unsigned char                                      UnknownData05_4[0x3];                                       // 0x0211   (0x0003)  MISSED
	float                                              MinFacingCameraBlendDistance;                               // 0x0214   (0x0004)  
	float                                              MaxFacingCameraBlendDistance;                               // 0x0218   (0x0004)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x021C   (0x0004)  MISSED
	FRawDistributionVector                             DynamicColor;                                               // 0x0220   (0x0060)  
	FRawDistributionFloat                              DynamicAlpha;                                               // 0x0280   (0x0030)  
	FRawDistributionVector                             DynamicColorScale;                                          // 0x02B0   (0x0060)  
	FRawDistributionFloat                              DynamicAlphaScale;                                          // 0x0310   (0x0030)  
	unsigned char                                      UnknownData07_6[0x10];                                      // 0x0340   (0x0010)  MISSED
};

/// Struct /Script/Engine.GPUSpriteResourceData
/// Size: 0x0240 (0x000000 - 0x000240)
struct FGPUSpriteResourceData
{ 
	TArray<FColor>                                     QuantizedColorSamples;                                      // 0x0000   (0x0010)  
	TArray<FColor>                                     QuantizedMiscSamples;                                       // 0x0010   (0x0010)  
	TArray<FColor>                                     QuantizedSimulationAttrSamples;                             // 0x0020   (0x0010)  
	FVector4                                           ColorScale;                                                 // 0x0030   (0x0020)  
	FVector4                                           ColorBias;                                                  // 0x0050   (0x0020)  
	FVector4                                           MiscScale;                                                  // 0x0070   (0x0020)  
	FVector4                                           MiscBias;                                                   // 0x0090   (0x0020)  
	FVector4                                           SimulationAttrCurveScale;                                   // 0x00B0   (0x0020)  
	FVector4                                           SimulationAttrCurveBias;                                    // 0x00D0   (0x0020)  
	FVector4                                           SubImageSize;                                               // 0x00F0   (0x0020)  
	FVector4                                           SizeBySpeed;                                                // 0x0110   (0x0020)  
	FVector                                            ConstantAcceleration;                                       // 0x0130   (0x0018)  
	FVector                                            OrbitOffsetBase;                                            // 0x0148   (0x0018)  
	FVector                                            OrbitOffsetRange;                                           // 0x0160   (0x0018)  
	FVector                                            OrbitFrequencyBase;                                         // 0x0178   (0x0018)  
	FVector                                            OrbitFrequencyRange;                                        // 0x0190   (0x0018)  
	FVector                                            OrbitPhaseBase;                                             // 0x01A8   (0x0018)  
	FVector                                            OrbitPhaseRange;                                            // 0x01C0   (0x0018)  
	float                                              GlobalVectorFieldScale;                                     // 0x01D8   (0x0004)  
	float                                              GlobalVectorFieldTightness;                                 // 0x01DC   (0x0004)  
	float                                              PerParticleVectorFieldScale;                                // 0x01E0   (0x0004)  
	float                                              PerParticleVectorFieldBias;                                 // 0x01E4   (0x0004)  
	float                                              DragCoefficientScale;                                       // 0x01E8   (0x0004)  
	float                                              DragCoefficientBias;                                        // 0x01EC   (0x0004)  
	float                                              ResilienceScale;                                            // 0x01F0   (0x0004)  
	float                                              ResilienceBias;                                             // 0x01F4   (0x0004)  
	float                                              CollisionRadiusScale;                                       // 0x01F8   (0x0004)  
	float                                              CollisionRadiusBias;                                        // 0x01FC   (0x0004)  
	float                                              CollisionTimeBias;                                          // 0x0200   (0x0004)  
	float                                              CollisionRandomSpread;                                      // 0x0204   (0x0004)  
	float                                              CollisionRandomDistribution;                                // 0x0208   (0x0004)  
	float                                              OneMinusFriction;                                           // 0x020C   (0x0004)  
	float                                              RotationRateScale;                                          // 0x0210   (0x0004)  
	float                                              CameraMotionBlurAmount;                                     // 0x0214   (0x0004)  
	TEnumAsByte<EParticleScreenAlignment>              ScreenAlignment;                                            // 0x0218   (0x0001)  
	TEnumAsByte<EParticleAxisLock>                     LockAxisFlag;                                               // 0x0219   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x021A   (0x0006)  MISSED
	FVector2D                                          PivotOffset;                                                // 0x0220   (0x0010)  
	bool                                               bRemoveHMDRoll : 1;                                         // 0x0230:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0231   (0x0003)  MISSED
	float                                              MinFacingCameraBlendDistance;                               // 0x0234   (0x0004)  
	float                                              MaxFacingCameraBlendDistance;                               // 0x0238   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x023C   (0x0004)  MISSED
};

/// Struct /Script/Engine.ParticleSystemLOD
/// Size: 0x0001 (0x000000 - 0x000001)
struct FParticleSystemLOD
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.LODSoloTrack
/// Size: 0x0010 (0x000000 - 0x000010)
struct FLODSoloTrack
{ 
	TArray<char>                                       SoloEnableSetting;                                          // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.NamedEmitterMaterial
/// Size: 0x0010 (0x000000 - 0x000010)
struct FNamedEmitterMaterial
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	UMaterialInterface*                                Material;                                                   // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.ParticleSysParam
/// Size: 0x00E0 (0x000000 - 0x0000E0)
struct FParticleSysParam
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	TEnumAsByte<EParticleSysParamType>                 ParamType;                                                  // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              Scalar;                                                     // 0x000C   (0x0004)  
	float                                              Scalar_Low;                                                 // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FVector                                            Vector;                                                     // 0x0018   (0x0018)  
	FVector                                            Vector_Low;                                                 // 0x0030   (0x0018)  
	FColor                                             Color;                                                      // 0x0048   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x004C   (0x0004)  MISSED
	AActor*                                            Actor;                                                      // 0x0050   (0x0008)  
	UMaterialInterface*                                Material;                                                   // 0x0058   (0x0008)  
	unsigned char                                      UnknownData03_6[0x80];                                      // 0x0060   (0x0080)  MISSED
};

/// Struct /Script/Engine.FXSystemSpawnParameters
/// Size: 0x0078 (0x000000 - 0x000078)
struct FFXSystemSpawnParameters
{ 
	unsigned char                                      UnknownData00_1[0x78];                                      // 0x0000   (0x0078)  MISSED
};

/// Struct /Script/Engine.ParticleEmitterReplayFrame
/// Size: 0x0010 (0x000000 - 0x000010)
struct FParticleEmitterReplayFrame
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/Engine.ParticleSystemReplayFrame
/// Size: 0x0010 (0x000000 - 0x000010)
struct FParticleSystemReplayFrame
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/Engine.DelegateArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FDelegateArray
{ 
	TArray<FDelegateProperty>                          Delegates;                                                  // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.CameraCacheEntry
/// Size: 0x07D0 (0x000000 - 0x0007D0)
struct FCameraCacheEntry
{ 
	float                                              Timestamp;                                                  // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0xC];                                       // 0x0004   (0x000C)  MISSED
	FMinimalViewInfo                                   POV;                                                        // 0x0010   (0x07C0)  
};

/// Struct /Script/Engine.TViewTarget
/// Size: 0x07E0 (0x000000 - 0x0007E0)
struct FTViewTarget
{ 
	AActor*                                            Target;                                                     // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0008   (0x0008)  MISSED
	FMinimalViewInfo                                   POV;                                                        // 0x0010   (0x07C0)  
	APlayerState*                                      PlayerState;                                                // 0x07D0   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x07D8   (0x0008)  MISSED
};

/// Struct /Script/Engine.ViewTargetTransitionParams
/// Size: 0x0010 (0x000000 - 0x000010)
struct FViewTargetTransitionParams
{ 
	float                                              BlendTime;                                                  // 0x0000   (0x0004)  
	TEnumAsByte<EViewTargetBlendFunction>              BlendFunction;                                              // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0005   (0x0003)  MISSED
	float                                              BlendExp;                                                   // 0x0008   (0x0004)  
	bool                                               bLockOutgoing : 1;                                          // 0x000C:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x000D   (0x0003)  MISSED
};

/// Struct /Script/Engine.SpriteCategoryInfo
/// Size: 0x0038 (0x000000 - 0x000038)
struct FSpriteCategoryInfo
{ 
	FName                                              Category;                                                   // 0x0000   (0x0008)  
	FText                                              DisplayName;                                                // 0x0008   (0x0018)  
	FText                                              Description;                                                // 0x0020   (0x0018)  
};

/// Struct /Script/Engine.PrimitiveComponentInstanceData
/// Size: 0x0078 (0x0000B8 - 0x000130)
struct FPrimitiveComponentInstanceData : FSceneComponentInstanceData
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00B8   (0x0008)  MISSED
	FTransform                                         ComponentTransform;                                         // 0x00C0   (0x0060)  
	int32_t                                            VisibilityId;                                               // 0x0120   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0124   (0x0004)  MISSED
	UPrimitiveComponent*                               LODParent;                                                  // 0x0128   (0x0008)  
};

/// Struct /Script/Engine.LevelNameAndTime
/// Size: 0x0018 (0x000000 - 0x000018)
struct FLevelNameAndTime
{ 
	FString                                            LevelName;                                                  // 0x0000   (0x0010)  
	uint32_t                                           LevelChangeTimeInMS;                                        // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/Engine.RepMovementNetSerializerConfig
/// Size: 0x0000 (0x000001 - 0x000001)
struct FRepMovementNetSerializerConfig : FNetSerializerConfig
{ 
};

/// Struct /Script/Engine.ReverbSettings
/// Size: 0x0020 (0x000000 - 0x000020)
struct FReverbSettings
{ 
	bool                                               bApplyReverb;                                               // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	UReverbEffect*                                     ReverbEffect;                                               // 0x0008   (0x0008)  
	USoundEffectSubmixPreset*                          ReverbPluginEffect;                                         // 0x0010   (0x0008)  
	float                                              Volume;                                                     // 0x0018   (0x0004)  
	float                                              FadeTime;                                                   // 0x001C   (0x0004)  
};

/// Struct /Script/Engine.CompressedRichCurve
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCompressedRichCurve
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/Engine.ColorGradePerRangeSettings
/// Size: 0x00A0 (0x000000 - 0x0000A0)
struct FColorGradePerRangeSettings
{ 
	FVector4                                           Saturation;                                                 // 0x0000   (0x0020)  
	FVector4                                           Contrast;                                                   // 0x0020   (0x0020)  
	FVector4                                           Gamma;                                                      // 0x0040   (0x0020)  
	FVector4                                           Gain;                                                       // 0x0060   (0x0020)  
	FVector4                                           Offset;                                                     // 0x0080   (0x0020)  
};

/// Struct /Script/Engine.ColorGradingSettings
/// Size: 0x0290 (0x000000 - 0x000290)
struct FColorGradingSettings
{ 
	FColorGradePerRangeSettings                        Global;                                                     // 0x0000   (0x00A0)  
	FColorGradePerRangeSettings                        Shadows;                                                    // 0x00A0   (0x00A0)  
	FColorGradePerRangeSettings                        Midtones;                                                   // 0x0140   (0x00A0)  
	FColorGradePerRangeSettings                        Highlights;                                                 // 0x01E0   (0x00A0)  
	float                                              ShadowsMax;                                                 // 0x0280   (0x0004)  
	float                                              HighlightsMin;                                              // 0x0284   (0x0004)  
	float                                              HighlightsMax;                                              // 0x0288   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x028C   (0x0004)  MISSED
};

/// Struct /Script/Engine.FilmStockSettings
/// Size: 0x0014 (0x000000 - 0x000014)
struct FFilmStockSettings
{ 
	float                                              Slope;                                                      // 0x0000   (0x0004)  
	float                                              Toe;                                                        // 0x0004   (0x0004)  
	float                                              Shoulder;                                                   // 0x0008   (0x0004)  
	float                                              BlackClip;                                                  // 0x000C   (0x0004)  
	float                                              WhiteClip;                                                  // 0x0010   (0x0004)  
};

/// Struct /Script/Engine.GaussianSumBloomSettings
/// Size: 0x0084 (0x000000 - 0x000084)
struct FGaussianSumBloomSettings
{ 
	float                                              Intensity;                                                  // 0x0000   (0x0004)  
	float                                              Threshold;                                                  // 0x0004   (0x0004)  
	float                                              SizeScale;                                                  // 0x0008   (0x0004)  
	float                                              Filter1Size;                                                // 0x000C   (0x0004)  
	float                                              Filter2Size;                                                // 0x0010   (0x0004)  
	float                                              Filter3Size;                                                // 0x0014   (0x0004)  
	float                                              Filter4Size;                                                // 0x0018   (0x0004)  
	float                                              Filter5Size;                                                // 0x001C   (0x0004)  
	float                                              Filter6Size;                                                // 0x0020   (0x0004)  
	FLinearColor                                       Filter1Tint;                                                // 0x0024   (0x0010)  
	FLinearColor                                       Filter2Tint;                                                // 0x0034   (0x0010)  
	FLinearColor                                       Filter3Tint;                                                // 0x0044   (0x0010)  
	FLinearColor                                       Filter4Tint;                                                // 0x0054   (0x0010)  
	FLinearColor                                       Filter5Tint;                                                // 0x0064   (0x0010)  
	FLinearColor                                       Filter6Tint;                                                // 0x0074   (0x0010)  
};

/// Struct /Script/Engine.ConvolutionBloomSettings
/// Size: 0x0030 (0x000000 - 0x000030)
struct FConvolutionBloomSettings
{ 
	UTexture2D*                                        Texture;                                                    // 0x0000   (0x0008)  
	float                                              ScatterDispersion;                                          // 0x0008   (0x0004)  
	float                                              Size;                                                       // 0x000C   (0x0004)  
	FVector2D                                          CenterUV;                                                   // 0x0010   (0x0010)  
	float                                              PreFilterMin;                                               // 0x0020   (0x0004)  
	float                                              PreFilterMax;                                               // 0x0024   (0x0004)  
	float                                              PreFilterMult;                                              // 0x0028   (0x0004)  
	float                                              BufferScale;                                                // 0x002C   (0x0004)  
};

/// Struct /Script/Engine.LensBloomSettings
/// Size: 0x00C0 (0x000000 - 0x0000C0)
struct FLensBloomSettings
{ 
	FGaussianSumBloomSettings                          GaussianSum;                                                // 0x0000   (0x0084)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0084   (0x0004)  MISSED
	FConvolutionBloomSettings                          Convolution;                                                // 0x0088   (0x0030)  
	TEnumAsByte<EBloomMethod>                          Method;                                                     // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x00B9   (0x0007)  MISSED
};

/// Struct /Script/Engine.LensImperfectionSettings
/// Size: 0x0020 (0x000000 - 0x000020)
struct FLensImperfectionSettings
{ 
	UTexture*                                          DirtMask;                                                   // 0x0000   (0x0008)  
	float                                              DirtMaskIntensity;                                          // 0x0008   (0x0004)  
	FLinearColor                                       DirtMaskTint;                                               // 0x000C   (0x0010)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/Engine.LensSettings
/// Size: 0x00E8 (0x000000 - 0x0000E8)
struct FLensSettings
{ 
	FLensBloomSettings                                 Bloom;                                                      // 0x0000   (0x00C0)  
	FLensImperfectionSettings                          Imperfections;                                              // 0x00C0   (0x0020)  
	float                                              ChromaticAberration;                                        // 0x00E0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00E4   (0x0004)  MISSED
};

/// Struct /Script/Engine.CameraExposureSettings
/// Size: 0x0040 (0x000000 - 0x000040)
struct FCameraExposureSettings
{ 
	TEnumAsByte<EAutoExposureMethod>                   Method;                                                     // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              LowPercent;                                                 // 0x0004   (0x0004)  
	float                                              HighPercent;                                                // 0x0008   (0x0004)  
	float                                              MinBrightness;                                              // 0x000C   (0x0004)  
	float                                              MaxBrightness;                                              // 0x0010   (0x0004)  
	float                                              SpeedUp;                                                    // 0x0014   (0x0004)  
	float                                              SpeedDown;                                                  // 0x0018   (0x0004)  
	float                                              Bias;                                                       // 0x001C   (0x0004)  
	UCurveFloat*                                       BiasCurve;                                                  // 0x0020   (0x0008)  
	UTexture*                                          MeterMask;                                                  // 0x0028   (0x0008)  
	float                                              HistogramLogMin;                                            // 0x0030   (0x0004)  
	float                                              HistogramLogMax;                                            // 0x0034   (0x0004)  
	float                                              CalibrationConstant;                                        // 0x0038   (0x0004)  
	bool                                               ApplyPhysicalCameraExposure : 1;                            // 0x003C:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x003D   (0x0003)  MISSED
};

/// Struct /Script/Engine.SceneViewExtensionIsActiveFunctor
/// Size: 0x0050 (0x000000 - 0x000050)
struct FSceneViewExtensionIsActiveFunctor
{ 
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0000   (0x0050)  MISSED
};

/// Struct /Script/Engine.SkeletalMeshOptimizationSettings
/// Size: 0x003C (0x000000 - 0x00003C)
struct FSkeletalMeshOptimizationSettings
{ 
	TEnumAsByte<SkeletalMeshTerminationCriterion>      TerminationCriterion;                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              NumOfTrianglesPercentage;                                   // 0x0004   (0x0004)  
	float                                              NumOfVertPercentage;                                        // 0x0008   (0x0004)  
	uint32_t                                           MaxNumOfTriangles;                                          // 0x000C   (0x0004)  
	uint32_t                                           MaxNumOfVerts;                                              // 0x0010   (0x0004)  
	float                                              MaxDeviationPercentage;                                     // 0x0014   (0x0004)  
	TEnumAsByte<SkeletalMeshOptimizationType>          ReductionMethod;                                            // 0x0018   (0x0001)  
	TEnumAsByte<SkeletalMeshOptimizationImportance>    SilhouetteImportance;                                       // 0x0019   (0x0001)  
	TEnumAsByte<SkeletalMeshOptimizationImportance>    TextureImportance;                                          // 0x001A   (0x0001)  
	TEnumAsByte<SkeletalMeshOptimizationImportance>    ShadingImportance;                                          // 0x001B   (0x0001)  
	TEnumAsByte<SkeletalMeshOptimizationImportance>    SkinningImportance;                                         // 0x001C   (0x0001)  
	bool                                               bRemapMorphTargets : 1;                                     // 0x001D:0 (0x0001)  
	bool                                               bRecalcNormals : 1;                                         // 0x001D:1 (0x0001)  
	unsigned char                                      UnknownData01_4[0x2];                                       // 0x001E   (0x0002)  MISSED
	float                                              WeldingThreshold;                                           // 0x0020   (0x0004)  
	float                                              NormalsThreshold;                                           // 0x0024   (0x0004)  
	int32_t                                            MaxBonesPerVertex;                                          // 0x0028   (0x0004)  
	bool                                               bEnforceBoneBoundaries : 1;                                 // 0x002C:0 (0x0001)  
	bool                                               bMergeCoincidentVertBones : 1;                              // 0x002C:1 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x002D   (0x0003)  MISSED
	float                                              VolumeImportance;                                           // 0x0030   (0x0004)  
	bool                                               bLockEdges : 1;                                             // 0x0034:0 (0x0001)  
	bool                                               bLockColorBounaries : 1;                                    // 0x0034:1 (0x0001)  
	unsigned char                                      UnknownData03_4[0x3];                                       // 0x0035   (0x0003)  MISSED
	int32_t                                            BaseLOD;                                                    // 0x0038   (0x0004)  
};

/// Struct /Script/Engine.SectionReference
/// Size: 0x0004 (0x000000 - 0x000004)
struct FSectionReference
{ 
	int32_t                                            SectionIndex;                                               // 0x0000   (0x0004)  
};

/// Struct /Script/Engine.SkeletalMeshLODInfo
/// Size: 0x00D0 (0x000000 - 0x0000D0)
struct FSkeletalMeshLODInfo
{ 
	FPerPlatformFloat                                  ScreenSize;                                                 // 0x0000   (0x0004)  
	float                                              LODHysteresis;                                              // 0x0004   (0x0004)  
	TArray<int32_t>                                    LODMaterialMap;                                             // 0x0008   (0x0010)  
	FSkeletalMeshBuildSettings                         BuildSettings;                                              // 0x0018   (0x0014)  
	FSkeletalMeshOptimizationSettings                  ReductionSettings;                                          // 0x002C   (0x003C)  
	TArray<FBoneReference>                             BonesToRemove;                                              // 0x0068   (0x0010)  
	TArray<FBoneReference>                             BonesToPrioritize;                                          // 0x0078   (0x0010)  
	TArray<FSectionReference>                          SectionsToPrioritize;                                       // 0x0088   (0x0010)  
	float                                              WeightOfPrioritization;                                     // 0x0098   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x009C   (0x0004)  MISSED
	UAnimSequence*                                     BakePose;                                                   // 0x00A0   (0x0008)  
	UAnimSequence*                                     BakePoseOverride;                                           // 0x00A8   (0x0008)  
	FString                                            SourceImportFilename;                                       // 0x00B0   (0x0010)  
	ESkinCacheUsage                                    SkinCacheUsage;                                             // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x00C1   (0x0003)  MISSED
	float                                              MorphTargetPositionErrorTolerance;                          // 0x00C4   (0x0004)  
	bool                                               bHasBeenSimplified : 1;                                     // 0x00C8:0 (0x0001)  
	bool                                               bHasPerLODVertexColors : 1;                                 // 0x00C8:1 (0x0001)  
	bool                                               bAllowCPUAccess : 1;                                        // 0x00C8:2 (0x0001)  
	bool                                               bSupportUniformlyDistributedSampling : 1;                   // 0x00C8:3 (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x00C9   (0x0007)  MISSED
};

/// Struct /Script/Engine.SkeletalMaterial
/// Size: 0x0028 (0x000000 - 0x000028)
struct FSkeletalMaterial
{ 
	UMaterialInterface*                                MaterialInterface;                                          // 0x0000   (0x0008)  
	FName                                              MaterialSlotName;                                           // 0x0008   (0x0008)  
	FMeshUVChannelInfo                                 UVChannelData;                                              // 0x0010   (0x0014)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/Engine.SkelMeshSkinWeightInfo
/// Size: 0x003C (0x000000 - 0x00003C)
struct FSkelMeshSkinWeightInfo
{ 
	int32_t                                            Bones;                                                      // 0x0000   (0x0030)  
	char                                               Weights;                                                    // 0x0030   (0x000C)  
};

/// Struct /Script/Engine.SkelMeshComponentLODInfo
/// Size: 0x0028 (0x000000 - 0x000028)
struct FSkelMeshComponentLODInfo
{ 
	TArray<bool>                                       HiddenMaterials;                                            // 0x0000   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0010   (0x0018)  MISSED
};

/// Struct /Script/Engine.VertexOffsetUsage
/// Size: 0x0004 (0x000000 - 0x000004)
struct FVertexOffsetUsage
{ 
	int32_t                                            Usage;                                                      // 0x0000   (0x0004)  
};

/// Struct /Script/Engine.PrecomputedSkyLightInstanceData
/// Size: 0x00B8 (0x0000B8 - 0x000170)
struct FPrecomputedSkyLightInstanceData : FSceneComponentInstanceData
{ 
	FGuid                                              LightGuid;                                                  // 0x00B8   (0x0010)  
	float                                              AverageBrightness;                                          // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData00_6[0xA4];                                      // 0x00CC   (0x00A4)  MISSED
};

/// Struct /Script/Engine.SoundAttenuationPluginSettings
/// Size: 0x0040 (0x000000 - 0x000040)
struct FSoundAttenuationPluginSettings
{ 
	TArray<USpatializationPluginSourceSettingsBase*>   SpatializationPluginSettingsArray;                          // 0x0000   (0x0010)  
	TArray<UOcclusionPluginSourceSettingsBase*>        OcclusionPluginSettingsArray;                               // 0x0010   (0x0010)  
	TArray<UReverbPluginSourceSettingsBase*>           ReverbPluginSettingsArray;                                  // 0x0020   (0x0010)  
	TArray<USourceDataOverridePluginSourceSettingsBase*> SourceDataOverridePluginSettingsArray;                    // 0x0030   (0x0010)  
};

/// Struct /Script/Engine.AttenuationSubmixSendSettings
/// Size: 0x00A8 (0x000000 - 0x0000A8)
struct FAttenuationSubmixSendSettings
{ 
	USoundSubmixBase*                                  Submix;                                                     // 0x0000   (0x0008)  
	ESubmixSendMethod                                  SubmixSendMethod;                                           // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              SubmixSendLevelMin;                                         // 0x000C   (0x0004)  
	float                                              SubmixSendLevelMax;                                         // 0x0010   (0x0004)  
	float                                              SubmixSendDistanceMin;                                      // 0x0014   (0x0004)  
	float                                              SubmixSendDistanceMax;                                      // 0x0018   (0x0004)  
	float                                              ManualSubmixSendLevel;                                      // 0x001C   (0x0004)  
	FRuntimeFloatCurve                                 CustomSubmixSendCurve;                                      // 0x0020   (0x0088)  
};

/// Struct /Script/Engine.SoundAttenuationSettings
/// Size: 0x0308 (0x0000C0 - 0x0003C8)
struct FSoundAttenuationSettings : FBaseAttenuationSettings
{ 
	bool                                               bAttenuate : 1;                                             // 0x00C0:0 (0x0001)  
	bool                                               bSpatialize : 1;                                            // 0x00C0:1 (0x0001)  
	bool                                               bAttenuateWithLPF : 1;                                      // 0x00C0:2 (0x0001)  
	bool                                               bEnableListenerFocus : 1;                                   // 0x00C0:3 (0x0001)  
	bool                                               bEnableFocusInterpolation : 1;                              // 0x00C0:4 (0x0001)  
	bool                                               bEnableOcclusion : 1;                                       // 0x00C0:5 (0x0001)  
	bool                                               bUseComplexCollisionForOcclusion : 1;                       // 0x00C0:6 (0x0001)  
	bool                                               bEnableReverbSend : 1;                                      // 0x00C0:7 (0x0001)  
	bool                                               bEnablePriorityAttenuation : 1;                             // 0x00C1:0 (0x0001)  
	bool                                               bApplyNormalizationToStereoSounds : 1;                      // 0x00C1:1 (0x0001)  
	bool                                               bEnableLogFrequencyScaling : 1;                             // 0x00C1:2 (0x0001)  
	bool                                               bEnableSubmixSends : 1;                                     // 0x00C1:3 (0x0001)  
	bool                                               bEnableSourceDataOverride : 1;                              // 0x00C1:4 (0x0001)  
	bool                                               bEnableSendToAudioLink : 1;                                 // 0x00C1:5 (0x0001)  
	TEnumAsByte<ESoundSpatializationAlgorithm>         SpatializationAlgorithm;                                    // 0x00C2   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x00C3   (0x0005)  MISSED
	UAudioLinkSettingsAbstract*                        AudioLinkSettingsOverride;                                  // 0x00C8   (0x0008)  
	float                                              BinauralRadius;                                             // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00D4   (0x0004)  MISSED
	FRuntimeFloatCurve                                 CustomLowpassAirAbsorptionCurve;                            // 0x00D8   (0x0088)  
	FRuntimeFloatCurve                                 CustomHighpassAirAbsorptionCurve;                           // 0x0160   (0x0088)  
	EAirAbsorptionMethod                               AbsorptionMethod;                                           // 0x01E8   (0x0001)  
	TEnumAsByte<ECollisionChannel>                     OcclusionTraceChannel;                                      // 0x01E9   (0x0001)  
	EReverbSendMethod                                  ReverbSendMethod;                                           // 0x01EA   (0x0001)  
	EPriorityAttenuationMethod                         PriorityAttenuationMethod;                                  // 0x01EB   (0x0001)  
	float                                              OmniRadius;                                                 // 0x01EC   (0x0004)  
	float                                              StereoSpread;                                               // 0x01F0   (0x0004)  
	float                                              LPFRadiusMin;                                               // 0x01F4   (0x0004)  
	float                                              LPFRadiusMax;                                               // 0x01F8   (0x0004)  
	float                                              LPFFrequencyAtMin;                                          // 0x01FC   (0x0004)  
	float                                              LPFFrequencyAtMax;                                          // 0x0200   (0x0004)  
	float                                              HPFFrequencyAtMin;                                          // 0x0204   (0x0004)  
	float                                              HPFFrequencyAtMax;                                          // 0x0208   (0x0004)  
	float                                              FocusAzimuth;                                               // 0x020C   (0x0004)  
	float                                              NonFocusAzimuth;                                            // 0x0210   (0x0004)  
	float                                              FocusDistanceScale;                                         // 0x0214   (0x0004)  
	float                                              NonFocusDistanceScale;                                      // 0x0218   (0x0004)  
	float                                              FocusPriorityScale;                                         // 0x021C   (0x0004)  
	float                                              NonFocusPriorityScale;                                      // 0x0220   (0x0004)  
	float                                              FocusVolumeAttenuation;                                     // 0x0224   (0x0004)  
	float                                              NonFocusVolumeAttenuation;                                  // 0x0228   (0x0004)  
	float                                              FocusAttackInterpSpeed;                                     // 0x022C   (0x0004)  
	float                                              FocusReleaseInterpSpeed;                                    // 0x0230   (0x0004)  
	float                                              OcclusionLowPassFilterFrequency;                            // 0x0234   (0x0004)  
	float                                              OcclusionVolumeAttenuation;                                 // 0x0238   (0x0004)  
	float                                              OcclusionInterpolationTime;                                 // 0x023C   (0x0004)  
	float                                              ReverbWetLevelMin;                                          // 0x0240   (0x0004)  
	float                                              ReverbWetLevelMax;                                          // 0x0244   (0x0004)  
	float                                              ReverbDistanceMin;                                          // 0x0248   (0x0004)  
	float                                              ReverbDistanceMax;                                          // 0x024C   (0x0004)  
	float                                              ManualReverbSendLevel;                                      // 0x0250   (0x0004)  
	float                                              PriorityAttenuationMin;                                     // 0x0254   (0x0004)  
	float                                              PriorityAttenuationMax;                                     // 0x0258   (0x0004)  
	float                                              PriorityAttenuationDistanceMin;                             // 0x025C   (0x0004)  
	float                                              PriorityAttenuationDistanceMax;                             // 0x0260   (0x0004)  
	float                                              ManualPriorityAttenuation;                                  // 0x0264   (0x0004)  
	FRuntimeFloatCurve                                 CustomReverbSendCurve;                                      // 0x0268   (0x0088)  
	TArray<FAttenuationSubmixSendSettings>             SubmixSendSettings;                                         // 0x02F0   (0x0010)  
	FRuntimeFloatCurve                                 CustomPriorityAttenuationCurve;                             // 0x0300   (0x0088)  
	FSoundAttenuationPluginSettings                    PluginSettings;                                             // 0x0388   (0x0040)  
};

/// Struct /Script/Engine.SourceEffectChainEntry
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSourceEffectChainEntry
{ 
	USoundEffectSourcePreset*                          Preset;                                                     // 0x0000   (0x0008)  
	bool                                               bBypass : 1;                                                // 0x0008:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/Engine.SoundGroup
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSoundGroup
{ 
	TEnumAsByte<ESoundGroup>                           SoundGroup;                                                 // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FString                                            DisplayName;                                                // 0x0008   (0x0010)  
	bool                                               bAlwaysDecompressOnLoad : 1;                                // 0x0018:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0019   (0x0003)  MISSED
	float                                              DecompressedDuration;                                       // 0x001C   (0x0004)  
};

/// Struct /Script/Engine.ModulatorContinuousParams
/// Size: 0x0020 (0x000000 - 0x000020)
struct FModulatorContinuousParams
{ 
	FName                                              ParameterName;                                              // 0x0000   (0x0008)  
	float                                              Default;                                                    // 0x0008   (0x0004)  
	float                                              MinInput;                                                   // 0x000C   (0x0004)  
	float                                              MaxInput;                                                   // 0x0010   (0x0004)  
	float                                              MinOutput;                                                  // 0x0014   (0x0004)  
	float                                              MaxOutput;                                                  // 0x0018   (0x0004)  
	TEnumAsByte<ModulationParamMode>                   ParamMode;                                                  // 0x001C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x001D   (0x0003)  MISSED
};

/// Struct /Script/Engine.SoundSourceBusSendInfo
/// Size: 0x00B8 (0x000000 - 0x0000B8)
struct FSoundSourceBusSendInfo
{ 
	ESourceBusSendLevelControlMethod                   SourceBusSendLevelControlMethod;                            // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	USoundSourceBus*                                   SoundSourceBus;                                             // 0x0008   (0x0008)  
	UAudioBus*                                         AudioBus;                                                   // 0x0010   (0x0008)  
	float                                              SendLevel;                                                  // 0x0018   (0x0004)  
	float                                              MinSendLevel;                                               // 0x001C   (0x0004)  
	float                                              MaxSendLevel;                                               // 0x0020   (0x0004)  
	float                                              MinSendDistance;                                            // 0x0024   (0x0004)  
	float                                              MaxSendDistance;                                            // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	FRuntimeFloatCurve                                 CustomSendLevelCurve;                                       // 0x0030   (0x0088)  
};

/// Struct /Script/Engine.SoundTimecodeOffset
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSoundTimecodeOffset
{ 
	double                                             NumOfSecondsSinceMidnight;                                  // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.StreamedAudioPlatformData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FStreamedAudioPlatformData
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/Engine.SoundWaveSpectralData
/// Size: 0x000C (0x000000 - 0x00000C)
struct FSoundWaveSpectralData
{ 
	float                                              FrequencyHz;                                                // 0x0000   (0x0004)  
	float                                              Magnitude;                                                  // 0x0004   (0x0004)  
	float                                              NormalizedMagnitude;                                        // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.SoundWaveSpectralDataPerSound
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSoundWaveSpectralDataPerSound
{ 
	TArray<FSoundWaveSpectralData>                     SpectralData;                                               // 0x0000   (0x0010)  
	float                                              PlaybackTime;                                               // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	USoundWave*                                        SoundWave;                                                  // 0x0018   (0x0008)  
};

/// Struct /Script/Engine.SoundWaveEnvelopeDataPerSound
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSoundWaveEnvelopeDataPerSound
{ 
	float                                              Envelope;                                                   // 0x0000   (0x0004)  
	float                                              PlaybackTime;                                               // 0x0004   (0x0004)  
	USoundWave*                                        SoundWave;                                                  // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.SoundWaveSpectralDataEntry
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSoundWaveSpectralDataEntry
{ 
	float                                              Magnitude;                                                  // 0x0000   (0x0004)  
	float                                              NormalizedMagnitude;                                        // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.SoundWaveSpectralTimeData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FSoundWaveSpectralTimeData
{ 
	TArray<FSoundWaveSpectralDataEntry>                Data;                                                       // 0x0000   (0x0010)  
	float                                              TimeSec;                                                    // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/Engine.SoundWaveEnvelopeTimeData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSoundWaveEnvelopeTimeData
{ 
	float                                              Amplitude;                                                  // 0x0000   (0x0004)  
	float                                              TimeSec;                                                    // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.SoundWaveCuePoint
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSoundWaveCuePoint
{ 
	int32_t                                            CuePointID;                                                 // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	FString                                            Label;                                                      // 0x0008   (0x0010)  
	int32_t                                            FramePosition;                                              // 0x0018   (0x0004)  
	int32_t                                            FrameLength;                                                // 0x001C   (0x0004)  
};

/// Struct /Script/Engine.SoundWaveTimecodeInfo
/// Size: 0x0070 (0x000000 - 0x000070)
struct FSoundWaveTimecodeInfo
{ 
	uint64_t                                           NumSamplesSinceMidnight;                                    // 0x0000   (0x0008)  
	uint32_t                                           NumSamplesPerSecond;                                        // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            Description;                                                // 0x0010   (0x0010)  
	FString                                            OriginatorTime;                                             // 0x0020   (0x0010)  
	FString                                            OriginatorDate;                                             // 0x0030   (0x0010)  
	FString                                            OriginatorDescription;                                      // 0x0040   (0x0010)  
	FString                                            OriginatorReference;                                        // 0x0050   (0x0010)  
	FFrameRate                                         TimecodeRate;                                               // 0x0060   (0x0008)  
	bool                                               bTimecodeIsDropFrame;                                       // 0x0068   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0069   (0x0007)  MISSED
};

/// Struct /Script/Engine.StaticMeshOptimizationSettings
/// Size: 0x001C (0x000000 - 0x00001C)
struct FStaticMeshOptimizationSettings
{ 
	TEnumAsByte<EOptimizationType>                     ReductionMethod;                                            // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              NumOfTrianglesPercentage;                                   // 0x0004   (0x0004)  
	float                                              MaxDeviationPercentage;                                     // 0x0008   (0x0004)  
	float                                              WeldingThreshold;                                           // 0x000C   (0x0004)  
	bool                                               bRecalcNormals;                                             // 0x0010   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	float                                              NormalsThreshold;                                           // 0x0014   (0x0004)  
	char                                               SilhouetteImportance;                                       // 0x0018   (0x0001)  
	char                                               TextureImportance;                                          // 0x0019   (0x0001)  
	char                                               ShadingImportance;                                          // 0x001A   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1];                                       // 0x001B   (0x0001)  MISSED
};

/// Struct /Script/Engine.MeshSectionInfo
/// Size: 0x000C (0x000000 - 0x00000C)
struct FMeshSectionInfo
{ 
	int32_t                                            MaterialIndex;                                              // 0x0000   (0x0004)  
	bool                                               bEnableCollision;                                           // 0x0004   (0x0001)  
	bool                                               bCastShadow;                                                // 0x0005   (0x0001)  
	bool                                               bVisibleInRayTracing;                                       // 0x0006   (0x0001)  
	bool                                               bAffectDistanceFieldLighting;                               // 0x0007   (0x0001)  
	bool                                               bForceOpaque;                                               // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0009   (0x0003)  MISSED
};

/// Struct /Script/Engine.MeshSectionInfoMap
/// Size: 0x0050 (0x000000 - 0x000050)
struct FMeshSectionInfoMap
{ 
	TMap<uint32_t, FMeshSectionInfo>                   Map;                                                        // 0x0000   (0x0050)  
};

/// Struct /Script/Engine.AssetEditorOrbitCameraPosition
/// Size: 0x0050 (0x000000 - 0x000050)
struct FAssetEditorOrbitCameraPosition
{ 
	bool                                               bIsSet;                                                     // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FVector                                            CamOrbitPoint;                                              // 0x0008   (0x0018)  
	FVector                                            CamOrbitZoom;                                               // 0x0020   (0x0018)  
	FRotator                                           CamOrbitRotation;                                           // 0x0038   (0x0018)  
};

/// Struct /Script/Engine.StaticMaterial
/// Size: 0x0030 (0x000000 - 0x000030)
struct FStaticMaterial
{ 
	UMaterialInterface*                                MaterialInterface;                                          // 0x0000   (0x0008)  
	FName                                              MaterialSlotName;                                           // 0x0008   (0x0008)  
	FName                                              ImportedMaterialSlotName;                                   // 0x0010   (0x0008)  
	FMeshUVChannelInfo                                 UVChannelData;                                              // 0x0018   (0x0014)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/Engine.MaterialRemapIndex
/// Size: 0x0018 (0x000000 - 0x000018)
struct FMaterialRemapIndex
{ 
	uint32_t                                           ImportVersionKey;                                           // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<int32_t>                                    MaterialRemap;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.StaticParameterBase
/// Size: 0x0024 (0x000000 - 0x000024)
struct FStaticParameterBase
{ 
	FMaterialParameterInfo                             ParameterInfo;                                              // 0x0000   (0x0010)  
	bool                                               bOverride;                                                  // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	FGuid                                              ExpressionGUID;                                             // 0x0014   (0x0010)  
};

/// Struct /Script/Engine.StaticSwitchParameter
/// Size: 0x0004 (0x000024 - 0x000028)
struct FStaticSwitchParameter : FStaticParameterBase
{ 
	bool                                               Value;                                                      // 0x0024   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0025   (0x0003)  MISSED
};

/// Struct /Script/Engine.StaticComponentMaskParameter
/// Size: 0x0004 (0x000024 - 0x000028)
struct FStaticComponentMaskParameter : FStaticParameterBase
{ 
	bool                                               R;                                                          // 0x0024   (0x0001)  
	bool                                               G;                                                          // 0x0025   (0x0001)  
	bool                                               B;                                                          // 0x0026   (0x0001)  
	bool                                               A;                                                          // 0x0027   (0x0001)  
};

/// Struct /Script/Engine.StaticTerrainLayerWeightParameter
/// Size: 0x0034 (0x000000 - 0x000034)
struct FStaticTerrainLayerWeightParameter
{ 
	FMaterialParameterInfo                             ParameterInfo;                                              // 0x0000   (0x0010)  
	FGuid                                              ExpressionGUID;                                             // 0x0010   (0x0010)  
	bool                                               bOverride;                                                  // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0021   (0x0003)  MISSED
	FName                                              LayerName;                                                  // 0x0024   (0x0008)  
	int32_t                                            WeightmapIndex;                                             // 0x002C   (0x0004)  
	bool                                               bWeightBasedBlend;                                          // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0031   (0x0003)  MISSED
};

/// Struct /Script/Engine.StaticMaterialLayersParameter
/// Size: 0x0104 (0x000024 - 0x000128)
struct FStaticMaterialLayersParameter : FStaticParameterBase
{ 
	unsigned char                                      UnknownData00_2[0x4];                                       // 0x0024   (0x0004)  MISSED
	FMaterialLayersFunctions                           Value;                                                      // 0x0028   (0x0100)  
};

/// Struct /Script/Engine.StaticParameterSetRuntimeData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FStaticParameterSetRuntimeData
{ 
	FMaterialLayersFunctionsRuntimeData                MaterialLayers;                                             // 0x0000   (0x0020)  
	bool                                               bHasMaterialLayers : 1;                                     // 0x0020:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0021   (0x0007)  MISSED
};

/// Struct /Script/Engine.StaticParameterSetEditorOnlyData
/// Size: 0x00A0 (0x000000 - 0x0000A0)
struct FStaticParameterSetEditorOnlyData
{ 
	TArray<FStaticSwitchParameter>                     StaticSwitchParameters;                                     // 0x0000   (0x0010)  
	TArray<FStaticComponentMaskParameter>              StaticComponentMaskParameters;                              // 0x0010   (0x0010)  
	TArray<FStaticTerrainLayerWeightParameter>         TerrainLayerWeightParameters;                               // 0x0020   (0x0010)  
	FMaterialLayersFunctionsEditorOnlyData             MaterialLayers;                                             // 0x0030   (0x0070)  
};

/// Struct /Script/Engine.StaticParameterSet
/// Size: 0x0000 (0x000028 - 0x000028)
struct FStaticParameterSet : FStaticParameterSetRuntimeData
{ 
};

/// Struct /Script/Engine.EquirectProps
/// Size: 0x0090 (0x000000 - 0x000090)
struct FEquirectProps
{ 
	FBox2D                                             LeftUVRect;                                                 // 0x0000   (0x0028)  
	FBox2D                                             RightUVRect;                                                // 0x0028   (0x0028)  
	FVector2D                                          LeftScale;                                                  // 0x0050   (0x0010)  
	FVector2D                                          RightScale;                                                 // 0x0060   (0x0010)  
	FVector2D                                          LeftBias;                                                   // 0x0070   (0x0010)  
	FVector2D                                          RightBias;                                                  // 0x0080   (0x0010)  
};

/// Struct /Script/Engine.TextureSourceBlock
/// Size: 0x0018 (0x000000 - 0x000018)
struct FTextureSourceBlock
{ 
	int32_t                                            BlockX;                                                     // 0x0000   (0x0004)  
	int32_t                                            BlockY;                                                     // 0x0004   (0x0004)  
	int32_t                                            SizeX;                                                      // 0x0008   (0x0004)  
	int32_t                                            SizeY;                                                      // 0x000C   (0x0004)  
	int32_t                                            NumSlices;                                                  // 0x0010   (0x0004)  
	int32_t                                            NumMips;                                                    // 0x0014   (0x0004)  
};

/// Struct /Script/Engine.TextureSource
/// Size: 0x0068 (0x000000 - 0x000068)
struct FTextureSource
{ 
	unsigned char                                      UnknownData00_1[0x68];                                      // 0x0000   (0x0068)  MISSED
};

/// Struct /Script/Engine.TexturePlatformData
/// Size: 0x0030 (0x000000 - 0x000030)
struct FTexturePlatformData
{ 
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0000   (0x0030)  MISSED
};

/// Struct /Script/Engine.TextureFormatSettings
/// Size: 0x0002 (0x000000 - 0x000002)
struct FTextureFormatSettings
{ 
	TEnumAsByte<TextureCompressionSettings>            CompressionSettings;                                        // 0x0000   (0x0001)  
	bool                                               CompressionNoAlpha : 1;                                     // 0x0001:0 (0x0001)  
	bool                                               CompressionForceAlpha : 1;                                  // 0x0001:1 (0x0001)  
	bool                                               CompressionNone : 1;                                        // 0x0001:2 (0x0001)  
	bool                                               CompressionYCoCg : 1;                                       // 0x0001:3 (0x0001)  
	bool                                               SRGB : 1;                                                   // 0x0001:4 (0x0001)  
};

/// Struct /Script/Engine.TextureSourceColorSettings
/// Size: 0x0050 (0x000000 - 0x000050)
struct FTextureSourceColorSettings
{ 
	ETextureSourceEncoding                             EncodingOverride;                                           // 0x0000   (0x0001)  
	ETextureColorSpace                                 ColorSpace;                                                 // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	FVector2D                                          RedChromaticityCoordinate;                                  // 0x0008   (0x0010)  
	FVector2D                                          GreenChromaticityCoordinate;                                // 0x0018   (0x0010)  
	FVector2D                                          BlueChromaticityCoordinate;                                 // 0x0028   (0x0010)  
	FVector2D                                          WhiteChromaticityCoordinate;                                // 0x0038   (0x0010)  
	ETextureChromaticAdaptationMethod                  ChromaticAdaptationMethod;                                  // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0049   (0x0007)  MISSED
};

/// Struct /Script/Engine.StreamingRenderAssetPrimitiveInfo
/// Size: 0x0050 (0x000000 - 0x000050)
struct FStreamingRenderAssetPrimitiveInfo
{ 
	UStreamableRenderAsset*                            RenderAsset;                                                // 0x0000   (0x0008)  
	FBoxSphereBounds                                   Bounds;                                                     // 0x0008   (0x0038)  
	float                                              TexelFactor;                                                // 0x0040   (0x0004)  
	uint32_t                                           PackedRelativeBox;                                          // 0x0044   (0x0004)  
	bool                                               bAllowInvalidTexelFactorWhenUnregistered : 1;               // 0x0048:0 (0x0001)  
	bool                                               bAffectedByComponentScale : 1;                              // 0x0048:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0049   (0x0007)  MISSED
};

/// Struct /Script/Engine.StreamingTextureBuildInfo
/// Size: 0x000C (0x000000 - 0x00000C)
struct FStreamingTextureBuildInfo
{ 
	uint32_t                                           PackedRelativeBox;                                          // 0x0000   (0x0004)  
	int32_t                                            TextureLevelIndex;                                          // 0x0004   (0x0004)  
	float                                              TexelFactor;                                                // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.TimelineEventEntry
/// Size: 0x0014 (0x000000 - 0x000014)
struct FTimelineEventEntry
{ 
	float                                              Time;                                                       // 0x0000   (0x0004)  
	FDelegateProperty                                  EventFunc;                                                  // 0x0004   (0x0010)  
};

/// Struct /Script/Engine.TimelineVectorTrack
/// Size: 0x0040 (0x000000 - 0x000040)
struct FTimelineVectorTrack
{ 
	UCurveVector*                                      VectorCurve;                                                // 0x0000   (0x0008)  
	FDelegateProperty                                  InterpFunc;                                                 // 0x0008   (0x0010)  
	FName                                              TrackName;                                                  // 0x0018   (0x0008)  
	FName                                              VectorPropertyName;                                         // 0x0020   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0028   (0x0018)  MISSED
};

/// Struct /Script/Engine.TimelineFloatTrack
/// Size: 0x0040 (0x000000 - 0x000040)
struct FTimelineFloatTrack
{ 
	UCurveFloat*                                       FloatCurve;                                                 // 0x0000   (0x0008)  
	FDelegateProperty                                  InterpFunc;                                                 // 0x0008   (0x0010)  
	FName                                              TrackName;                                                  // 0x0018   (0x0008)  
	FName                                              FloatPropertyName;                                          // 0x0020   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0028   (0x0018)  MISSED
};

/// Struct /Script/Engine.TimelineLinearColorTrack
/// Size: 0x0040 (0x000000 - 0x000040)
struct FTimelineLinearColorTrack
{ 
	UCurveLinearColor*                                 LinearColorCurve;                                           // 0x0000   (0x0008)  
	FDelegateProperty                                  InterpFunc;                                                 // 0x0008   (0x0010)  
	FName                                              TrackName;                                                  // 0x0018   (0x0008)  
	FName                                              LinearColorPropertyName;                                    // 0x0020   (0x0008)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0028   (0x0018)  MISSED
};

/// Struct /Script/Engine.Timeline
/// Size: 0x0098 (0x000000 - 0x000098)
struct FTimeline
{ 
	TEnumAsByte<ETimelineLengthMode>                   LengthMode;                                                 // 0x0000   (0x0001)  
	bool                                               bLooping : 1;                                               // 0x0001:0 (0x0001)  
	bool                                               bReversePlayback : 1;                                       // 0x0001:1 (0x0001)  
	bool                                               bPlaying : 1;                                               // 0x0001:2 (0x0001)  
	unsigned char                                      UnknownData00_4[0x2];                                       // 0x0002   (0x0002)  MISSED
	float                                              Length;                                                     // 0x0004   (0x0004)  
	float                                              PlayRate;                                                   // 0x0008   (0x0004)  
	float                                              Position;                                                   // 0x000C   (0x0004)  
	TArray<FTimelineEventEntry>                        Events;                                                     // 0x0010   (0x0010)  
	TArray<FTimelineVectorTrack>                       InterpVectors;                                              // 0x0020   (0x0010)  
	TArray<FTimelineFloatTrack>                        InterpFloats;                                               // 0x0030   (0x0010)  
	TArray<FTimelineLinearColorTrack>                  InterpLinearColors;                                         // 0x0040   (0x0010)  
	FDelegateProperty                                  TimelinePostUpdateFunc;                                     // 0x0050   (0x0010)  
	FDelegateProperty                                  TimelineFinishedFunc;                                       // 0x0060   (0x0010)  
	TWeakObjectPtr<UObject*>                           PropertySetObject;                                          // 0x0070   (0x0008)  
	FName                                              DirectionPropertyName;                                      // 0x0078   (0x0008)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x0080   (0x0018)  MISSED
};

/// Struct /Script/Engine.UniqueNetIdReplNetSerializerConfig
/// Size: 0x0000 (0x000001 - 0x000001)
struct FUniqueNetIdReplNetSerializerConfig : FNetSerializerConfig
{ 
};

/// Struct /Script/Engine.ActorContainerID
/// Size: 0x0008 (0x000000 - 0x000008)
struct FActorContainerID
{ 
	uint64_t                                           ID;                                                         // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.StreamingSourceShape
/// Size: 0x0040 (0x000000 - 0x000040)
struct FStreamingSourceShape
{ 
	bool                                               bUseGridLoadingRange;                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              Radius;                                                     // 0x0004   (0x0004)  
	bool                                               bIsSector;                                                  // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              SectorAngle;                                                // 0x000C   (0x0004)  
	FVector                                            Location;                                                   // 0x0010   (0x0018)  
	FRotator                                           Rotation;                                                   // 0x0028   (0x0018)  
};

/// Struct /Script/Engine.WorldPartitionStreamingQuerySource
/// Size: 0x0088 (0x000000 - 0x000088)
struct FWorldPartitionStreamingQuerySource
{ 
	FVector                                            Location;                                                   // 0x0000   (0x0018)  
	float                                              Radius;                                                     // 0x0018   (0x0004)  
	bool                                               bUseGridLoadingRange;                                       // 0x001C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x001D   (0x0003)  MISSED
	TArray<FName>                                      DataLayers;                                                 // 0x0020   (0x0010)  
	bool                                               bDataLayersOnly;                                            // 0x0030   (0x0001)  
	bool                                               bSpatialQuery;                                              // 0x0031   (0x0001)  
	unsigned char                                      UnknownData01_6[0x56];                                      // 0x0032   (0x0056)  MISSED
};

/// Struct /Script/Engine.LightmassWorldInfoSettings
/// Size: 0x004C (0x000000 - 0x00004C)
struct FLightmassWorldInfoSettings
{ 
	float                                              StaticLightingLevelScale;                                   // 0x0000   (0x0004)  
	int32_t                                            NumIndirectLightingBounces;                                 // 0x0004   (0x0004)  
	int32_t                                            NumSkyLightingBounces;                                      // 0x0008   (0x0004)  
	float                                              IndirectLightingQuality;                                    // 0x000C   (0x0004)  
	float                                              IndirectLightingSmoothness;                                 // 0x0010   (0x0004)  
	FColor                                             EnvironmentColor;                                           // 0x0014   (0x0004)  
	float                                              EnvironmentIntensity;                                       // 0x0018   (0x0004)  
	float                                              EmissiveBoost;                                              // 0x001C   (0x0004)  
	float                                              DiffuseBoost;                                               // 0x0020   (0x0004)  
	TEnumAsByte<EVolumeLightingMethod>                 VolumeLightingMethod;                                       // 0x0024   (0x0001)  
	bool                                               bUseAmbientOcclusion : 1;                                   // 0x0025:0 (0x0001)  
	bool                                               bGenerateAmbientOcclusionMaterialMask : 1;                  // 0x0025:1 (0x0001)  
	bool                                               bVisualizeMaterialDiffuse : 1;                              // 0x0025:2 (0x0001)  
	bool                                               bVisualizeAmbientOcclusion : 1;                             // 0x0025:3 (0x0001)  
	bool                                               bCompressLightmaps : 1;                                     // 0x0025:4 (0x0001)  
	unsigned char                                      UnknownData00_4[0x2];                                       // 0x0026   (0x0002)  MISSED
	float                                              VolumetricLightmapDetailCellSize;                           // 0x0028   (0x0004)  
	float                                              VolumetricLightmapMaximumBrickMemoryMb;                     // 0x002C   (0x0004)  
	float                                              VolumetricLightmapSphericalHarmonicSmoothing;               // 0x0030   (0x0004)  
	float                                              VolumeLightSamplePlacementScale;                            // 0x0034   (0x0004)  
	float                                              DirectIlluminationOcclusionFraction;                        // 0x0038   (0x0004)  
	float                                              IndirectIlluminationOcclusionFraction;                      // 0x003C   (0x0004)  
	float                                              OcclusionExponent;                                          // 0x0040   (0x0004)  
	float                                              FullyOccludedSamplesFraction;                               // 0x0044   (0x0004)  
	float                                              MaxOcclusionDistance;                                       // 0x0048   (0x0004)  
};

/// Struct /Script/Engine.NetViewer
/// Size: 0x0048 (0x000000 - 0x000048)
struct FNetViewer
{ 
	UNetConnection*                                    Connection;                                                 // 0x0000   (0x0008)  
	AActor*                                            InViewer;                                                   // 0x0008   (0x0008)  
	AActor*                                            ViewTarget;                                                 // 0x0010   (0x0008)  
	FVector                                            ViewLocation;                                               // 0x0018   (0x0018)  
	FVector                                            ViewDir;                                                    // 0x0030   (0x0018)  
};

/// Struct /Script/Engine.HierarchicalSimplification
/// Size: 0x02D0 (0x000000 - 0x0002D0)
struct FHierarchicalSimplification
{ 
	float                                              TransitionScreenSize;                                       // 0x0000   (0x0004)  
	float                                              OverrideDrawDistance;                                       // 0x0004   (0x0004)  
	bool                                               bUseOverrideDrawDistance : 1;                               // 0x0008:0 (0x0001)  
	bool                                               bAllowSpecificExclusion : 1;                                // 0x0008:1 (0x0001)  
	bool                                               bOnlyGenerateClustersForVolumes : 1;                        // 0x0008:2 (0x0001)  
	bool                                               bReusePreviousLevelClusters : 1;                            // 0x0008:3 (0x0001)  
	EHierarchicalSimplificationMethod                  SimplificationMethod;                                       // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x000A   (0x0002)  MISSED
	FMeshProxySettings                                 ProxySetting;                                               // 0x000C   (0x00D0)  
	FMeshMergingSettings                               MergeSetting;                                               // 0x00DC   (0x00D0)  
	FMeshApproximationSettings                         ApproximateSettings;                                        // 0x01AC   (0x0118)  
	float                                              DesiredBoundRadius;                                         // 0x02C4   (0x0004)  
	float                                              DesiredFillingPercentage;                                   // 0x02C8   (0x0004)  
	int32_t                                            MinNumberOfActorsToBuild;                                   // 0x02CC   (0x0004)  
};

/// Struct /Script/Engine.MeshApproximationSettings
/// Size: 0x0118 (0x000000 - 0x000118)
struct FMeshApproximationSettings
{ 
	EMeshApproximationType                             OutputType;                                                 // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              ApproximationAccuracy;                                      // 0x0004   (0x0004)  
	int32_t                                            ClampVoxelDimension;                                        // 0x0008   (0x0004)  
	bool                                               bAttemptAutoThickening;                                     // 0x000C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x000D   (0x0003)  MISSED
	float                                              TargetMinThicknessMultiplier;                               // 0x0010   (0x0004)  
	bool                                               bIgnoreTinyParts;                                           // 0x0014   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	float                                              TinyPartSizeMultiplier;                                     // 0x0018   (0x0004)  
	EMeshApproximationBaseCappingType                  BaseCapping;                                                // 0x001C   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x001D   (0x0003)  MISSED
	float                                              WindingThreshold;                                           // 0x0020   (0x0004)  
	bool                                               bFillGaps;                                                  // 0x0024   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x0025   (0x0003)  MISSED
	float                                              GapDistance;                                                // 0x0028   (0x0004)  
	EOccludedGeometryFilteringPolicy                   OcclusionMethod;                                            // 0x002C   (0x0001)  
	bool                                               bOccludeFromBottom;                                         // 0x002D   (0x0001)  
	EMeshApproximationSimplificationPolicy             SimplifyMethod;                                             // 0x002E   (0x0001)  
	unsigned char                                      UnknownData05_5[0x1];                                       // 0x002F   (0x0001)  MISSED
	int32_t                                            TargetTriCount;                                             // 0x0030   (0x0004)  
	float                                              TrianglesPerM;                                              // 0x0034   (0x0004)  
	float                                              GeometricDeviation;                                         // 0x0038   (0x0004)  
	EMeshApproximationGroundPlaneClippingPolicy        GroundClipping;                                             // 0x003C   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x003D   (0x0003)  MISSED
	float                                              GroundClippingZHeight;                                      // 0x0040   (0x0004)  
	bool                                               bEstimateHardNormals;                                       // 0x0044   (0x0001)  
	unsigned char                                      UnknownData07_5[0x3];                                       // 0x0045   (0x0003)  MISSED
	float                                              HardNormalAngle;                                            // 0x0048   (0x0004)  
	EMeshApproximationUVGenerationPolicy               UVGenerationMethod;                                         // 0x004C   (0x0001)  
	unsigned char                                      UnknownData08_5[0x3];                                       // 0x004D   (0x0003)  MISSED
	int32_t                                            InitialPatchCount;                                          // 0x0050   (0x0004)  
	float                                              CurvatureAlignment;                                         // 0x0054   (0x0004)  
	float                                              MergingThreshold;                                           // 0x0058   (0x0004)  
	float                                              MaxAngleDeviation;                                          // 0x005C   (0x0004)  
	bool                                               bGenerateNaniteEnabledMesh;                                 // 0x0060   (0x0001)  
	unsigned char                                      UnknownData09_5[0x3];                                       // 0x0061   (0x0003)  MISSED
	float                                              NaniteProxyTrianglePercent;                                 // 0x0064   (0x0004)  
	bool                                               bSupportRayTracing;                                         // 0x0068   (0x0001)  
	bool                                               bAllowDistanceField;                                        // 0x0069   (0x0001)  
	unsigned char                                      UnknownData10_5[0x2];                                       // 0x006A   (0x0002)  MISSED
	int32_t                                            MultiSamplingAA;                                            // 0x006C   (0x0004)  
	int32_t                                            RenderCaptureResolution;                                    // 0x0070   (0x0004)  
	FMaterialProxySettings                             MaterialSettings;                                           // 0x0074   (0x0094)  
	float                                              CaptureFieldOfView;                                         // 0x0108   (0x0004)  
	float                                              NearPlaneDist;                                              // 0x010C   (0x0004)  
	bool                                               bUseRenderLODMeshes;                                        // 0x0110   (0x0001)  
	bool                                               bEnableSimplifyPrePass;                                     // 0x0111   (0x0001)  
	bool                                               bEnableParallelBaking;                                      // 0x0112   (0x0001)  
	bool                                               bPrintDebugMessages;                                        // 0x0113   (0x0001)  
	bool                                               bEmitFullDebugMesh;                                         // 0x0114   (0x0001)  
	unsigned char                                      UnknownData11_6[0x3];                                       // 0x0115   (0x0003)  MISSED
};

/// Struct /Script/Engine.MeshMergingSettings
/// Size: 0x00D0 (0x000000 - 0x0000D0)
struct FMeshMergingSettings
{ 
	int32_t                                            TargetLightMapResolution;                                   // 0x0000   (0x0004)  
	EUVOutput                                          OutputUVs;                                                  // 0x0004   (0x0008)  
	FMaterialProxySettings                             MaterialSettings;                                           // 0x000C   (0x0094)  
	int32_t                                            GutterSize;                                                 // 0x00A0   (0x0004)  
	EMeshLODSelectionType                              LODSelectionType;                                           // 0x00A4   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00A5   (0x0003)  MISSED
	int32_t                                            SpecificLOD;                                                // 0x00A8   (0x0004)  
	bool                                               bGenerateLightMapUV : 1;                                    // 0x00AC:0 (0x0001)  
	bool                                               bComputedLightMapResolution : 1;                            // 0x00AC:1 (0x0001)  
	bool                                               bPivotPointAtZero : 1;                                      // 0x00AC:2 (0x0001)  
	bool                                               bMergePhysicsData : 1;                                      // 0x00AC:3 (0x0001)  
	bool                                               bMergeMaterials : 1;                                        // 0x00AC:4 (0x0001)  
	bool                                               bCreateMergedMaterial : 1;                                  // 0x00AC:5 (0x0001)  
	bool                                               bBakeVertexDataToMesh : 1;                                  // 0x00AC:6 (0x0001)  
	bool                                               bUseVertexDataForBakingMaterial : 1;                        // 0x00AC:7 (0x0001)  
	bool                                               bUseTextureBinning : 1;                                     // 0x00AD:0 (0x0001)  
	bool                                               bReuseMeshLightmapUVs : 1;                                  // 0x00AD:1 (0x0001)  
	bool                                               bMergeEquivalentMaterials : 1;                              // 0x00AD:2 (0x0001)  
	bool                                               bUseLandscapeCulling : 1;                                   // 0x00AD:3 (0x0001)  
	bool                                               bIncludeImposters : 1;                                      // 0x00AD:4 (0x0001)  
	bool                                               bSupportRayTracing : 1;                                     // 0x00AD:5 (0x0001)  
	bool                                               bAllowDistanceField : 1;                                    // 0x00AD:6 (0x0001)  
	unsigned char                                      UnknownData01_4[0x2];                                       // 0x00AE   (0x0002)  MISSED
	FMeshNaniteSettings                                NaniteSettings;                                             // 0x00B0   (0x001C)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x00CC   (0x0004)  MISSED
};

/// Struct /Script/Engine.MeshProxySettings
/// Size: 0x00D0 (0x000000 - 0x0000D0)
struct FMeshProxySettings
{ 
	int32_t                                            ScreenSize;                                                 // 0x0000   (0x0004)  
	float                                              VoxelSize;                                                  // 0x0004   (0x0004)  
	FMaterialProxySettings                             MaterialSettings;                                           // 0x0008   (0x0094)  
	float                                              MergeDistance;                                              // 0x009C   (0x0004)  
	FColor                                             UnresolvedGeometryColor;                                    // 0x00A0   (0x0004)  
	float                                              MaxRayCastDist;                                             // 0x00A4   (0x0004)  
	float                                              HardAngleThreshold;                                         // 0x00A8   (0x0004)  
	int32_t                                            LightMapResolution;                                         // 0x00AC   (0x0004)  
	TEnumAsByte<EProxyNormalComputationMethod>         NormalCalculationMethod;                                    // 0x00B0   (0x0001)  
	TEnumAsByte<ELandscapeCullingPrecision>            LandscapeCullingPrecision;                                  // 0x00B1   (0x0001)  
	bool                                               bCalculateCorrectLODModel : 1;                              // 0x00B2:0 (0x0001)  
	bool                                               bOverrideVoxelSize : 1;                                     // 0x00B2:1 (0x0001)  
	bool                                               bOverrideTransferDistance : 1;                              // 0x00B2:2 (0x0001)  
	bool                                               bUseHardAngleThreshold : 1;                                 // 0x00B2:3 (0x0001)  
	bool                                               bComputeLightMapResolution : 1;                             // 0x00B2:4 (0x0001)  
	bool                                               bRecalculateNormals : 1;                                    // 0x00B2:5 (0x0001)  
	bool                                               bUseLandscapeCulling : 1;                                   // 0x00B2:6 (0x0001)  
	bool                                               bSupportRayTracing : 1;                                     // 0x00B2:7 (0x0001)  
	bool                                               bAllowDistanceField : 1;                                    // 0x00B3:0 (0x0001)  
	bool                                               bReuseMeshLightmapUVs : 1;                                  // 0x00B3:1 (0x0001)  
	bool                                               bGroupIdenticalMeshesForBaking : 1;                         // 0x00B3:2 (0x0001)  
	bool                                               bCreateCollision : 1;                                       // 0x00B3:3 (0x0001)  
	bool                                               bAllowVertexColors : 1;                                     // 0x00B3:4 (0x0001)  
	bool                                               bGenerateLightmapUVs : 1;                                   // 0x00B3:5 (0x0001)  
	FMeshNaniteSettings                                NaniteSettings;                                             // 0x00B4   (0x001C)  
};

/// Struct /Script/Engine.BroadphaseSettings
/// Size: 0x0080 (0x000000 - 0x000080)
struct FBroadphaseSettings
{ 
	bool                                               bUseMBPOnClient;                                            // 0x0000   (0x0001)  
	bool                                               bUseMBPOnServer;                                            // 0x0001   (0x0001)  
	bool                                               bUseMBPOuterBounds;                                         // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x0003   (0x0005)  MISSED
	FBox                                               MBPBounds;                                                  // 0x0008   (0x0038)  
	FBox                                               MBPOuterBounds;                                             // 0x0040   (0x0038)  
	uint32_t                                           MBPNumSubdivs;                                              // 0x0078   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x007C   (0x0004)  MISSED
};

/// Struct /Script/Engine.AttributeKey
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAttributeKey
{ 
	float                                              Time;                                                       // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x14];                                      // 0x0004   (0x0014)  MISSED
};

/// Struct /Script/Engine.AttributeCurve
/// Size: 0x0048 (0x000068 - 0x0000B0)
struct FAttributeCurve : FIndexedCurve
{ 
	TArray<FAttributeKey>                              Keys;                                                       // 0x0068   (0x0010)  
	FSoftObjectPath                                    ScriptStructPath;                                           // 0x0078   (0x0020)  
	UScriptStruct*                                     ScriptStruct;                                               // 0x0098   (0x0008)  
	bool                                               bShouldInterpolate;                                         // 0x00A0   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x00A1   (0x000F)  MISSED
};

/// Struct /Script/Engine.QuartzPulseOverrideStep
/// Size: 0x0008 (0x000000 - 0x000008)
struct FQuartzPulseOverrideStep
{ 
	int32_t                                            NumberOfPulses;                                             // 0x0000   (0x0004)  
	EQuartzCommandQuantization                         PulseDuration;                                              // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0005   (0x0003)  MISSED
};

/// Struct /Script/Engine.QuartzTimeSignature
/// Size: 0x0018 (0x000000 - 0x000018)
struct FQuartzTimeSignature
{ 
	int32_t                                            NumBeats;                                                   // 0x0000   (0x0004)  
	EQuartzTimeSignatureQuantization                   BeatType;                                                   // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0005   (0x0003)  MISSED
	TArray<FQuartzPulseOverrideStep>                   OptionalPulseOverride;                                      // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.QuartzTransportTimeStamp
/// Size: 0x0010 (0x000000 - 0x000010)
struct FQuartzTransportTimeStamp
{ 
	int32_t                                            Bars;                                                       // 0x0000   (0x0004)  
	int32_t                                            Beat;                                                       // 0x0004   (0x0004)  
	float                                              BeatFraction;                                               // 0x0008   (0x0004)  
	float                                              Seconds;                                                    // 0x000C   (0x0004)  
};

/// Struct /Script/Engine.QuartzClockSettings
/// Size: 0x0020 (0x000000 - 0x000020)
struct FQuartzClockSettings
{ 
	FQuartzTimeSignature                               TimeSignature;                                              // 0x0000   (0x0018)  
	bool                                               bIgnoreLevelChange;                                         // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/Engine.QuartzQuantizationBoundary
/// Size: 0x0020 (0x000000 - 0x000020)
struct FQuartzQuantizationBoundary
{ 
	EQuartzCommandQuantization                         Quantization;                                               // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              Multiplier;                                                 // 0x0004   (0x0004)  
	EQuarztQuantizationReference                       CountingReferencePoint;                                     // 0x0008   (0x0001)  
	bool                                               bFireOnClockStart;                                          // 0x0009   (0x0001)  
	bool                                               bCancelCommandIfClockIsNotRunning;                          // 0x000A   (0x0001)  
	bool                                               bResetClockOnQueued;                                        // 0x000B   (0x0001)  
	bool                                               bResumeClockOnQueued;                                       // 0x000C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x13];                                      // 0x000D   (0x0013)  MISSED
};

/// Struct /Script/Engine.NavAvoidanceData
/// Size: 0x0058 (0x000000 - 0x000058)
struct FNavAvoidanceData
{ 
	unsigned char                                      UnknownData00_1[0x58];                                      // 0x0000   (0x0058)  MISSED
};

/// Struct /Script/Engine.MovementProperties
/// Size: 0x0001 (0x000000 - 0x000001)
struct FMovementProperties
{ 
	bool                                               bCanCrouch : 1;                                             // 0x0000:0 (0x0001)  
	bool                                               bCanJump : 1;                                               // 0x0000:1 (0x0001)  
	bool                                               bCanWalk : 1;                                               // 0x0000:2 (0x0001)  
	bool                                               bCanSwim : 1;                                               // 0x0000:3 (0x0001)  
	bool                                               bCanFly : 1;                                                // 0x0000:4 (0x0001)  
};

/// Struct /Script/Engine.NavAgentProperties
/// Size: 0x0037 (0x000001 - 0x000038)
struct FNavAgentProperties : FMovementProperties
{ 
	unsigned char                                      UnknownData00_2[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              AgentRadius;                                                // 0x0004   (0x0004)  
	float                                              AgentHeight;                                                // 0x0008   (0x0004)  
	float                                              AgentStepHeight;                                            // 0x000C   (0x0004)  
	float                                              NavWalkingSearchHeightScale;                                // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FSoftClassPath                                     PreferredNavData;                                           // 0x0018   (0x0020)  
};

/// Struct /Script/Engine.NavDataConfig
/// Size: 0x0060 (0x000038 - 0x000098)
struct FNavDataConfig : FNavAgentProperties
{ 
	FName                                              Name;                                                       // 0x0038   (0x0008)  
	FColor                                             Color;                                                      // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	FVector                                            DefaultQueryExtent;                                         // 0x0048   (0x0018)  
	UClass*                                            NavigationDataClass;                                        // 0x0060   (0x0008)  
	TWeakObjectPtr<UClass*>                            NavDataClass;                                               // 0x0068   (0x0030)  
};

/// Struct /Script/Engine.AlphaBlendArgs
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAlphaBlendArgs
{ 
	UCurveFloat*                                       CustomCurve;                                                // 0x0000   (0x0008)  
	float                                              BlendTime;                                                  // 0x0008   (0x0004)  
	EAlphaBlendOption                                  BlendOption;                                                // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
};

/// Struct /Script/Engine.BlendSampleData
/// Size: 0x0060 (0x000000 - 0x000060)
struct FBlendSampleData
{ 
	int32_t                                            SampleDataIndex;                                            // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	UAnimSequence*                                     Animation;                                                  // 0x0008   (0x0008)  
	float                                              TotalWeight;                                                // 0x0010   (0x0004)  
	float                                              WeightRate;                                                 // 0x0014   (0x0004)  
	float                                              Time;                                                       // 0x0018   (0x0004)  
	float                                              PreviousTime;                                               // 0x001C   (0x0004)  
	float                                              SamplePlayRate;                                             // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_6[0x3C];                                      // 0x0024   (0x003C)  MISSED
};

/// Struct /Script/Engine.BlendFilter
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBlendFilter
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/Engine.MarkerSyncAnimPosition
/// Size: 0x0014 (0x000000 - 0x000014)
struct FMarkerSyncAnimPosition
{ 
	FName                                              PreviousMarkerName;                                         // 0x0000   (0x0008)  
	FName                                              NextMarkerName;                                             // 0x0008   (0x0008)  
	float                                              PositionBetweenMarkers;                                     // 0x0010   (0x0004)  
};

/// Struct /Script/Engine.AnimTickRecord
/// Size: 0x0070 (0x000000 - 0x000070)
struct FAnimTickRecord
{ 
	UAnimationAsset*                                   SourceAsset;                                                // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x68];                                      // 0x0008   (0x0068)  MISSED
};

/// Struct /Script/Engine.AnimGroupInstance
/// Size: 0x0078 (0x000000 - 0x000078)
struct FAnimGroupInstance
{ 
	unsigned char                                      UnknownData00_1[0x78];                                      // 0x0000   (0x0078)  MISSED
};

/// Struct /Script/Engine.RootMotionMovementParams
/// Size: 0x0070 (0x000000 - 0x000070)
struct FRootMotionMovementParams
{ 
	bool                                               bHasRootMotion;                                             // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              BlendWeight;                                                // 0x0004   (0x0004)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0008   (0x0008)  MISSED
	FTransform                                         RootMotionTransform;                                        // 0x0010   (0x0060)  
};

/// Struct /Script/Engine.AnimationGroupReference
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAnimationGroupReference
{ 
	EAnimSyncMethod                                    Method;                                                     // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FName                                              GroupName;                                                  // 0x0004   (0x0008)  
	TEnumAsByte<EAnimGroupRole>                        GroupRole;                                                  // 0x000C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x000D   (0x0003)  MISSED
};

/// Struct /Script/Engine.EncounteredStateMachineStack
/// Size: 0x0030 (0x000000 - 0x000030)
struct FEncounteredStateMachineStack
{ 
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0000   (0x0030)  MISSED
};

/// Struct /Script/Engine.AnimationRecordingSettings
/// Size: 0x0038 (0x000000 - 0x000038)
struct FAnimationRecordingSettings
{ 
	bool                                               bRecordInWorldSpace;                                        // 0x0000   (0x0001)  
	bool                                               bRemoveRootAnimation;                                       // 0x0001   (0x0001)  
	bool                                               bAutoSaveAsset;                                             // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0003   (0x0001)  MISSED
	FFrameRate                                         SampleFrameRate;                                            // 0x0004   (0x0008)  
	float                                              Length;                                                     // 0x000C   (0x0004)  
	EAnimInterpolationType                             Interpolation;                                              // 0x0010   (0x0001)  
	TEnumAsByte<ERichCurveInterpMode>                  InterpMode;                                                 // 0x0011   (0x0001)  
	TEnumAsByte<ERichCurveTangentMode>                 TangentMode;                                                // 0x0012   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0013   (0x0001)  MISSED
	bool                                               bRecordTransforms;                                          // 0x0014   (0x0001)  
	bool                                               bRecordMorphTargets;                                        // 0x0015   (0x0001)  
	bool                                               bRecordAttributeCurves;                                     // 0x0016   (0x0001)  
	bool                                               bRecordMaterialCurves;                                      // 0x0017   (0x0001)  
	TArray<FString>                                    IncludeAnimationNames;                                      // 0x0018   (0x0010)  
	TArray<FString>                                    ExcludeAnimationNames;                                      // 0x0028   (0x0010)  
};

/// Struct /Script/Engine.StateMachineStateDebugData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FStateMachineStateDebugData
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/Engine.StateMachineDebugData
/// Size: 0x0150 (0x000000 - 0x000150)
struct FStateMachineDebugData
{ 
	unsigned char                                      UnknownData00_1[0x150];                                     // 0x0000   (0x0150)  MISSED
};

/// Struct /Script/Engine.AnimationFrameSnapshot
/// Size: 0x0001 (0x000000 - 0x000001)
struct FAnimationFrameSnapshot
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.AnimBlueprintDebugData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FAnimBlueprintDebugData
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.AnimBlueprintMutableData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FAnimBlueprintMutableData
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.AnimBlueprintConstantData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FAnimBlueprintConstantData
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.AnimBlueprintFunctionData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FAnimBlueprintFunctionData
{ 
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0000   (0x0020)  MISSED
	TArray<InputPoseNodeProperties>                    InputPoseNodeProperties;                                    // 0x0020   (0x0010)  
	TArray<InputProperties>                            InputProperties;                                            // 0x0030   (0x0010)  
};

/// Struct /Script/Engine.AnimBlueprintFunction
/// Size: 0x0078 (0x000000 - 0x000078)
struct FAnimBlueprintFunction
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	FName                                              Group;                                                      // 0x0008   (0x0008)  
	int32_t                                            OutputPoseNodeIndex;                                        // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	TArray<FName>                                      InputPoseNames;                                             // 0x0018   (0x0010)  
	TArray<int32_t>                                    InputPoseNodeIndices;                                       // 0x0028   (0x0010)  
	unsigned char                                      UnknownData01_5[0x38];                                      // 0x0038   (0x0038)  MISSED
	bool                                               bImplemented;                                               // 0x0070   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0071   (0x0007)  MISSED
};

/// Struct /Script/Engine.CachedPoseIndices
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCachedPoseIndices
{ 
	TArray<int32_t>                                    OrderedSavedPoseNodeIndices;                                // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.GraphAssetPlayerInformation
/// Size: 0x0010 (0x000000 - 0x000010)
struct FGraphAssetPlayerInformation
{ 
	TArray<int32_t>                                    PlayerNodeIndices;                                          // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.AnimGraphBlendOptions
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAnimGraphBlendOptions
{ 
	float                                              BlendInTime;                                                // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	UBlendProfile*                                     BlendInProfile;                                             // 0x0008   (0x0008)  
	float                                              BlendOutTime;                                               // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	UBlendProfile*                                     BlendOutProfile;                                            // 0x0018   (0x0008)  
};

/// Struct /Script/Engine.RootMotionExtractionStep
/// Size: 0x0010 (0x000000 - 0x000010)
struct FRootMotionExtractionStep
{ 
	UAnimSequence*                                     AnimSequence;                                               // 0x0000   (0x0008)  
	float                                              StartPosition;                                              // 0x0008   (0x0004)  
	float                                              EndPosition;                                                // 0x000C   (0x0004)  
};

/// Struct /Script/Engine.AnimSegment
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAnimSegment
{ 
	UAnimSequenceBase*                                 AnimReference;                                              // 0x0000   (0x0008)  
	float                                              StartPos;                                                   // 0x0008   (0x0004)  
	float                                              AnimStartTime;                                              // 0x000C   (0x0004)  
	float                                              AnimEndTime;                                                // 0x0010   (0x0004)  
	float                                              AnimPlayRate;                                               // 0x0014   (0x0004)  
	int32_t                                            LoopingCount;                                               // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/Engine.AnimTrack
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAnimTrack
{ 
	TArray<FAnimSegment>                               AnimSegments;                                               // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.BoneAnimationTrack
/// Size: 0x0040 (0x000000 - 0x000040)
struct FBoneAnimationTrack
{ 
	FRawAnimSequenceTrack                              InternalTrackData;                                          // 0x0000   (0x0030)  
	int32_t                                            BoneTreeIndex;                                              // 0x0030   (0x0004)  
	FName                                              Name;                                                       // 0x0034   (0x0008)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Struct /Script/Engine.AnimationCurveData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAnimationCurveData
{ 
	TArray<FFloatCurve>                                FloatCurves;                                                // 0x0000   (0x0010)  
	TArray<FTransformCurve>                            TransformCurves;                                            // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.AnimatedBoneAttribute
/// Size: 0x00F0 (0x000000 - 0x0000F0)
struct FAnimatedBoneAttribute
{ 
	FAnimationAttributeIdentifier                      Identifier;                                                 // 0x0000   (0x0040)  
	FAttributeCurve                                    Curve;                                                      // 0x0040   (0x00B0)  
};

/// Struct /Script/Engine.AnimExecutionContext
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAnimExecutionContext
{ 
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0000   (0x0010)  MISSED
};

/// Struct /Script/Engine.AnimInitializationContext
/// Size: 0x0000 (0x000010 - 0x000010)
struct FAnimInitializationContext : FAnimExecutionContext
{ 
};

/// Struct /Script/Engine.AnimUpdateContext
/// Size: 0x0000 (0x000010 - 0x000010)
struct FAnimUpdateContext : FAnimExecutionContext
{ 
};

/// Struct /Script/Engine.AnimPoseContext
/// Size: 0x0000 (0x000010 - 0x000010)
struct FAnimPoseContext : FAnimExecutionContext
{ 
};

/// Struct /Script/Engine.AnimComponentSpacePoseContext
/// Size: 0x0000 (0x000010 - 0x000010)
struct FAnimComponentSpacePoseContext : FAnimExecutionContext
{ 
};

/// Struct /Script/Engine.A2Pose
/// Size: 0x0010 (0x000000 - 0x000010)
struct FA2Pose
{ 
	TArray<FTransform>                                 Bones;                                                      // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.A2CSPose
/// Size: 0x0018 (0x000010 - 0x000028)
struct FA2CSPose : FA2Pose
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0010   (0x0008)  MISSED
	TArray<char>                                       ComponentSpaceFlags;                                        // 0x0018   (0x0010)  
};

/// Struct /Script/Engine.SlotEvaluationPose
/// Size: 0x0090 (0x000000 - 0x000090)
struct FSlotEvaluationPose
{ 
	TEnumAsByte<EAdditiveAnimationType>                AdditiveType;                                               // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              Weight;                                                     // 0x0004   (0x0004)  
	unsigned char                                      UnknownData01_6[0x88];                                      // 0x0008   (0x0088)  MISSED
};

/// Struct /Script/Engine.CompositeSection
/// Size: 0x0028 (0x000030 - 0x000058)
struct FCompositeSection : FAnimLinkableElement
{ 
	FName                                              SectionName;                                                // 0x0030   (0x0008)  
	float                                              StartTime;                                                  // 0x0038   (0x0004)  
	FName                                              NextSectionName;                                            // 0x003C   (0x0008)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	TArray<UAnimMetaData*>                             MetaData;                                                   // 0x0048   (0x0010)  
};

/// Struct /Script/Engine.SlotAnimationTrack
/// Size: 0x0018 (0x000000 - 0x000018)
struct FSlotAnimationTrack
{ 
	FName                                              SlotName;                                                   // 0x0000   (0x0008)  
	FAnimTrack                                         AnimTrack;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.BranchingPoint
/// Size: 0x0010 (0x000030 - 0x000040)
struct FBranchingPoint : FAnimLinkableElement
{ 
	FName                                              EventName;                                                  // 0x0030   (0x0008)  
	float                                              DisplayTime;                                                // 0x0038   (0x0004)  
	float                                              TriggerTimeOffset;                                          // 0x003C   (0x0004)  
};

/// Struct /Script/Engine.BranchingPointMarker
/// Size: 0x000C (0x000000 - 0x00000C)
struct FBranchingPointMarker
{ 
	int32_t                                            NotifyIndex;                                                // 0x0000   (0x0004)  
	float                                              TriggerTime;                                                // 0x0004   (0x0004)  
	TEnumAsByte<EAnimNotifyEventType>                  NotifyEventType;                                            // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0009   (0x0003)  MISSED
};

/// Struct /Script/Engine.MontageBlendSettings
/// Size: 0x0020 (0x000000 - 0x000020)
struct FMontageBlendSettings
{ 
	UBlendProfile*                                     BlendProfile;                                               // 0x0000   (0x0008)  
	FAlphaBlendArgs                                    Blend;                                                      // 0x0008   (0x0010)  
	EMontageBlendMode                                  BlendMode;                                                  // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/Engine.AnimMontageInstance
/// Size: 0x01C8 (0x000000 - 0x0001C8)
struct FAnimMontageInstance
{ 
	UAnimMontage*                                      Montage;                                                    // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_5[0x20];                                      // 0x0008   (0x0020)  MISSED
	bool                                               bPlaying;                                                   // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	float                                              DefaultBlendTimeMultiplier;                                 // 0x002C   (0x0004)  
	unsigned char                                      UnknownData02_5[0xC8];                                      // 0x0030   (0x00C8)  MISSED
	TArray<int32_t>                                    NextSections;                                               // 0x00F8   (0x0010)  
	TArray<int32_t>                                    PrevSections;                                               // 0x0108   (0x0010)  
	unsigned char                                      UnknownData03_5[0x10];                                      // 0x0118   (0x0010)  MISSED
	TArray<FAnimNotifyEvent>                           ActiveStateBranchingPoints;                                 // 0x0128   (0x0010)  
	float                                              Position;                                                   // 0x0138   (0x0004)  
	float                                              PlayRate;                                                   // 0x013C   (0x0004)  
	FAlphaBlend                                        Blend;                                                      // 0x0140   (0x0030)  
	unsigned char                                      UnknownData04_5[0x34];                                      // 0x0170   (0x0034)  MISSED
	int32_t                                            DisableRootMotionCount;                                     // 0x01A4   (0x0004)  
	unsigned char                                      UnknownData05_6[0x20];                                      // 0x01A8   (0x0020)  MISSED
};

/// Struct /Script/Engine.AnimNodeData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FAnimNodeData
{ 
	TScriptInterface<Class>                            AnimClassInterface;                                         // 0x0000   (0x0010)  
	TArray<uint32_t>                                   Entries;                                                    // 0x0010   (0x0010)  
	int32_t                                            NodeIndex;                                                  // 0x0020   (0x0004)  
	EAnimNodeDataFlags                                 Flags;                                                      // 0x0024   (0x0004)  
};

/// Struct /Script/Engine.AnimNodeStructData
/// Size: 0x0058 (0x000000 - 0x000058)
struct FAnimNodeStructData
{ 
	TMap<FName, int32_t>                               NameToIndexMap;                                             // 0x0000   (0x0050)  
	int32_t                                            NumProperties;                                              // 0x0050   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0054   (0x0004)  MISSED
};

/// Struct /Script/Engine.AnimNodeFunctionRef
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAnimNodeFunctionRef
{ 
	FName                                              ClassName;                                                  // 0x0000   (0x0008)  
	FName                                              FunctionName;                                               // 0x0008   (0x0008)  
	UClass*                                            Class;                                                      // 0x0010   (0x0008)  
	UFunction*                                         Function;                                                   // 0x0018   (0x0008)  
};

/// Struct /Script/Engine.AnimNode_ConvertComponentToLocalSpace
/// Size: 0x0010 (0x000010 - 0x000020)
struct FAnimNode_ConvertComponentToLocalSpace : FAnimNode_Base
{ 
	FComponentSpacePoseLink                            ComponentPose;                                              // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.AnimNode_ConvertLocalToComponentSpace
/// Size: 0x0010 (0x000010 - 0x000020)
struct FAnimNode_ConvertLocalToComponentSpace : FAnimNode_Base
{ 
	FPoseLink                                          LocalPose;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.AnimNode_ApplyMeshSpaceAdditive
/// Size: 0x00C0 (0x000010 - 0x0000D0)
struct FAnimNode_ApplyMeshSpaceAdditive : FAnimNode_Base
{ 
	FPoseLink                                          Base;                                                       // 0x0010   (0x0010)  
	FPoseLink                                          Additive;                                                   // 0x0020   (0x0010)  
	EAnimAlphaInputType                                AlphaInputType;                                             // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	float                                              Alpha;                                                      // 0x0034   (0x0004)  
	bool                                               bAlphaBoolEnabled : 1;                                      // 0x0038:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x7];                                       // 0x0039   (0x0007)  MISSED
	FInputAlphaBoolBlend                               AlphaBoolBlend;                                             // 0x0040   (0x0048)  
	FName                                              AlphaCurveName;                                             // 0x0088   (0x0008)  
	FInputScaleBias                                    AlphaScaleBias;                                             // 0x0090   (0x0008)  
	FInputScaleBiasClamp                               AlphaScaleBiasClamp;                                        // 0x0098   (0x0030)  
	int32_t                                            LODThreshold;                                               // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x00CC   (0x0004)  MISSED
};

/// Struct /Script/Engine.InertializationRequest
/// Size: 0x0010 (0x000000 - 0x000010)
struct FInertializationRequest
{ 
	float                                              Duration;                                                   // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	UBlendProfile*                                     BlendProfile;                                               // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.InertializationPose
/// Size: 0x00D0 (0x000000 - 0x0000D0)
struct FInertializationPose
{ 
	unsigned char                                      UnknownData00_1[0xD0];                                      // 0x0000   (0x00D0)  MISSED
};

/// Struct /Script/Engine.InertializationBoneDiff
/// Size: 0x0060 (0x000000 - 0x000060)
struct FInertializationBoneDiff
{ 
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x0000   (0x0060)  MISSED
};

/// Struct /Script/Engine.InertializationCurveDiff
/// Size: 0x0008 (0x000000 - 0x000008)
struct FInertializationCurveDiff
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/Engine.InertializationPoseDiff
/// Size: 0x0028 (0x000000 - 0x000028)
struct FInertializationPoseDiff
{ 
	unsigned char                                      UnknownData00_1[0x28];                                      // 0x0000   (0x0028)  MISSED
};

/// Struct /Script/Engine.AnimNode_Inertialization
/// Size: 0x00F0 (0x000010 - 0x000100)
struct FAnimNode_Inertialization : FAnimNode_Base
{ 
	FPoseLink                                          Source;                                                     // 0x0010   (0x0010)  
	UBlendProfile*                                     DefaultBlendProfile;                                        // 0x0020   (0x0008)  
	TArray<FName>                                      FilteredCurves;                                             // 0x0028   (0x0010)  
	unsigned char                                      UnknownData00_5[0x68];                                      // 0x0038   (0x0068)  MISSED
	TArray<FInertializationRequest>                    RequestQueue;                                               // 0x00A0   (0x0010)  
	unsigned char                                      UnknownData01_6[0x50];                                      // 0x00B0   (0x0050)  MISSED
};

/// Struct /Script/Engine.AnimNode_LinkedAnimGraph
/// Size: 0x0060 (0x000058 - 0x0000B8)
struct FAnimNode_LinkedAnimGraph : FAnimNode_CustomProperty
{ 
	TArray<FPoseLink>                                  InputPoses;                                                 // 0x0058   (0x0010)  
	TArray<FName>                                      InputPoseNames;                                             // 0x0068   (0x0010)  
	UClass*                                            InstanceClass;                                              // 0x0078   (0x0008)  
	unsigned char                                      UnknownData00_5[0x18];                                      // 0x0080   (0x0018)  MISSED
	UBlendProfile*                                     PendingBlendOutProfile;                                     // 0x0098   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x00A0   (0x0008)  MISSED
	UBlendProfile*                                     PendingBlendInProfile;                                      // 0x00A8   (0x0008)  
	bool                                               bReceiveNotifiesFromLinkedInstances : 1;                    // 0x00B0:0 (0x0001)  
	bool                                               bPropagateNotifiesToLinkedInstances : 1;                    // 0x00B0:1 (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x00B1   (0x0007)  MISSED
};

/// Struct /Script/Engine.AnimNode_LinkedAnimLayer
/// Size: 0x0010 (0x0000B8 - 0x0000C8)
struct FAnimNode_LinkedAnimLayer : FAnimNode_LinkedAnimGraph
{ 
	UClass*                                            Interface;                                                  // 0x00B8   (0x0008)  
	FName                                              Layer;                                                      // 0x00C0   (0x0008)  
};

/// Struct /Script/Engine.AnimNode_LinkedInputPose
/// Size: 0x00B8 (0x000010 - 0x0000C8)
struct FAnimNode_LinkedInputPose : FAnimNode_Base
{ 
	FName                                              Name;                                                       // 0x0010   (0x0008)  
	FName                                              Graph;                                                      // 0x0018   (0x0008)  
	FPoseLink                                          InputPose;                                                  // 0x0020   (0x0010)  
	unsigned char                                      UnknownData00_6[0x98];                                      // 0x0030   (0x0098)  MISSED
};

/// Struct /Script/Engine.AnimNode_SaveCachedPose
/// Size: 0x00F8 (0x000010 - 0x000108)
struct FAnimNode_SaveCachedPose : FAnimNode_Base
{ 
	FPoseLink                                          Pose;                                                       // 0x0010   (0x0010)  
	FName                                              CachePoseName;                                              // 0x0020   (0x0008)  
	unsigned char                                      UnknownData00_6[0xE0];                                      // 0x0028   (0x00E0)  MISSED
};

/// Struct /Script/Engine.AnimNode_SequencePlayerBase
/// Size: 0x0008 (0x000038 - 0x000040)
struct FAnimNode_SequencePlayerBase : FAnimNode_AssetPlayerBase
{ 
	FInputScaleBiasClampState                          PlayRateScaleBiasClampState;                                // 0x0038   (0x0008)  
};

/// Struct /Script/Engine.InputScaleBiasClampState
/// Size: 0x0008 (0x000000 - 0x000008)
struct FInputScaleBiasClampState
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/Engine.AnimNode_SequencePlayer
/// Size: 0x0008 (0x000040 - 0x000048)
struct FAnimNode_SequencePlayer : FAnimNode_SequencePlayerBase
{ 
	UAnimSequenceBase*                                 Sequence;                                                   // 0x0040   (0x0008)  
};

/// Struct /Script/Engine.AnimNode_SequencePlayer_Standalone
/// Size: 0x0058 (0x000040 - 0x000098)
struct FAnimNode_SequencePlayer_Standalone : FAnimNode_SequencePlayerBase
{ 
	FName                                              GroupName;                                                  // 0x0040   (0x0008)  
	TEnumAsByte<EAnimGroupRole>                        GroupRole;                                                  // 0x0048   (0x0001)  
	EAnimSyncMethod                                    Method;                                                     // 0x0049   (0x0001)  
	bool                                               bIgnoreForRelevancyTest;                                    // 0x004A   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5];                                       // 0x004B   (0x0005)  MISSED
	UAnimSequenceBase*                                 Sequence;                                                   // 0x0050   (0x0008)  
	float                                              PlayRateBasis;                                              // 0x0058   (0x0004)  
	float                                              PlayRate;                                                   // 0x005C   (0x0004)  
	FInputScaleBiasClampConstants                      PlayRateScaleBiasClampConstants;                            // 0x0060   (0x002C)  
	float                                              StartPosition;                                              // 0x008C   (0x0004)  
	bool                                               bLoopAnimation;                                             // 0x0090   (0x0001)  
	bool                                               bStartFromMatchingPose;                                     // 0x0091   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x0092   (0x0006)  MISSED
};

/// Struct /Script/Engine.InputScaleBiasClampConstants
/// Size: 0x002C (0x000000 - 0x00002C)
struct FInputScaleBiasClampConstants
{ 
	bool                                               bMapRange;                                                  // 0x0000   (0x0001)  
	bool                                               bClampResult;                                               // 0x0001   (0x0001)  
	bool                                               bInterpResult;                                              // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0003   (0x0001)  MISSED
	FInputRange                                        InRange;                                                    // 0x0004   (0x0008)  
	FInputRange                                        OutRange;                                                   // 0x000C   (0x0008)  
	float                                              Scale;                                                      // 0x0014   (0x0004)  
	float                                              Bias;                                                       // 0x0018   (0x0004)  
	float                                              ClampMin;                                                   // 0x001C   (0x0004)  
	float                                              ClampMax;                                                   // 0x0020   (0x0004)  
	float                                              InterpSpeedIncreasing;                                      // 0x0024   (0x0004)  
	float                                              InterpSpeedDecreasing;                                      // 0x0028   (0x0004)  
};

/// Struct /Script/Engine.AnimationActiveTransitionEntry
/// Size: 0x00C8 (0x000000 - 0x0000C8)
struct FAnimationActiveTransitionEntry
{ 
	unsigned char                                      UnknownData00_2[0xB8];                                      // 0x0000   (0x00B8)  MISSED
	UBlendProfile*                                     BlendProfile;                                               // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x00C0   (0x0008)  MISSED
};

/// Struct /Script/Engine.AnimationPotentialTransition
/// Size: 0x0030 (0x000000 - 0x000030)
struct FAnimationPotentialTransition
{ 
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0000   (0x0030)  MISSED
};

/// Struct /Script/Engine.AnimNode_StateMachine
/// Size: 0x00B8 (0x000010 - 0x0000C8)
struct FAnimNode_StateMachine : FAnimNode_Base
{ 
	int32_t                                            StateMachineIndexInClass;                                   // 0x0010   (0x0004)  
	int32_t                                            MaxTransitionsPerFrame;                                     // 0x0014   (0x0004)  
	int32_t                                            MaxTransitionsRequests;                                     // 0x0018   (0x0004)  
	bool                                               bSkipFirstUpdateTransition;                                 // 0x001C   (0x0001)  
	bool                                               bReinitializeOnBecomingRelevant;                            // 0x001D   (0x0001)  
	bool                                               bCreateNotifyMetaData;                                      // 0x001E   (0x0001)  
	bool                                               bAllowConduitEntryStates;                                   // 0x001F   (0x0001)  
	unsigned char                                      UnknownData00_6[0xA8];                                      // 0x0020   (0x00A8)  MISSED
};

/// Struct /Script/Engine.AnimNode_TransitionPoseEvaluator
/// Size: 0x00A8 (0x000010 - 0x0000B8)
struct FAnimNode_TransitionPoseEvaluator : FAnimNode_Base
{ 
	unsigned char                                      UnknownData00_2[0x88];                                      // 0x0010   (0x0088)  MISSED
	int32_t                                            FramesToCachePose;                                          // 0x0098   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x009C   (0x0004)  MISSED
	TEnumAsByte<EEvaluatorDataSource>                  DataSource;                                                 // 0x00A0   (0x0001)  
	TEnumAsByte<EEvaluatorMode>                        EvaluatorMode;                                              // 0x00A1   (0x0001)  
	unsigned char                                      UnknownData02_6[0x16];                                      // 0x00A2   (0x0016)  MISSED
};

/// Struct /Script/Engine.AnimNode_TransitionResult
/// Size: 0x0018 (0x000010 - 0x000028)
struct FAnimNode_TransitionResult : FAnimNode_Base
{ 
	bool                                               bCanEnterTransition;                                        // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x17];                                      // 0x0011   (0x0017)  MISSED
};

/// Struct /Script/Engine.AnimNode_UseCachedPose
/// Size: 0x0018 (0x000010 - 0x000028)
struct FAnimNode_UseCachedPose : FAnimNode_Base
{ 
	FPoseLink                                          LinkToCachingNode;                                          // 0x0010   (0x0010)  
	FName                                              CachePoseName;                                              // 0x0020   (0x0008)  
};

/// Struct /Script/Engine.AnimNotifyEventReference
/// Size: 0x0028 (0x000000 - 0x000028)
struct FAnimNotifyEventReference
{ 
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0000   (0x0018)  MISSED
	UMirrorDataTable*                                  MirrorTable;                                                // 0x0018   (0x0008)  
	UObject*                                           NotifySource;                                               // 0x0020   (0x0008)  
};

/// Struct /Script/Engine.AnimNotifyArray
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAnimNotifyArray
{ 
	TArray<FAnimNotifyEventReference>                  Notifies;                                                   // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.AnimNotifyContext
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAnimNotifyContext
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/Engine.AnimNotifyQueue
/// Size: 0x0070 (0x000000 - 0x000070)
struct FAnimNotifyQueue
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0000   (0x0010)  MISSED
	TArray<FAnimNotifyEventReference>                  AnimNotifies;                                               // 0x0010   (0x0010)  
	TMap<FName, FAnimNotifyArray>                      UnfilteredMontageAnimNotifies;                              // 0x0020   (0x0050)  
};

/// Struct /Script/Engine.AnimSequenceTrackContainer
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAnimSequenceTrackContainer
{ 
	TArray<FRawAnimSequenceTrack>                      AnimationTracks;                                            // 0x0000   (0x0010)  
	TArray<FName>                                      TrackNames;                                                 // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.TranslationTrack
/// Size: 0x0020 (0x000000 - 0x000020)
struct FTranslationTrack
{ 
	TArray<FVector3f>                                  PosKeys;                                                    // 0x0000   (0x0010)  
	TArray<float>                                      Times;                                                      // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.RotationTrack
/// Size: 0x0020 (0x000000 - 0x000020)
struct FRotationTrack
{ 
	TArray<FQuat4f>                                    RotKeys;                                                    // 0x0000   (0x0010)  
	TArray<float>                                      Times;                                                      // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.ScaleTrack
/// Size: 0x0020 (0x000000 - 0x000020)
struct FScaleTrack
{ 
	TArray<FVector3f>                                  ScaleKeys;                                                  // 0x0000   (0x0010)  
	TArray<float>                                      Times;                                                      // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.CurveTrack
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCurveTrack
{ 
	FName                                              CurveName;                                                  // 0x0000   (0x0008)  
	TArray<float>                                      CurveWeights;                                               // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.CompressedTrack
/// Size: 0x0038 (0x000000 - 0x000038)
struct FCompressedTrack
{ 
	TArray<char>                                       ByteStream;                                                 // 0x0000   (0x0010)  
	TArray<float>                                      Times;                                                      // 0x0010   (0x0010)  
	float                                              Mins;                                                       // 0x0020   (0x000C)  
	float                                              Ranges;                                                     // 0x002C   (0x000C)  
};

/// Struct /Script/Engine.AnimSetMeshLinkup
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAnimSetMeshLinkup
{ 
	TArray<int32_t>                                    BoneToTrackTable;                                           // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.AnimNode_SingleNode
/// Size: 0x0020 (0x000010 - 0x000030)
struct FAnimNode_SingleNode : FAnimNode_Base
{ 
	FPoseLink                                          SourcePose;                                                 // 0x0010   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0020   (0x0010)  MISSED
};

/// Struct /Script/Engine.AnimSingleNodeInstanceProxy
/// Size: 0x0100 (0x000880 - 0x000980)
struct FAnimSingleNodeInstanceProxy : FAnimInstanceProxy
{ 
	unsigned char                                      UnknownData00_1[0x100];                                     // 0x0880   (0x0100)  MISSED
};

/// Struct /Script/Engine.AnimationTransitionRule
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAnimationTransitionRule
{ 
	FName                                              RuleToExecute;                                              // 0x0000   (0x0008)  
	bool                                               TransitionReturnVal;                                        // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            TransitionIndex;                                            // 0x000C   (0x0004)  
};

/// Struct /Script/Engine.AnimationStateBase
/// Size: 0x0008 (0x000000 - 0x000008)
struct FAnimationStateBase
{ 
	FName                                              StateName;                                                  // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.AnimationState
/// Size: 0x0020 (0x000008 - 0x000028)
struct FAnimationState : FAnimationStateBase
{ 
	TArray<FAnimationTransitionRule>                   Transitions;                                                // 0x0008   (0x0010)  
	int32_t                                            StateRootNodeIndex;                                         // 0x0018   (0x0004)  
	int32_t                                            StartNotify;                                                // 0x001C   (0x0004)  
	int32_t                                            EndNotify;                                                  // 0x0020   (0x0004)  
	int32_t                                            FullyBlendedNotify;                                         // 0x0024   (0x0004)  
};

/// Struct /Script/Engine.AnimationTransitionBetweenStates
/// Size: 0x0038 (0x000008 - 0x000040)
struct FAnimationTransitionBetweenStates : FAnimationStateBase
{ 
	int32_t                                            PreviousState;                                              // 0x0008   (0x0004)  
	int32_t                                            NextState;                                                  // 0x000C   (0x0004)  
	float                                              CrossfadeDuration;                                          // 0x0010   (0x0004)  
	int32_t                                            StartNotify;                                                // 0x0014   (0x0004)  
	int32_t                                            EndNotify;                                                  // 0x0018   (0x0004)  
	int32_t                                            InterruptNotify;                                            // 0x001C   (0x0004)  
	EAlphaBlendOption                                  BlendMode;                                                  // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0021   (0x0007)  MISSED
	UCurveFloat*                                       CustomCurve;                                                // 0x0028   (0x0008)  
	UBlendProfile*                                     BlendProfile;                                               // 0x0030   (0x0008)  
	TEnumAsByte<ETransitionLogicType>                  LogicType;                                                  // 0x0038   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Struct /Script/Engine.BakedStateExitTransition
/// Size: 0x0028 (0x000000 - 0x000028)
struct FBakedStateExitTransition
{ 
	int32_t                                            CanTakeDelegateIndex;                                       // 0x0000   (0x0004)  
	int32_t                                            CustomResultNodeIndex;                                      // 0x0004   (0x0004)  
	int32_t                                            TransitionIndex;                                            // 0x0008   (0x0004)  
	bool                                               bDesiredTransitionReturnValue;                              // 0x000C   (0x0001)  
	bool                                               bAutomaticRemainingTimeRule;                                // 0x000D   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x000E   (0x0002)  MISSED
	FName                                              SyncGroupNameToRequireValidMarkersRule;                     // 0x0010   (0x0008)  
	TArray<int32_t>                                    PoseEvaluatorLinks;                                         // 0x0018   (0x0010)  
};

/// Struct /Script/Engine.BakedAnimationState
/// Size: 0x0058 (0x000000 - 0x000058)
struct FBakedAnimationState
{ 
	FName                                              StateName;                                                  // 0x0000   (0x0008)  
	TArray<FBakedStateExitTransition>                  Transitions;                                                // 0x0008   (0x0010)  
	int32_t                                            StateRootNodeIndex;                                         // 0x0018   (0x0004)  
	int32_t                                            StartNotify;                                                // 0x001C   (0x0004)  
	int32_t                                            EndNotify;                                                  // 0x0020   (0x0004)  
	int32_t                                            FullyBlendedNotify;                                         // 0x0024   (0x0004)  
	bool                                               bIsAConduit;                                                // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	int32_t                                            EntryRuleNodeIndex;                                         // 0x002C   (0x0004)  
	TArray<int32_t>                                    PlayerNodeIndices;                                          // 0x0030   (0x0010)  
	TArray<int32_t>                                    LayerNodeIndices;                                           // 0x0040   (0x0010)  
	bool                                               bAlwaysResetOnEntry;                                        // 0x0050   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0051   (0x0007)  MISSED
};

/// Struct /Script/Engine.BakedAnimationStateMachine
/// Size: 0x0030 (0x000000 - 0x000030)
struct FBakedAnimationStateMachine
{ 
	FName                                              MachineName;                                                // 0x0000   (0x0008)  
	int32_t                                            InitialState;                                               // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<FBakedAnimationState>                       States;                                                     // 0x0010   (0x0010)  
	TArray<FAnimationTransitionBetweenStates>          Transitions;                                                // 0x0020   (0x0010)  
};

/// Struct /Script/Engine.AnimSubsystem_Base
/// Size: 0x0010 (0x000008 - 0x000018)
struct FAnimSubsystem_Base : FAnimSubsystem
{ 
	TArray<FExposedValueHandler>                       ExposedValueHandlers;                                       // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.ExposedValueHandler
/// Size: 0x0028 (0x000000 - 0x000028)
struct FExposedValueHandler
{ 
	TArray<FExposedValueCopyRecord>                    CopyRecords;                                                // 0x0000   (0x0010)  
	UFunction*                                         Function;                                                   // 0x0010   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0018   (0x0008)  MISSED
	FName                                              BoundFunction;                                              // 0x0020   (0x0008)  
};

/// Struct /Script/Engine.ExposedValueCopyRecord
/// Size: 0x0008 (0x000000 - 0x000008)
struct FExposedValueCopyRecord
{ 
	int32_t                                            CopyIndex;                                                  // 0x0000   (0x0004)  
	EPostCopyOperation                                 PostCopyOperation;                                          // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0005   (0x0003)  MISSED
};

/// Struct /Script/Engine.AnimSubsystemInstance_NodeRelevancy
/// Size: 0x00A0 (0x000008 - 0x0000A8)
struct FAnimSubsystemInstance_NodeRelevancy : FAnimSubsystemInstance
{ 
	unsigned char                                      UnknownData00_1[0xA0];                                      // 0x0008   (0x00A0)  MISSED
};

/// Struct /Script/Engine.AnimSubsystem_PropertyAccess
/// Size: 0x0078 (0x000008 - 0x000080)
struct FAnimSubsystem_PropertyAccess : FAnimSubsystem
{ 
	FPropertyAccessLibrary                             Library;                                                    // 0x0008   (0x0078)  
};

/// Struct /Script/Engine.PropertyAccessLibrary
/// Size: 0x0078 (0x000000 - 0x000078)
struct FPropertyAccessLibrary
{ 
	TArray<FPropertyAccessSegment>                     PathSegments;                                               // 0x0000   (0x0010)  
	TArray<FPropertyAccessPath>                        SrcPaths;                                                   // 0x0010   (0x0010)  
	TArray<FPropertyAccessPath>                        DestPaths;                                                  // 0x0020   (0x0010)  
	TArray<FPropertyAccessCopyBatch>                   CopyBatchArray;                                             // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x38];                                      // 0x0040   (0x0038)  MISSED
};

/// Struct /Script/Engine.PropertyAccessCopyBatch
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPropertyAccessCopyBatch
{ 
	TArray<FPropertyAccessCopy>                        Copies;                                                     // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.PropertyAccessCopy
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPropertyAccessCopy
{ 
	int32_t                                            AccessIndex;                                                // 0x0000   (0x0004)  
	int32_t                                            DestAccessStartIndex;                                       // 0x0004   (0x0004)  
	int32_t                                            DestAccessEndIndex;                                         // 0x0008   (0x0004)  
	EPropertyAccessCopyType                            Type;                                                       // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
};

/// Struct /Script/Engine.PropertyAccessPath
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPropertyAccessPath
{ 
	int32_t                                            PathSegmentStartIndex;                                      // 0x0000   (0x0004)  
	int32_t                                            PathSegmentCount;                                           // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.PropertyAccessSegment
/// Size: 0x0040 (0x000000 - 0x000040)
struct FPropertyAccessSegment
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	UStruct*                                           Struct;                                                     // 0x0008   (0x0008)  
	unsigned char                                      UnknownData00_5[0x20];                                      // 0x0010   (0x0020)  MISSED
	UFunction*                                         Function;                                                   // 0x0030   (0x0008)  
	int32_t                                            ArrayIndex;                                                 // 0x0038   (0x0004)  
	uint16_t                                           Flags;                                                      // 0x003C   (0x0002)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x003E   (0x0002)  MISSED
};

/// Struct /Script/Engine.AnimSubsystem_Tag
/// Size: 0x0058 (0x000008 - 0x000060)
struct FAnimSubsystem_Tag : FAnimSubsystem
{ 
	TMap<FName, int32_t>                               NodeIndices;                                                // 0x0008   (0x0050)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0058   (0x0008)  MISSED
};

/// Struct /Script/Engine.AssetMapping
/// Size: 0x0010 (0x000000 - 0x000010)
struct FAssetMapping
{ 
	UAnimationAsset*                                   SourceAsset;                                                // 0x0000   (0x0008)  
	UAnimationAsset*                                   TargetAsset;                                                // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.BlendProfileBoneEntry
/// Size: 0x0014 (0x000000 - 0x000014)
struct FBlendProfileBoneEntry
{ 
	FBoneReference                                     BoneReference;                                              // 0x0000   (0x0010)  
	float                                              BlendScale;                                                 // 0x0010   (0x0004)  
};

/// Struct /Script/Engine.CachedAnimStateData
/// Size: 0x001C (0x000000 - 0x00001C)
struct FCachedAnimStateData
{ 
	FName                                              StateMachineName;                                           // 0x0000   (0x0008)  
	FName                                              StateName;                                                  // 0x0008   (0x0008)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0010   (0x000C)  MISSED
};

/// Struct /Script/Engine.CachedAnimStateArray
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCachedAnimStateArray
{ 
	TArray<FCachedAnimStateData>                       States;                                                     // 0x0000   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0010   (0x0008)  MISSED
};

/// Struct /Script/Engine.CachedAnimAssetPlayerData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCachedAnimAssetPlayerData
{ 
	FName                                              StateMachineName;                                           // 0x0000   (0x0008)  
	FName                                              StateName;                                                  // 0x0008   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0010   (0x0008)  MISSED
};

/// Struct /Script/Engine.CachedAnimRelevancyData
/// Size: 0x001C (0x000000 - 0x00001C)
struct FCachedAnimRelevancyData
{ 
	FName                                              StateMachineName;                                           // 0x0000   (0x0008)  
	FName                                              StateName;                                                  // 0x0008   (0x0008)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0010   (0x000C)  MISSED
};

/// Struct /Script/Engine.CachedAnimTransitionData
/// Size: 0x0024 (0x000000 - 0x000024)
struct FCachedAnimTransitionData
{ 
	FName                                              StateMachineName;                                           // 0x0000   (0x0008)  
	FName                                              FromStateName;                                              // 0x0008   (0x0008)  
	FName                                              ToStateName;                                                // 0x0010   (0x0008)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0018   (0x000C)  MISSED
};

/// Struct /Script/Engine.NamedCurveValue
/// Size: 0x000C (0x000000 - 0x00000C)
struct FNamedCurveValue
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	float                                              Value;                                                      // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.InputClampConstants
/// Size: 0x0014 (0x000000 - 0x000014)
struct FInputClampConstants
{ 
	bool                                               bClampResult;                                               // 0x0000   (0x0001)  
	bool                                               bInterpResult;                                              // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0002   (0x0002)  MISSED
	float                                              ClampMin;                                                   // 0x0004   (0x0004)  
	float                                              ClampMax;                                                   // 0x0008   (0x0004)  
	float                                              InterpSpeedIncreasing;                                      // 0x000C   (0x0004)  
	float                                              InterpSpeedDecreasing;                                      // 0x0010   (0x0004)  
};

/// Struct /Script/Engine.InputClampState
/// Size: 0x0008 (0x000000 - 0x000008)
struct FInputClampState
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/Engine.MirrorTableRow
/// Size: 0x0018 (0x000008 - 0x000020)
struct FMirrorTableRow : FTableRowBase
{ 
	FName                                              Name;                                                       // 0x0008   (0x0008)  
	FName                                              MirroredName;                                               // 0x0010   (0x0008)  
	TEnumAsByte<EMirrorRowType>                        MirrorEntryType;                                            // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/Engine.MirrorFindReplaceExpression
/// Size: 0x0014 (0x000000 - 0x000014)
struct FMirrorFindReplaceExpression
{ 
	FName                                              FindExpression;                                             // 0x0000   (0x0008)  
	FName                                              ReplaceExpression;                                          // 0x0008   (0x0008)  
	TEnumAsByte<EMirrorFindReplaceMethod>              FindReplaceMethod;                                          // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0011   (0x0003)  MISSED
};

/// Struct /Script/Engine.TrajectorySample
/// Size: 0x0090 (0x000000 - 0x000090)
struct FTrajectorySample
{ 
	float                                              AccumulatedSeconds;                                         // 0x0000   (0x0004)  
	float                                              AccumulatedDistance;                                        // 0x0004   (0x0004)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0008   (0x0008)  MISSED
	FTransform                                         Transform;                                                  // 0x0010   (0x0060)  
	FVector                                            LinearVelocity;                                             // 0x0070   (0x0018)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0088   (0x0008)  MISSED
};

/// Struct /Script/Engine.TrajectorySampleRange
/// Size: 0x0018 (0x000000 - 0x000018)
struct FTrajectorySampleRange
{ 
	TArray<FTrajectorySample>                          Samples;                                                    // 0x0000   (0x0010)  
	int32_t                                            SampleRate;                                                 // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/Engine.NodeItem
/// Size: 0x0070 (0x000000 - 0x000070)
struct FNodeItem
{ 
	FName                                              ParentName;                                                 // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0008   (0x0008)  MISSED
	FTransform                                         Transform;                                                  // 0x0010   (0x0060)  
};

/// Struct /Script/Engine.PoseData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FPoseData
{ 
	TArray<FTransform>                                 LocalSpacePose;                                             // 0x0000   (0x0010)  
	TArray<float>                                      CurveData;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.PoseAssetInfluence
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPoseAssetInfluence
{ 
	int32_t                                            PoseIndex;                                                  // 0x0000   (0x0004)  
	int32_t                                            BoneTransformIndex;                                         // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.PoseAssetInfluences
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPoseAssetInfluences
{ 
	TArray<FPoseAssetInfluence>                        Influences;                                                 // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.PoseDataContainer
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPoseDataContainer
{ 
	TArray<FSmartName>                                 PoseNames;                                                  // 0x0000   (0x0010)  
	TArray<FName>                                      Tracks;                                                     // 0x0010   (0x0010)  
	TArray<int32_t>                                    TrackBoneIndices;                                           // 0x0020   (0x0010)  
	TArray<FPoseAssetInfluences>                       TrackPoseInfluenceIndices;                                  // 0x0030   (0x0010)  
	TArray<FPoseData>                                  Poses;                                                      // 0x0040   (0x0010)  
	TArray<FAnimCurveBase>                             Curves;                                                     // 0x0050   (0x0010)  
};

/// Struct /Script/Engine.PreviewAttachedObjectPair
/// Size: 0x0040 (0x000000 - 0x000040)
struct FPreviewAttachedObjectPair
{ 
	TWeakObjectPtr<UObject*>                           AttachedObject;                                             // 0x0000   (0x0030)  
	UObject*                                           Object;                                                     // 0x0030   (0x0008)  
	FName                                              AttachedTo;                                                 // 0x0038   (0x0008)  
};

/// Struct /Script/Engine.PreviewAssetAttachContainer
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPreviewAssetAttachContainer
{ 
	TArray<FPreviewAttachedObjectPair>                 AttachedObjects;                                            // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.PreviewMeshCollectionEntry
/// Size: 0x0060 (0x000000 - 0x000060)
struct FPreviewMeshCollectionEntry
{ 
	TWeakObjectPtr<USkeletalMesh*>                     SkeletalMesh;                                               // 0x0000   (0x0030)  
	TWeakObjectPtr<UAnimBlueprint*>                    AnimBlueprint;                                              // 0x0030   (0x0030)  
};

/// Struct /Script/Engine.Node
/// Size: 0x0090 (0x000000 - 0x000090)
struct FNode
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	FName                                              ParentName;                                                 // 0x0008   (0x0008)  
	FTransform                                         Transform;                                                  // 0x0010   (0x0060)  
	FString                                            DisplayName;                                                // 0x0070   (0x0010)  
	bool                                               bAdvanced;                                                  // 0x0080   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0081   (0x000F)  MISSED
};

/// Struct /Script/Engine.RigTransformConstraint
/// Size: 0x0010 (0x000000 - 0x000010)
struct FRigTransformConstraint
{ 
	TEnumAsByte<EConstraintTransform>                  TranformType;                                               // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FName                                              ParentSpace;                                                // 0x0004   (0x0008)  
	float                                              Weight;                                                     // 0x000C   (0x0004)  
};

/// Struct /Script/Engine.TransformBaseConstraint
/// Size: 0x0010 (0x000000 - 0x000010)
struct FTransformBaseConstraint
{ 
	TArray<FRigTransformConstraint>                    TransformConstraints;                                       // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.TransformBase
/// Size: 0x0028 (0x000000 - 0x000028)
struct FTransformBase
{ 
	FName                                              Node;                                                       // 0x0000   (0x0008)  
	FTransformBaseConstraint                           Constraints;                                                // 0x0008   (0x0020)  
};

/// Struct /Script/Engine.SkeletonToMeshLinkup
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSkeletonToMeshLinkup
{ 
	TArray<int32_t>                                    SkeletonToMeshTable;                                        // 0x0000   (0x0010)  
	TArray<int32_t>                                    MeshToSkeletonTable;                                        // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.BoneNode
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBoneNode
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	int32_t                                            ParentIndex;                                                // 0x0008   (0x0004)  
	TEnumAsByte<EBoneTranslationRetargetingMode>       TranslationRetargetingMode;                                 // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
};

/// Struct /Script/Engine.ReferencePose
/// Size: 0x0018 (0x000000 - 0x000018)
struct FReferencePose
{ 
	FName                                              PoseName;                                                   // 0x0000   (0x0008)  
	TArray<FTransform>                                 ReferencePose;                                              // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.BoneReductionSetting
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBoneReductionSetting
{ 
	TArray<FName>                                      BonesToRemove;                                              // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.NameMapping
/// Size: 0x0010 (0x000000 - 0x000010)
struct FNameMapping
{ 
	FName                                              NodeName;                                                   // 0x0000   (0x0008)  
	FName                                              BoneName;                                                   // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.RigConfiguration
/// Size: 0x0018 (0x000000 - 0x000018)
struct FRigConfiguration
{ 
	URig*                                              Rig;                                                        // 0x0000   (0x0008)  
	TArray<FNameMapping>                               BoneMappingTable;                                           // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.AnimSlotGroup
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAnimSlotGroup
{ 
	FName                                              GroupName;                                                  // 0x0000   (0x0008)  
	TArray<FName>                                      SlotNames;                                                  // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.VirtualBone
/// Size: 0x0018 (0x000000 - 0x000018)
struct FVirtualBone
{ 
	FName                                              SourceBoneName;                                             // 0x0000   (0x0008)  
	FName                                              TargetBoneName;                                             // 0x0008   (0x0008)  
	FName                                              VirtualBoneName;                                            // 0x0010   (0x0008)  
};

/// Struct /Script/Engine.SkinWeightProfileInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSkinWeightProfileInfo
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	FPerPlatformBool                                   DefaultProfile;                                             // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	FPerPlatformInt                                    DefaultProfileFromLODIndex;                                 // 0x000C   (0x0004)  
};

/// Struct /Script/Engine.SkinWeightProfileManagerTickFunction
/// Size: 0x0008 (0x000028 - 0x000030)
struct FSkinWeightProfileManagerTickFunction : FTickFunction
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Struct /Script/Engine.CurveMetaData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCurveMetaData
{ 
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0000   (0x0018)  MISSED
};

/// Struct /Script/Engine.SmartNameMapping
/// Size: 0x0070 (0x000000 - 0x000070)
struct FSmartNameMapping
{ 
	unsigned char                                      UnknownData00_1[0x70];                                      // 0x0000   (0x0070)  MISSED
};

/// Struct /Script/Engine.SmartNameContainer
/// Size: 0x0050 (0x000000 - 0x000050)
struct FSmartNameContainer
{ 
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0000   (0x0050)  MISSED
};

/// Struct /Script/Engine.TimeStretchCurveMarker
/// Size: 0x0010 (0x000000 - 0x000010)
struct FTimeStretchCurveMarker
{ 
	float                                              Time;                                                       // 0x0000   (0x000C)  
	float                                              Alpha;                                                      // 0x000C   (0x0004)  
};

/// Struct /Script/Engine.TimeStretchCurve
/// Size: 0x0028 (0x000000 - 0x000028)
struct FTimeStretchCurve
{ 
	float                                              SamplingRate;                                               // 0x0000   (0x0004)  
	float                                              CurveValueMinPrecision;                                     // 0x0004   (0x0004)  
	TArray<FTimeStretchCurveMarker>                    Markers;                                                    // 0x0008   (0x0010)  
	float                                              Sum_dT_i_by_C_i;                                            // 0x0018   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/Engine.TimeStretchCurveInstance
/// Size: 0x0030 (0x000000 - 0x000030)
struct FTimeStretchCurveInstance
{ 
	bool                                               bHasValidData;                                              // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2F];                                      // 0x0001   (0x002F)  MISSED
};

/// Struct /Script/Engine.AnimGroupInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAnimGroupInfo
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	FLinearColor                                       Color;                                                      // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.AnimParentNodeAssetOverride
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAnimParentNodeAssetOverride
{ 
	UAnimationAsset*                                   NewAsset;                                                   // 0x0000   (0x0008)  
	FGuid                                              ParentNodeGuid;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.AssetCompileData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FAssetCompileData
{ 
	TWeakObjectPtr<UObject*>                           Asset;                                                      // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.PrimaryAssetTypeInfo
/// Size: 0x0090 (0x000000 - 0x000090)
struct FPrimaryAssetTypeInfo
{ 
	FName                                              PrimaryAssetType;                                           // 0x0000   (0x0008)  
	TWeakObjectPtr<UClass*>                            AssetBaseClass;                                             // 0x0008   (0x0030)  
	UClass*                                            AssetBaseClassLoaded;                                       // 0x0038   (0x0008)  
	bool                                               bHasBlueprintClasses;                                       // 0x0040   (0x0001)  
	bool                                               bIsEditorOnly;                                              // 0x0041   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0042   (0x0006)  MISSED
	TArray<FDirectoryPath>                             Directories;                                                // 0x0048   (0x0010)  
	TArray<FSoftObjectPath>                            SpecificAssets;                                             // 0x0058   (0x0010)  
	FPrimaryAssetRules                                 Rules;                                                      // 0x0068   (0x000C)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0074   (0x0004)  MISSED
	TArray<FString>                                    AssetScanPaths;                                             // 0x0078   (0x0010)  
	bool                                               bIsDynamicAsset;                                            // 0x0088   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0089   (0x0003)  MISSED
	int32_t                                            NumberOfAssets;                                             // 0x008C   (0x0004)  
};

/// Struct /Script/Engine.AssetManagerSearchRules
/// Size: 0x0050 (0x000000 - 0x000050)
struct FAssetManagerSearchRules
{ 
	TArray<FString>                                    AssetScanPaths;                                             // 0x0000   (0x0010)  
	TArray<FString>                                    IncludePatterns;                                            // 0x0010   (0x0010)  
	TArray<FString>                                    ExcludePatterns;                                            // 0x0020   (0x0010)  
	UClass*                                            AssetBaseClass;                                             // 0x0030   (0x0008)  
	bool                                               bHasBlueprintClasses;                                       // 0x0038   (0x0001)  
	bool                                               bForceSynchronousScan;                                      // 0x0039   (0x0001)  
	bool                                               bSkipVirtualPathExpansion;                                  // 0x003A   (0x0001)  
	bool                                               bSkipManagerIncludeCheck;                                   // 0x003B   (0x0001)  
	unsigned char                                      UnknownData00_6[0x14];                                      // 0x003C   (0x0014)  MISSED
};

/// Struct /Script/Engine.AudioEffectParameters
/// Size: 0x0008 (0x000000 - 0x000008)
struct FAudioEffectParameters
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/Engine.AudioReverbEffect
/// Size: 0x0040 (0x000008 - 0x000048)
struct FAudioReverbEffect : FAudioEffectParameters
{ 
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x0008   (0x0040)  MISSED
};

/// Struct /Script/Engine.AudioQualitySettings
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAudioQualitySettings
{ 
	FText                                              DisplayName;                                                // 0x0000   (0x0018)  
	int32_t                                            MaxChannels;                                                // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/Engine.SoundDebugEntry
/// Size: 0x0028 (0x000000 - 0x000028)
struct FSoundDebugEntry
{ 
	FName                                              DebugName;                                                  // 0x0000   (0x0008)  
	FSoftObjectPath                                    Sound;                                                      // 0x0008   (0x0020)  
};

/// Struct /Script/Engine.DefaultAudioBusSettings
/// Size: 0x0020 (0x000000 - 0x000020)
struct FDefaultAudioBusSettings
{ 
	FSoftObjectPath                                    AudioBus;                                                   // 0x0000   (0x0020)  
};

/// Struct /Script/Engine.AudioVolumeSubmixSendSettings
/// Size: 0x0018 (0x000000 - 0x000018)
struct FAudioVolumeSubmixSendSettings
{ 
	EAudioVolumeLocationState                          ListenerLocationState;                                      // 0x0000   (0x0001)  
	EAudioVolumeLocationState                          SourceLocationState;                                        // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	TArray<FSoundSubmixSendInfo>                       SubmixSends;                                                // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.SoundSubmixSendInfo
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FSoundSubmixSendInfo
{ 
	ESendLevelControlMethod                            SendLevelControlMethod;                                     // 0x0000   (0x0001)  
	ESubmixSendStage                                   SendStage;                                                  // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0002   (0x0006)  MISSED
	USoundSubmixBase*                                  SoundSubmix;                                                // 0x0008   (0x0008)  
	float                                              SendLevel;                                                  // 0x0010   (0x0004)  
	bool                                               DisableManualSendClamp;                                     // 0x0014   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	float                                              MinSendLevel;                                               // 0x0018   (0x0004)  
	float                                              MaxSendLevel;                                               // 0x001C   (0x0004)  
	float                                              MinSendDistance;                                            // 0x0020   (0x0004)  
	float                                              MaxSendDistance;                                            // 0x0024   (0x0004)  
	FRuntimeFloatCurve                                 CustomSendLevelCurve;                                       // 0x0028   (0x0088)  
};

/// Struct /Script/Engine.AudioVolumeSubmixOverrideSettings
/// Size: 0x0020 (0x000000 - 0x000020)
struct FAudioVolumeSubmixOverrideSettings
{ 
	USoundSubmix*                                      Submix;                                                     // 0x0000   (0x0008)  
	TArray<USoundEffectSubmixPreset*>                  SubmixEffectChain;                                          // 0x0008   (0x0010)  
	float                                              CrossfadeTime;                                              // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/Engine.InteriorSettings
/// Size: 0x0024 (0x000000 - 0x000024)
struct FInteriorSettings
{ 
	bool                                               bIsWorldSettings;                                           // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              ExteriorVolume;                                             // 0x0004   (0x0004)  
	float                                              ExteriorTime;                                               // 0x0008   (0x0004)  
	float                                              ExteriorLPF;                                                // 0x000C   (0x0004)  
	float                                              ExteriorLPFTime;                                            // 0x0010   (0x0004)  
	float                                              InteriorVolume;                                             // 0x0014   (0x0004)  
	float                                              InteriorTime;                                               // 0x0018   (0x0004)  
	float                                              InteriorLPF;                                                // 0x001C   (0x0004)  
	float                                              InteriorLPFTime;                                            // 0x0020   (0x0004)  
};

/// Struct /Script/Engine.NodeToCodeAssociation
/// Size: 0x0014 (0x000000 - 0x000014)
struct FNodeToCodeAssociation
{ 
	unsigned char                                      UnknownData00_1[0x14];                                      // 0x0000   (0x0014)  MISSED
};

/// Struct /Script/Engine.DebuggingInfoForSingleFunction
/// Size: 0x0190 (0x000000 - 0x000190)
struct FDebuggingInfoForSingleFunction
{ 
	unsigned char                                      UnknownData00_1[0x190];                                     // 0x0000   (0x0190)  MISSED
};

/// Struct /Script/Engine.PointerToUberGraphFrame
/// Size: 0x0008 (0x000000 - 0x000008)
struct FPointerToUberGraphFrame
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/Engine.BlueprintDebugData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FBlueprintDebugData
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.EventGraphFastCallPair
/// Size: 0x0010 (0x000000 - 0x000010)
struct FEventGraphFastCallPair
{ 
	UFunction*                                         FunctionToPatch;                                            // 0x0000   (0x0008)  
	int32_t                                            EventGraphCallOffset;                                       // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/Engine.BlueprintComponentChangedPropertyInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBlueprintComponentChangedPropertyInfo
{ 
	FName                                              PropertyName;                                               // 0x0000   (0x0008)  
	int32_t                                            ArrayIndex;                                                 // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	UStruct*                                           PropertyScope;                                              // 0x0010   (0x0008)  
};

/// Struct /Script/Engine.BlueprintCookedComponentInstancingData
/// Size: 0x0048 (0x000000 - 0x000048)
struct FBlueprintCookedComponentInstancingData
{ 
	TArray<FBlueprintComponentChangedPropertyInfo>     ChangedPropertyList;                                        // 0x0000   (0x0010)  
	unsigned char                                      UnknownData00_5[0x11];                                      // 0x0010   (0x0011)  MISSED
	bool                                               bHasValidCookedData;                                        // 0x0021   (0x0001)  
	unsigned char                                      UnknownData01_6[0x26];                                      // 0x0022   (0x0026)  MISSED
};

/// Struct /Script/Engine.BPComponentClassOverride
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBPComponentClassOverride
{ 
	FName                                              ComponentName;                                              // 0x0000   (0x0008)  
	UClass*                                            ComponentClass;                                             // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.AnimCurveType
/// Size: 0x0002 (0x000000 - 0x000002)
struct FAnimCurveType
{ 
	unsigned char                                      UnknownData00_1[0x2];                                       // 0x0000   (0x0002)  MISSED
};

/// Struct /Script/Engine.BookmarkJumpToSettings
/// Size: 0x0000 (0x000001 - 0x000001)
struct FBookmarkJumpToSettings : FBookmarkBaseJumpToSettings
{ 
};

/// Struct /Script/Engine.BuilderPoly
/// Size: 0x0020 (0x000000 - 0x000020)
struct FBuilderPoly
{ 
	TArray<int32_t>                                    VertexIndices;                                              // 0x0000   (0x0010)  
	int32_t                                            Direction;                                                  // 0x0010   (0x0004)  
	FName                                              ItemName;                                                   // 0x0014   (0x0008)  
	int32_t                                            PolyFlags;                                                  // 0x001C   (0x0004)  
};

/// Struct /Script/Engine.CameraLensInterfaceClassSupport
/// Size: 0x0008 (0x000000 - 0x000008)
struct FCameraLensInterfaceClassSupport
{ 
	UClass*                                            Class;                                                      // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.PooledCameraShakes
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPooledCameraShakes
{ 
	TArray<UCameraShakeBase*>                          PooledShakes;                                               // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.ActiveCameraShakeInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FActiveCameraShakeInfo
{ 
	UCameraShakeBase*                                  ShakeInstance;                                              // 0x0000   (0x0008)  
	TWeakObjectPtr<UCameraShakeSourceComponent*>       ShakeSource;                                                // 0x0008   (0x0008)  
	bool                                               bIsCustomInitialized;                                       // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/Engine.CameraShakeStartParams
/// Size: 0x0001 (0x000000 - 0x000001)
struct FCameraShakeStartParams
{ 
	bool                                               bIsRestarting;                                              // 0x0000   (0x0001)  
};

/// Struct /Script/Engine.CameraShakeUpdateParams
/// Size: 0x07D0 (0x000000 - 0x0007D0)
struct FCameraShakeUpdateParams
{ 
	float                                              DeltaTime;                                                  // 0x0000   (0x0004)  
	float                                              ShakeScale;                                                 // 0x0004   (0x0004)  
	float                                              DynamicScale;                                               // 0x0008   (0x0004)  
	float                                              BlendingWeight;                                             // 0x000C   (0x0004)  
	FMinimalViewInfo                                   POV;                                                        // 0x0010   (0x07C0)  
};

/// Struct /Script/Engine.CameraShakeScrubParams
/// Size: 0x07D0 (0x000000 - 0x0007D0)
struct FCameraShakeScrubParams
{ 
	float                                              AbsoluteTime;                                               // 0x0000   (0x0004)  
	float                                              ShakeScale;                                                 // 0x0004   (0x0004)  
	float                                              DynamicScale;                                               // 0x0008   (0x0004)  
	float                                              BlendingWeight;                                             // 0x000C   (0x0004)  
	FMinimalViewInfo                                   POV;                                                        // 0x0010   (0x07C0)  
};

/// Struct /Script/Engine.CameraShakeUpdateResult
/// Size: 0x0730 (0x000000 - 0x000730)
struct FCameraShakeUpdateResult
{ 
	unsigned char                                      UnknownData00_1[0x730];                                     // 0x0000   (0x0730)  MISSED
};

/// Struct /Script/Engine.CameraShakeStopParams
/// Size: 0x0001 (0x000000 - 0x000001)
struct FCameraShakeStopParams
{ 
	bool                                               bImmediately;                                               // 0x0000   (0x0001)  
};

/// Struct /Script/Engine.CameraShakeDuration
/// Size: 0x0008 (0x000000 - 0x000008)
struct FCameraShakeDuration
{ 
	float                                              Duration;                                                   // 0x0000   (0x0004)  
	ECameraShakeDurationType                           Type;                                                       // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0005   (0x0003)  MISSED
};

/// Struct /Script/Engine.CameraShakeInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FCameraShakeInfo
{ 
	FCameraShakeDuration                               Duration;                                                   // 0x0000   (0x0008)  
	float                                              BlendIn;                                                    // 0x0008   (0x0004)  
	float                                              BlendOut;                                                   // 0x000C   (0x0004)  
};

/// Struct /Script/Engine.DummySpacerCameraTypes
/// Size: 0x0001 (0x000000 - 0x000001)
struct FDummySpacerCameraTypes
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.RepRootMotionMontage
/// Size: 0x00D8 (0x000000 - 0x0000D8)
struct FRepRootMotionMontage
{ 
	bool                                               bIsActive;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	UAnimMontage*                                      AnimMontage;                                                // 0x0008   (0x0008)  
	float                                              Position;                                                   // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FVector_NetQuantize100                             Location;                                                   // 0x0018   (0x0018)  
	FRotator                                           Rotation;                                                   // 0x0030   (0x0018)  
	UPrimitiveComponent*                               MovementBase;                                               // 0x0048   (0x0008)  
	FName                                              MovementBaseBoneName;                                       // 0x0050   (0x0008)  
	bool                                               bRelativePosition;                                          // 0x0058   (0x0001)  
	bool                                               bRelativeRotation;                                          // 0x0059   (0x0001)  
	unsigned char                                      UnknownData02_5[0x6];                                       // 0x005A   (0x0006)  MISSED
	FRootMotionSourceGroup                             AuthoritativeRootMotion;                                    // 0x0060   (0x0048)  
	FVector_NetQuantize10                              Acceleration;                                               // 0x00A8   (0x0018)  
	FVector_NetQuantize10                              LinearVelocity;                                             // 0x00C0   (0x0018)  
};

/// Struct /Script/Engine.RootMotionSourceGroup
/// Size: 0x0048 (0x000000 - 0x000048)
struct FRootMotionSourceGroup
{ 
	unsigned char                                      UnknownData00_2[0x28];                                      // 0x0000   (0x0028)  MISSED
	bool                                               bHasAdditiveSources : 1;                                    // 0x0028:0 (0x0001)  
	bool                                               bHasOverrideSources : 1;                                    // 0x0028:1 (0x0001)  
	bool                                               bHasOverrideSourcesWithIgnoreZAccumulate : 1;               // 0x0028:2 (0x0001)  
	bool                                               bIsAdditiveVelocityApplied : 1;                             // 0x0028:3 (0x0001)  
	FRootMotionSourceSettings                          LastAccumulatedSettings;                                    // 0x0029   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x002A   (0x0006)  MISSED
	FVector_NetQuantize10                              LastPreAdditiveVelocity;                                    // 0x0030   (0x0018)  
};

/// Struct /Script/Engine.RootMotionSourceSettings
/// Size: 0x0001 (0x000000 - 0x000001)
struct FRootMotionSourceSettings
{ 
	char                                               Flags;                                                      // 0x0000   (0x0001)  
};

/// Struct /Script/Engine.SimulatedRootMotionReplicatedMove
/// Size: 0x00E0 (0x000000 - 0x0000E0)
struct FSimulatedRootMotionReplicatedMove
{ 
	float                                              Time;                                                       // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	FRepRootMotionMontage                              RootMotion;                                                 // 0x0008   (0x00D8)  
};

/// Struct /Script/Engine.BasedMovementInfo
/// Size: 0x0048 (0x000000 - 0x000048)
struct FBasedMovementInfo
{ 
	UPrimitiveComponent*                               MovementBase;                                               // 0x0000   (0x0008)  
	FName                                              BoneName;                                                   // 0x0008   (0x0008)  
	FVector_NetQuantize100                             Location;                                                   // 0x0010   (0x0018)  
	FRotator                                           Rotation;                                                   // 0x0028   (0x0018)  
	bool                                               bServerHasBaseComponent;                                    // 0x0040   (0x0001)  
	bool                                               bRelativeRotation;                                          // 0x0041   (0x0001)  
	bool                                               bServerHasVelocity;                                         // 0x0042   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x0043   (0x0005)  MISSED
};

/// Struct /Script/Engine.FindFloorResult
/// Size: 0x00F8 (0x000000 - 0x0000F8)
struct FFindFloorResult
{ 
	bool                                               bBlockingHit : 1;                                           // 0x0000:0 (0x0001)  
	bool                                               bWalkableFloor : 1;                                         // 0x0000:1 (0x0001)  
	bool                                               bLineTrace : 1;                                             // 0x0000:2 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              FloorDist;                                                  // 0x0004   (0x0004)  
	float                                              LineDist;                                                   // 0x0008   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FHitResult                                         HitResult;                                                  // 0x0010   (0x00E8)  
};

/// Struct /Script/Engine.CollisionResponseTemplate
/// Size: 0x0048 (0x000000 - 0x000048)
struct FCollisionResponseTemplate
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	TEnumAsByte<ECollisionEnabled>                     CollisionEnabled;                                           // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0009   (0x0001)  MISSED
	bool                                               bCanModify;                                                 // 0x000A   (0x0001)  
	unsigned char                                      UnknownData01_5[0x21];                                      // 0x000B   (0x0021)  MISSED
	FName                                              ObjectTypeName;                                             // 0x002C   (0x0008)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	TArray<FResponseChannel>                           CustomResponses;                                            // 0x0038   (0x0010)  
};

/// Struct /Script/Engine.CustomChannelSetup
/// Size: 0x000C (0x000000 - 0x00000C)
struct FCustomChannelSetup
{ 
	TEnumAsByte<ECollisionChannel>                     Channel;                                                    // 0x0000   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    DefaultResponse;                                            // 0x0001   (0x0001)  
	bool                                               bTraceType;                                                 // 0x0002   (0x0001)  
	bool                                               bStaticObject;                                              // 0x0003   (0x0001)  
	FName                                              Name;                                                       // 0x0004   (0x0008)  
};

/// Struct /Script/Engine.CustomProfile
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCustomProfile
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	TArray<FResponseChannel>                           CustomResponses;                                            // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.BlueprintComponentDelegateBinding
/// Size: 0x0018 (0x000000 - 0x000018)
struct FBlueprintComponentDelegateBinding
{ 
	FName                                              ComponentPropertyName;                                      // 0x0000   (0x0008)  
	FName                                              DelegatePropertyName;                                       // 0x0008   (0x0008)  
	FName                                              FunctionNameToBind;                                         // 0x0010   (0x0008)  
};

/// Struct /Script/Engine.ActorComponentInstanceSourceInfo
/// Size: 0x0010 (0x000000 - 0x000010)
struct FActorComponentInstanceSourceInfo
{ 
	UObject*                                           SourceComponentTemplate;                                    // 0x0000   (0x0008)  
	EComponentCreationMethod                           SourceComponentCreationMethod;                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            SourceComponentTypeSerializedIndex;                         // 0x000C   (0x0004)  
};

/// Struct /Script/Engine.ActorInstanceData
/// Size: 0x0008 (0x000058 - 0x000060)
struct FActorInstanceData : FInstanceCacheDataBase
{ 
	UClass*                                            ActorClass;                                                 // 0x0058   (0x0008)  
};

/// Struct /Script/Engine.AudioComponentParam
/// Size: 0x0008 (0x0000A0 - 0x0000A8)
struct FAudioComponentParam : FAudioParameter
{ 
	USoundWave*                                        SoundWaveParam;                                             // 0x00A0   (0x0008)  
};

/// Struct /Script/Engine.CharacterMovementComponentPostPhysicsTickFunction
/// Size: 0x0008 (0x000028 - 0x000030)
struct FCharacterMovementComponentPostPhysicsTickFunction : FTickFunction
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Struct /Script/Engine.CharacterMovementComponentPrePhysicsTickFunction
/// Size: 0x0008 (0x000028 - 0x000030)
struct FCharacterMovementComponentPrePhysicsTickFunction : FTickFunction
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Struct /Script/Engine.ChildActorAttachedActorInfo
/// Size: 0x0070 (0x000000 - 0x000070)
struct FChildActorAttachedActorInfo
{ 
	TWeakObjectPtr<AActor*>                            Actor;                                                      // 0x0000   (0x0008)  
	FName                                              SocketName;                                                 // 0x0008   (0x0008)  
	FTransform                                         RelativeTransform;                                          // 0x0010   (0x0060)  
};

/// Struct /Script/Engine.ChildActorComponentInstanceData
/// Size: 0x0040 (0x0000B8 - 0x0000F8)
struct FChildActorComponentInstanceData : FSceneComponentInstanceData
{ 
	UClass*                                            ChildActorClass;                                            // 0x00B8   (0x0008)  
	FName                                              ChildActorName;                                             // 0x00C0   (0x0008)  
	TArray<FChildActorAttachedActorInfo>               AttachedActors;                                             // 0x00C8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x20];                                      // 0x00D8   (0x0020)  MISSED
};

/// Struct /Script/Engine.CachedKeyToActionInfo
/// Size: 0x0070 (0x000000 - 0x000070)
struct FCachedKeyToActionInfo
{ 
	TWeakObjectPtr<UPlayerInput*>                      PlayerInput;                                                // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x68];                                      // 0x0008   (0x0068)  MISSED
};

/// Struct /Script/Engine.PrecomputedLightInstanceData
/// Size: 0x0088 (0x0000B8 - 0x000140)
struct FPrecomputedLightInstanceData : FSceneComponentInstanceData
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00B8   (0x0008)  MISSED
	FTransform                                         Transform;                                                  // 0x00C0   (0x0060)  
	FGuid                                              LightGuid;                                                  // 0x0120   (0x0010)  
	int32_t                                            PreviewShadowMapChannel;                                    // 0x0130   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x0134   (0x000C)  MISSED
};

/// Struct /Script/Engine.BatchedLine
/// Size: 0x0050 (0x000000 - 0x000050)
struct FBatchedLine
{ 
	FVector                                            Start;                                                      // 0x0000   (0x0018)  
	FVector                                            End;                                                        // 0x0018   (0x0018)  
	FLinearColor                                       Color;                                                      // 0x0030   (0x0010)  
	float                                              Thickness;                                                  // 0x0040   (0x0004)  
	float                                              RemainingLifeTime;                                          // 0x0044   (0x0004)  
	char                                               DepthPriority;                                              // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0049   (0x0007)  MISSED
};

/// Struct /Script/Engine.BatchedPoint
/// Size: 0x0038 (0x000000 - 0x000038)
struct FBatchedPoint
{ 
	FVector                                            Position;                                                   // 0x0000   (0x0018)  
	FLinearColor                                       Color;                                                      // 0x0018   (0x0010)  
	float                                              PointSize;                                                  // 0x0028   (0x0004)  
	float                                              RemainingLifeTime;                                          // 0x002C   (0x0004)  
	char                                               DepthPriority;                                              // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Struct /Script/Engine.LODMappingData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FLODMappingData
{ 
	TArray<int32_t>                                    Mapping;                                                    // 0x0000   (0x0010)  
	TArray<int32_t>                                    InverseMapping;                                             // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.ComponentSync
/// Size: 0x000C (0x000000 - 0x00000C)
struct FComponentSync
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	ESyncOption                                        SyncOption;                                                 // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0009   (0x0003)  MISSED
};

/// Struct /Script/Engine.MaterialSpriteElement
/// Size: 0x0028 (0x000000 - 0x000028)
struct FMaterialSpriteElement
{ 
	UMaterialInterface*                                Material;                                                   // 0x0000   (0x0008)  
	UCurveFloat*                                       DistanceToOpacityCurve;                                     // 0x0008   (0x0008)  
	bool                                               bSizeIsInScreenSpace : 1;                                   // 0x0010:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0011   (0x0003)  MISSED
	float                                              BaseSizeX;                                                  // 0x0014   (0x0004)  
	float                                              BaseSizeY;                                                  // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	UCurveFloat*                                       DistanceToSizeCurve;                                        // 0x0020   (0x0008)  
};

/// Struct /Script/Engine.EngineShowFlagsSetting
/// Size: 0x0018 (0x000000 - 0x000018)
struct FEngineShowFlagsSetting
{ 
	FString                                            ShowFlagName;                                               // 0x0000   (0x0010)  
	bool                                               Enabled;                                                    // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/Engine.SkeletalMeshComponentEndPhysicsTickFunction
/// Size: 0x0008 (0x000028 - 0x000030)
struct FSkeletalMeshComponentEndPhysicsTickFunction : FTickFunction
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Struct /Script/Engine.SkeletalMeshComponentClothTickFunction
/// Size: 0x0008 (0x000028 - 0x000030)
struct FSkeletalMeshComponentClothTickFunction : FTickFunction
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Struct /Script/Engine.TentDistribution
/// Size: 0x000C (0x000000 - 0x00000C)
struct FTentDistribution
{ 
	float                                              TipAltitude;                                                // 0x0000   (0x0004)  
	float                                              TipValue;                                                   // 0x0004   (0x0004)  
	float                                              Width;                                                      // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.SplineCurves
/// Size: 0x0070 (0x000000 - 0x000070)
struct FSplineCurves
{ 
	FInterpCurveVector                                 Position;                                                   // 0x0000   (0x0018)  
	FInterpCurveQuat                                   Rotation;                                                   // 0x0018   (0x0018)  
	FInterpCurveVector                                 Scale;                                                      // 0x0030   (0x0018)  
	FInterpCurveFloat                                  ReparamTable;                                               // 0x0048   (0x0018)  
	USplineMetadata*                                   MetaData;                                                   // 0x0060   (0x0008)  
	uint32_t                                           Version;                                                    // 0x0068   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x006C   (0x0004)  MISSED
};

/// Struct /Script/Engine.SplinePoint
/// Size: 0x0088 (0x000000 - 0x000088)
struct FSplinePoint
{ 
	float                                              InputKey;                                                   // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	FVector                                            Position;                                                   // 0x0008   (0x0018)  
	FVector                                            ArriveTangent;                                              // 0x0020   (0x0018)  
	FVector                                            LeaveTangent;                                               // 0x0038   (0x0018)  
	FRotator                                           Rotation;                                                   // 0x0050   (0x0018)  
	FVector                                            Scale;                                                      // 0x0068   (0x0018)  
	TEnumAsByte<ESplinePointType>                      Type;                                                       // 0x0080   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0081   (0x0007)  MISSED
};

/// Struct /Script/Engine.SplineInstanceData
/// Size: 0x00E8 (0x0000B8 - 0x0001A0)
struct FSplineInstanceData : FSceneComponentInstanceData
{ 
	bool                                               bSplineHasBeenEdited;                                       // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00B9   (0x0007)  MISSED
	FSplineCurves                                      SplineCurves;                                               // 0x00C0   (0x0070)  
	FSplineCurves                                      SplineCurvesPreUCS;                                         // 0x0130   (0x0070)  
};

/// Struct /Script/Engine.SplineMeshParams
/// Size: 0x00B0 (0x000000 - 0x0000B0)
struct FSplineMeshParams
{ 
	FVector                                            StartPos;                                                   // 0x0000   (0x0018)  
	FVector                                            StartTangent;                                               // 0x0018   (0x0018)  
	FVector2D                                          StartScale;                                                 // 0x0030   (0x0010)  
	float                                              StartRoll;                                                  // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	FVector2D                                          StartOffset;                                                // 0x0048   (0x0010)  
	FVector                                            EndPos;                                                     // 0x0058   (0x0018)  
	FVector2D                                          EndScale;                                                   // 0x0070   (0x0010)  
	FVector                                            EndTangent;                                                 // 0x0080   (0x0018)  
	float                                              EndRoll;                                                    // 0x0098   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x009C   (0x0004)  MISSED
	FVector2D                                          EndOffset;                                                  // 0x00A0   (0x0010)  
};

/// Struct /Script/Engine.StaticMeshComponentInstanceData
/// Size: 0x0040 (0x000130 - 0x000170)
struct FStaticMeshComponentInstanceData : FPrimitiveComponentInstanceData
{ 
	UStaticMesh*                                       StaticMesh;                                                 // 0x0130   (0x0008)  
	TArray<FStaticMeshVertexColorLODData>              VertexColorLODs;                                            // 0x0138   (0x0010)  
	TArray<FGuid>                                      CachedStaticLighting;                                       // 0x0148   (0x0010)  
	TArray<FStreamingTextureBuildInfo>                 StreamingTextureData;                                       // 0x0158   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0168   (0x0008)  MISSED
};

/// Struct /Script/Engine.StaticMeshVertexColorLODData
/// Size: 0x0028 (0x000000 - 0x000028)
struct FStaticMeshVertexColorLODData
{ 
	TArray<FPaintedVertex>                             PaintedVertices;                                            // 0x0000   (0x0010)  
	TArray<FColor>                                     VertexBufferColors;                                         // 0x0010   (0x0010)  
	uint32_t                                           LODIndex;                                                   // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/Engine.PaintedVertex
/// Size: 0x0040 (0x000000 - 0x000040)
struct FPaintedVertex
{ 
	FVector                                            Position;                                                   // 0x0000   (0x0018)  
	FColor                                             Color;                                                      // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	FVector4                                           Normal;                                                     // 0x0020   (0x0020)  
};

/// Struct /Script/Engine.SplineMeshInstanceData
/// Size: 0x0060 (0x000170 - 0x0001D0)
struct FSplineMeshInstanceData : FStaticMeshComponentInstanceData
{ 
	FVector                                            StartPos;                                                   // 0x0168   (0x0018)  
	FVector                                            EndPos;                                                     // 0x0180   (0x0018)  
	FVector                                            StartTangent;                                               // 0x0198   (0x0018)  
	FVector                                            EndTangent;                                                 // 0x01B0   (0x0018)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x01C8   (0x0008)  MISSED
};

/// Struct /Script/Engine.StaticMeshComponentLODInfo
/// Size: 0x0090 (0x000000 - 0x000090)
struct FStaticMeshComponentLODInfo
{ 
	unsigned char                                      UnknownData00_1[0x90];                                      // 0x0000   (0x0090)  MISSED
};

/// Struct /Script/Engine.ObjectCookedMetaDataStore
/// Size: 0x0050 (0x000000 - 0x000050)
struct FObjectCookedMetaDataStore
{ 
	TMap<FName, FString>                               ObjectMetaData;                                             // 0x0000   (0x0050)  
};

/// Struct /Script/Engine.FieldCookedMetaDataStore
/// Size: 0x0050 (0x000000 - 0x000050)
struct FFieldCookedMetaDataStore
{ 
	TMap<FName, FString>                               FieldMetaData;                                              // 0x0000   (0x0050)  
};

/// Struct /Script/Engine.StructCookedMetaDataStore
/// Size: 0x00A0 (0x000000 - 0x0000A0)
struct FStructCookedMetaDataStore
{ 
	FObjectCookedMetaDataStore                         ObjectMetaData;                                             // 0x0000   (0x0050)  
	TMap<FName, FFieldCookedMetaDataStore>             PropertiesMetaData;                                         // 0x0050   (0x0050)  
};

/// Struct /Script/Engine.CullDistanceSizePair
/// Size: 0x0008 (0x000000 - 0x000008)
struct FCullDistanceSizePair
{ 
	float                                              Size;                                                       // 0x0000   (0x0004)  
	float                                              CullDistance;                                               // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.RuntimeCurveLinearColor
/// Size: 0x0208 (0x000000 - 0x000208)
struct FRuntimeCurveLinearColor
{ 
	FRichCurve                                         ColorCurves;                                                // 0x0000   (0x0200)  
	UCurveLinearColor*                                 ExternalCurve;                                              // 0x0200   (0x0008)  
};

/// Struct /Script/Engine.CurveAtlasColorAdjustments
/// Size: 0x0024 (0x000000 - 0x000024)
struct FCurveAtlasColorAdjustments
{ 
	bool                                               bChromaKeyTexture : 1;                                      // 0x0000:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              AdjustBrightness;                                           // 0x0004   (0x0004)  
	float                                              AdjustBrightnessCurve;                                      // 0x0008   (0x0004)  
	float                                              AdjustVibrance;                                             // 0x000C   (0x0004)  
	float                                              AdjustSaturation;                                           // 0x0010   (0x0004)  
	float                                              AdjustRGBCurve;                                             // 0x0014   (0x0004)  
	float                                              AdjustHue;                                                  // 0x0018   (0x0004)  
	float                                              AdjustMinAlpha;                                             // 0x001C   (0x0004)  
	float                                              AdjustMaxAlpha;                                             // 0x0020   (0x0004)  
};

/// Struct /Script/Engine.RuntimeVectorCurve
/// Size: 0x0188 (0x000000 - 0x000188)
struct FRuntimeVectorCurve
{ 
	FRichCurve                                         VectorCurves;                                               // 0x0000   (0x0180)  
	UCurveVector*                                      ExternalCurve;                                              // 0x0180   (0x0008)  
};

/// Struct /Script/Engine.IntegralKey
/// Size: 0x0008 (0x000000 - 0x000008)
struct FIntegralKey
{ 
	float                                              Time;                                                       // 0x0000   (0x0004)  
	int32_t                                            Value;                                                      // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.IntegralCurve
/// Size: 0x0018 (0x000068 - 0x000080)
struct FIntegralCurve : FIndexedCurve
{ 
	TArray<FIntegralKey>                               Keys;                                                       // 0x0068   (0x0010)  
	int32_t                                            DefaultValue;                                               // 0x0078   (0x0004)  
	bool                                               bUseDefaultValueBeforeFirstKey;                             // 0x007C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x007D   (0x0003)  MISSED
};

/// Struct /Script/Engine.NameCurveKey
/// Size: 0x000C (0x000000 - 0x00000C)
struct FNameCurveKey
{ 
	float                                              Time;                                                       // 0x0000   (0x0004)  
	FName                                              Value;                                                      // 0x0004   (0x0008)  
};

/// Struct /Script/Engine.NameCurve
/// Size: 0x0010 (0x000068 - 0x000078)
struct FNameCurve : FIndexedCurve
{ 
	TArray<FNameCurveKey>                              Keys;                                                       // 0x0068   (0x0010)  
};

/// Struct /Script/Engine.SimpleCurveKey
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSimpleCurveKey
{ 
	float                                              Time;                                                       // 0x0000   (0x0004)  
	float                                              Value;                                                      // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.SimpleCurve
/// Size: 0x0018 (0x000070 - 0x000088)
struct FSimpleCurve : FRealCurve
{ 
	TEnumAsByte<ERichCurveInterpMode>                  InterpMode;                                                 // 0x0070   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0071   (0x0007)  MISSED
	TArray<FSimpleCurveKey>                            Keys;                                                       // 0x0078   (0x0010)  
};

/// Struct /Script/Engine.StringCurveKey
/// Size: 0x0018 (0x000000 - 0x000018)
struct FStringCurveKey
{ 
	float                                              Time;                                                       // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	FString                                            Value;                                                      // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.StringCurve
/// Size: 0x0020 (0x000068 - 0x000088)
struct FStringCurve : FIndexedCurve
{ 
	FString                                            DefaultValue;                                               // 0x0068   (0x0010)  
	TArray<FStringCurveKey>                            Keys;                                                       // 0x0078   (0x0010)  
};

/// Struct /Script/Engine.DataDrivenConsoleVariable
/// Size: 0x0050 (0x000000 - 0x000050)
struct FDataDrivenConsoleVariable
{ 
	FDataDrivenCVarType                                Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FString                                            Name;                                                       // 0x0008   (0x0010)  
	FString                                            ToolTip;                                                    // 0x0018   (0x0010)  
	float                                              DefaultValueFloat;                                          // 0x0028   (0x0004)  
	int32_t                                            DefaultValueInt;                                            // 0x002C   (0x0004)  
	bool                                               DefaultValueBool;                                           // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1F];                                      // 0x0031   (0x001F)  MISSED
};

/// Struct /Script/Engine.DataTableCategoryHandle
/// Size: 0x0018 (0x000000 - 0x000018)
struct FDataTableCategoryHandle
{ 
	UDataTable*                                        DataTable;                                                  // 0x0000   (0x0008)  
	FName                                              ColumnName;                                                 // 0x0008   (0x0008)  
	FName                                              RowContents;                                                // 0x0010   (0x0008)  
};

/// Struct /Script/Engine.DebugCameraControllerSettingsViewModeIndex
/// Size: 0x0010 (0x000000 - 0x000010)
struct FDebugCameraControllerSettingsViewModeIndex
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	TEnumAsByte<EViewModeIndex>                        ViewModeIndex;                                              // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0009   (0x0007)  MISSED
};

/// Struct /Script/Engine.RollbackNetStartupActorInfo
/// Size: 0x00D0 (0x000000 - 0x0000D0)
struct FRollbackNetStartupActorInfo
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	UObject*                                           Archetype;                                                  // 0x0008   (0x0008)  
	unsigned char                                      UnknownData01_5[0xB0];                                      // 0x0010   (0x00B0)  MISSED
	TArray<UObject*>                                   ObjReferences;                                              // 0x00C0   (0x0010)  
};

/// Struct /Script/Engine.MulticastRecordOptions
/// Size: 0x0018 (0x000000 - 0x000018)
struct FMulticastRecordOptions
{ 
	FString                                            FuncPathName;                                               // 0x0000   (0x0010)  
	bool                                               bServerSkip;                                                // 0x0010   (0x0001)  
	bool                                               bClientSkip;                                                // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0012   (0x0006)  MISSED
};

/// Struct /Script/Engine.SelectedFragmentProperties
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSelectedFragmentProperties
{ 
	FName                                              Tag;                                                        // 0x0000   (0x0008)  
	FString                                            Fragment;                                                   // 0x0008   (0x0010)  
	bool                                               bEnabled;                                                   // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
};

/// Struct /Script/Engine.DPMatchingIfCondition
/// Size: 0x0028 (0x000000 - 0x000028)
struct FDPMatchingIfCondition
{ 
	FName                                              Operator;                                                   // 0x0000   (0x0008)  
	FString                                            Arg1;                                                       // 0x0008   (0x0010)  
	FString                                            Arg2;                                                       // 0x0018   (0x0010)  
};

/// Struct /Script/Engine.DPMatchingRulestructBase
/// Size: 0x0048 (0x000000 - 0x000048)
struct FDPMatchingRulestructBase
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	FString                                            RuleName;                                                   // 0x0008   (0x0010)  
	TArray<FDPMatchingIfCondition>                     IfConditions;                                               // 0x0018   (0x0010)  
	FString                                            AppendFragments;                                            // 0x0028   (0x0010)  
	FString                                            SetUserVar;                                                 // 0x0038   (0x0010)  
};

/// Struct /Script/Engine.DPMatchingRulestructA
/// Size: 0x0020 (0x000048 - 0x000068)
struct FDPMatchingRulestructA : FDPMatchingRulestructBase
{ 
	TArray<FDPMatchingRulestructBase>                  OnTrue;                                                     // 0x0048   (0x0010)  
	TArray<FDPMatchingRulestructBase>                  OnFalse;                                                    // 0x0058   (0x0010)  
};

/// Struct /Script/Engine.DPMatchingRulestructB
/// Size: 0x0020 (0x000048 - 0x000068)
struct FDPMatchingRulestructB : FDPMatchingRulestructBase
{ 
	TArray<FDPMatchingRulestructA>                     OnTrue;                                                     // 0x0048   (0x0010)  
	TArray<FDPMatchingRulestructA>                     OnFalse;                                                    // 0x0058   (0x0010)  
};

/// Struct /Script/Engine.DPMatchingRulestructC
/// Size: 0x0020 (0x000048 - 0x000068)
struct FDPMatchingRulestructC : FDPMatchingRulestructBase
{ 
	TArray<FDPMatchingRulestructB>                     OnTrue;                                                     // 0x0048   (0x0010)  
	TArray<FDPMatchingRulestructB>                     OnFalse;                                                    // 0x0058   (0x0010)  
};

/// Struct /Script/Engine.DPMatchingRulestructD
/// Size: 0x0020 (0x000048 - 0x000068)
struct FDPMatchingRulestructD : FDPMatchingRulestructBase
{ 
	TArray<FDPMatchingRulestructC>                     OnTrue;                                                     // 0x0048   (0x0010)  
	TArray<FDPMatchingRulestructC>                     OnFalse;                                                    // 0x0058   (0x0010)  
};

/// Struct /Script/Engine.DPMatchingRulestructE
/// Size: 0x0020 (0x000048 - 0x000068)
struct FDPMatchingRulestructE : FDPMatchingRulestructBase
{ 
	TArray<FDPMatchingRulestructD>                     OnTrue;                                                     // 0x0048   (0x0010)  
	TArray<FDPMatchingRulestructD>                     OnFalse;                                                    // 0x0058   (0x0010)  
};

/// Struct /Script/Engine.DPMatchingRulestruct
/// Size: 0x0020 (0x000048 - 0x000068)
struct FDPMatchingRulestruct : FDPMatchingRulestructBase
{ 
	TArray<FDPMatchingRulestructE>                     OnTrue;                                                     // 0x0048   (0x0010)  
	TArray<FDPMatchingRulestructE>                     OnFalse;                                                    // 0x0058   (0x0010)  
};

/// Struct /Script/Engine.DialogueContext
/// Size: 0x0018 (0x000000 - 0x000018)
struct FDialogueContext
{ 
	UDialogueVoice*                                    Speaker;                                                    // 0x0000   (0x0008)  
	TArray<UDialogueVoice*>                            Targets;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.DialogueWaveParameter
/// Size: 0x0020 (0x000000 - 0x000020)
struct FDialogueWaveParameter
{ 
	UDialogueWave*                                     DialogueWave;                                               // 0x0000   (0x0008)  
	FDialogueContext                                   Context;                                                    // 0x0008   (0x0018)  
};

/// Struct /Script/Engine.DialogueContextMapping
/// Size: 0x0038 (0x000000 - 0x000038)
struct FDialogueContextMapping
{ 
	FDialogueContext                                   Context;                                                    // 0x0000   (0x0018)  
	USoundWave*                                        SoundWave;                                                  // 0x0018   (0x0008)  
	FString                                            LocalizationKeyFormat;                                      // 0x0020   (0x0010)  
	UDialogueSoundWaveProxy*                           Proxy;                                                      // 0x0030   (0x0008)  
};

/// Struct /Script/Engine.GraphReference
/// Size: 0x0020 (0x000000 - 0x000020)
struct FGraphReference
{ 
	UEdGraph*                                          MacroGraph;                                                 // 0x0000   (0x0008)  
	UBlueprint*                                        GraphBlueprint;                                             // 0x0008   (0x0008)  
	FGuid                                              GraphGuid;                                                  // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.AssetImportInfo
/// Size: 0x0001 (0x000000 - 0x000001)
struct FAssetImportInfo
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.TypedElementDeletionOptions
/// Size: 0x0003 (0x000000 - 0x000003)
struct FTypedElementDeletionOptions
{ 
	bool                                               bVerifyDeletionCanHappen;                                   // 0x0000   (0x0001)  
	bool                                               bWarnAboutReferences;                                       // 0x0001   (0x0001)  
	bool                                               bWarnAboutSoftReferences;                                   // 0x0002   (0x0001)  
};

/// Struct /Script/Engine.DamageEvent
/// Size: 0x0010 (0x000000 - 0x000010)
struct FDamageEvent
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	UClass*                                            DamageTypeClass;                                            // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.PointDamageEvent
/// Size: 0x0108 (0x000010 - 0x000118)
struct FPointDamageEvent : FDamageEvent
{ 
	float                                              Damage;                                                     // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FVector_NetQuantizeNormal                          ShotDirection;                                              // 0x0018   (0x0018)  
	FHitResult                                         HitInfo;                                                    // 0x0030   (0x00E8)  
};

/// Struct /Script/Engine.RadialDamageParams
/// Size: 0x0014 (0x000000 - 0x000014)
struct FRadialDamageParams
{ 
	float                                              BaseDamage;                                                 // 0x0000   (0x0004)  
	float                                              MinimumDamage;                                              // 0x0004   (0x0004)  
	float                                              InnerRadius;                                                // 0x0008   (0x0004)  
	float                                              OuterRadius;                                                // 0x000C   (0x0004)  
	float                                              DamageFalloff;                                              // 0x0010   (0x0004)  
};

/// Struct /Script/Engine.RadialDamageEvent
/// Size: 0x0040 (0x000010 - 0x000050)
struct FRadialDamageEvent : FDamageEvent
{ 
	FRadialDamageParams                                Params;                                                     // 0x0010   (0x0014)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0024   (0x0004)  MISSED
	FVector                                            Origin;                                                     // 0x0028   (0x0018)  
	TArray<FHitResult>                                 ComponentHits;                                              // 0x0040   (0x0010)  
};

/// Struct /Script/Engine.RigidBodyState
/// Size: 0x0080 (0x000000 - 0x000080)
struct FRigidBodyState
{ 
	FVector_NetQuantize100                             Position;                                                   // 0x0000   (0x0018)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0018   (0x0008)  MISSED
	FQuat                                              Quaternion;                                                 // 0x0020   (0x0020)  
	FVector_NetQuantize100                             LinVel;                                                     // 0x0040   (0x0018)  
	FVector_NetQuantize100                             AngVel;                                                     // 0x0058   (0x0018)  
	char                                               Flags;                                                      // 0x0070   (0x0001)  
	unsigned char                                      UnknownData01_6[0xF];                                       // 0x0071   (0x000F)  MISSED
};

/// Struct /Script/Engine.FontCharacter
/// Size: 0x0018 (0x000000 - 0x000018)
struct FFontCharacter
{ 
	int32_t                                            StartU;                                                     // 0x0000   (0x0004)  
	int32_t                                            StartV;                                                     // 0x0004   (0x0004)  
	int32_t                                            USize;                                                      // 0x0008   (0x0004)  
	int32_t                                            VSize;                                                      // 0x000C   (0x0004)  
	char                                               TextureIndex;                                               // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0011   (0x0003)  MISSED
	int32_t                                            VerticalOffset;                                             // 0x0014   (0x0004)  
};

/// Struct /Script/Engine.ForceFeedbackChannelDetails
/// Size: 0x0090 (0x000000 - 0x000090)
struct FForceFeedbackChannelDetails
{ 
	bool                                               bAffectsLeftLarge : 1;                                      // 0x0000:0 (0x0001)  
	bool                                               bAffectsLeftSmall : 1;                                      // 0x0000:1 (0x0001)  
	bool                                               bAffectsRightLarge : 1;                                     // 0x0000:2 (0x0001)  
	bool                                               bAffectsRightSmall : 1;                                     // 0x0000:3 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0001   (0x0007)  MISSED
	FRuntimeFloatCurve                                 Curve;                                                      // 0x0008   (0x0088)  
};

/// Struct /Script/Engine.ForceFeedbackParameters
/// Size: 0x000C (0x000000 - 0x00000C)
struct FForceFeedbackParameters
{ 
	FName                                              Tag;                                                        // 0x0000   (0x0008)  
	bool                                               bLooping;                                                   // 0x0008   (0x0001)  
	bool                                               bIgnoreTimeDilation;                                        // 0x0009   (0x0001)  
	bool                                               bPlayWhilePaused;                                           // 0x000A   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x000B   (0x0001)  MISSED
};

/// Struct /Script/Engine.ActiveForceFeedbackEffect
/// Size: 0x0018 (0x000000 - 0x000018)
struct FActiveForceFeedbackEffect
{ 
	UForceFeedbackEffect*                              ForceFeedbackEffect;                                        // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0008   (0x0010)  MISSED
};

/// Struct /Script/Engine.RootMotionSourceStatus
/// Size: 0x0001 (0x000000 - 0x000001)
struct FRootMotionSourceStatus
{ 
	char                                               Flags;                                                      // 0x0000   (0x0001)  
};

/// Struct /Script/Engine.RootMotionFinishVelocitySettings
/// Size: 0x0028 (0x000000 - 0x000028)
struct FRootMotionFinishVelocitySettings
{ 
	ERootMotionFinishVelocityMode                      Mode;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	FVector                                            SetVelocity;                                                // 0x0008   (0x0018)  
	float                                              ClampVelocity;                                              // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/Engine.RootMotionSource
/// Size: 0x00E0 (0x000000 - 0x0000E0)
struct FRootMotionSource
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0000   (0x0010)  MISSED
	uint16_t                                           Priority;                                                   // 0x0010   (0x0002)  
	uint16_t                                           LocalID;                                                    // 0x0012   (0x0002)  
	ERootMotionAccumulateMode                          AccumulateMode;                                             // 0x0014   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0015   (0x0003)  MISSED
	FName                                              InstanceName;                                               // 0x0018   (0x0008)  
	float                                              StartTime;                                                  // 0x0020   (0x0004)  
	float                                              CurrentTime;                                                // 0x0024   (0x0004)  
	float                                              PreviousTime;                                               // 0x0028   (0x0004)  
	float                                              Duration;                                                   // 0x002C   (0x0004)  
	FRootMotionSourceStatus                            Status;                                                     // 0x0030   (0x0001)  
	FRootMotionSourceSettings                          Settings;                                                   // 0x0031   (0x0001)  
	bool                                               bInLocalSpace;                                              // 0x0032   (0x0001)  
	unsigned char                                      UnknownData02_5[0xD];                                       // 0x0033   (0x000D)  MISSED
	FRootMotionMovementParams                          RootMotionParams;                                           // 0x0040   (0x0070)  
	FRootMotionFinishVelocitySettings                  FinishVelocityParams;                                       // 0x00B0   (0x0028)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x00D8   (0x0008)  MISSED
};

/// Struct /Script/Engine.RootMotionSource_ConstantForce
/// Size: 0x0020 (0x0000E0 - 0x000100)
struct FRootMotionSource_ConstantForce : FRootMotionSource
{ 
	FVector                                            Force;                                                      // 0x00D8   (0x0018)  
	UCurveFloat*                                       StrengthOverTime;                                           // 0x00F0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00F8   (0x0008)  MISSED
};

/// Struct /Script/Engine.RootMotionSource_RadialForce
/// Size: 0x0060 (0x0000E0 - 0x000140)
struct FRootMotionSource_RadialForce : FRootMotionSource
{ 
	FVector                                            Location;                                                   // 0x00D8   (0x0018)  
	AActor*                                            LocationActor;                                              // 0x00F0   (0x0008)  
	float                                              Radius;                                                     // 0x00F8   (0x0004)  
	float                                              Strength;                                                   // 0x00FC   (0x0004)  
	bool                                               bIsPush;                                                    // 0x0100   (0x0001)  
	bool                                               bNoZForce;                                                  // 0x0101   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x0102   (0x0006)  MISSED
	UCurveFloat*                                       StrengthDistanceFalloff;                                    // 0x0108   (0x0008)  
	UCurveFloat*                                       StrengthOverTime;                                           // 0x0110   (0x0008)  
	bool                                               bUseFixedWorldDirection;                                    // 0x0118   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0119   (0x0007)  MISSED
	FRotator                                           FixedWorldDirection;                                        // 0x0120   (0x0018)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0138   (0x0008)  MISSED
};

/// Struct /Script/Engine.RootMotionSource_MoveToForce
/// Size: 0x0040 (0x0000E0 - 0x000120)
struct FRootMotionSource_MoveToForce : FRootMotionSource
{ 
	FVector                                            StartLocation;                                              // 0x00D8   (0x0018)  
	FVector                                            TargetLocation;                                             // 0x00F0   (0x0018)  
	bool                                               bRestrictSpeedToExpected;                                   // 0x0108   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0109   (0x0007)  MISSED
	UCurveVector*                                      PathOffsetCurve;                                            // 0x0110   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0118   (0x0008)  MISSED
};

/// Struct /Script/Engine.RootMotionSource_MoveToDynamicForce
/// Size: 0x0060 (0x0000E0 - 0x000140)
struct FRootMotionSource_MoveToDynamicForce : FRootMotionSource
{ 
	FVector                                            StartLocation;                                              // 0x00D8   (0x0018)  
	FVector                                            InitialTargetLocation;                                      // 0x00F0   (0x0018)  
	FVector                                            TargetLocation;                                             // 0x0108   (0x0018)  
	bool                                               bRestrictSpeedToExpected;                                   // 0x0120   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0121   (0x0007)  MISSED
	UCurveVector*                                      PathOffsetCurve;                                            // 0x0128   (0x0008)  
	UCurveFloat*                                       TimeMappingCurve;                                           // 0x0130   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0138   (0x0008)  MISSED
};

/// Struct /Script/Engine.RootMotionSource_JumpForce
/// Size: 0x0050 (0x0000E0 - 0x000130)
struct FRootMotionSource_JumpForce : FRootMotionSource
{ 
	FRotator                                           Rotation;                                                   // 0x00D8   (0x0018)  
	float                                              Distance;                                                   // 0x00F0   (0x0004)  
	float                                              Height;                                                     // 0x00F4   (0x0004)  
	bool                                               bDisableTimeout;                                            // 0x00F8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00F9   (0x0007)  MISSED
	UCurveVector*                                      PathOffsetCurve;                                            // 0x0100   (0x0008)  
	UCurveFloat*                                       TimeMappingCurve;                                           // 0x0108   (0x0008)  
	unsigned char                                      UnknownData01_6[0x20];                                      // 0x0110   (0x0020)  MISSED
};

/// Struct /Script/Engine.TouchInputControl
/// Size: 0x0090 (0x000000 - 0x000090)
struct FTouchInputControl
{ 
	UTexture2D*                                        Image1;                                                     // 0x0000   (0x0008)  
	UTexture2D*                                        Image2;                                                     // 0x0008   (0x0008)  
	FVector2D                                          Center;                                                     // 0x0010   (0x0010)  
	FVector2D                                          VisualSize;                                                 // 0x0020   (0x0010)  
	FVector2D                                          ThumbSize;                                                  // 0x0030   (0x0010)  
	FVector2D                                          InteractionSize;                                            // 0x0040   (0x0010)  
	FVector2D                                          InputScale;                                                 // 0x0050   (0x0010)  
	FKey                                               MainInputKey;                                               // 0x0060   (0x0018)  
	FKey                                               AltInputKey;                                                // 0x0078   (0x0018)  
};

/// Struct /Script/Engine.NetLevelVisibilityTransactionId
/// Size: 0x0004 (0x000000 - 0x000004)
struct FNetLevelVisibilityTransactionId
{ 
	uint32_t                                           Data;                                                       // 0x0000   (0x0004)  
};

/// Struct /Script/Engine.UpdateLevelVisibilityLevelInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FUpdateLevelVisibilityLevelInfo
{ 
	FName                                              PackageName;                                                // 0x0000   (0x0008)  
	FName                                              Filename;                                                   // 0x0008   (0x0008)  
	FNetLevelVisibilityTransactionId                   VisibilityRequestId;                                        // 0x0010   (0x0004)  
	bool                                               bIsVisible : 1;                                             // 0x0014:0 (0x0001)  
	bool                                               bTryMakeVisible : 1;                                        // 0x0014:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0015   (0x0003)  MISSED
};

/// Struct /Script/Engine.HLODISMComponentDesc
/// Size: 0x0030 (0x000000 - 0x000030)
struct FHLODISMComponentDesc
{ 
	UStaticMesh*                                       StaticMesh;                                                 // 0x0000   (0x0008)  
	UMaterialInterface*                                Material;                                                   // 0x0008   (0x0008)  
	TArray<FTransform>                                 Instances;                                                  // 0x0010   (0x0010)  
	TArray<FCustomPrimitiveData>                       InstancesCustomPrimitiveData;                               // 0x0020   (0x0010)  
};

/// Struct /Script/Engine.HLODProxyMesh
/// Size: 0x0030 (0x000000 - 0x000030)
struct FHLODProxyMesh
{ 
	TLazyObjectPtr<ALODActor*>                         LODActor;                                                   // 0x0000   (0x001C)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x001C   (0x0004)  MISSED
	UStaticMesh*                                       StaticMesh;                                                 // 0x0020   (0x0008)  
	FName                                              Key;                                                        // 0x0028   (0x0008)  
};

/// Struct /Script/Engine.ComponentKey
/// Size: 0x0020 (0x000000 - 0x000020)
struct FComponentKey
{ 
	UClass*                                            OwnerClass;                                                 // 0x0000   (0x0008)  
	FName                                              SCSVariableName;                                            // 0x0008   (0x0008)  
	FGuid                                              AssociatedGuid;                                             // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.ComponentOverrideRecord
/// Size: 0x0078 (0x000000 - 0x000078)
struct FComponentOverrideRecord
{ 
	UClass*                                            ComponentClass;                                             // 0x0000   (0x0008)  
	UActorComponent*                                   ComponentTemplate;                                          // 0x0008   (0x0008)  
	FComponentKey                                      ComponentKey;                                               // 0x0010   (0x0020)  
	FBlueprintCookedComponentInstancingData            CookedComponentInstancingData;                              // 0x0030   (0x0048)  
};

/// Struct /Script/Engine.BlueprintInputDelegateBinding
/// Size: 0x0004 (0x000000 - 0x000004)
struct FBlueprintInputDelegateBinding
{ 
	bool                                               bConsumeInput : 1;                                          // 0x0000:0 (0x0001)  
	bool                                               bExecuteWhenPaused : 1;                                     // 0x0000:1 (0x0001)  
	bool                                               bOverrideParentBinding : 1;                                 // 0x0000:2 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
};

/// Struct /Script/Engine.BlueprintInputActionDelegateBinding
/// Size: 0x0014 (0x000004 - 0x000018)
struct FBlueprintInputActionDelegateBinding : FBlueprintInputDelegateBinding
{ 
	FName                                              InputActionName;                                            // 0x0004   (0x0008)  
	TEnumAsByte<EInputEvent>                           InputKeyEvent;                                              // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x000D   (0x0003)  MISSED
	FName                                              FunctionNameToBind;                                         // 0x0010   (0x0008)  
};

/// Struct /Script/Engine.BlueprintInputAxisDelegateBinding
/// Size: 0x0010 (0x000004 - 0x000014)
struct FBlueprintInputAxisDelegateBinding : FBlueprintInputDelegateBinding
{ 
	FName                                              InputAxisName;                                              // 0x0004   (0x0008)  
	FName                                              FunctionNameToBind;                                         // 0x000C   (0x0008)  
};

/// Struct /Script/Engine.BlueprintInputAxisKeyDelegateBinding
/// Size: 0x0024 (0x000004 - 0x000028)
struct FBlueprintInputAxisKeyDelegateBinding : FBlueprintInputDelegateBinding
{ 
	unsigned char                                      UnknownData00_2[0x4];                                       // 0x0004   (0x0004)  MISSED
	FKey                                               AxisKey;                                                    // 0x0008   (0x0018)  
	FName                                              FunctionNameToBind;                                         // 0x0020   (0x0008)  
};

/// Struct /Script/Engine.BlueprintInputKeyDelegateBinding
/// Size: 0x0034 (0x000004 - 0x000038)
struct FBlueprintInputKeyDelegateBinding : FBlueprintInputDelegateBinding
{ 
	unsigned char                                      UnknownData00_2[0x4];                                       // 0x0004   (0x0004)  MISSED
	FInputChord                                        InputChord;                                                 // 0x0008   (0x0020)  
	TEnumAsByte<EInputEvent>                           InputKeyEvent;                                              // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	FName                                              FunctionNameToBind;                                         // 0x002C   (0x0008)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Struct /Script/Engine.BlueprintInputTouchDelegateBinding
/// Size: 0x000C (0x000004 - 0x000010)
struct FBlueprintInputTouchDelegateBinding : FBlueprintInputDelegateBinding
{ 
	TEnumAsByte<EInputEvent>                           InputKeyEvent;                                              // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0005   (0x0003)  MISSED
	FName                                              FunctionNameToBind;                                         // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.CurveEdEntry
/// Size: 0x0038 (0x000000 - 0x000038)
struct FCurveEdEntry
{ 
	UObject*                                           CurveObject;                                                // 0x0000   (0x0008)  
	FColor                                             CurveColor;                                                 // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            CurveName;                                                  // 0x0010   (0x0010)  
	int32_t                                            bHideCurve;                                                 // 0x0020   (0x0004)  
	int32_t                                            bColorCurve;                                                // 0x0024   (0x0004)  
	int32_t                                            bFloatingPointColorCurve;                                   // 0x0028   (0x0004)  
	int32_t                                            bClamp;                                                     // 0x002C   (0x0004)  
	float                                              ClampLow;                                                   // 0x0030   (0x0004)  
	float                                              ClampHigh;                                                  // 0x0034   (0x0004)  
};

/// Struct /Script/Engine.CurveEdTab
/// Size: 0x0030 (0x000000 - 0x000030)
struct FCurveEdTab
{ 
	FString                                            TabName;                                                    // 0x0000   (0x0010)  
	TArray<FCurveEdEntry>                              Curves;                                                     // 0x0010   (0x0010)  
	float                                              ViewStartInput;                                             // 0x0020   (0x0004)  
	float                                              ViewEndInput;                                               // 0x0024   (0x0004)  
	float                                              ViewStartOutput;                                            // 0x0028   (0x0004)  
	float                                              ViewEndOutput;                                              // 0x002C   (0x0004)  
};

/// Struct /Script/Engine.ISMComponentInstance
/// Size: 0x000C (0x000000 - 0x00000C)
struct FISMComponentInstance
{ 
	int32_t                                            ClientIndex;                                                // 0x0000   (0x0004)  
	int32_t                                            InstanceIndex;                                              // 0x0004   (0x0004)  
	int32_t                                            InstanceSubIndex;                                           // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.ISMClientInstance
/// Size: 0x0010 (0x000000 - 0x000010)
struct FISMClientInstance
{ 
	TArray<int32_t>                                    ComponentIndices;                                           // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.ISMClientData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FISMClientData
{ 
	TArray<FISMClientInstance>                         Instances;                                                  // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.ISMComponentData
/// Size: 0x0001 (0x000000 - 0x000001)
struct FISMComponentData
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.ISMComponentDescriptor
/// Size: 0x0001 (0x000000 - 0x000001)
struct FISMComponentDescriptor
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.SlateModifierKeysState
/// Size: 0x0001 (0x000000 - 0x000001)
struct FSlateModifierKeysState
{ 
	char                                               ModifierKeysStateMask;                                      // 0x0000   (0x0001)  
};

/// Struct /Script/Engine.DrawToRenderTargetContext
/// Size: 0x0008 (0x000000 - 0x000008)
struct FDrawToRenderTargetContext
{ 
	UTextureRenderTarget2D*                            RenderTarget;                                               // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.ImportanceTexture
/// Size: 0x0050 (0x000000 - 0x000050)
struct FImportanceTexture
{ 
	FIntPoint                                          Size;                                                       // 0x0000   (0x0008)  
	int32_t                                            NumMips;                                                    // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<float>                                      MarginalCDF;                                                // 0x0010   (0x0010)  
	TArray<float>                                      ConditionalCDF;                                             // 0x0020   (0x0010)  
	TArray<FColor>                                     TextureData;                                                // 0x0030   (0x0010)  
	TWeakObjectPtr<UTexture2D*>                        Texture;                                                    // 0x0040   (0x0008)  
	TEnumAsByte<EImportanceWeight>                     Weighting;                                                  // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0049   (0x0007)  MISSED
};

/// Struct /Script/Engine.LatentActionManager
/// Size: 0x0060 (0x000000 - 0x000060)
struct FLatentActionManager
{ 
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x0000   (0x0060)  MISSED
};

/// Struct /Script/Engine.LayerActorStats
/// Size: 0x0010 (0x000000 - 0x000010)
struct FLayerActorStats
{ 
	UClass*                                            Type;                                                       // 0x0000   (0x0008)  
	int32_t                                            Total;                                                      // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
};

/// Struct /Script/Engine.ActorFolderSet
/// Size: 0x0050 (0x000000 - 0x000050)
struct FActorFolderSet
{ 
	TSet<UActorFolder*>                                ActorFolders;                                               // 0x0000   (0x0050)  
};

/// Struct /Script/Engine.StreamableTextureInstance
/// Size: 0x0048 (0x000000 - 0x000048)
struct FStreamableTextureInstance
{ 
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0000   (0x0048)  MISSED
};

/// Struct /Script/Engine.DynamicTextureInstance
/// Size: 0x0010 (0x000048 - 0x000058)
struct FDynamicTextureInstance : FStreamableTextureInstance
{ 
	UTexture2D*                                        Texture;                                                    // 0x0048   (0x0008)  
	bool                                               bAttached;                                                  // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0051   (0x0003)  MISSED
	float                                              OriginalRadius;                                             // 0x0054   (0x0004)  
};

/// Struct /Script/Engine.LevelSimplificationDetails
/// Size: 0x013C (0x000000 - 0x00013C)
struct FLevelSimplificationDetails
{ 
	bool                                               bCreatePackagePerAsset;                                     // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              DetailsPercentage;                                          // 0x0004   (0x0004)  
	FMaterialProxySettings                             StaticMeshMaterialSettings;                                 // 0x0008   (0x0094)  
	bool                                               bOverrideLandscapeExportLOD;                                // 0x009C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x009D   (0x0003)  MISSED
	int32_t                                            LandscapeExportLOD;                                         // 0x00A0   (0x0004)  
	FMaterialProxySettings                             LandscapeMaterialSettings;                                  // 0x00A4   (0x0094)  
	bool                                               bBakeFoliageToLandscape;                                    // 0x0138   (0x0001)  
	bool                                               bBakeGrassToLandscape;                                      // 0x0139   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x013A   (0x0002)  MISSED
};

/// Struct /Script/Engine.ReplicatedStaticActorDestructionInfo
/// Size: 0x0040 (0x000000 - 0x000040)
struct FReplicatedStaticActorDestructionInfo
{ 
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x0000   (0x0038)  MISSED
	UClass*                                            ObjClass;                                                   // 0x0038   (0x0008)  
};

/// Struct /Script/Engine.ClientReceiveData
/// Size: 0x0040 (0x000000 - 0x000040)
struct FClientReceiveData
{ 
	APlayerController*                                 LocalPC;                                                    // 0x0000   (0x0008)  
	FName                                              MessageType;                                                // 0x0008   (0x0008)  
	int32_t                                            MessageIndex;                                               // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            MessageString;                                              // 0x0018   (0x0010)  
	APlayerState*                                      RelatedPlayerState;                                         // 0x0028   (0x0008)  
	APlayerState*                                      RelatedPlayerState;                                         // 0x0030   (0x0008)  
	UObject*                                           OptionalObject;                                             // 0x0038   (0x0008)  
};

/// Struct /Script/Engine.HLODInstancingKey
/// Size: 0x0010 (0x000000 - 0x000010)
struct FHLODInstancingKey
{ 
	UStaticMesh*                                       StaticMesh;                                                 // 0x0000   (0x0008)  
	UMaterialInterface*                                Material;                                                   // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.MaterialFunctionInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FMaterialFunctionInfo
{ 
	FGuid                                              StateId;                                                    // 0x0000   (0x0010)  
	UMaterialFunctionInterface*                        Function;                                                   // 0x0010   (0x0008)  
};

/// Struct /Script/Engine.MaterialParameterCollectionInfo
/// Size: 0x0018 (0x000000 - 0x000018)
struct FMaterialParameterCollectionInfo
{ 
	FGuid                                              StateId;                                                    // 0x0000   (0x0010)  
	UMaterialParameterCollection*                      ParameterCollection;                                        // 0x0010   (0x0008)  
};

/// Struct /Script/Engine.MaterialCachedParameterEditorInfo
/// Size: 0x0030 (0x000000 - 0x000030)
struct FMaterialCachedParameterEditorInfo
{ 
	FString                                            Description;                                                // 0x0000   (0x0010)  
	FName                                              Group;                                                      // 0x0010   (0x0008)  
	int32_t                                            SortPriority;                                               // 0x0018   (0x0004)  
	int32_t                                            AssetIndex;                                                 // 0x001C   (0x0004)  
	FGuid                                              ExpressionGUID;                                             // 0x0020   (0x0010)  
};

/// Struct /Script/Engine.MaterialCachedParameterEntry
/// Size: 0x0050 (0x000000 - 0x000050)
struct FMaterialCachedParameterEntry
{ 
	TSet<FMaterialParameterInfo>                       ParameterInfoSet;                                           // 0x0000   (0x0050)  
};

/// Struct /Script/Engine.MaterialCachedParameterEditorEntry
/// Size: 0x0010 (0x000000 - 0x000010)
struct FMaterialCachedParameterEditorEntry
{ 
	TArray<FMaterialCachedParameterEditorInfo>         EditorInfo;                                                 // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.MaterialCachedExpressionEditorOnlyData
/// Size: 0x0230 (0x000000 - 0x000230)
struct FMaterialCachedExpressionEditorOnlyData
{ 
	FMaterialCachedParameterEntry                      EditorOnlyEntries;                                          // 0x0000   (0x00A0)  
	FMaterialCachedParameterEditorEntry                EditorEntries;                                              // 0x00A0   (0x0080)  
	TArray<bool>                                       StaticSwitchValues;                                         // 0x0120   (0x0010)  
	TArray<FStaticComponentMaskValue>                  StaticComponentMaskValues;                                  // 0x0130   (0x0010)  
	TArray<FVector2D>                                  ScalarMinMaxValues;                                         // 0x0140   (0x0010)  
	TArray<TWeakObjectPtr>                             ScalarCurveValues;                                          // 0x0150   (0x0010)  
	TArray<TWeakObjectPtr>                             ScalarCurveAtlasValues;                                     // 0x0160   (0x0010)  
	TArray<FParameterChannelNames>                     VectorChannelNameValues;                                    // 0x0170   (0x0010)  
	TArray<bool>                                       VectorUsedAsChannelMaskValues;                              // 0x0180   (0x0010)  
	TArray<FParameterChannelNames>                     TextureChannelNameValues;                                   // 0x0190   (0x0010)  
	FMaterialLayersFunctionsEditorOnlyData             MaterialLayers;                                             // 0x01A0   (0x0070)  
	TArray<FString>                                    AssetPaths;                                                 // 0x0210   (0x0010)  
	TArray<FName>                                      LandscapeLayerNames;                                        // 0x0220   (0x0010)  
};

/// Struct /Script/Engine.MaterialCachedExpressionData
/// Size: 0x02F8 (0x000000 - 0x0002F8)
struct FMaterialCachedExpressionData
{ 
	FMaterialCachedParameterEntry                      RuntimeEntries;                                             // 0x0000   (0x01E0)  
	TArray<int32_t>                                    ScalarPrimitiveDataIndexValues;                             // 0x01E0   (0x0010)  
	TArray<int32_t>                                    VectorPrimitiveDataIndexValues;                             // 0x01F0   (0x0010)  
	TArray<float>                                      ScalarValues;                                               // 0x0200   (0x0010)  
	TArray<FLinearColor>                               VectorValues;                                               // 0x0210   (0x0010)  
	TArray<FVector4d>                                  DoubleVectorValues;                                         // 0x0220   (0x0010)  
	TArray<TWeakObjectPtr>                             TextureValues;                                              // 0x0230   (0x0010)  
	TArray<TWeakObjectPtr>                             FontValues;                                                 // 0x0240   (0x0010)  
	TArray<int32_t>                                    FontPageValues;                                             // 0x0250   (0x0010)  
	TArray<TWeakObjectPtr>                             RuntimeVirtualTextureValues;                                // 0x0260   (0x0010)  
	TArray<UObject*>                                   ReferencedTextures;                                         // 0x0270   (0x0010)  
	TArray<FMaterialFunctionInfo>                      FunctionInfos;                                              // 0x0280   (0x0010)  
	TArray<FMaterialParameterCollectionInfo>           ParameterCollectionInfos;                                   // 0x0290   (0x0010)  
	TArray<ULandscapeGrassType*>                       GrassTypes;                                                 // 0x02A0   (0x0010)  
	FMaterialLayersFunctionsRuntimeData                MaterialLayers;                                             // 0x02B0   (0x0020)  
	TArray<FName>                                      DynamicParameterNames;                                      // 0x02D0   (0x0010)  
	TArray<bool>                                       QualityLevelsUsed;                                          // 0x02E0   (0x0010)  
	bool                                               bHasMaterialLayers : 1;                                     // 0x02F0:0 (0x0001)  
	bool                                               bHasRuntimeVirtualTextureOutput : 1;                        // 0x02F0:1 (0x0001)  
	bool                                               bHasSceneColor : 1;                                         // 0x02F0:2 (0x0001)  
	bool                                               bHasPerInstanceCustomData : 1;                              // 0x02F0:3 (0x0001)  
	bool                                               bHasPerInstanceRandom : 1;                                  // 0x02F0:4 (0x0001)  
	bool                                               bHasVertexInterpolator : 1;                                 // 0x02F0:5 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x02F1   (0x0003)  MISSED
	uint32_t                                           PropertyConnectedBitmask;                                   // 0x02F4   (0x0004)  
};

/// Struct /Script/Engine.ScalarParameterAtlasInstanceData
/// Size: 0x0068 (0x000000 - 0x000068)
struct FScalarParameterAtlasInstanceData
{ 
	bool                                               bIsUsedAsAtlasPosition;                                     // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	TWeakObjectPtr<UCurveLinearColor*>                 Curve;                                                      // 0x0008   (0x0030)  
	TWeakObjectPtr<UCurveLinearColorAtlas*>            Atlas;                                                      // 0x0038   (0x0030)  
};

/// Struct /Script/Engine.ScalarParameterValue
/// Size: 0x0024 (0x000000 - 0x000024)
struct FScalarParameterValue
{ 
	FMaterialParameterInfo                             ParameterInfo;                                              // 0x0000   (0x0010)  
	float                                              ParameterValue;                                             // 0x0010   (0x0004)  
	FGuid                                              ExpressionGUID;                                             // 0x0014   (0x0010)  
};

/// Struct /Script/Engine.VectorParameterValue
/// Size: 0x0030 (0x000000 - 0x000030)
struct FVectorParameterValue
{ 
	FMaterialParameterInfo                             ParameterInfo;                                              // 0x0000   (0x0010)  
	FLinearColor                                       ParameterValue;                                             // 0x0010   (0x0010)  
	FGuid                                              ExpressionGUID;                                             // 0x0020   (0x0010)  
};

/// Struct /Script/Engine.DoubleVectorParameterValue
/// Size: 0x0040 (0x000000 - 0x000040)
struct FDoubleVectorParameterValue
{ 
	FMaterialParameterInfo                             ParameterInfo;                                              // 0x0000   (0x0010)  
	FVector4d                                          ParameterValue;                                             // 0x0010   (0x0020)  
	FGuid                                              ExpressionGUID;                                             // 0x0030   (0x0010)  
};

/// Struct /Script/Engine.TextureParameterValue
/// Size: 0x0028 (0x000000 - 0x000028)
struct FTextureParameterValue
{ 
	FMaterialParameterInfo                             ParameterInfo;                                              // 0x0000   (0x0010)  
	UTexture*                                          ParameterValue;                                             // 0x0010   (0x0008)  
	FGuid                                              ExpressionGUID;                                             // 0x0018   (0x0010)  
};

/// Struct /Script/Engine.RuntimeVirtualTextureParameterValue
/// Size: 0x0028 (0x000000 - 0x000028)
struct FRuntimeVirtualTextureParameterValue
{ 
	FMaterialParameterInfo                             ParameterInfo;                                              // 0x0000   (0x0010)  
	URuntimeVirtualTexture*                            ParameterValue;                                             // 0x0010   (0x0008)  
	FGuid                                              ExpressionGUID;                                             // 0x0018   (0x0010)  
};

/// Struct /Script/Engine.FontParameterValue
/// Size: 0x0030 (0x000000 - 0x000030)
struct FFontParameterValue
{ 
	FMaterialParameterInfo                             ParameterInfo;                                              // 0x0000   (0x0010)  
	UFont*                                             FontValue;                                                  // 0x0010   (0x0008)  
	int32_t                                            FontPage;                                                   // 0x0018   (0x0004)  
	FGuid                                              ExpressionGUID;                                             // 0x001C   (0x0010)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/Engine.MaterialInstanceCachedData
/// Size: 0x0010 (0x000000 - 0x000010)
struct FMaterialInstanceCachedData
{ 
	TArray<int32_t>                                    ParentLayerIndexRemap;                                      // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.MemberReference
/// Size: 0x0038 (0x000000 - 0x000038)
struct FMemberReference
{ 
	UObject*                                           MemberParent;                                               // 0x0000   (0x0008)  
	FString                                            MemberScope;                                                // 0x0008   (0x0010)  
	FName                                              MemberName;                                                 // 0x0018   (0x0008)  
	FGuid                                              MemberGuid;                                                 // 0x0020   (0x0010)  
	bool                                               bSelfContext;                                               // 0x0030   (0x0001)  
	bool                                               bWasDeprecated;                                             // 0x0031   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0032   (0x0006)  MISSED
};

/// Struct /Script/Engine.MeshReductionSettings
/// Size: 0x0024 (0x000000 - 0x000024)
struct FMeshReductionSettings
{ 
	float                                              PercentTriangles;                                           // 0x0000   (0x0004)  
	float                                              PercentVertices;                                            // 0x0004   (0x0004)  
	float                                              MaxDeviation;                                               // 0x0008   (0x0004)  
	float                                              PixelError;                                                 // 0x000C   (0x0004)  
	float                                              WeldingThreshold;                                           // 0x0010   (0x0004)  
	float                                              HardAngleThreshold;                                         // 0x0014   (0x0004)  
	int32_t                                            BaseLODModel;                                               // 0x0018   (0x0004)  
	TEnumAsByte<EMeshFeatureImportance>                SilhouetteImportance;                                       // 0x001C   (0x0001)  
	TEnumAsByte<EMeshFeatureImportance>                TextureImportance;                                          // 0x001D   (0x0001)  
	TEnumAsByte<EMeshFeatureImportance>                ShadingImportance;                                          // 0x001E   (0x0001)  
	bool                                               bRecalculateNormals : 1;                                    // 0x001F:0 (0x0001)  
	bool                                               bGenerateUniqueLightmapUVs : 1;                             // 0x001F:1 (0x0001)  
	bool                                               bKeepSymmetry : 1;                                          // 0x001F:2 (0x0001)  
	bool                                               bVisibilityAided : 1;                                       // 0x001F:3 (0x0001)  
	bool                                               bCullOccluded : 1;                                          // 0x001F:4 (0x0001)  
	EStaticMeshReductionTerimationCriterion            TerminationCriterion;                                       // 0x0020   (0x0001)  
	TEnumAsByte<EMeshFeatureImportance>                VisibilityAggressiveness;                                   // 0x0021   (0x0001)  
	TEnumAsByte<EMeshFeatureImportance>                VertexColorImportance;                                      // 0x0022   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x0023   (0x0001)  MISSED
};

/// Struct /Script/Engine.MeshInstancingSettings
/// Size: 0x0018 (0x000000 - 0x000018)
struct FMeshInstancingSettings
{ 
	UClass*                                            ActorClassToUse;                                            // 0x0000   (0x0008)  
	int32_t                                            InstanceReplacementThreshold;                               // 0x0008   (0x0004)  
	bool                                               bSkipMeshesWithVertexColors;                                // 0x000C   (0x0001)  
	bool                                               bUseHLODVolumes;                                            // 0x000D   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x000E   (0x0002)  MISSED
	UClass*                                            ISMComponentToUse;                                          // 0x0010   (0x0008)  
};

/// Struct /Script/Engine.PacketSimulationSettings
/// Size: 0x0034 (0x000000 - 0x000034)
struct FPacketSimulationSettings
{ 
	int32_t                                            PktLoss;                                                    // 0x0000   (0x0004)  
	int32_t                                            PktLossMaxSize;                                             // 0x0004   (0x0004)  
	int32_t                                            PktLossMinSize;                                             // 0x0008   (0x0004)  
	int32_t                                            PktOrder;                                                   // 0x000C   (0x0004)  
	int32_t                                            PktDup;                                                     // 0x0010   (0x0004)  
	int32_t                                            PktLag;                                                     // 0x0014   (0x0004)  
	int32_t                                            PktLagVariance;                                             // 0x0018   (0x0004)  
	int32_t                                            PktLagMin;                                                  // 0x001C   (0x0004)  
	int32_t                                            PktLagMax;                                                  // 0x0020   (0x0004)  
	int32_t                                            PktIncomingLagMin;                                          // 0x0024   (0x0004)  
	int32_t                                            PktIncomingLagMax;                                          // 0x0028   (0x0004)  
	int32_t                                            PktIncomingLoss;                                            // 0x002C   (0x0004)  
	int32_t                                            PktJitter;                                                  // 0x0030   (0x0004)  
};

/// Struct /Script/Engine.ChannelDefinition
/// Size: 0x0020 (0x000000 - 0x000020)
struct FChannelDefinition
{ 
	FName                                              ChannelName;                                                // 0x0000   (0x0008)  
	FName                                              ClassName;                                                  // 0x0008   (0x0008)  
	UClass*                                            ChannelClass;                                               // 0x0010   (0x0008)  
	int32_t                                            StaticChannelIndex;                                         // 0x0018   (0x0004)  
	bool                                               bTickOnCreate : 1;                                          // 0x001C:0 (0x0001)  
	bool                                               bServerOpen : 1;                                            // 0x001C:1 (0x0001)  
	bool                                               bClientOpen : 1;                                            // 0x001C:2 (0x0001)  
	bool                                               bInitialServer : 1;                                         // 0x001C:3 (0x0001)  
	bool                                               bInitialClient : 1;                                         // 0x001C:4 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x001D   (0x0003)  MISSED
};

/// Struct /Script/Engine.NetworkEmulationProfileDescription
/// Size: 0x0020 (0x000000 - 0x000020)
struct FNetworkEmulationProfileDescription
{ 
	FString                                            ProfileName;                                                // 0x0000   (0x0010)  
	FString                                            ToolTip;                                                    // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.BandwidthTestItem
/// Size: 0x0010 (0x000000 - 0x000010)
struct FBandwidthTestItem
{ 
	TArray<char>                                       Kilobyte;                                                   // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.BandwidthTestGenerator
/// Size: 0x0020 (0x000000 - 0x000020)
struct FBandwidthTestGenerator
{ 
	TArray<FBandwidthTestItem>                         ReplicatedBuffers;                                          // 0x0000   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0010   (0x0010)  MISSED
};

/// Struct /Script/Engine.RPCDoSState
/// Size: 0x0048 (0x000000 - 0x000048)
struct FRPCDoSState
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	bool                                               bLogEscalate;                                               // 0x0008   (0x0001)  
	bool                                               bSendEscalateAnalytics;                                     // 0x0009   (0x0001)  
	bool                                               bKickPlayer;                                                // 0x000A   (0x0001)  
	bool                                               bTrackRecentRPCs;                                           // 0x000B   (0x0001)  
	int16_t                                            EscalateQuotaRPCsPerFrame;                                  // 0x000C   (0x0002)  
	int16_t                                            EscalateTimeQuotaMSPerFrame;                                // 0x000E   (0x0002)  
	int16_t                                            EscalateQuotaRPCsPerPeriod;                                 // 0x0010   (0x0002)  
	int16_t                                            EscalateTimeQuotaMSPerPeriod;                               // 0x0012   (0x0002)  
	int8_t                                             EscalateQuotaTimePeriod;                                    // 0x0014   (0x0001)  
	int8_t                                             EscalationCountTolerance;                                   // 0x0015   (0x0001)  
	int16_t                                            EscalationTimeToleranceMS;                                  // 0x0016   (0x0002)  
	int16_t                                            RPCRepeatLimitPerPeriod;                                    // 0x0018   (0x0002)  
	int16_t                                            RPCRepeatLimitMSPerPeriod;                                  // 0x001A   (0x0002)  
	int8_t                                             RPCRepeatLimitTimePeriod;                                   // 0x001C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x001D   (0x0001)  MISSED
	int16_t                                            CooloffTime;                                                // 0x001E   (0x0002)  
	int16_t                                            AutoEscalateTime;                                           // 0x0020   (0x0002)  
	unsigned char                                      UnknownData02_6[0x26];                                      // 0x0022   (0x0026)  MISSED
};

/// Struct /Script/Engine.RPCDoSStateConfig
/// Size: 0x0030 (0x000048 - 0x000078)
struct FRPCDoSStateConfig : FRPCDoSState
{ 
	unsigned char                                      UnknownData00_1[0x30];                                      // 0x0048   (0x0030)  MISSED
};

/// Struct /Script/Engine.RPCAnalyticsThreshold
/// Size: 0x0018 (0x000000 - 0x000018)
struct FRPCAnalyticsThreshold
{ 
	FName                                              RPC;                                                        // 0x0000   (0x0008)  
	int32_t                                            CountPerSec;                                                // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	double                                             TimePerSec;                                                 // 0x0010   (0x0008)  
};

/// Struct /Script/Engine.ParticleSystemWorldManagerTickFunction
/// Size: 0x0008 (0x000028 - 0x000030)
struct FParticleSystemWorldManagerTickFunction : FTickFunction
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Struct /Script/Engine.PSCPoolElem
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPSCPoolElem
{ 
	UParticleSystemComponent*                          PSC;                                                        // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0008   (0x0008)  MISSED
};

/// Struct /Script/Engine.PSCPool
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPSCPool
{ 
	TArray<FPSCPoolElem>                               FreeElements;                                               // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.WorldPSCPool
/// Size: 0x0058 (0x000000 - 0x000058)
struct FWorldPSCPool
{ 
	TMap<UParticleSystem*, FPSCPool>                   WorldParticleSystemPools;                                   // 0x0000   (0x0050)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0050   (0x0008)  MISSED
};

/// Struct /Script/Engine.FreezablePerPlatformInt
/// Size: 0x0004 (0x000000 - 0x000004)
struct FFreezablePerPlatformInt
{ 
	unsigned char                                      UnknownData00_1[0x4];                                       // 0x0000   (0x0004)  MISSED
};

/// Struct /Script/Engine.PerQualityLevelInt
/// Size: 0x0068 (0x000000 - 0x000068)
struct FPerQualityLevelInt
{ 
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0000   (0x0010)  MISSED
	int32_t                                            Default;                                                    // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	TMap<int32_t, int32_t>                             PerQuality;                                                 // 0x0018   (0x0050)  
};

/// Struct /Script/Engine.ConstraintDrive
/// Size: 0x0010 (0x000000 - 0x000010)
struct FConstraintDrive
{ 
	float                                              Stiffness;                                                  // 0x0000   (0x0004)  
	float                                              Damping;                                                    // 0x0004   (0x0004)  
	float                                              MaxForce;                                                   // 0x0008   (0x0004)  
	bool                                               bEnablePositionDrive : 1;                                   // 0x000C:0 (0x0001)  
	bool                                               bEnableVelocityDrive : 1;                                   // 0x000C:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
};

/// Struct /Script/Engine.LinearDriveConstraint
/// Size: 0x0068 (0x000000 - 0x000068)
struct FLinearDriveConstraint
{ 
	FVector                                            PositionTarget;                                             // 0x0000   (0x0018)  
	FVector                                            VelocityTarget;                                             // 0x0018   (0x0018)  
	FConstraintDrive                                   XDrive;                                                     // 0x0030   (0x0010)  
	FConstraintDrive                                   YDrive;                                                     // 0x0040   (0x0010)  
	FConstraintDrive                                   ZDrive;                                                     // 0x0050   (0x0010)  
	bool                                               bEnablePositionDrive : 1;                                   // 0x0060:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0061   (0x0007)  MISSED
};

/// Struct /Script/Engine.AngularDriveConstraint
/// Size: 0x0068 (0x000000 - 0x000068)
struct FAngularDriveConstraint
{ 
	FConstraintDrive                                   TwistDrive;                                                 // 0x0000   (0x0010)  
	FConstraintDrive                                   SwingDrive;                                                 // 0x0010   (0x0010)  
	FConstraintDrive                                   SlerpDrive;                                                 // 0x0020   (0x0010)  
	FRotator                                           OrientationTarget;                                          // 0x0030   (0x0018)  
	FVector                                            AngularVelocityTarget;                                      // 0x0048   (0x0018)  
	TEnumAsByte<EAngularDriveMode>                     AngularDriveMode;                                           // 0x0060   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0061   (0x0007)  MISSED
};

/// Struct /Script/Engine.ConstraintProfileProperties
/// Size: 0x0160 (0x000000 - 0x000160)
struct FConstraintProfileProperties
{ 
	float                                              ProjectionLinearTolerance;                                  // 0x0000   (0x0004)  
	float                                              ProjectionAngularTolerance;                                 // 0x0004   (0x0004)  
	float                                              ProjectionLinearAlpha;                                      // 0x0008   (0x0004)  
	float                                              ProjectionAngularAlpha;                                     // 0x000C   (0x0004)  
	float                                              ShockPropagationAlpha;                                      // 0x0010   (0x0004)  
	float                                              LinearBreakThreshold;                                       // 0x0014   (0x0004)  
	float                                              LinearPlasticityThreshold;                                  // 0x0018   (0x0004)  
	float                                              AngularBreakThreshold;                                      // 0x001C   (0x0004)  
	float                                              AngularPlasticityThreshold;                                 // 0x0020   (0x0004)  
	float                                              ContactTransferScale;                                       // 0x0024   (0x0004)  
	FLinearConstraint                                  LinearLimit;                                                // 0x0028   (0x001C)  
	FConeConstraint                                    ConeLimit;                                                  // 0x0044   (0x0020)  
	FTwistConstraint                                   TwistLimit;                                                 // 0x0064   (0x001C)  
	bool                                               bDisableCollision : 1;                                      // 0x0080:0 (0x0001)  
	bool                                               bParentDominates : 1;                                       // 0x0080:1 (0x0001)  
	bool                                               bEnableShockPropagation : 1;                                // 0x0080:2 (0x0001)  
	bool                                               bEnableProjection : 1;                                      // 0x0080:3 (0x0001)  
	bool                                               bAngularBreakable : 1;                                      // 0x0080:4 (0x0001)  
	bool                                               bAngularPlasticity : 1;                                     // 0x0080:5 (0x0001)  
	bool                                               bLinearBreakable : 1;                                       // 0x0080:6 (0x0001)  
	bool                                               bLinearPlasticity : 1;                                      // 0x0080:7 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0081   (0x0007)  MISSED
	FLinearDriveConstraint                             LinearDrive;                                                // 0x0088   (0x0068)  
	FAngularDriveConstraint                            AngularDrive;                                               // 0x00F0   (0x0068)  
	TEnumAsByte<EConstraintPlasticityType>             LinearPlasticityType;                                       // 0x0158   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0159   (0x0007)  MISSED
};

/// Struct /Script/Engine.ConstraintBaseParams
/// Size: 0x0014 (0x000000 - 0x000014)
struct FConstraintBaseParams
{ 
	float                                              Stiffness;                                                  // 0x0000   (0x0004)  
	float                                              Damping;                                                    // 0x0004   (0x0004)  
	float                                              Restitution;                                                // 0x0008   (0x0004)  
	float                                              ContactDistance;                                            // 0x000C   (0x0004)  
	bool                                               bSoftConstraint : 1;                                        // 0x0010:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0011   (0x0003)  MISSED
};

/// Struct /Script/Engine.TwistConstraint
/// Size: 0x0008 (0x000014 - 0x00001C)
struct FTwistConstraint : FConstraintBaseParams
{ 
	float                                              TwistLimitDegrees;                                          // 0x0014   (0x0004)  
	TEnumAsByte<EAngularConstraintMotion>              TwistMotion;                                                // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0019   (0x0003)  MISSED
};

/// Struct /Script/Engine.ConeConstraint
/// Size: 0x000C (0x000014 - 0x000020)
struct FConeConstraint : FConstraintBaseParams
{ 
	float                                              Swing1LimitDegrees;                                         // 0x0014   (0x0004)  
	float                                              Swing2LimitDegrees;                                         // 0x0018   (0x0004)  
	TEnumAsByte<EAngularConstraintMotion>              Swing1Motion;                                               // 0x001C   (0x0001)  
	TEnumAsByte<EAngularConstraintMotion>              Swing2Motion;                                               // 0x001D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x001E   (0x0002)  MISSED
};

/// Struct /Script/Engine.LinearConstraint
/// Size: 0x0008 (0x000014 - 0x00001C)
struct FLinearConstraint : FConstraintBaseParams
{ 
	float                                              Limit;                                                      // 0x0014   (0x0004)  
	TEnumAsByte<ELinearConstraintMotion>               XMotion;                                                    // 0x0018   (0x0001)  
	TEnumAsByte<ELinearConstraintMotion>               YMotion;                                                    // 0x0019   (0x0001)  
	TEnumAsByte<ELinearConstraintMotion>               ZMotion;                                                    // 0x001A   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x001B   (0x0001)  MISSED
};

/// Struct /Script/Engine.ConstraintInstanceBase
/// Size: 0x0038 (0x000000 - 0x000038)
struct FConstraintInstanceBase
{ 
	unsigned char                                      UnknownData00_1[0x38];                                      // 0x0000   (0x0038)  MISSED
};

/// Struct /Script/Engine.ConstraintInstance
/// Size: 0x0240 (0x000038 - 0x000278)
struct FConstraintInstance : FConstraintInstanceBase
{ 
	FName                                              JointName;                                                  // 0x0038   (0x0008)  
	FName                                              ConstraintBone1;                                            // 0x0040   (0x0008)  
	FName                                              ConstraintBone2;                                            // 0x0048   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0050   (0x0008)  MISSED
	FVector                                            Pos1;                                                       // 0x0058   (0x0018)  
	FVector                                            PriAxis1;                                                   // 0x0070   (0x0018)  
	FVector                                            SecAxis1;                                                   // 0x0088   (0x0018)  
	FVector                                            Pos2;                                                       // 0x00A0   (0x0018)  
	FVector                                            PriAxis2;                                                   // 0x00B8   (0x0018)  
	FVector                                            SecAxis2;                                                   // 0x00D0   (0x0018)  
	FRotator                                           AngularRotationOffset;                                      // 0x00E8   (0x0018)  
	bool                                               bScaleLinearLimits : 1;                                     // 0x0100:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x7];                                       // 0x0101   (0x0007)  MISSED
	FConstraintProfileProperties                       ProfileInstance;                                            // 0x0108   (0x0160)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0268   (0x0010)  MISSED
};

/// Struct /Script/Engine.ConstraintInstanceAccessor
/// Size: 0x000C (0x000000 - 0x00000C)
struct FConstraintInstanceAccessor
{ 
	TWeakObjectPtr<UObject*>                           Owner;                                                      // 0x0000   (0x0008)  
	uint32_t                                           Index;                                                      // 0x0008   (0x0004)  
};

/// Struct /Script/Engine.PhysicalAnimationData
/// Size: 0x0024 (0x000000 - 0x000024)
struct FPhysicalAnimationData
{ 
	FName                                              BodyName;                                                   // 0x0000   (0x0008)  
	bool                                               bIsLocalSimulation : 1;                                     // 0x0008:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              OrientationStrength;                                        // 0x000C   (0x0004)  
	float                                              AngularVelocityStrength;                                    // 0x0010   (0x0004)  
	float                                              PositionStrength;                                           // 0x0014   (0x0004)  
	float                                              VelocityStrength;                                           // 0x0018   (0x0004)  
	float                                              MaxLinearForce;                                             // 0x001C   (0x0004)  
	float                                              MaxAngularForce;                                            // 0x0020   (0x0004)  
};

/// Struct /Script/Engine.PhysicsAssetSolverSettings
/// Size: 0x001C (0x000000 - 0x00001C)
struct FPhysicsAssetSolverSettings
{ 
	int32_t                                            PositionIterations;                                         // 0x0000   (0x0004)  
	int32_t                                            VelocityIterations;                                         // 0x0004   (0x0004)  
	int32_t                                            ProjectionIterations;                                       // 0x0008   (0x0004)  
	float                                              CullDistance;                                               // 0x000C   (0x0004)  
	float                                              MaxDepenetrationVelocity;                                   // 0x0010   (0x0004)  
	float                                              FixedTimeStep;                                              // 0x0014   (0x0004)  
	bool                                               bUseLinearJointSolver;                                      // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0019   (0x0003)  MISSED
};

/// Struct /Script/Engine.SolverIterations
/// Size: 0x0018 (0x000000 - 0x000018)
struct FSolverIterations
{ 
	int32_t                                            SolverIterations;                                           // 0x0000   (0x0004)  
	int32_t                                            JointIterations;                                            // 0x0004   (0x0004)  
	int32_t                                            CollisionIterations;                                        // 0x0008   (0x0004)  
	int32_t                                            SolverPushOutIterations;                                    // 0x000C   (0x0004)  
	int32_t                                            JointPushOutIterations;                                     // 0x0010   (0x0004)  
	int32_t                                            CollisionPushOutIterations;                                 // 0x0014   (0x0004)  
};

/// Struct /Script/Engine.PhysicalAnimationProfile
/// Size: 0x002C (0x000000 - 0x00002C)
struct FPhysicalAnimationProfile
{ 
	FName                                              ProfileName;                                                // 0x0000   (0x0008)  
	FPhysicalAnimationData                             PhysicalAnimationData;                                      // 0x0008   (0x0024)  
};

/// Struct /Script/Engine.PhysicsConstraintProfileHandle
/// Size: 0x0168 (0x000000 - 0x000168)
struct FPhysicsConstraintProfileHandle
{ 
	FConstraintProfileProperties                       ProfileProperties;                                          // 0x0000   (0x0160)  
	FName                                              ProfileName;                                                // 0x0160   (0x0008)  
};

/// Struct /Script/Engine.PhysicalSurfaceName
/// Size: 0x000C (0x000000 - 0x00000C)
struct FPhysicalSurfaceName
{ 
	TEnumAsByte<EPhysicalSurface>                      Type;                                                       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FName                                              Name;                                                       // 0x0004   (0x0008)  
};

/// Struct /Script/Engine.ChaosPhysicsSettings
/// Size: 0x0003 (0x000000 - 0x000003)
struct FChaosPhysicsSettings
{ 
	EChaosThreadingMode                                DefaultThreadingModel;                                      // 0x0000   (0x0001)  
	EChaosSolverTickMode                               DedicatedThreadTickMode;                                    // 0x0001   (0x0001)  
	EChaosBufferMode                                   DedicatedThreadBufferMode;                                  // 0x0002   (0x0001)  
};

/// Struct /Script/Engine.UpdateLevelStreamingLevelStatus
/// Size: 0x0010 (0x000000 - 0x000010)
struct FUpdateLevelStreamingLevelStatus
{ 
	FName                                              PackageName;                                                // 0x0000   (0x0008)  
	int32_t                                            LODIndex;                                                   // 0x0008   (0x0004)  
	bool                                               bNewShouldBeLoaded;                                         // 0x000C   (0x0001)  
	bool                                               bNewShouldBeVisible;                                        // 0x000D   (0x0001)  
	bool                                               bNewShouldBlockOnLoad;                                      // 0x000E   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x000F   (0x0001)  MISSED
};

/// Struct /Script/Engine.AsyncPhysicsTimestamp
/// Size: 0x0008 (0x000000 - 0x000008)
struct FAsyncPhysicsTimestamp
{ 
	int32_t                                            ServerFrame;                                                // 0x0000   (0x0004)  
	int32_t                                            LocalFrame;                                                 // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.PlayerMuteList
/// Size: 0x0058 (0x000000 - 0x000058)
struct FPlayerMuteList
{ 
	unsigned char                                      UnknownData00_2[0x50];                                      // 0x0000   (0x0050)  MISSED
	bool                                               bHasVoiceHandshakeCompleted;                                // 0x0050   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0051   (0x0003)  MISSED
	int32_t                                            VoiceChannelIdx;                                            // 0x0054   (0x0004)  
};

/// Struct /Script/Engine.PropertyAccessIndirection
/// Size: 0x0040 (0x000000 - 0x000040)
struct FPropertyAccessIndirection
{ 
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0000   (0x0020)  MISSED
	UFunction*                                         Function;                                                   // 0x0020   (0x0008)  
	int32_t                                            ReturnBufferSize;                                           // 0x0028   (0x0004)  
	int32_t                                            ReturnBufferAlignment;                                      // 0x002C   (0x0004)  
	int32_t                                            ArrayIndex;                                                 // 0x0030   (0x0004)  
	uint32_t                                           Offset;                                                     // 0x0034   (0x0004)  
	EPropertyAccessObjectType                          ObjectType;                                                 // 0x0038   (0x0001)  
	EPropertyAccessIndirectionType                     Type;                                                       // 0x0039   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x003A   (0x0006)  MISSED
};

/// Struct /Script/Engine.PropertyAccessIndirectionChain
/// Size: 0x0028 (0x000000 - 0x000028)
struct FPropertyAccessIndirectionChain
{ 
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0000   (0x0020)  MISSED
	int32_t                                            IndirectionStartIndex;                                      // 0x0020   (0x0004)  
	int32_t                                            IndirectionEndIndex;                                        // 0x0024   (0x0004)  
};

/// Struct /Script/Engine.SubsurfaceProfileStruct
/// Size: 0x009C (0x000000 - 0x00009C)
struct FSubsurfaceProfileStruct
{ 
	FLinearColor                                       SurfaceAlbedo;                                              // 0x0000   (0x0010)  
	FLinearColor                                       MeanFreePathColor;                                          // 0x0010   (0x0010)  
	float                                              MeanFreePathDistance;                                       // 0x0020   (0x0004)  
	float                                              WorldUnitScale;                                             // 0x0024   (0x0004)  
	bool                                               bEnableBurley;                                              // 0x0028   (0x0001)  
	bool                                               bEnableMeanFreePath;                                        // 0x0029   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x002A   (0x0002)  MISSED
	FLinearColor                                       Tint;                                                       // 0x002C   (0x0010)  
	float                                              ScatterRadius;                                              // 0x003C   (0x0004)  
	FLinearColor                                       SubsurfaceColor;                                            // 0x0040   (0x0010)  
	FLinearColor                                       FalloffColor;                                               // 0x0050   (0x0010)  
	FLinearColor                                       BoundaryColorBleed;                                         // 0x0060   (0x0010)  
	float                                              ExtinctionScale;                                            // 0x0070   (0x0004)  
	float                                              NormalScale;                                                // 0x0074   (0x0004)  
	float                                              ScatteringDistribution;                                     // 0x0078   (0x0004)  
	float                                              IOR;                                                        // 0x007C   (0x0004)  
	float                                              Roughness0;                                                 // 0x0080   (0x0004)  
	float                                              Roughness1;                                                 // 0x0084   (0x0004)  
	float                                              LobeMix;                                                    // 0x0088   (0x0004)  
	FLinearColor                                       TransmissionTintColor;                                      // 0x008C   (0x0010)  
};

/// Struct /Script/Engine.SingleAnimationPlayData
/// Size: 0x0018 (0x000000 - 0x000018)
struct FSingleAnimationPlayData
{ 
	UAnimationAsset*                                   AnimToPlay;                                                 // 0x0000   (0x0008)  
	bool                                               bSavedLooping : 1;                                          // 0x0008:0 (0x0001)  
	bool                                               bSavedPlaying : 1;                                          // 0x0008:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              SavedPosition;                                              // 0x000C   (0x0004)  
	float                                              SavedPlayRate;                                              // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/Engine.BoneMirrorInfo
/// Size: 0x0008 (0x000000 - 0x000008)
struct FBoneMirrorInfo
{ 
	int32_t                                            SourceIndex;                                                // 0x0000   (0x0004)  
	TEnumAsByte<EAxis>                                 BoneFlipAxis;                                               // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0005   (0x0003)  MISSED
};

/// Struct /Script/Engine.BoneMirrorExport
/// Size: 0x0014 (0x000000 - 0x000014)
struct FBoneMirrorExport
{ 
	FName                                              BoneName;                                                   // 0x0000   (0x0008)  
	FName                                              SourceBoneName;                                             // 0x0008   (0x0008)  
	TEnumAsByte<EAxis>                                 BoneFlipAxis;                                               // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0011   (0x0003)  MISSED
};

/// Struct /Script/Engine.SkeletalMeshClothBuildParams
/// Size: 0x0060 (0x000000 - 0x000060)
struct FSkeletalMeshClothBuildParams
{ 
	TWeakObjectPtr<UClothingAssetBase*>                TargetAsset;                                                // 0x0000   (0x0008)  
	int32_t                                            TargetLod;                                                  // 0x0008   (0x0004)  
	bool                                               bRemapParameters;                                           // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x000D   (0x0003)  MISSED
	FString                                            AssetName;                                                  // 0x0010   (0x0010)  
	int32_t                                            LODIndex;                                                   // 0x0020   (0x0004)  
	int32_t                                            SourceSection;                                              // 0x0024   (0x0004)  
	bool                                               bRemoveFromMesh;                                            // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	TWeakObjectPtr<UPhysicsAsset*>                     PhysicsAsset;                                               // 0x0030   (0x0030)  
};

/// Struct /Script/Engine.ClothPhysicsProperties_Legacy
/// Size: 0x0050 (0x000000 - 0x000050)
struct FClothPhysicsProperties_Legacy
{ 
	float                                              VerticalResistance;                                         // 0x0000   (0x0004)  
	float                                              HorizontalResistance;                                       // 0x0004   (0x0004)  
	float                                              BendResistance;                                             // 0x0008   (0x0004)  
	float                                              ShearResistance;                                            // 0x000C   (0x0004)  
	float                                              Friction;                                                   // 0x0010   (0x0004)  
	float                                              Damping;                                                    // 0x0014   (0x0004)  
	float                                              TetherStiffness;                                            // 0x0018   (0x0004)  
	float                                              TetherLimit;                                                // 0x001C   (0x0004)  
	float                                              Drag;                                                       // 0x0020   (0x0004)  
	float                                              StiffnessFrequency;                                         // 0x0024   (0x0004)  
	float                                              GravityScale;                                               // 0x0028   (0x0004)  
	float                                              MassScale;                                                  // 0x002C   (0x0004)  
	float                                              InertiaBlend;                                               // 0x0030   (0x0004)  
	float                                              SelfCollisionThickness;                                     // 0x0034   (0x0004)  
	float                                              SelfCollisionSquashScale;                                   // 0x0038   (0x0004)  
	float                                              SelfCollisionStiffness;                                     // 0x003C   (0x0004)  
	float                                              SolverFrequency;                                            // 0x0040   (0x0004)  
	float                                              FiberCompression;                                           // 0x0044   (0x0004)  
	float                                              FiberExpansion;                                             // 0x0048   (0x0004)  
	float                                              FiberResistance;                                            // 0x004C   (0x0004)  
};

/// Struct /Script/Engine.ClothingAssetData_Legacy
/// Size: 0x0070 (0x000000 - 0x000070)
struct FClothingAssetData_Legacy
{ 
	FName                                              AssetName;                                                  // 0x0000   (0x0008)  
	FString                                            ApexFileName;                                               // 0x0008   (0x0010)  
	bool                                               bClothPropertiesChanged;                                    // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0019   (0x0003)  MISSED
	FClothPhysicsProperties_Legacy                     PhysicsProperties;                                          // 0x001C   (0x0050)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x006C   (0x0004)  MISSED
};

/// Struct /Script/Engine.BoneFilter
/// Size: 0x000C (0x000000 - 0x00000C)
struct FBoneFilter
{ 
	bool                                               bExcludeSelf;                                               // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0001   (0x0003)  MISSED
	FName                                              BoneName;                                                   // 0x0004   (0x0008)  
};

/// Struct /Script/Engine.SkeletalMeshLODGroupSettings
/// Size: 0x0090 (0x000000 - 0x000090)
struct FSkeletalMeshLODGroupSettings
{ 
	FPerPlatformFloat                                  ScreenSize;                                                 // 0x0000   (0x0004)  
	float                                              LODHysteresis;                                              // 0x0004   (0x0004)  
	EBoneFilterActionOption                            BoneFilterActionOption;                                     // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0009   (0x0007)  MISSED
	TArray<FBoneFilter>                                BoneList;                                                   // 0x0010   (0x0010)  
	TArray<FName>                                      BonesToPrioritize;                                          // 0x0020   (0x0010)  
	TArray<int32_t>                                    SectionsToPrioritize;                                       // 0x0030   (0x0010)  
	float                                              WeightOfPrioritization;                                     // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0044   (0x0004)  MISSED
	UAnimSequence*                                     BakePose;                                                   // 0x0048   (0x0008)  
	FSkeletalMeshOptimizationSettings                  ReductionSettings;                                          // 0x0050   (0x003C)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x008C   (0x0004)  MISSED
};

/// Struct /Script/Engine.SkelMeshMergeSectionMapping
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSkelMeshMergeSectionMapping
{ 
	TArray<int32_t>                                    SectionIDs;                                                 // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.SkelMeshMergeMeshUVTransforms
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSkelMeshMergeMeshUVTransforms
{ 
	TArray<FTransform>                                 UVTransforms;                                               // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.SkelMeshMergeUVTransformMapping
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSkelMeshMergeUVTransformMapping
{ 
	TArray<FSkelMeshMergeMeshUVTransforms>             UVTransformsPerMesh;                                        // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.SkeletalMeshSamplingRegionBuiltData
/// Size: 0x0078 (0x000000 - 0x000078)
struct FSkeletalMeshSamplingRegionBuiltData
{ 
	unsigned char                                      UnknownData00_1[0x78];                                      // 0x0000   (0x0078)  MISSED
};

/// Struct /Script/Engine.SkeletalMeshSamplingLODBuiltData
/// Size: 0x0048 (0x000000 - 0x000048)
struct FSkeletalMeshSamplingLODBuiltData
{ 
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0000   (0x0048)  MISSED
};

/// Struct /Script/Engine.SkeletalMeshSamplingBuiltData
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSkeletalMeshSamplingBuiltData
{ 
	TArray<FSkeletalMeshSamplingLODBuiltData>          WholeMeshBuiltData;                                         // 0x0000   (0x0010)  
	TArray<FSkeletalMeshSamplingRegionBuiltData>       RegionBuiltData;                                            // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.SkeletalMeshSamplingRegionBoneFilter
/// Size: 0x000C (0x000000 - 0x00000C)
struct FSkeletalMeshSamplingRegionBoneFilter
{ 
	FName                                              BoneName;                                                   // 0x0000   (0x0008)  
	bool                                               bIncludeOrExclude : 1;                                      // 0x0008:0 (0x0001)  
	bool                                               bApplyToChildren : 1;                                       // 0x0008:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0009   (0x0003)  MISSED
};

/// Struct /Script/Engine.SkeletalMeshSamplingRegionMaterialFilter
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSkeletalMeshSamplingRegionMaterialFilter
{ 
	FName                                              MaterialName;                                               // 0x0000   (0x0008)  
};

/// Struct /Script/Engine.SkeletalMeshSamplingRegion
/// Size: 0x0030 (0x000000 - 0x000030)
struct FSkeletalMeshSamplingRegion
{ 
	FName                                              Name;                                                       // 0x0000   (0x0008)  
	int32_t                                            LODIndex;                                                   // 0x0008   (0x0004)  
	bool                                               bSupportUniformlyDistributedSampling : 1;                   // 0x000C:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x000D   (0x0003)  MISSED
	TArray<FSkeletalMeshSamplingRegionMaterialFilter>  MaterialFilters;                                            // 0x0010   (0x0010)  
	TArray<FSkeletalMeshSamplingRegionBoneFilter>      BoneFilters;                                                // 0x0020   (0x0010)  
};

/// Struct /Script/Engine.SkeletalMeshSamplingInfo
/// Size: 0x0030 (0x000000 - 0x000030)
struct FSkeletalMeshSamplingInfo
{ 
	TArray<FSkeletalMeshSamplingRegion>                Regions;                                                    // 0x0000   (0x0010)  
	FSkeletalMeshSamplingBuiltData                     BuiltData;                                                  // 0x0010   (0x0020)  
};

/// Struct /Script/Engine.SoundClassEditorData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSoundClassEditorData
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/Engine.SoundClassProperties
/// Size: 0x01B8 (0x000000 - 0x0001B8)
struct FSoundClassProperties
{ 
	float                                              Volume;                                                     // 0x0000   (0x0004)  
	float                                              Pitch;                                                      // 0x0004   (0x0004)  
	float                                              LowPassFilterFrequency;                                     // 0x0008   (0x0004)  
	float                                              AttenuationDistanceScale;                                   // 0x000C   (0x0004)  
	float                                              LFEBleed;                                                   // 0x0010   (0x0004)  
	float                                              VoiceCenterChannelVolume;                                   // 0x0014   (0x0004)  
	float                                              RadioFilterVolume;                                          // 0x0018   (0x0004)  
	float                                              RadioFilterVolumeThreshold;                                 // 0x001C   (0x0004)  
	bool                                               bApplyEffects : 1;                                          // 0x0020:0 (0x0001)  
	bool                                               bAlwaysPlay : 1;                                            // 0x0020:1 (0x0001)  
	bool                                               bIsUISound : 1;                                             // 0x0020:2 (0x0001)  
	bool                                               bIsMusic : 1;                                               // 0x0020:3 (0x0001)  
	bool                                               bCenterChannelOnly : 1;                                     // 0x0020:4 (0x0001)  
	bool                                               bApplyAmbientVolumes : 1;                                   // 0x0020:5 (0x0001)  
	bool                                               bReverb : 1;                                                // 0x0020:6 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0021   (0x0003)  MISSED
	float                                              Default2DReverbSendAmount;                                  // 0x0024   (0x0004)  
	FSoundModulationDefaultSettings                    ModulationSettings;                                         // 0x0028   (0x0180)  
	TEnumAsByte<EAudioOutputTarget>                    OutputTarget;                                               // 0x01A8   (0x0001)  
	ESoundWaveLoadingBehavior                          LoadingBehavior;                                            // 0x01A9   (0x0001)  
	unsigned char                                      UnknownData01_5[0x6];                                       // 0x01AA   (0x0006)  MISSED
	USoundSubmix*                                      DefaultSubmix;                                              // 0x01B0   (0x0008)  
};

/// Struct /Script/Engine.SoundModulationDefaultSettings
/// Size: 0x0180 (0x000000 - 0x000180)
struct FSoundModulationDefaultSettings
{ 
	FSoundModulationDestinationSettings                VolumeModulationDestination;                                // 0x0000   (0x0060)  
	FSoundModulationDestinationSettings                PitchModulationDestination;                                 // 0x0060   (0x0060)  
	FSoundModulationDestinationSettings                HighpassModulationDestination;                              // 0x00C0   (0x0060)  
	FSoundModulationDestinationSettings                LowpassModulationDestination;                               // 0x0120   (0x0060)  
};

/// Struct /Script/Engine.PassiveSoundMixModifier
/// Size: 0x0010 (0x000000 - 0x000010)
struct FPassiveSoundMixModifier
{ 
	USoundMix*                                         SoundMix;                                                   // 0x0000   (0x0008)  
	float                                              MinVolumeThreshold;                                         // 0x0008   (0x0004)  
	float                                              MaxVolumeThreshold;                                         // 0x000C   (0x0004)  
};

/// Struct /Script/Engine.SoundConcurrencySettings
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSoundConcurrencySettings
{ 
	int32_t                                            MaxCount;                                                   // 0x0000   (0x0004)  
	bool                                               bLimitToOwner : 1;                                          // 0x0004:0 (0x0001)  
	bool                                               bVolumeScaleCanRelease : 1;                                 // 0x0004:1 (0x0001)  
	TEnumAsByte<EMaxConcurrentResolutionRule>          ResolutionRule;                                             // 0x0005   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0006   (0x0002)  MISSED
	float                                              RetriggerTime;                                              // 0x0008   (0x0004)  
	float                                              VolumeScale;                                                // 0x000C   (0x0004)  
	EConcurrencyVolumeScaleMode                        VolumeScaleMode;                                            // 0x0010   (0x0004)  
	float                                              VolumeScaleAttackTime;                                      // 0x0014   (0x0004)  
	float                                              VolumeScaleReleaseTime;                                     // 0x0018   (0x0004)  
	float                                              VoiceStealReleaseTime;                                      // 0x001C   (0x0004)  
};

/// Struct /Script/Engine.SoundNodeEditorData
/// Size: 0x0008 (0x000000 - 0x000008)
struct FSoundNodeEditorData
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0000   (0x0008)  MISSED
};

/// Struct /Script/Engine.AudioEQEffect
/// Size: 0x0038 (0x000008 - 0x000040)
struct FAudioEQEffect : FAudioEffectParameters
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0008   (0x0008)  MISSED
	float                                              FrequencyCenter0;                                           // 0x0010   (0x0004)  
	float                                              Gain0;                                                      // 0x0014   (0x0004)  
	float                                              Bandwidth0;                                                 // 0x0018   (0x0004)  
	float                                              FrequencyCenter1;                                           // 0x001C   (0x0004)  
	float                                              Gain1;                                                      // 0x0020   (0x0004)  
	float                                              Bandwidth1;                                                 // 0x0024   (0x0004)  
	float                                              FrequencyCenter2;                                           // 0x0028   (0x0004)  
	float                                              Gain2;                                                      // 0x002C   (0x0004)  
	float                                              Bandwidth2;                                                 // 0x0030   (0x0004)  
	float                                              FrequencyCenter3;                                           // 0x0034   (0x0004)  
	float                                              Gain3;                                                      // 0x0038   (0x0004)  
	float                                              Bandwidth3;                                                 // 0x003C   (0x0004)  
};

/// Struct /Script/Engine.SoundClassAdjuster
/// Size: 0x0020 (0x000000 - 0x000020)
struct FSoundClassAdjuster
{ 
	USoundClass*                                       SoundClassObject;                                           // 0x0000   (0x0008)  
	float                                              VolumeAdjuster;                                             // 0x0008   (0x0004)  
	float                                              PitchAdjuster;                                              // 0x000C   (0x0004)  
	float                                              LowPassFilterFrequency;                                     // 0x0010   (0x0004)  
	bool                                               bApplyToChildren : 1;                                       // 0x0014:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0015   (0x0003)  MISSED
	float                                              VoiceCenterChannelVolumeAdjuster;                           // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x001C   (0x0004)  MISSED
};

/// Struct /Script/Engine.SoundModulationDefaultRoutingSettings
/// Size: 0x0008 (0x000180 - 0x000188)
struct FSoundModulationDefaultRoutingSettings : FSoundModulationDefaultSettings
{ 
	EModulationRouting                                 VolumeRouting;                                              // 0x0180   (0x0001)  
	EModulationRouting                                 PitchRouting;                                               // 0x0181   (0x0001)  
	EModulationRouting                                 HighpassRouting;                                            // 0x0182   (0x0001)  
	EModulationRouting                                 LowpassRouting;                                             // 0x0183   (0x0001)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0184   (0x0004)  MISSED
};

/// Struct /Script/Engine.DistanceDatum
/// Size: 0x0014 (0x000000 - 0x000014)
struct FDistanceDatum
{ 
	float                                              FadeInDistanceStart;                                        // 0x0000   (0x0004)  
	float                                              FadeInDistanceEnd;                                          // 0x0004   (0x0004)  
	float                                              FadeOutDistanceStart;                                       // 0x0008   (0x0004)  
	float                                              FadeOutDistanceEnd;                                         // 0x000C   (0x0004)  
	float                                              Volume;                                                     // 0x0010   (0x0004)  
};

/// Struct /Script/Engine.SoundSubmixSpectralAnalysisBandSettings
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSoundSubmixSpectralAnalysisBandSettings
{ 
	float                                              BandFrequency;                                              // 0x0000   (0x0004)  
	int32_t                                            AttackTimeMsec;                                             // 0x0004   (0x0004)  
	int32_t                                            ReleaseTimeMsec;                                            // 0x0008   (0x0004)  
	float                                              QFactor;                                                    // 0x000C   (0x0004)  
};

/// Struct /Script/Engine.StaticMeshSourceModel
/// Size: 0x0088 (0x000000 - 0x000088)
struct FStaticMeshSourceModel
{ 
	FMeshBuildSettings                                 BuildSettings;                                              // 0x0000   (0x0048)  
	FMeshReductionSettings                             ReductionSettings;                                          // 0x0048   (0x0024)  
	float                                              LODDistance;                                                // 0x006C   (0x0004)  
	FPerPlatformFloat                                  ScreenSize;                                                 // 0x0070   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0074   (0x0004)  MISSED
	FString                                            SourceImportFilename;                                       // 0x0078   (0x0010)  
};

/// Struct /Script/Engine.StreamableTexture
/// Size: 0x0001 (0x000000 - 0x000001)
struct FStreamableTexture
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.ExternalToolDefinition
/// Size: 0x0060 (0x000000 - 0x000060)
struct FExternalToolDefinition
{ 
	FString                                            ToolName;                                                   // 0x0000   (0x0010)  
	FFilePath                                          ExecutablePath;                                             // 0x0010   (0x0010)  
	FString                                            CommandLineOptions;                                         // 0x0020   (0x0010)  
	FDirectoryPath                                     WorkingDirectory;                                           // 0x0030   (0x0010)  
	FString                                            ScriptExtension;                                            // 0x0040   (0x0010)  
	FDirectoryPath                                     ScriptDirectory;                                            // 0x0050   (0x0010)  
};

/// Struct /Script/Engine.ImportFactorySettingValues
/// Size: 0x0020 (0x000000 - 0x000020)
struct FImportFactorySettingValues
{ 
	FString                                            SettingName;                                                // 0x0000   (0x0010)  
	FString                                            Value;                                                      // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.EditorImportExportTestDefinition
/// Size: 0x0038 (0x000000 - 0x000038)
struct FEditorImportExportTestDefinition
{ 
	FFilePath                                          ImportFilePath;                                             // 0x0000   (0x0010)  
	FString                                            ExportFileExtension;                                        // 0x0010   (0x0010)  
	bool                                               bSkipExport;                                                // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0021   (0x0007)  MISSED
	TArray<FImportFactorySettingValues>                FactorySettings;                                            // 0x0028   (0x0010)  
};

/// Struct /Script/Engine.EditorImportWorkflowDefinition
/// Size: 0x0020 (0x000000 - 0x000020)
struct FEditorImportWorkflowDefinition
{ 
	FFilePath                                          ImportFilePath;                                             // 0x0000   (0x0010)  
	TArray<FImportFactorySettingValues>                FactorySettings;                                            // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.BuildPromotionImportWorkflowSettings
/// Size: 0x0150 (0x000000 - 0x000150)
struct FBuildPromotionImportWorkflowSettings
{ 
	FEditorImportWorkflowDefinition                    Diffuse;                                                    // 0x0000   (0x0020)  
	FEditorImportWorkflowDefinition                    Normal;                                                     // 0x0020   (0x0020)  
	FEditorImportWorkflowDefinition                    StaticMesh;                                                 // 0x0040   (0x0020)  
	FEditorImportWorkflowDefinition                    ReimportStaticMesh;                                         // 0x0060   (0x0020)  
	FEditorImportWorkflowDefinition                    BlendShapeMesh;                                             // 0x0080   (0x0020)  
	FEditorImportWorkflowDefinition                    MorphMesh;                                                  // 0x00A0   (0x0020)  
	FEditorImportWorkflowDefinition                    SkeletalMesh;                                               // 0x00C0   (0x0020)  
	FEditorImportWorkflowDefinition                    Animation;                                                  // 0x00E0   (0x0020)  
	FEditorImportWorkflowDefinition                    Sound;                                                      // 0x0100   (0x0020)  
	FEditorImportWorkflowDefinition                    SurroundSound;                                              // 0x0120   (0x0020)  
	TArray<FEditorImportWorkflowDefinition>            OtherAssetsToImport;                                        // 0x0140   (0x0010)  
};

/// Struct /Script/Engine.BuildPromotionOpenAssetSettings
/// Size: 0x0060 (0x000000 - 0x000060)
struct FBuildPromotionOpenAssetSettings
{ 
	FFilePath                                          BlueprintAsset;                                             // 0x0000   (0x0010)  
	FFilePath                                          MaterialAsset;                                              // 0x0010   (0x0010)  
	FFilePath                                          ParticleSystemAsset;                                        // 0x0020   (0x0010)  
	FFilePath                                          SkeletalMeshAsset;                                          // 0x0030   (0x0010)  
	FFilePath                                          StaticMeshAsset;                                            // 0x0040   (0x0010)  
	FFilePath                                          TextureAsset;                                               // 0x0050   (0x0010)  
};

/// Struct /Script/Engine.BuildPromotionNewProjectSettings
/// Size: 0x0020 (0x000000 - 0x000020)
struct FBuildPromotionNewProjectSettings
{ 
	FDirectoryPath                                     NewProjectFolderOverride;                                   // 0x0000   (0x0010)  
	FString                                            NewProjectNameOverride;                                     // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.MaterialEditorPromotionSettings
/// Size: 0x0030 (0x000000 - 0x000030)
struct FMaterialEditorPromotionSettings
{ 
	FFilePath                                          DefaultMaterialAsset;                                       // 0x0000   (0x0010)  
	FFilePath                                          DefaultDiffuseTexture;                                      // 0x0010   (0x0010)  
	FFilePath                                          DefaultNormalTexture;                                       // 0x0020   (0x0010)  
};

/// Struct /Script/Engine.ParticleEditorPromotionSettings
/// Size: 0x0010 (0x000000 - 0x000010)
struct FParticleEditorPromotionSettings
{ 
	FFilePath                                          DefaultParticleAsset;                                       // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.BlueprintEditorPromotionSettings
/// Size: 0x0030 (0x000000 - 0x000030)
struct FBlueprintEditorPromotionSettings
{ 
	FFilePath                                          FirstMeshPath;                                              // 0x0000   (0x0010)  
	FFilePath                                          SecondMeshPath;                                             // 0x0010   (0x0010)  
	FFilePath                                          DefaultParticleAsset;                                       // 0x0020   (0x0010)  
};

/// Struct /Script/Engine.BuildPromotionTestSettings
/// Size: 0x01F0 (0x000000 - 0x0001F0)
struct FBuildPromotionTestSettings
{ 
	FFilePath                                          DefaultStaticMeshAsset;                                     // 0x0000   (0x0010)  
	FBuildPromotionImportWorkflowSettings              ImportWorkflow;                                             // 0x0010   (0x0150)  
	FBuildPromotionOpenAssetSettings                   OpenAssets;                                                 // 0x0160   (0x0060)  
	FBuildPromotionNewProjectSettings                  NewProjectSettings;                                         // 0x01C0   (0x0020)  
	FFilePath                                          SourceControlMaterial;                                      // 0x01E0   (0x0010)  
};

/// Struct /Script/Engine.EditorMapPerformanceTestDefinition
/// Size: 0x0028 (0x000000 - 0x000028)
struct FEditorMapPerformanceTestDefinition
{ 
	FSoftObjectPath                                    PerformanceTestmap;                                         // 0x0000   (0x0020)  
	int32_t                                            TestTimer;                                                  // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
};

/// Struct /Script/Engine.LaunchOnTestSettings
/// Size: 0x0020 (0x000000 - 0x000020)
struct FLaunchOnTestSettings
{ 
	FFilePath                                          LaunchOnTestmap;                                            // 0x0000   (0x0010)  
	FString                                            DeviceID;                                                   // 0x0010   (0x0010)  
};

/// Struct /Script/Engine.TextureLODGroup
/// Size: 0x0064 (0x000000 - 0x000064)
struct FTextureLODGroup
{ 
	TEnumAsByte<TextureGroup>                          Group;                                                      // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0001   (0x0007)  MISSED
	int32_t                                            LODBias;                                                    // 0x0008   (0x0004)  
	int32_t                                            LODBias_Smaller;                                            // 0x000C   (0x0004)  
	int32_t                                            LODBias_Smallest;                                           // 0x0010   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0014   (0x0004)  MISSED
	int32_t                                            NumStreamedMips;                                            // 0x0018   (0x0004)  
	TEnumAsByte<TextureMipGenSettings>                 MipGenSettings;                                             // 0x001C   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x001D   (0x0003)  MISSED
	int32_t                                            MinLODSize;                                                 // 0x0020   (0x0004)  
	int32_t                                            MaxLODSize;                                                 // 0x0024   (0x0004)  
	int32_t                                            MaxLODSize_Smaller;                                         // 0x0028   (0x0004)  
	int32_t                                            MaxLODSize_Smallest;                                        // 0x002C   (0x0004)  
	int32_t                                            MaxLODSize_VT;                                              // 0x0030   (0x0004)  
	int32_t                                            OptionalLODBias;                                            // 0x0034   (0x0004)  
	int32_t                                            OptionalMaxLODSize;                                         // 0x0038   (0x0004)  
	FName                                              MinMagFilter;                                               // 0x003C   (0x0008)  
	FName                                              MipFilter;                                                  // 0x0044   (0x0008)  
	ETextureMipLoadOptions                             MipLoadOptions;                                             // 0x004C   (0x0001)  
	bool                                               HighPriorityLoad;                                           // 0x004D   (0x0001)  
	bool                                               DuplicateNonOptionalMips;                                   // 0x004E   (0x0001)  
	unsigned char                                      UnknownData03_5[0x1];                                       // 0x004F   (0x0001)  MISSED
	float                                              Downscale;                                                  // 0x0050   (0x0004)  
	ETextureDownscaleOptions                           DownscaleOptions;                                           // 0x0054   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x0055   (0x0003)  MISSED
	int32_t                                            VirtualTextureTileCountBias;                                // 0x0058   (0x0004)  
	int32_t                                            VirtualTextureTileSizeBias;                                 // 0x005C   (0x0004)  
	TEnumAsByte<ETextureLossyCompressionAmount>        LossyCompressionAmount;                                     // 0x0060   (0x0001)  
	unsigned char                                      UnknownData05_6[0x3];                                       // 0x0061   (0x0003)  MISSED
};

/// Struct /Script/Engine.TTTrackBase
/// Size: 0x0018 (0x000000 - 0x000018)
struct FTTTrackBase
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	FName                                              TrackName;                                                  // 0x0008   (0x0008)  
	bool                                               bIsExternalCurve;                                           // 0x0010   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0011   (0x0007)  MISSED
};

/// Struct /Script/Engine.TTTrackId
/// Size: 0x0008 (0x000000 - 0x000008)
struct FTTTrackId
{ 
	int32_t                                            TrackType;                                                  // 0x0000   (0x0004)  
	int32_t                                            TrackIndex;                                                 // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.TTEventTrack
/// Size: 0x0010 (0x000018 - 0x000028)
struct FTTEventTrack : FTTTrackBase
{ 
	FName                                              FunctionName;                                               // 0x0018   (0x0008)  
	UCurveFloat*                                       CurveKeys;                                                  // 0x0020   (0x0008)  
};

/// Struct /Script/Engine.TTPropertyTrack
/// Size: 0x0008 (0x000018 - 0x000020)
struct FTTPropertyTrack : FTTTrackBase
{ 
	FName                                              PropertyName;                                               // 0x0018   (0x0008)  
};

/// Struct /Script/Engine.TTFloatTrack
/// Size: 0x0008 (0x000020 - 0x000028)
struct FTTFloatTrack : FTTPropertyTrack
{ 
	UCurveFloat*                                       CurveFloat;                                                 // 0x0020   (0x0008)  
};

/// Struct /Script/Engine.TTVectorTrack
/// Size: 0x0008 (0x000020 - 0x000028)
struct FTTVectorTrack : FTTPropertyTrack
{ 
	UCurveVector*                                      CurveVector;                                                // 0x0020   (0x0008)  
};

/// Struct /Script/Engine.TTLinearColorTrack
/// Size: 0x0008 (0x000020 - 0x000028)
struct FTTLinearColorTrack : FTTPropertyTrack
{ 
	UCurveLinearColor*                                 CurveLinearColor;                                           // 0x0020   (0x0008)  
};

/// Struct /Script/Engine.HardwareCursorReference
/// Size: 0x0018 (0x000000 - 0x000018)
struct FHardwareCursorReference
{ 
	FName                                              CursorPath;                                                 // 0x0000   (0x0008)  
	FVector2D                                          HotSpot;                                                    // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.CanvasIcon
/// Size: 0x0018 (0x000000 - 0x000018)
struct FCanvasIcon
{ 
	UTexture*                                          Texture;                                                    // 0x0000   (0x0008)  
	float                                              U;                                                          // 0x0008   (0x0004)  
	float                                              V;                                                          // 0x000C   (0x0004)  
	float                                              UL;                                                         // 0x0010   (0x0004)  
	float                                              VL;                                                         // 0x0014   (0x0004)  
};

/// Struct /Script/Engine.AutoCompleteNode
/// Size: 0x0028 (0x000000 - 0x000028)
struct FAutoCompleteNode
{ 
	int32_t                                            IndexChar;                                                  // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<int32_t>                                    AutoCompleteListIndices;                                    // 0x0008   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0018   (0x0010)  MISSED
};

/// Struct /Script/Engine.KeyBind
/// Size: 0x0030 (0x000000 - 0x000030)
struct FKeyBind
{ 
	FKey                                               Key;                                                        // 0x0000   (0x0018)  
	FString                                            Command;                                                    // 0x0018   (0x0010)  
	bool                                               Control : 1;                                                // 0x0028:0 (0x0001)  
	bool                                               Shift : 1;                                                  // 0x0028:1 (0x0001)  
	bool                                               Alt : 1;                                                    // 0x0028:2 (0x0001)  
	bool                                               Cmd : 1;                                                    // 0x0028:3 (0x0001)  
	bool                                               bIgnoreCtrl : 1;                                            // 0x0028:4 (0x0001)  
	bool                                               bIgnoreShift : 1;                                           // 0x0028:5 (0x0001)  
	bool                                               bIgnoreAlt : 1;                                             // 0x0028:6 (0x0001)  
	bool                                               bIgnoreCmd : 1;                                             // 0x0028:7 (0x0001)  
	bool                                               bDisabled : 1;                                              // 0x0029:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x002A   (0x0006)  MISSED
};

/// Struct /Script/Engine.InputAxisProperties
/// Size: 0x0010 (0x000000 - 0x000010)
struct FInputAxisProperties
{ 
	float                                              DeadZone;                                                   // 0x0000   (0x0004)  
	float                                              Sensitivity;                                                // 0x0004   (0x0004)  
	float                                              Exponent;                                                   // 0x0008   (0x0004)  
	bool                                               bInvert : 1;                                                // 0x000C:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
};

/// Struct /Script/Engine.InputAxisConfigEntry
/// Size: 0x0018 (0x000000 - 0x000018)
struct FInputAxisConfigEntry
{ 
	FName                                              AxisKeyName;                                                // 0x0000   (0x0008)  
	FInputAxisProperties                               AxisProperties;                                             // 0x0008   (0x0010)  
};

/// Struct /Script/Engine.InputActionKeyMapping
/// Size: 0x0028 (0x000000 - 0x000028)
struct FInputActionKeyMapping
{ 
	FName                                              ActionName;                                                 // 0x0000   (0x0008)  
	bool                                               bShift : 1;                                                 // 0x0008:0 (0x0001)  
	bool                                               bCtrl : 1;                                                  // 0x0008:1 (0x0001)  
	bool                                               bAlt : 1;                                                   // 0x0008:2 (0x0001)  
	bool                                               bCmd : 1;                                                   // 0x0008:3 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0009   (0x0007)  MISSED
	FKey                                               Key;                                                        // 0x0010   (0x0018)  
};

/// Struct /Script/Engine.InputAxisKeyMapping
/// Size: 0x0028 (0x000000 - 0x000028)
struct FInputAxisKeyMapping
{ 
	FName                                              AxisName;                                                   // 0x0000   (0x0008)  
	float                                              Scale;                                                      // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x000C   (0x0004)  MISSED
	FKey                                               Key;                                                        // 0x0010   (0x0018)  
};

/// Struct /Script/Engine.InputActionSpeechMapping
/// Size: 0x0010 (0x000000 - 0x000010)
struct FInputActionSpeechMapping
{ 
	FName                                              ActionName;                                                 // 0x0000   (0x0008)  
	FName                                              SpeechKeyword;                                              // 0x0008   (0x0008)  
};

/// Struct /Script/Engine.VoiceSettings
/// Size: 0x0018 (0x000000 - 0x000018)
struct FVoiceSettings
{ 
	USceneComponent*                                   ComponentToAttachTo;                                        // 0x0000   (0x0008)  
	USoundAttenuation*                                 AttenuationSettings;                                        // 0x0008   (0x0008)  
	USoundEffectSourcePresetChain*                     SourceEffectChain;                                          // 0x0010   (0x0008)  
};

/// Struct /Script/Engine.VirtualTextureBuildSettings
/// Size: 0x0008 (0x000000 - 0x000008)
struct FVirtualTextureBuildSettings
{ 
	int32_t                                            TileSize;                                                   // 0x0000   (0x0004)  
	int32_t                                            TileBorderSize;                                             // 0x0004   (0x0004)  
};

/// Struct /Script/Engine.VirtualTextureSpacePoolConfig
/// Size: 0x0030 (0x000000 - 0x000030)
struct FVirtualTextureSpacePoolConfig
{ 
	int32_t                                            MinTileSize;                                                // 0x0000   (0x0004)  
	int32_t                                            MaxTileSize;                                                // 0x0004   (0x0004)  
	TArray<TEnumAsByte>                                Formats;                                                    // 0x0008   (0x0010)  
	int32_t                                            SizeInMegabyte;                                             // 0x0018   (0x0004)  
	bool                                               bEnableResidencyMipMapBias;                                 // 0x001C   (0x0001)  
	bool                                               bAllowSizeScale;                                            // 0x001D   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x001E   (0x0002)  MISSED
	uint32_t                                           ScalabilityGroup;                                           // 0x0020   (0x0004)  
	int32_t                                            MinScaledSizeInMegabyte;                                    // 0x0024   (0x0004)  
	int32_t                                            MaxScaledSizeInMegabyte;                                    // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x002C   (0x0004)  MISSED
};

/// Struct /Script/Engine.LevelViewportInfo
/// Size: 0x0038 (0x000000 - 0x000038)
struct FLevelViewportInfo
{ 
	FVector                                            CamPosition;                                                // 0x0000   (0x0018)  
	FRotator                                           CamRotation;                                                // 0x0018   (0x0018)  
	float                                              CamOrthoZoom;                                               // 0x0030   (0x0004)  
	bool                                               CamUpdated;                                                 // 0x0034   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0035   (0x0003)  MISSED
};

/// Struct /Script/Engine.StartPhysicsTickFunction
/// Size: 0x0008 (0x000028 - 0x000030)
struct FStartPhysicsTickFunction : FTickFunction
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Struct /Script/Engine.EndPhysicsTickFunction
/// Size: 0x0008 (0x000028 - 0x000030)
struct FEndPhysicsTickFunction : FTickFunction
{ 
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Struct /Script/Engine.LevelCollection
/// Size: 0x0078 (0x000000 - 0x000078)
struct FLevelCollection
{ 
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0000   (0x0008)  MISSED
	AGameStateBase*                                    GameState;                                                  // 0x0008   (0x0008)  
	UNetDriver*                                        NetDriver;                                                  // 0x0010   (0x0008)  
	UDemoNetDriver*                                    DemoNetDriver;                                              // 0x0018   (0x0008)  
	ULevel*                                            PersistentLevel;                                            // 0x0020   (0x0008)  
	TSet<ULevel*>                                      Levels;                                                     // 0x0028   (0x0050)  
};

/// Struct /Script/Engine.StreamingLevelsToConsider
/// Size: 0x0028 (0x000000 - 0x000028)
struct FStreamingLevelsToConsider
{ 
	TArray<ULevelStreaming*>                           StreamingLevels;                                            // 0x0000   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0010   (0x0018)  MISSED
};

/// Struct /Script/Engine.ActorDesc
/// Size: 0x0098 (0x000000 - 0x000098)
struct FActorDesc
{ 
	FGuid                                              Guid;                                                       // 0x0000   (0x0010)  
	FSoftObjectPath                                    Class;                                                      // 0x0010   (0x0020)  
	FName                                              Name;                                                       // 0x0030   (0x0008)  
	FName                                              Label;                                                      // 0x0038   (0x0008)  
	FBox                                               Bounds;                                                     // 0x0040   (0x0038)  
	FName                                              RuntimeGrid;                                                // 0x0078   (0x0008)  
	bool                                               bIsSpatiallyLoaded;                                         // 0x0080   (0x0001)  
	bool                                               bActorIsEditorOnly;                                         // 0x0081   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0082   (0x0002)  MISSED
	FName                                              ActorPackage;                                               // 0x0084   (0x0008)  
	FName                                              ActorPath;                                                  // 0x008C   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0094   (0x0004)  MISSED
};

/// Struct /Script/Engine.ActorPlacementDataLayers
/// Size: 0x0018 (0x000000 - 0x000018)
struct FActorPlacementDataLayers
{ 
	TArray<FName>                                      DataLayerInstanceNames;                                     // 0x0000   (0x0010)  
	int32_t                                            ContextID;                                                  // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
};

/// Struct /Script/Engine.WorldPartitionPerWorldSettings
/// Size: 0x0001 (0x000000 - 0x000001)
struct FWorldPartitionPerWorldSettings
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.WorldPartitionRuntimeCellObjectMapping
/// Size: 0x0001 (0x000000 - 0x000001)
struct FWorldPartitionRuntimeCellObjectMapping
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.WorldPartitionRuntimeCellDebugInfo
/// Size: 0x0030 (0x000000 - 0x000030)
struct FWorldPartitionRuntimeCellDebugInfo
{ 
	FString                                            Name;                                                       // 0x0000   (0x0010)  
	FName                                              GridName;                                                   // 0x0010   (0x0008)  
	int64_t                                            CoordX;                                                     // 0x0018   (0x0008)  
	int64_t                                            CoordY;                                                     // 0x0020   (0x0008)  
	int64_t                                            CoordZ;                                                     // 0x0028   (0x0008)  
};

/// Struct /Script/Engine.SpatialHashStreamingGridLayerCell
/// Size: 0x0010 (0x000000 - 0x000010)
struct FSpatialHashStreamingGridLayerCell
{ 
	TArray<UWorldPartitionRuntimeSpatialHashCell*>     GridCells;                                                  // 0x0000   (0x0010)  
};

/// Struct /Script/Engine.SpatialHashStreamingGridLevel
/// Size: 0x0060 (0x000000 - 0x000060)
struct FSpatialHashStreamingGridLevel
{ 
	TArray<FSpatialHashStreamingGridLayerCell>         LayerCells;                                                 // 0x0000   (0x0010)  
	TMap<int64_t, int32_t>                             LayerCellsMapping;                                          // 0x0010   (0x0050)  
};

/// Struct /Script/Engine.SpatialHashStreamingGrid
/// Size: 0x00A8 (0x000000 - 0x0000A8)
struct FSpatialHashStreamingGrid
{ 
	FName                                              GridName;                                                   // 0x0000   (0x0008)  
	FVector                                            Origin;                                                     // 0x0008   (0x0018)  
	int32_t                                            CellSize;                                                   // 0x0020   (0x0004)  
	float                                              LoadingRange;                                               // 0x0024   (0x0004)  
	bool                                               bBlockOnSlowStreaming;                                      // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	FLinearColor                                       DebugColor;                                                 // 0x002C   (0x0010)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	TArray<FSpatialHashStreamingGridLevel>             GridLevels;                                                 // 0x0040   (0x0010)  
	FBox                                               WorldBounds;                                                // 0x0050   (0x0038)  
	bool                                               bClientOnlyVisible;                                         // 0x0088   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0089   (0x0007)  MISSED
	UHLODLayer*                                        HLODLayer;                                                  // 0x0090   (0x0008)  
	unsigned char                                      UnknownData03_6[0x10];                                      // 0x0098   (0x0010)  MISSED
};

/// Struct /Script/Engine.SpatialHashRuntimeGrid
/// Size: 0x0001 (0x000000 - 0x000001)
struct FSpatialHashRuntimeGrid
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Struct /Script/Engine.WorldPartitionRuntimeSpatialHashGridPreviewer
/// Size: 0x0001 (0x000000 - 0x000001)
struct FWorldPartitionRuntimeSpatialHashGridPreviewer
{ 
	unsigned char                                      UnknownData00_1[0x1];                                       // 0x0000   (0x0001)  MISSED
};

/// Class /Script/Engine.Actor
/// Size: 0x0268 (0x000028 - 0x000290)
class AActor : public UObject
{ 
public:
	FActorTickFunction                                 PrimaryActorTick;                                           // 0x0028   (0x0030)  
	bool                                               bNetTemporary : 1;                                          // 0x0058:0 (0x0001)  
	unsigned char                                      UnknownBit00 : 1;                                           // 0x0058:1 (0x0001)  MISSED
	bool                                               bOnlyRelevantToOwner : 1;                                   // 0x0058:2 (0x0001)  
	bool                                               bAlwaysRelevant : 1;                                        // 0x0058:3 (0x0001)  
	bool                                               bReplicateMovement : 1;                                     // 0x0058:4 (0x0001)  
	bool                                               bCallPreReplication : 1;                                    // 0x0058:5 (0x0001)  
	bool                                               bCallPreReplicationForReplay : 1;                           // 0x0058:6 (0x0001)  
	bool                                               bHidden : 1;                                                // 0x0058:7 (0x0001)  
	bool                                               bTearOff : 1;                                               // 0x0059:0 (0x0001)  
	bool                                               bForceNetAddressable : 1;                                   // 0x0059:1 (0x0001)  
	bool                                               bExchangedRoles : 1;                                        // 0x0059:2 (0x0001)  
	bool                                               bNetLoadOnClient : 1;                                       // 0x0059:3 (0x0001)  
	bool                                               bNetUseOwnerRelevancy : 1;                                  // 0x0059:4 (0x0001)  
	bool                                               bRelevantForNetworkReplays : 1;                             // 0x0059:5 (0x0001)  
	bool                                               bRelevantForLevelBounds : 1;                                // 0x0059:6 (0x0001)  
	bool                                               bReplayRewindable : 1;                                      // 0x0059:7 (0x0001)  
	bool                                               bAllowTickBeforeBeginPlay : 1;                              // 0x005A:0 (0x0001)  
	bool                                               bAutoDestroyWhenFinished : 1;                               // 0x005A:1 (0x0001)  
	bool                                               bCanBeDamaged : 1;                                          // 0x005A:2 (0x0001)  
	bool                                               bBlockInput : 1;                                            // 0x005A:3 (0x0001)  
	bool                                               bCollideWhenPlacing : 1;                                    // 0x005A:4 (0x0001)  
	bool                                               bFindCameraComponentWhenViewTarget : 1;                     // 0x005A:5 (0x0001)  
	bool                                               bGenerateOverlapEventsDuringLevelStreaming : 1;             // 0x005A:6 (0x0001)  
	bool                                               bIgnoresOriginShifting : 1;                                 // 0x005A:7 (0x0001)  
	bool                                               bEnableAutoLODGeneration : 1;                               // 0x005B:0 (0x0001)  
	bool                                               bIsEditorOnlyActor : 1;                                     // 0x005B:1 (0x0001)  
	bool                                               bActorSeamlessTraveled : 1;                                 // 0x005B:2 (0x0001)  
	bool                                               bReplicates : 1;                                            // 0x005B:3 (0x0001)  
	bool                                               bCanBeInCluster : 1;                                        // 0x005B:4 (0x0001)  
	bool                                               bAllowReceiveTickEventOnDedicatedServer : 1;                // 0x005B:5 (0x0001)  
	unsigned char                                      UnknownBit01 : 1;                                           // 0x005B:6 (0x0001)  MISSED
	bool                                               bReplicateUsingRegisteredSubObjectList : 1;                 // 0x005B:7 (0x0001)  
	unsigned char                                      UnknownBit02 : 1;                                           // 0x005C:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit03 : 1;                                           // 0x005C:1 (0x0001)  MISSED
	unsigned char                                      UnknownBit04 : 1;                                           // 0x005C:2 (0x0001)  MISSED
	unsigned char                                      UnknownBit05 : 1;                                           // 0x005C:3 (0x0001)  MISSED
	unsigned char                                      UnknownBit06 : 1;                                           // 0x005C:4 (0x0001)  MISSED
	unsigned char                                      UnknownBit07 : 1;                                           // 0x005C:5 (0x0001)  MISSED
	unsigned char                                      UnknownBit08 : 1;                                           // 0x005C:6 (0x0001)  MISSED
	bool                                               bActorEnableCollision : 1;                                  // 0x005C:7 (0x0001)  
	bool                                               bActorIsBeingDestroyed : 1;                                 // 0x005D:0 (0x0001)  
	unsigned char                                      UnknownBit09 : 1;                                           // 0x005D:1 (0x0001)  MISSED
	unsigned char                                      UnknownBit10 : 1;                                           // 0x005D:2 (0x0001)  MISSED
	unsigned char                                      UnknownBit11 : 1;                                           // 0x005D:3 (0x0001)  MISSED
	unsigned char                                      UnknownBit12 : 1;                                           // 0x005D:4 (0x0001)  MISSED
	bool                                               bAsyncPhysicsTickEnabled : 1;                               // 0x005D:5 (0x0001)  
	EActorUpdateOverlapsMethod                         UpdateOverlapsMethodDuringLevelStreaming;                   // 0x005E   (0x0001)  
	EActorUpdateOverlapsMethod                         DefaultUpdateOverlapsMethodDuringLevelStreaming;            // 0x005F   (0x0001)  
	float                                              InitialLifeSpan;                                            // 0x0060   (0x0004)  
	float                                              CustomTimeDilation;                                         // 0x0064   (0x0004)  
	TEnumAsByte<ENetRole>                              RemoteRole;                                                 // 0x0068   (0x0001)  
	unsigned char                                      UnknownData13_5[0x3];                                       // 0x0069   (0x0003)  MISSED
	int32_t                                            RayTracingGroupId;                                          // 0x006C   (0x0004)  
	FRepAttachment                                     AttachmentReplication;                                      // 0x0070   (0x0060)  
	FRepMovement                                       ReplicatedMovement;                                         // 0x00D0   (0x0070)  
	AActor*                                            Owner;                                                      // 0x0140   (0x0008)  
	FName                                              NetDriverName;                                              // 0x0148   (0x0008)  
	TEnumAsByte<ENetRole>                              Role;                                                       // 0x0150   (0x0001)  
	TEnumAsByte<ENetDormancy>                          NetDormancy;                                                // 0x0151   (0x0001)  
	ESpawnActorCollisionHandlingMethod                 SpawnCollisionHandlingMethod;                               // 0x0152   (0x0001)  
	TEnumAsByte<EAutoReceiveInput>                     AutoReceiveInput;                                           // 0x0153   (0x0001)  
	int32_t                                            InputPriority;                                              // 0x0154   (0x0004)  
	unsigned char                                      UnknownData14_5[0x8];                                       // 0x0158   (0x0008)  MISSED
	UInputComponent*                                   InputComponent;                                             // 0x0160   (0x0008)  
	float                                              NetCullDistanceSquared;                                     // 0x0168   (0x0004)  
	int32_t                                            NetTag;                                                     // 0x016C   (0x0004)  
	float                                              NetUpdateFrequency;                                         // 0x0170   (0x0004)  
	float                                              MinNetUpdateFrequency;                                      // 0x0174   (0x0004)  
	float                                              NetPriority;                                                // 0x0178   (0x0004)  
	unsigned char                                      UnknownData15_5[0x4];                                       // 0x017C   (0x0004)  MISSED
	APawn*                                             Instigator;                                                 // 0x0180   (0x0008)  
	TArray<AActor*>                                    Children;                                                   // 0x0188   (0x0010)  
	USceneComponent*                                   RootComponent;                                              // 0x0198   (0x0008)  
	unsigned char                                      UnknownData16_5[0x8];                                       // 0x01A0   (0x0008)  MISSED
	TArray<FName>                                      Layers;                                                     // 0x01A8   (0x0010)  
	TWeakObjectPtr<UChildActorComponent*>              ParentComponent;                                            // 0x01B8   (0x0008)  
	TArray<FName>                                      Tags;                                                       // 0x01C0   (0x0010)  
	FMulticastSparseDelegate                           OnTakeAnyDamage;                                            // 0x01D0   (0x0001)  
	FMulticastSparseDelegate                           OnTakePointDamage;                                          // 0x01D1   (0x0001)  
	FMulticastSparseDelegate                           OnTakeRadialDamage;                                         // 0x01D2   (0x0001)  
	FMulticastSparseDelegate                           OnActorBeginOverlap;                                        // 0x01D3   (0x0001)  
	FMulticastSparseDelegate                           OnActorEndOverlap;                                          // 0x01D4   (0x0001)  
	FMulticastSparseDelegate                           OnBeginCursorOver;                                          // 0x01D5   (0x0001)  
	FMulticastSparseDelegate                           OnEndCursorOver;                                            // 0x01D6   (0x0001)  
	FMulticastSparseDelegate                           OnClicked;                                                  // 0x01D7   (0x0001)  
	FMulticastSparseDelegate                           OnReleased;                                                 // 0x01D8   (0x0001)  
	FMulticastSparseDelegate                           OnInputTouchBegin;                                          // 0x01D9   (0x0001)  
	FMulticastSparseDelegate                           OnInputTouchEnd;                                            // 0x01DA   (0x0001)  
	FMulticastSparseDelegate                           OnInputTouchEnter;                                          // 0x01DB   (0x0001)  
	FMulticastSparseDelegate                           OnInputTouchLeave;                                          // 0x01DC   (0x0001)  
	FMulticastSparseDelegate                           OnActorHit;                                                 // 0x01DD   (0x0001)  
	FMulticastSparseDelegate                           OnDestroyed;                                                // 0x01DE   (0x0001)  
	FMulticastSparseDelegate                           OnEndPlay;                                                  // 0x01DF   (0x0001)  
	unsigned char                                      UnknownData17_5[0x80];                                      // 0x01E0   (0x0080)  MISSED
	TArray<UActorComponent*>                           InstanceComponents;                                         // 0x0260   (0x0010)  
	TArray<UActorComponent*>                           BlueprintCreatedComponents;                                 // 0x0270   (0x0010)  
	unsigned char                                      UnknownData18_6[0x10];                                      // 0x0280   (0x0010)  MISSED


	/// Functions
	// Function /Script/Engine.Actor.WasRecentlyRendered
	bool WasRecentlyRendered(float Tolerance);                                                                               // [0x46d6c10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.UserConstructionScript
	void UserConstructionScript();                                                                                           // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.TearOff
	void TearOff();                                                                                                          // [0x3d49e80] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.SetTickGroup
	void SetTickGroup(TEnumAsByte<ETickingGroup> NewTickGroup);                                                              // [0x46d6b00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.SetTickableWhenPaused
	void SetTickableWhenPaused(bool bTickableWhenPaused);                                                                    // [0x46d6b80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.SetReplicates
	void SetReplicates(bool bInReplicates);                                                                                  // [0x46d6a70] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.SetReplicateMovement
	void SetReplicateMovement(bool bInReplicateMovement);                                                                    // [0x46d69e0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.SetRayTracingGroupId
	void SetRayTracingGroupId(int32_t InRaytracingGroupId);                                                                  // [0x46d6950] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.SetOwner
	void SetOwner(AActor* NewOwner);                                                                                         // [0x46d68c0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.SetNetDormancy
	void SetNetDormancy(TEnumAsByte<ENetDormancy> NewDormancy);                                                              // [0x46d6840] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.SetLifeSpan
	void SetLifeSpan(float InLifespan);                                                                                      // [0x46d67b0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.SetAutoDestroyWhenFinished
	void SetAutoDestroyWhenFinished(bool bVal);                                                                              // [0x46d66d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.SetActorTickInterval
	void SetActorTickInterval(float TickInterval);                                                                           // [0x46d6650] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.SetActorTickEnabled
	void SetActorTickEnabled(bool bEnabled);                                                                                 // [0x46d65a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.SetActorScale3D
	void SetActorScale3D(FVector NewScale3D);                                                                                // [0x46d6500] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.SetActorRelativeScale3D
	void SetActorRelativeScale3D(FVector NewRelativeScale);                                                                  // [0x46d6470] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.SetActorHiddenInGame
	void SetActorHiddenInGame(bool bNewHidden);                                                                              // [0x46d63e0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.SetActorEnableCollision
	void SetActorEnableCollision(bool bNewActorEnableCollision);                                                             // [0x46d6350] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.RemoveTickPrerequisiteComponent
	void RemoveTickPrerequisiteComponent(UActorComponent* PrerequisiteComponent);                                            // [0x46d62c0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.RemoveTickPrerequisiteActor
	void RemoveTickPrerequisiteActor(AActor* PrerequisiteActor);                                                             // [0x46d6230] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.ReceiveTick
	void ReceiveTick(float DeltaSeconds);                                                                                    // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveRadialDamage
	void ReceiveRadialDamage(float DamageReceived, UDamageType* DamageType, FVector Origin, FHitResult& HitInfo, AController* InstigatedBy, AActor* DamageCauser); // [0x2e6eb70] BlueprintAuthorityOnly|Event|Public|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceivePointDamage
	void ReceivePointDamage(float Damage, UDamageType* DamageType, FVector HitLocation, FVector HitNormal, UPrimitiveComponent* HitComponent, FName BoneName, FVector ShotFromDirection, AController* InstigatedBy, AActor* DamageCauser, FHitResult& HitInfo); // [0x2e6eb70] BlueprintAuthorityOnly|Event|Public|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveHit
	void ReceiveHit(UPrimitiveComponent* MyComp, AActor* Other, UPrimitiveComponent* OtherComp, bool bSelfMoved, FVector HitLocation, FVector HitNormal, FVector NormalImpulse, FHitResult& Hit); // [0x2e6eb70] Event|Public|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveEndPlay
	void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x2e6eb70] Event|Protected|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveDestroyed
	void ReceiveDestroyed();                                                                                                 // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveBeginPlay
	void ReceiveBeginPlay();                                                                                                 // [0x2e6eb70] Event|Protected|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveAsyncPhysicsTick
	void ReceiveAsyncPhysicsTick(float DeltaSeconds, float SimSeconds);                                                      // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveAnyDamage
	void ReceiveAnyDamage(float Damage, UDamageType* DamageType, AController* InstigatedBy, AActor* DamageCauser);           // [0x2e6eb70] BlueprintAuthorityOnly|Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveActorOnReleased
	void ReceiveActorOnReleased(FKey ButtonReleased);                                                                        // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveActorOnInputTouchLeave
	void ReceiveActorOnInputTouchLeave(TEnumAsByte<ETouchIndex> FingerIndex);                                                // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveActorOnInputTouchEnter
	void ReceiveActorOnInputTouchEnter(TEnumAsByte<ETouchIndex> FingerIndex);                                                // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveActorOnInputTouchEnd
	void ReceiveActorOnInputTouchEnd(TEnumAsByte<ETouchIndex> FingerIndex);                                                  // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveActorOnInputTouchBegin
	void ReceiveActorOnInputTouchBegin(TEnumAsByte<ETouchIndex> FingerIndex);                                                // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveActorOnClicked
	void ReceiveActorOnClicked(FKey ButtonPressed);                                                                          // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveActorEndOverlap
	void ReceiveActorEndOverlap(AActor* OtherActor);                                                                         // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveActorEndCursorOver
	void ReceiveActorEndCursorOver();                                                                                        // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveActorBeginOverlap
	void ReceiveActorBeginOverlap(AActor* OtherActor);                                                                       // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.ReceiveActorBeginCursorOver
	void ReceiveActorBeginCursorOver();                                                                                      // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.PrestreamTextures
	void PrestreamTextures(float Seconds, bool bEnableStreaming, int32_t CinematicTextureGroups);                            // [0x46d6110] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.OnRep_ReplicateMovement
	void OnRep_ReplicateMovement();                                                                                          // [0x1343080] Native|Public        
	// Function /Script/Engine.Actor.OnRep_ReplicatedMovement
	void OnRep_ReplicatedMovement();                                                                                         // [0x46d60f0] Native|Public        
	// Function /Script/Engine.Actor.OnRep_Owner
	void OnRep_Owner();                                                                                                      // [0x4441e30] Native|Protected     
	// Function /Script/Engine.Actor.OnRep_Instigator
	void OnRep_Instigator();                                                                                                 // [0x46d60d0] Native|Public        
	// Function /Script/Engine.Actor.OnRep_AttachmentReplication
	void OnRep_AttachmentReplication();                                                                                      // [0x3d499e0] Native|Public        
	// Function /Script/Engine.Actor.MakeNoise
	void MakeNoise(float Loudness, APawn* NoiseInstigator, FVector NoiseLocation, float MaxRange, FName Tag);                // [0x46d5e30] Final|BlueprintAuthorityOnly|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_TeleportTo
	bool K2_TeleportTo(FVector DestLocation, FRotator DestRotation);                                                         // [0x46d5d20] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_SetActorTransform
	bool K2_SetActorTransform(FTransform& NewTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);            // [0x46d58f0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_SetActorRotation
	bool K2_SetActorRotation(FRotator NewRotation, bool bTeleportPhysics);                                                   // [0x46d57c0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_SetActorRelativeTransform
	void K2_SetActorRelativeTransform(FTransform& NewRelativeTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport); // [0x46d54b0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_SetActorRelativeRotation
	void K2_SetActorRelativeRotation(FRotator NewRelativeRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport); // [0x46d5210] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_SetActorRelativeLocation
	void K2_SetActorRelativeLocation(FVector NewRelativeLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);  // [0x46d5010] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_SetActorLocationAndRotation
	bool K2_SetActorLocationAndRotation(FVector NewLocation, FRotator NewRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport); // [0x46d4db0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_SetActorLocation
	bool K2_SetActorLocation(FVector NewLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);                  // [0x46d4aa0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_OnReset
	void K2_OnReset();                                                                                                       // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.K2_OnEndViewTarget
	void K2_OnEndViewTarget(APlayerController* PC);                                                                          // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.K2_OnBecomeViewTarget
	void K2_OnBecomeViewTarget(APlayerController* PC);                                                                       // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Actor.K2_GetRootComponent
	USceneComponent* K2_GetRootComponent();                                                                                  // [0x46d4a80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.K2_GetComponentsByClass
	TArray<UActorComponent*> K2_GetComponentsByClass(UClass* ComponentClass);                                                // [0x46d4950] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.K2_GetActorRotation
	FRotator K2_GetActorRotation();                                                                                          // [0x46d4860] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.K2_GetActorLocation
	FVector K2_GetActorLocation();                                                                                           // [0x46d47e0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.K2_DetachFromActor
	void K2_DetachFromActor(EDetachmentRule LocationRule, EDetachmentRule RotationRule, EDetachmentRule ScaleRule);          // [0x46d46b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_DestroyActor
	void K2_DestroyActor();                                                                                                  // [0x46d4690] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_AttachToComponent
	void K2_AttachToComponent(USceneComponent* Parent, FName SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies); // [0x46d44b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_AttachToActor
	void K2_AttachToActor(AActor* ParentActor, FName SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies); // [0x46d42b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_AttachRootComponentToActor
	void K2_AttachRootComponentToActor(AActor* InParentActor, FName InSocketName, TEnumAsByte<EAttachLocation> AttachLocationType, bool bWeldSimulatedBodies); // [0x46d4130] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_AttachRootComponentTo
	void K2_AttachRootComponentTo(USceneComponent* InParent, FName InSocketName, TEnumAsByte<EAttachLocation> AttachLocationType, bool bWeldSimulatedBodies); // [0x46d3fd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_AddActorWorldTransformKeepScale
	void K2_AddActorWorldTransformKeepScale(FTransform& DeltaTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport); // [0x46d3cc0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_AddActorWorldTransform
	void K2_AddActorWorldTransform(FTransform& DeltaTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);     // [0x46d39b0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_AddActorWorldRotation
	void K2_AddActorWorldRotation(FRotator DeltaRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);          // [0x46d3710] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_AddActorWorldOffset
	void K2_AddActorWorldOffset(FVector DeltaLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);             // [0x46d3470] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_AddActorLocalTransform
	void K2_AddActorLocalTransform(FTransform& NewTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);       // [0x46d3160] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_AddActorLocalRotation
	void K2_AddActorLocalRotation(FRotator DeltaRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);          // [0x46d2ec0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.K2_AddActorLocalOffset
	void K2_AddActorLocalOffset(FVector DeltaLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);             // [0x46d2c20] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.IsOverlappingActor
	bool IsOverlappingActor(AActor* Other);                                                                                  // [0x46d2b80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.IsChildActor
	bool IsChildActor();                                                                                                     // [0x46d2b40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.IsActorTickEnabled
	bool IsActorTickEnabled();                                                                                               // [0x46d2b20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.IsActorBeingDestroyed
	bool IsActorBeingDestroyed();                                                                                            // [0x46d2b00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.HasAuthority
	bool HasAuthority();                                                                                                     // [0x46d2ad0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetVerticalDistanceTo
	float GetVerticalDistanceTo(AActor* OtherActor);                                                                         // [0x46d2980] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetVelocity
	FVector GetVelocity();                                                                                                   // [0x46d2930] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetTransform
	FTransform GetTransform();                                                                                               // [0x46d28c0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetTickableWhenPaused
	bool GetTickableWhenPaused();                                                                                            // [0x46d28a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.GetSquaredHorizontalDistanceTo
	float GetSquaredHorizontalDistanceTo(AActor* OtherActor);                                                                // [0x46d2750] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetSquaredDistanceTo
	float GetSquaredDistanceTo(AActor* OtherActor);                                                                          // [0x46d25e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetRemoteRole
	TEnumAsByte<ENetRole> GetRemoteRole();                                                                                   // [0x46d25c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetRayTracingGroupId
	int32_t GetRayTracingGroupId();                                                                                          // [0x46d2590] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetParentComponent
	UChildActorComponent* GetParentComponent();                                                                              // [0x46d2550] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetParentActor
	AActor* GetParentActor();                                                                                                // [0x46d2500] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetOwner
	AActor* GetOwner();                                                                                                      // [0x3d704c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetOverlappingComponents
	void GetOverlappingComponents(TArray<UPrimitiveComponent*>& OverlappingComponents);                                      // [0x46d2450] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetOverlappingActors
	void GetOverlappingActors(TArray<AActor*>& OverlappingActors, UClass* ClassFilter);                                      // [0x46d2350] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetLocalRole
	TEnumAsByte<ENetRole> GetLocalRole();                                                                                    // [0x46d2330] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetLifeSpan
	float GetLifeSpan();                                                                                                     // [0x46d22f0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetLevelTransform
	FTransform GetLevelTransform();                                                                                          // [0x46d2230] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetLevel
	ULevel* GetLevel();                                                                                                      // [0x46d21e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetInstigatorController
	AController* GetInstigatorController();                                                                                  // [0x46d21a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetInstigator
	APawn* GetInstigator();                                                                                                  // [0x46d2180] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetInputVectorAxisValue
	FVector GetInputVectorAxisValue(FKey InputAxisKey);                                                                      // [0x46d2000] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetInputAxisValue
	float GetInputAxisValue(FName InputAxisName);                                                                            // [0x46d1f50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetInputAxisKeyValue
	float GetInputAxisKeyValue(FKey InputAxisKey);                                                                           // [0x46d1df0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetHorizontalDotProductTo
	float GetHorizontalDotProductTo(AActor* OtherActor);                                                                     // [0x46d1bb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetHorizontalDistanceTo
	float GetHorizontalDistanceTo(AActor* OtherActor);                                                                       // [0x46d1a60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetGameTimeSinceCreation
	float GetGameTimeSinceCreation();                                                                                        // [0x46d19f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetDotProductTo
	float GetDotProductTo(AActor* OtherActor);                                                                               // [0x46d17a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetDistanceTo
	float GetDistanceTo(AActor* OtherActor);                                                                                 // [0x46d1630] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetComponentsByTag
	TArray<UActorComponent*> GetComponentsByTag(UClass* ComponentClass, FName Tag);                                          // [0x46d13c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetComponentsByInterface
	TArray<UActorComponent*> GetComponentsByInterface(UClass* Interface);                                                    // [0x46d1060] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetComponentByClass
	UActorComponent* GetComponentByClass(UClass* ComponentClass);                                                            // [0x46d0fc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetAttachParentSocketName
	FName GetAttachParentSocketName();                                                                                       // [0x46d0e20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetAttachParentActor
	AActor* GetAttachParentActor();                                                                                          // [0x46d0de0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetAttachedActors
	void GetAttachedActors(TArray<AActor*>& OutActors, bool bResetArray, bool bRecursivelyIncludeAttachedActors);            // [0x46d0e70] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetAllChildActors
	void GetAllChildActors(TArray<AActor*>& ChildActors, bool bIncludeDescendants);                                          // [0x46d0ce0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetActorUpVector
	FVector GetActorUpVector();                                                                                              // [0x46d0c70] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetActorTimeDilation
	float GetActorTimeDilation();                                                                                            // [0x46d0c00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetActorTickInterval
	float GetActorTickInterval();                                                                                            // [0x46d0be0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetActorScale3D
	FVector GetActorScale3D();                                                                                               // [0x46d0b70] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetActorRightVector
	FVector GetActorRightVector();                                                                                           // [0x46d0b00] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetActorRelativeScale3D
	FVector GetActorRelativeScale3D();                                                                                       // [0x46d0a90] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetActorForwardVector
	FVector GetActorForwardVector();                                                                                         // [0x46d0a20] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetActorEyesViewPoint
	void GetActorEyesViewPoint(FVector& OutLocation, FRotator& OutRotation);                                                 // [0x46d0930] Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetActorEnableCollision
	bool GetActorEnableCollision();                                                                                          // [0x46d0910] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.GetActorBounds
	void GetActorBounds(bool bOnlyCollidingComponents, FVector& Origin, FVector& BoxExtent, bool bIncludeFromChildActors);   // [0x46d0770] Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Actor.ForceNetUpdate
	void ForceNetUpdate();                                                                                                   // [0x46d0750] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.FlushNetDormancy
	void FlushNetDormancy();                                                                                                 // [0x46d0730] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.FinishAddComponent
	void FinishAddComponent(UActorComponent* Component, bool bManualAttachment, FTransform& RelativeTransform);              // [0x46d0460] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.EnableInput
	void EnableInput(APlayerController* PlayerController);                                                                   // [0x4471560] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.DisableInput
	void DisableInput(APlayerController* PlayerController);                                                                  // [0x132acb0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.DetachRootComponentFromParent
	void DetachRootComponentFromParent(bool bMaintainWorldPosition);                                                         // [0x46d0330] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.AddTickPrerequisiteComponent
	void AddTickPrerequisiteComponent(UActorComponent* PrerequisiteComponent);                                               // [0x46d02a0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.AddTickPrerequisiteActor
	void AddTickPrerequisiteActor(AActor* PrerequisiteActor);                                                                // [0x46d0210] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Actor.AddComponentByClass
	UActorComponent* AddComponentByClass(UClass* Class, bool bManualAttachment, FTransform& RelativeTransform, bool bDeferredFinish); // [0x46cff50] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.AddComponent
	UActorComponent* AddComponent(FName TemplateName, bool bManualAttachment, FTransform& RelativeTransform, UObject* ComponentTemplateContext, bool bDeferredFinish); // [0x46cfd40] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Actor.ActorHasTag
	bool ActorHasTag(FName Tag);                                                                                             // [0x46cfc70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.HUD
/// Size: 0x00F0 (0x000290 - 0x000380)
class AHUD : public AActor
{ 
public:
	APlayerController*                                 PlayerOwner;                                                // 0x0290   (0x0008)  
	bool                                               bLostFocusPaused : 1;                                       // 0x0298:0 (0x0001)  
	bool                                               bShowHUD : 1;                                               // 0x0298:1 (0x0001)  
	bool                                               bShowDebugInfo : 1;                                         // 0x0298:2 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0299   (0x0003)  MISSED
	int32_t                                            CurrentTargetIndex;                                         // 0x029C   (0x0004)  
	bool                                               bShowHitBoxDebugInfo : 1;                                   // 0x02A0:0 (0x0001)  
	bool                                               bShowOverlays : 1;                                          // 0x02A0:1 (0x0001)  
	bool                                               bEnableDebugTextShadow : 1;                                 // 0x02A0:2 (0x0001)  
	unsigned char                                      UnknownData01_4[0x7];                                       // 0x02A1   (0x0007)  MISSED
	TArray<AActor*>                                    PostRenderedActors;                                         // 0x02A8   (0x0010)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x02B8   (0x0008)  MISSED
	TArray<FName>                                      DebugDisplay;                                               // 0x02C0   (0x0010)  
	TArray<FName>                                      ToggledDebugCategories;                                     // 0x02D0   (0x0010)  
	UCanvas*                                           Canvas;                                                     // 0x02E0   (0x0008)  
	UCanvas*                                           DebugCanvas;                                                // 0x02E8   (0x0008)  
	TArray<FDebugTextInfo>                             DebugTextList;                                              // 0x02F0   (0x0010)  
	UClass*                                            ShowDebugTargetDesiredClass;                                // 0x0300   (0x0008)  
	AActor*                                            ShowDebugTargetActor;                                       // 0x0308   (0x0008)  
	unsigned char                                      UnknownData03_6[0x70];                                      // 0x0310   (0x0070)  MISSED


	/// Functions
	// Function /Script/Engine.HUD.ShowHUD
	void ShowHUD();                                                                                                          // [0x463cd10] Exec|Native|Public   
	// Function /Script/Engine.HUD.ShowDebugToggleSubCategory
	void ShowDebugToggleSubCategory(FName Category);                                                                         // [0x4ae9f90] Final|Exec|Native|Public 
	// Function /Script/Engine.HUD.ShowDebugForReticleTargetToggle
	void ShowDebugForReticleTargetToggle(UClass* DesiredClass);                                                              // [0x4ae9ee0] Final|Exec|Native|Public 
	// Function /Script/Engine.HUD.ShowDebug
	void ShowDebug(FName DebugType);                                                                                         // [0x4ae9e50] Exec|Native|Public   
	// Function /Script/Engine.HUD.RemoveDebugText
	void RemoveDebugText(AActor* SrcActor, bool bLeaveDurationText);                                                         // [0x4ae9d80] Final|Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.HUD.RemoveAllDebugStrings
	void RemoveAllDebugStrings();                                                                                            // [0x4ae9cc0] Final|Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.HUD.ReceiveHitBoxRelease
	void ReceiveHitBoxRelease(FName BoxName);                                                                                // [0x2e6eb70] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Script/Engine.HUD.ReceiveHitBoxEndCursorOver
	void ReceiveHitBoxEndCursorOver(FName BoxName);                                                                          // [0x2e6eb70] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Script/Engine.HUD.ReceiveHitBoxClick
	void ReceiveHitBoxClick(FName BoxName);                                                                                  // [0x2e6eb70] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Script/Engine.HUD.ReceiveHitBoxBeginCursorOver
	void ReceiveHitBoxBeginCursorOver(FName BoxName);                                                                        // [0x2e6eb70] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Script/Engine.HUD.ReceiveDrawHUD
	void ReceiveDrawHUD(int32_t SizeX, int32_t SizeY);                                                                       // [0x2e6eb70] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Script/Engine.HUD.Project
	FVector Project(FVector Location, bool bClampToZeroPlane);                                                               // [0x4ae9b70] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.HUD.PreviousDebugTarget
	void PreviousDebugTarget();                                                                                              // [0x4ae9b50] Exec|Native|Public   
	// Function /Script/Engine.HUD.NextDebugTarget
	void NextDebugTarget();                                                                                                  // [0x4a5bfe0] Exec|Native|Public   
	// Function /Script/Engine.HUD.GetTextSize
	void GetTextSize(FString Text, float& OutWidth, float& OutHeight, UFont* Font, float Scale);                             // [0x4ae9920] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.HUD.GetOwningPlayerController
	APlayerController* GetOwningPlayerController();                                                                          // [0x1a35580] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.HUD.GetOwningPawn
	APawn* GetOwningPawn();                                                                                                  // [0x4ae98e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.HUD.GetActorsInSelectionRectangle
	void GetActorsInSelectionRectangle(UClass* ClassFilter, FVector2D& FirstPoint, FVector2D& SecondPoint, TArray<AActor*>& OutActors, bool bIncludeNonCollidingComponents, bool bActorMustBeFullyEnclosed); // [0x4ae96b0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.HUD.DrawTextureSimple
	void DrawTextureSimple(UTexture* Texture, float ScreenX, float ScreenY, float Scale, bool bScalePosition);               // [0x4ae9470] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.HUD.DrawTexture
	void DrawTexture(UTexture* Texture, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float TextureU, float TextureV, float TextureUWidth, float TextureVHeight, FLinearColor TintColor, TEnumAsByte<EBlendMode> BlendMode, float Scale, bool bScalePosition, float Rotation, FVector2D RotPivot); // [0x4ae8e90] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.HUD.DrawText
	void DrawText(FString Text, FLinearColor TextColor, float ScreenX, float ScreenY, UFont* Font, float Scale, bool bScalePosition); // [0x4ae8b50] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.HUD.DrawRect
	void DrawRect(FLinearColor RectColor, float ScreenX, float ScreenY, float ScreenW, float ScreenH);                       // [0x4ae88f0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.HUD.DrawMaterialTriangle
	void DrawMaterialTriangle(UMaterialInterface* Material, FVector2D V0_Pos, FVector2D V1_Pos, FVector2D V2_Pos, FVector2D V0_UV, FVector2D V1_UV, FVector2D V2_UV, FLinearColor V0_Color, FLinearColor V1_Color, FLinearColor V2_Color); // [0x4ae84b0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.HUD.DrawMaterialSimple
	void DrawMaterialSimple(UMaterialInterface* Material, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float Scale, bool bScalePosition); // [0x4ae81b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.HUD.DrawMaterial
	void DrawMaterial(UMaterialInterface* Material, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float MaterialU, float MaterialV, float MaterialUWidth, float MaterialVHeight, float Scale, bool bScalePosition, float Rotation, FVector2D RotPivot); // [0x4ae7c60] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.HUD.DrawLine
	void DrawLine(float StartScreenX, float StartScreenY, float EndScreenX, float EndScreenY, FLinearColor LineColor, float LineThickness); // [0x4ae79b0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.HUD.Deproject
	void Deproject(float ScreenX, float ScreenY, FVector& WorldPosition, FVector& WorldDirection);                           // [0x4ae77c0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.HUD.AddHitBox
	void AddHitBox(FVector2D Position, FVector2D Size, FName InName, bool bConsumesInput, int32_t Priority);                 // [0x4ae75f0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.HUD.AddDebugText
	void AddDebugText(FString DebugText, AActor* SrcActor, float Duration, FVector Offset, FVector DesiredOffset, FColor TextColor, bool bSkipOverwriteCheck, bool bAbsoluteLocation, bool bKeepAttachedToActor, UFont* InFont, float FontScale, bool bDrawShadow); // [0x4ae6ef0] Final|Net|NetReliableNative|Event|Public|HasDefaults|NetClient 
};

/// Class /Script/Engine.BlueprintAsyncActionBase
/// Size: 0x0008 (0x000028 - 0x000030)
class UBlueprintAsyncActionBase : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.CancellableAsyncAction
/// Size: 0x0000 (0x000030 - 0x000030)
class UCancellableAsyncAction : public UBlueprintAsyncActionBase
{ 
public:
};

/// Class /Script/Engine.DataAsset
/// Size: 0x0008 (0x000028 - 0x000030)
class UDataAsset : public UObject
{ 
public:
	UClass*                                            NativeClass;                                                // 0x0028   (0x0008)  
};

/// Class /Script/Engine.BlueprintFunctionLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UBlueprintFunctionLibrary : public UObject
{ 
public:
};

/// Class /Script/Engine.ActorComponent
/// Size: 0x0078 (0x000028 - 0x0000A0)
class UActorComponent : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	FActorComponentTickFunction                        PrimaryComponentTick;                                       // 0x0030   (0x0030)  
	TArray<FName>                                      ComponentTags;                                              // 0x0060   (0x0010)  
	TArray<UAssetUserData*>                            AssetUserData;                                              // 0x0070   (0x0010)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0080   (0x0004)  MISSED
	int32_t                                            UCSSerializationIndex;                                      // 0x0084   (0x0004)  
	unsigned char                                      UnknownBit02 : 1;                                           // 0x0088:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit03 : 1;                                           // 0x0088:1 (0x0001)  MISSED
	unsigned char                                      UnknownBit04 : 1;                                           // 0x0088:2 (0x0001)  MISSED
	bool                                               bNetAddressable : 1;                                        // 0x0088:3 (0x0001)  
	bool                                               bReplicateUsingRegisteredSubObjectList : 1;                 // 0x0088:4 (0x0001)  
	bool                                               bReplicates : 1;                                            // 0x0088:5 (0x0001)  
	unsigned char                                      UnknownData05_3[0x1];                                       // 0x0089   (0x0001)  MISSED
	unsigned char                                      UnknownBit06 : 1;                                           // 0x008A:0 (0x0001)  MISSED
	bool                                               bAutoActivate : 1;                                          // 0x008A:1 (0x0001)  
	bool                                               bIsActive : 1;                                              // 0x008A:2 (0x0001)  
	bool                                               bEditableWhenInherited : 1;                                 // 0x008A:3 (0x0001)  
	unsigned char                                      UnknownBit07 : 1;                                           // 0x008A:4 (0x0001)  MISSED
	bool                                               bCanEverAffectNavigation : 1;                               // 0x008A:5 (0x0001)  
	unsigned char                                      UnknownBit08 : 1;                                           // 0x008A:6 (0x0001)  MISSED
	bool                                               bIsEditorOnly : 1;                                          // 0x008A:7 (0x0001)  
	unsigned char                                      UnknownData09_4[0x2];                                       // 0x008B   (0x0002)  MISSED
	EComponentCreationMethod                           CreationMethod;                                             // 0x008D   (0x0001)  
	FMulticastSparseDelegate                           OnComponentActivated;                                       // 0x008E   (0x0001)  
	FMulticastSparseDelegate                           OnComponentDeactivated;                                     // 0x008F   (0x0001)  
	unsigned char                                      UnknownData10_6[0x10];                                      // 0x0090   (0x0010)  MISSED


	/// Functions
	// Function /Script/Engine.ActorComponent.ToggleActive
	void ToggleActive();                                                                                                     // [0x4441e30] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.SetTickGroup
	void SetTickGroup(TEnumAsByte<ETickingGroup> NewTickGroup);                                                              // [0x48c0870] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.SetTickableWhenPaused
	void SetTickableWhenPaused(bool bTickableWhenPaused);                                                                    // [0x48c08f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.SetIsReplicated
	void SetIsReplicated(bool ShouldReplicate);                                                                              // [0x48bfb90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.SetComponentTickIntervalAndCooldown
	void SetComponentTickIntervalAndCooldown(float TickInterval);                                                            // [0x48bf650] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.SetComponentTickInterval
	void SetComponentTickInterval(float TickInterval);                                                                       // [0x1f47160] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.SetComponentTickEnabled
	void SetComponentTickEnabled(bool bEnabled);                                                                             // [0x48bf5c0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.SetAutoActivate
	void SetAutoActivate(bool bNewAutoActivate);                                                                             // [0x46d69e0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.SetActive
	void SetActive(bool bNewActive, bool bReset);                                                                            // [0x48beb40] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.RemoveTickPrerequisiteComponent
	void RemoveTickPrerequisiteComponent(UActorComponent* PrerequisiteComponent);                                            // [0x48beab0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.RemoveTickPrerequisiteActor
	void RemoveTickPrerequisiteActor(AActor* PrerequisiteActor);                                                             // [0x48bea20] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.ReceiveTick
	void ReceiveTick(float DeltaSeconds);                                                                                    // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.ActorComponent.ReceiveEndPlay
	void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.ActorComponent.ReceiveBeginPlay
	void ReceiveBeginPlay();                                                                                                 // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.ActorComponent.ReceiveAsyncPhysicsTick
	void ReceiveAsyncPhysicsTick(float DeltaSeconds, float SimSeconds);                                                      // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.ActorComponent.OnRep_IsActive
	void OnRep_IsActive();                                                                                                   // [0x1343080] Native|Public        
	// Function /Script/Engine.ActorComponent.K2_DestroyComponent
	void K2_DestroyComponent(UObject* Object);                                                                               // [0x48be460] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.IsComponentTickEnabled
	bool IsComponentTickEnabled();                                                                                           // [0x48be070] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ActorComponent.IsBeingDestroyed
	bool IsBeingDestroyed();                                                                                                 // [0x48be040] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ActorComponent.IsActive
	bool IsActive();                                                                                                         // [0x48be010] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ActorComponent.GetOwner
	AActor* GetOwner();                                                                                                      // [0x10610d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ActorComponent.GetComponentTickInterval
	float GetComponentTickInterval();                                                                                        // [0x1643850] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ActorComponent.Deactivate
	void Deactivate();                                                                                                       // [0x3d49bb0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.ComponentHasTag
	bool ComponentHasTag(FName Tag);                                                                                         // [0x48bcd70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ActorComponent.AddTickPrerequisiteComponent
	void AddTickPrerequisiteComponent(UActorComponent* PrerequisiteComponent);                                               // [0x48bc510] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.AddTickPrerequisiteActor
	void AddTickPrerequisiteActor(AActor* PrerequisiteActor);                                                                // [0x48bc480] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ActorComponent.Activate
	void Activate(bool bReset);                                                                                              // [0x1344ae0] Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.Pawn
/// Size: 0x0088 (0x000290 - 0x000318)
class APawn : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0290   (0x0008)  MISSED
	bool                                               bUseControllerRotationPitch : 1;                            // 0x0298:0 (0x0001)  
	bool                                               bUseControllerRotationYaw : 1;                              // 0x0298:1 (0x0001)  
	bool                                               bUseControllerRotationRoll : 1;                             // 0x0298:2 (0x0001)  
	bool                                               bCanAffectNavigationGeneration : 1;                         // 0x0298:3 (0x0001)  
	unsigned char                                      UnknownBit01 : 1;                                           // 0x0298:4 (0x0001)  MISSED
	unsigned char                                      UnknownBit02 : 1;                                           // 0x0298:5 (0x0001)  MISSED
	bool                                               bIsLocalViewTarget : 1;                                     // 0x0298:6 (0x0001)  
	unsigned char                                      UnknownData03_4[0x3];                                       // 0x0299   (0x0003)  MISSED
	float                                              BaseEyeHeight;                                              // 0x029C   (0x0004)  
	TEnumAsByte<EAutoReceiveInput>                     AutoPossessPlayer;                                          // 0x02A0   (0x0001)  
	EAutoPossessAI                                     AutoPossessAI;                                              // 0x02A1   (0x0001)  
	char                                               RemoteViewPitch;                                            // 0x02A2   (0x0001)  
	unsigned char                                      UnknownData04_5[0x5];                                       // 0x02A3   (0x0005)  MISSED
	UClass*                                            AIControllerClass;                                          // 0x02A8   (0x0008)  
	APlayerState*                                      PlayerState;                                                // 0x02B0   (0x0008)  
	unsigned char                                      UnknownData05_5[0x8];                                       // 0x02B8   (0x0008)  MISSED
	AController*                                       LastHitBy;                                                  // 0x02C0   (0x0008)  
	AController*                                       Controller;                                                 // 0x02C8   (0x0008)  
	AController*                                       PreviousController;                                         // 0x02D0   (0x0008)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x02D8   (0x0004)  MISSED
	FMulticastSparseDelegate                           ReceiveControllerChangedDelegate;                           // 0x02DC   (0x0001)  
	FMulticastSparseDelegate                           ReceiveRestartedDelegate;                                   // 0x02DD   (0x0001)  
	unsigned char                                      UnknownData07_5[0x2];                                       // 0x02DE   (0x0002)  MISSED
	FVector                                            ControlInputVector;                                         // 0x02E0   (0x0018)  
	FVector                                            LastControlInputVector;                                     // 0x02F8   (0x0018)  
	UClass*                                            OverrideInputComponentClass;                                // 0x0310   (0x0008)  


	/// Functions
	// Function /Script/Engine.Pawn.SpawnDefaultController
	void SpawnDefaultController();                                                                                           // [0x499dd40] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Pawn.SetCanAffectNavigationGeneration
	void SetCanAffectNavigationGeneration(bool bNewValue, bool bForceUpdate);                                                // [0x4d32c50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Pawn.ReceiveUnpossessed
	void ReceiveUnpossessed(AController* OldController);                                                                     // [0x2e6eb70] BlueprintAuthorityOnly|Event|Public|BlueprintEvent 
	// Function /Script/Engine.Pawn.ReceiveRestarted
	void ReceiveRestarted();                                                                                                 // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Pawn.ReceivePossessed
	void ReceivePossessed(AController* NewController);                                                                       // [0x2e6eb70] BlueprintAuthorityOnly|Event|Public|BlueprintEvent 
	// Function /Script/Engine.Pawn.ReceiveControllerChanged
	void ReceiveControllerChanged(AController* OldController, AController* NewController);                                   // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Pawn.PawnMakeNoise
	void PawnMakeNoise(float Loudness, FVector NoiseLocation, bool bUseNoiseMakerLocation, AActor* NoiseMaker);              // [0x4d329b0] Final|BlueprintAuthorityOnly|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Pawn.OnRep_PlayerState
	void OnRep_PlayerState();                                                                                                // [0x4d32990] Native|Public        
	// Function /Script/Engine.Pawn.OnRep_Controller
	void OnRep_Controller();                                                                                                 // [0x1280d80] Native|Public        
	// Function /Script/Engine.Pawn.IsPlayerControlled
	bool IsPlayerControlled();                                                                                               // [0x4d32960] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.IsPawnControlled
	bool IsPawnControlled();                                                                                                 // [0x4d32930] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.IsMoveInputIgnored
	bool IsMoveInputIgnored();                                                                                               // [0x4d32900] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.IsLocallyViewed
	bool IsLocallyViewed();                                                                                                  // [0x4d328d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.IsLocallyControlled
	bool IsLocallyControlled();                                                                                              // [0x4d328a0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.IsControlled
	bool IsControlled();                                                                                                     // [0x4d32820] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.IsBotControlled
	bool IsBotControlled();                                                                                                  // [0x4d327f0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.GetPendingMovementInputVector
	FVector GetPendingMovementInputVector();                                                                                 // [0x4d327c0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.GetOverrideInputComponentClass
	UClass* GetOverrideInputComponentClass();                                                                                // [0x4d327a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.GetNavAgentLocation
	FVector GetNavAgentLocation();                                                                                           // [0x4d32750] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.GetMovementComponent
	UPawnMovementComponent* GetMovementComponent();                                                                          // [0x49e90c0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.GetMovementBaseActor
	AActor* GetMovementBaseActor(APawn* Pawn);                                                                               // [0x4d326a0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.Pawn.GetLocalViewingPlayerController
	APlayerController* GetLocalViewingPlayerController();                                                                    // [0x4d32670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.GetLastMovementInputVector
	FVector GetLastMovementInputVector();                                                                                    // [0x4d32640] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.GetControlRotation
	FRotator GetControlRotation();                                                                                           // [0x4d324f0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.GetController
	AController* GetController();                                                                                            // [0x45de270] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.GetBaseAimRotation
	FRotator GetBaseAimRotation();                                                                                           // [0x4d324a0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Pawn.DetachFromControllerPendingDestroy
	void DetachFromControllerPendingDestroy();                                                                               // [0x4d32480] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Pawn.ConsumeMovementInputVector
	FVector ConsumeMovementInputVector();                                                                                    // [0x4d32430] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Pawn.AddMovementInput
	void AddMovementInput(FVector WorldDirection, float ScaleValue, bool bForce);                                            // [0x4d32300] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Pawn.AddControllerYawInput
	void AddControllerYawInput(float Val);                                                                                   // [0x4d32270] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Pawn.AddControllerRollInput
	void AddControllerRollInput(float Val);                                                                                  // [0x4d321e0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Pawn.AddControllerPitchInput
	void AddControllerPitchInput(float Val);                                                                                 // [0x4d32150] Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.DefaultPawn
/// Size: 0x0028 (0x000318 - 0x000340)
class ADefaultPawn : public APawn
{ 
public:
	float                                              BaseTurnRate;                                               // 0x0318   (0x0004)  
	float                                              BaseLookUpRate;                                             // 0x031C   (0x0004)  
	UPawnMovementComponent*                            MovementComponent;                                          // 0x0320   (0x0008)  
	USphereComponent*                                  CollisionComponent;                                         // 0x0328   (0x0008)  
	UStaticMeshComponent*                              MeshComponent;                                              // 0x0330   (0x0008)  
	bool                                               bAddDefaultMovementBindings : 1;                            // 0x0338:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0339   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.DefaultPawn.TurnAtRate
	void TurnAtRate(float Rate);                                                                                             // [0x49e9410] Native|Public|BlueprintCallable 
	// Function /Script/Engine.DefaultPawn.MoveUp_World
	void MoveUp_World(float Val);                                                                                            // [0x49e92f0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.DefaultPawn.MoveRight
	void MoveRight(float Val);                                                                                               // [0x49e9260] Native|Public|BlueprintCallable 
	// Function /Script/Engine.DefaultPawn.MoveForward
	void MoveForward(float Val);                                                                                             // [0x49e91d0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.DefaultPawn.LookUpAtRate
	void LookUpAtRate(float Rate);                                                                                           // [0x49e9140] Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.AnimNotify
/// Size: 0x0010 (0x000028 - 0x000038)
class UAnimNotify : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/Engine.AnimNotifyState
/// Size: 0x0008 (0x000028 - 0x000030)
class UAnimNotifyState : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.BlueprintCore
/// Size: 0x0028 (0x000028 - 0x000050)
class UBlueprintCore : public UObject
{ 
public:
	UClass*                                            SkeletonGeneratedClass;                                     // 0x0028   (0x0008)  
	UClass*                                            GeneratedClass;                                             // 0x0030   (0x0008)  
	bool                                               bLegacyNeedToPurgeSkelRefs;                                 // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0039   (0x0003)  MISSED
	FGuid                                              BlueprintGuid;                                              // 0x003C   (0x0010)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Class /Script/Engine.Blueprint
/// Size: 0x0058 (0x000050 - 0x0000A8)
class UBlueprint : public UBlueprintCore
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0050   (0x0008)  MISSED
	UClass*                                            ParentClass;                                                // 0x0058   (0x0008)  
	TEnumAsByte<EBlueprintType>                        BlueprintType;                                              // 0x0060   (0x0001)  
	bool                                               bRecompileOnLoad : 1;                                       // 0x0061:0 (0x0001)  
	bool                                               bHasBeenRegenerated : 1;                                    // 0x0061:1 (0x0001)  
	bool                                               bIsRegeneratingOnLoad : 1;                                  // 0x0061:2 (0x0001)  
	unsigned char                                      UnknownData01_4[0x2];                                       // 0x0062   (0x0002)  MISSED
	int32_t                                            BlueprintSystemVersion;                                     // 0x0064   (0x0004)  
	USimpleConstructionScript*                         SimpleConstructionScript;                                   // 0x0068   (0x0008)  
	TArray<UActorComponent*>                           ComponentTemplates;                                         // 0x0070   (0x0010)  
	TArray<UTimelineTemplate*>                         Timelines;                                                  // 0x0080   (0x0010)  
	TArray<FBPComponentClassOverride>                  ComponentClassOverrides;                                    // 0x0090   (0x0010)  
	UInheritableComponentHandler*                      InheritableComponentHandler;                                // 0x00A0   (0x0008)  
};

/// Class /Script/Engine.SceneComponent
/// Size: 0x0200 (0x0000A0 - 0x0002A0)
class USceneComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00A0   (0x0008)  MISSED
	TWeakObjectPtr<APhysicsVolume*>                    PhysicsVolume;                                              // 0x00A8   (0x0008)  
	USceneComponent*                                   AttachParent;                                               // 0x00B0   (0x0008)  
	FName                                              AttachSocketName;                                           // 0x00B8   (0x0008)  
	TArray<USceneComponent*>                           AttachChildren;                                             // 0x00C0   (0x0010)  
	TArray<USceneComponent*>                           ClientAttachedChildren;                                     // 0x00D0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x48];                                      // 0x00E0   (0x0048)  MISSED
	FVector                                            RelativeLocation;                                           // 0x0128   (0x0018)  
	FRotator                                           RelativeRotation;                                           // 0x0140   (0x0018)  
	FVector                                            RelativeScale3D;                                            // 0x0158   (0x0018)  
	FVector                                            ComponentVelocity;                                          // 0x0170   (0x0018)  
	bool                                               bComponentToWorldUpdated : 1;                               // 0x0188:0 (0x0001)  
	unsigned char                                      UnknownBit02 : 1;                                           // 0x0188:1 (0x0001)  MISSED
	bool                                               bAbsoluteLocation : 1;                                      // 0x0188:2 (0x0001)  
	bool                                               bAbsoluteRotation : 1;                                      // 0x0188:3 (0x0001)  
	bool                                               bAbsoluteScale : 1;                                         // 0x0188:4 (0x0001)  
	bool                                               bVisible : 1;                                               // 0x0188:5 (0x0001)  
	bool                                               bShouldBeAttached : 1;                                      // 0x0188:6 (0x0001)  
	bool                                               bShouldSnapLocationWhenAttached : 1;                        // 0x0188:7 (0x0001)  
	bool                                               bShouldSnapRotationWhenAttached : 1;                        // 0x0189:0 (0x0001)  
	bool                                               bShouldSnapScaleWhenAttached : 1;                           // 0x0189:1 (0x0001)  
	bool                                               bShouldUpdatePhysicsVolume : 1;                             // 0x0189:2 (0x0001)  
	bool                                               bHiddenInGame : 1;                                          // 0x0189:3 (0x0001)  
	bool                                               bBoundsChangeTriggersStreamingDataRebuild : 1;              // 0x0189:4 (0x0001)  
	bool                                               bUseAttachParentBound : 1;                                  // 0x0189:5 (0x0001)  
	bool                                               bComputeFastLocalBounds : 1;                                // 0x0189:6 (0x0001)  
	bool                                               bComputeBoundsOnceForGame : 1;                              // 0x0189:7 (0x0001)  
	bool                                               bComputedBoundsOnceForGame : 1;                             // 0x018A:0 (0x0001)  
	bool                                               bIsNotRenderAttachmentRoot : 1;                             // 0x018A:1 (0x0001)  
	TEnumAsByte<EComponentMobility>                    Mobility;                                                   // 0x018B   (0x0001)  
	TEnumAsByte<EDetailMode>                           DetailMode;                                                 // 0x018C   (0x0001)  
	FMulticastSparseDelegate                           PhysicsVolumeChangedDelegate;                               // 0x018D   (0x0001)  
	unsigned char                                      UnknownData03_6[0x112];                                     // 0x018E   (0x0112)  MISSED


	/// Functions
	// Function /Script/Engine.SceneComponent.ToggleVisibility
	void ToggleVisibility(bool bPropagateToChildren);                                                                        // [0x468fb90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.SetWorldScale3D
	void SetWorldScale3D(FVector NewScale);                                                                                  // [0x468fb00] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.SetVisibility
	void SetVisibility(bool bNewVisibility, bool bPropagateToChildren);                                                      // [0x468fa30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.SetShouldUpdatePhysicsVolume
	void SetShouldUpdatePhysicsVolume(bool bInShouldUpdatePhysicsVolume);                                                    // [0x468f9a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.SetRelativeScale3D
	void SetRelativeScale3D(FVector NewScale3D);                                                                             // [0x468f910] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.SetMobility
	void SetMobility(TEnumAsByte<EComponentMobility> NewMobility);                                                           // [0x468f890] Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.SetHiddenInGame
	void SetHiddenInGame(bool NewHidden, bool bPropagateToChildren);                                                         // [0x468f7c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.SetAbsolute
	void SetAbsolute(bool bNewAbsoluteLocation, bool bNewAbsoluteRotation, bool bNewAbsoluteScale);                          // [0x468f690] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.ResetRelativeTransform
	void ResetRelativeTransform();                                                                                           // [0x468f670] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.OnRep_Visibility
	void OnRep_Visibility(bool OldValue);                                                                                    // [0x468f4b0] Final|Native|Private 
	// Function /Script/Engine.SceneComponent.OnRep_Transform
	void OnRep_Transform();                                                                                                  // [0x468f490] Final|Native|Private 
	// Function /Script/Engine.SceneComponent.OnRep_AttachSocketName
	void OnRep_AttachSocketName();                                                                                           // [0x468f470] Final|Native|Private 
	// Function /Script/Engine.SceneComponent.OnRep_AttachParent
	void OnRep_AttachParent();                                                                                               // [0x468f450] Final|Native|Private 
	// Function /Script/Engine.SceneComponent.OnRep_AttachChildren
	void OnRep_AttachChildren();                                                                                             // [0x468f430] Final|Native|Private 
	// Function /Script/Engine.SceneComponent.K2_SetWorldTransform
	void K2_SetWorldTransform(FTransform& NewTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);            // [0x468f1e0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_SetWorldRotation
	void K2_SetWorldRotation(FRotator NewRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);                 // [0x468eff0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_SetWorldLocationAndRotation
	void K2_SetWorldLocationAndRotation(FVector NewLocation, FRotator NewRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport); // [0x468edb0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_SetWorldLocation
	void K2_SetWorldLocation(FVector NewLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);                  // [0x468ebc0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_SetRelativeTransform
	void K2_SetRelativeTransform(FTransform& NewTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);         // [0x468e970] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_SetRelativeRotation
	void K2_SetRelativeRotation(FRotator NewRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);              // [0x468e780] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_SetRelativeLocationAndRotation
	void K2_SetRelativeLocationAndRotation(FVector NewLocation, FRotator NewRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport); // [0x468e540] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_SetRelativeLocation
	void K2_SetRelativeLocation(FVector NewLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);               // [0x468e350] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_GetComponentToWorld
	FTransform K2_GetComponentToWorld();                                                                                     // [0x468e2c0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.K2_GetComponentScale
	FVector K2_GetComponentScale();                                                                                          // [0x468e280] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.K2_GetComponentRotation
	FRotator K2_GetComponentRotation();                                                                                      // [0x468e240] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.K2_GetComponentLocation
	FVector K2_GetComponentLocation();                                                                                       // [0x468e200] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.K2_DetachFromComponent
	void K2_DetachFromComponent(EDetachmentRule LocationRule, EDetachmentRule RotationRule, EDetachmentRule ScaleRule, bool bCallModify); // [0x468e0a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_AttachToComponent
	bool K2_AttachToComponent(USceneComponent* Parent, FName SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies); // [0x468ded0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_AttachTo
	bool K2_AttachTo(USceneComponent* InParent, FName InSocketName, TEnumAsByte<EAttachLocation> AttachType, bool bWeldSimulatedBodies); // [0x468dd70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_AddWorldTransformKeepScale
	void K2_AddWorldTransformKeepScale(FTransform& DeltaTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport); // [0x468db20] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_AddWorldTransform
	void K2_AddWorldTransform(FTransform& DeltaTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);          // [0x468d8d0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_AddWorldRotation
	void K2_AddWorldRotation(FRotator DeltaRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);               // [0x468d6e0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_AddWorldOffset
	void K2_AddWorldOffset(FVector DeltaLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);                  // [0x468d4f0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_AddRelativeRotation
	void K2_AddRelativeRotation(FRotator DeltaRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);            // [0x468d300] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_AddRelativeLocation
	void K2_AddRelativeLocation(FVector DeltaLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);             // [0x468d110] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_AddLocalTransform
	void K2_AddLocalTransform(FTransform& DeltaTransform, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);          // [0x468cec0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_AddLocalRotation
	void K2_AddLocalRotation(FRotator DeltaRotation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);               // [0x468ccd0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.K2_AddLocalOffset
	void K2_AddLocalOffset(FVector DeltaLocation, bool bSweep, FHitResult& SweepHitResult, bool bTeleport);                  // [0x468cae0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SceneComponent.IsVisible
	bool IsVisible();                                                                                                        // [0x468cab0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.IsSimulatingPhysics
	bool IsSimulatingPhysics(FName BoneName);                                                                                // [0x468ca10] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.IsAnySimulatingPhysics
	bool IsAnySimulatingPhysics();                                                                                           // [0x468c9e0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetUpVector
	FVector GetUpVector();                                                                                                   // [0x468c9a0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetSocketTransform
	FTransform GetSocketTransform(FName InSocketName, TEnumAsByte<ERelativeTransformSpace> TransformSpace);                  // [0x468c870] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetSocketRotation
	FRotator GetSocketRotation(FName InSocketName);                                                                          // [0x468c7c0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetSocketQuaternion
	FQuat GetSocketQuaternion(FName InSocketName);                                                                           // [0x468c710] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetSocketLocation
	FVector GetSocketLocation(FName InSocketName);                                                                           // [0x468c660] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetShouldUpdatePhysicsVolume
	bool GetShouldUpdatePhysicsVolume();                                                                                     // [0x468c630] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetRightVector
	FVector GetRightVector();                                                                                                // [0x468c5f0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetRelativeTransform
	FTransform GetRelativeTransform();                                                                                       // [0x468c560] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetPhysicsVolume
	APhysicsVolume* GetPhysicsVolume();                                                                                      // [0x468c530] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetParentComponents
	void GetParentComponents(TArray<USceneComponent*>& Parents);                                                             // [0x468c480] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetNumChildrenComponents
	int32_t GetNumChildrenComponents();                                                                                      // [0x468c450] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetForwardVector
	FVector GetForwardVector();                                                                                              // [0x467b960] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetComponentVelocity
	FVector GetComponentVelocity();                                                                                          // [0x468c400] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetChildrenComponents
	void GetChildrenComponents(bool bIncludeAllDescendants, TArray<USceneComponent*>& Children);                             // [0x468c300] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetChildComponent
	USceneComponent* GetChildComponent(int32_t ChildIndex);                                                                  // [0x468c260] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetAttachSocketName
	FName GetAttachSocketName();                                                                                             // [0x468c240] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetAttachParent
	USceneComponent* GetAttachParent();                                                                                      // [0x468c220] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.GetAllSocketNames
	TArray<FName> GetAllSocketNames();                                                                                       // [0x468c1a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.DoesSocketExist
	bool DoesSocketExist(FName InSocketName);                                                                                // [0x468c100] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SceneComponent.DetachFromParent
	void DetachFromParent(bool bMaintainWorldPosition, bool bCallModify);                                                    // [0x468c020] Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.PrimitiveComponent
/// Size: 0x02A0 (0x0002A0 - 0x000540)
class UPrimitiveComponent : public USceneComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x02A0   (0x0010)  MISSED
	float                                              MinDrawDistance;                                            // 0x02B0   (0x0004)  
	float                                              LDMaxDrawDistance;                                          // 0x02B4   (0x0004)  
	float                                              CachedMaxDrawDistance;                                      // 0x02B8   (0x0004)  
	TEnumAsByte<ESceneDepthPriorityGroup>              DepthPriorityGroup;                                         // 0x02BC   (0x0001)  
	TEnumAsByte<ESceneDepthPriorityGroup>              ViewOwnerDepthPriorityGroup;                                // 0x02BD   (0x0001)  
	TEnumAsByte<EIndirectLightingCacheQuality>         IndirectLightingCacheQuality;                               // 0x02BE   (0x0001)  
	ELightmapType                                      LightmapType;                                               // 0x02BF   (0x0001)  
	bool                                               bIsValidTextureStreamingBuiltData : 1;                      // 0x02C0:0 (0x0001)  
	bool                                               bNeverDistanceCull : 1;                                     // 0x02C0:1 (0x0001)  
	unsigned char                                      UnknownBit01 : 1;                                           // 0x02C0:2 (0x0001)  MISSED
	unsigned char                                      UnknownBit02 : 1;                                           // 0x02C0:3 (0x0001)  MISSED
	unsigned char                                      UnknownBit03 : 1;                                           // 0x02C0:4 (0x0001)  MISSED
	unsigned char                                      UnknownBit04 : 1;                                           // 0x02C0:5 (0x0001)  MISSED
	unsigned char                                      UnknownBit05 : 1;                                           // 0x02C0:6 (0x0001)  MISSED
	bool                                               bAlwaysCreatePhysicsState : 1;                              // 0x02C0:7 (0x0001)  
	bool                                               bGenerateOverlapEvents : 1;                                 // 0x02C1:0 (0x0001)  
	bool                                               bMultiBodyOverlap : 1;                                      // 0x02C1:1 (0x0001)  
	bool                                               bTraceComplexOnMove : 1;                                    // 0x02C1:2 (0x0001)  
	bool                                               bReturnMaterialOnMove : 1;                                  // 0x02C1:3 (0x0001)  
	bool                                               bUseViewOwnerDepthPriorityGroup : 1;                        // 0x02C1:4 (0x0001)  
	bool                                               bAllowCullDistanceVolume : 1;                               // 0x02C1:5 (0x0001)  
	bool                                               bVisibleInReflectionCaptures : 1;                           // 0x02C1:6 (0x0001)  
	bool                                               bVisibleInRealTimeSkyCaptures : 1;                          // 0x02C1:7 (0x0001)  
	bool                                               bVisibleInRayTracing : 1;                                   // 0x02C2:0 (0x0001)  
	bool                                               bRenderInMainPass : 1;                                      // 0x02C2:1 (0x0001)  
	bool                                               bRenderInDepthPass : 1;                                     // 0x02C2:2 (0x0001)  
	bool                                               bReceivesDecals : 1;                                        // 0x02C2:3 (0x0001)  
	bool                                               bOwnerNoSee : 1;                                            // 0x02C2:4 (0x0001)  
	bool                                               bOnlyOwnerSee : 1;                                          // 0x02C2:5 (0x0001)  
	bool                                               bTreatAsBackgroundForOcclusion : 1;                         // 0x02C2:6 (0x0001)  
	bool                                               bUseAsOccluder : 1;                                         // 0x02C2:7 (0x0001)  
	bool                                               bSelectable : 1;                                            // 0x02C3:0 (0x0001)  
	bool                                               bForceMipStreaming : 1;                                     // 0x02C3:1 (0x0001)  
	bool                                               bHasPerInstanceHitProxies : 1;                              // 0x02C3:2 (0x0001)  
	bool                                               CastShadow : 1;                                             // 0x02C3:3 (0x0001)  
	bool                                               bEmissiveLightSource : 1;                                   // 0x02C3:4 (0x0001)  
	bool                                               bAffectDynamicIndirectLighting : 1;                         // 0x02C3:5 (0x0001)  
	bool                                               bAffectIndirectLightingWhileHidden : 1;                     // 0x02C3:6 (0x0001)  
	bool                                               bAffectDistanceFieldLighting : 1;                           // 0x02C3:7 (0x0001)  
	bool                                               bCastDynamicShadow : 1;                                     // 0x02C4:0 (0x0001)  
	bool                                               bCastStaticShadow : 1;                                      // 0x02C4:1 (0x0001)  
	bool                                               bCastVolumetricTranslucentShadow : 1;                       // 0x02C4:2 (0x0001)  
	bool                                               bCastContactShadow : 1;                                     // 0x02C4:3 (0x0001)  
	bool                                               bSelfShadowOnly : 1;                                        // 0x02C4:4 (0x0001)  
	bool                                               bCastFarShadow : 1;                                         // 0x02C4:5 (0x0001)  
	bool                                               bCastInsetShadow : 1;                                       // 0x02C4:6 (0x0001)  
	bool                                               bCastCinematicShadow : 1;                                   // 0x02C4:7 (0x0001)  
	bool                                               bCastHiddenShadow : 1;                                      // 0x02C5:0 (0x0001)  
	bool                                               bCastShadowAsTwoSided : 1;                                  // 0x02C5:1 (0x0001)  
	bool                                               bLightAsIfStatic : 1;                                       // 0x02C5:2 (0x0001)  
	bool                                               bLightAttachmentsAsGroup : 1;                               // 0x02C5:3 (0x0001)  
	bool                                               bExcludeFromLightAttachmentGroup : 1;                       // 0x02C5:4 (0x0001)  
	bool                                               bReceiveMobileCSMShadows : 1;                               // 0x02C5:5 (0x0001)  
	bool                                               bSingleSampleShadowFromStationaryLights : 1;                // 0x02C5:6 (0x0001)  
	bool                                               bIgnoreRadialImpulse : 1;                                   // 0x02C5:7 (0x0001)  
	bool                                               bIgnoreRadialForce : 1;                                     // 0x02C6:0 (0x0001)  
	bool                                               bApplyImpulseOnDamage : 1;                                  // 0x02C6:1 (0x0001)  
	bool                                               bReplicatePhysicsToAutonomousProxy : 1;                     // 0x02C6:2 (0x0001)  
	bool                                               bFillCollisionUnderneathForNavmesh : 1;                     // 0x02C6:3 (0x0001)  
	bool                                               AlwaysLoadOnClient : 1;                                     // 0x02C6:4 (0x0001)  
	bool                                               AlwaysLoadOnServer : 1;                                     // 0x02C6:5 (0x0001)  
	bool                                               bUseEditorCompositing : 1;                                  // 0x02C6:6 (0x0001)  
	bool                                               bIsBeingMovedByEditor : 1;                                  // 0x02C6:7 (0x0001)  
	bool                                               bRenderCustomDepth : 1;                                     // 0x02C7:0 (0x0001)  
	bool                                               bVisibleInSceneCaptureOnly : 1;                             // 0x02C7:1 (0x0001)  
	bool                                               bHiddenInSceneCapture : 1;                                  // 0x02C7:2 (0x0001)  
	bool                                               bRayTracingFarField : 1;                                    // 0x02C7:3 (0x0001)  
	unsigned char                                      UnknownBit06 : 1;                                           // 0x02C7:4 (0x0001)  MISSED
	bool                                               bHasNoStreamableTextures : 1;                               // 0x02C7:5 (0x0001)  
	TEnumAsByte<EHasCustomNavigableGeometry>           bHasCustomNavigableGeometry;                                // 0x02C8   (0x0001)  
	unsigned char                                      UnknownData07_5[0x1];                                       // 0x02C9   (0x0001)  MISSED
	TEnumAsByte<ECanBeCharacterBase>                   CanCharacterStepUpOn;                                       // 0x02CA   (0x0001)  
	FLightingChannels                                  LightingChannels;                                           // 0x02CB   (0x0001)  
	int32_t                                            RayTracingGroupId;                                          // 0x02CC   (0x0004)  
	int32_t                                            VisibilityId;                                               // 0x02D0   (0x0004)  
	int32_t                                            CustomDepthStencilValue;                                    // 0x02D4   (0x0004)  
	FCustomPrimitiveData                               CustomPrimitiveData;                                        // 0x02D8   (0x0010)  
	FCustomPrimitiveData                               CustomPrimitiveDataInternal;                                // 0x02E8   (0x0010)  
	unsigned char                                      UnknownData08_5[0x8];                                       // 0x02F8   (0x0008)  MISSED
	int32_t                                            TranslucencySortPriority;                                   // 0x0300   (0x0004)  
	float                                              TranslucencySortDistanceOffset;                             // 0x0304   (0x0004)  
	TArray<URuntimeVirtualTexture*>                    RuntimeVirtualTextures;                                     // 0x0308   (0x0010)  
	int8_t                                             VirtualTextureLodBias;                                      // 0x0318   (0x0001)  
	int8_t                                             VirtualTextureCullMips;                                     // 0x0319   (0x0001)  
	int8_t                                             VirtualTextureMinCoverage;                                  // 0x031A   (0x0001)  
	ERuntimeVirtualTextureMainPassType                 VirtualTextureRenderPassType;                               // 0x031B   (0x0001)  
	unsigned char                                      UnknownData09_5[0x10];                                      // 0x031C   (0x0010)  MISSED
	float                                              BoundsScale;                                                // 0x032C   (0x0004)  
	unsigned char                                      UnknownData10_5[0x10];                                      // 0x0330   (0x0010)  MISSED
	TArray<AActor*>                                    MoveIgnoreActors;                                           // 0x0340   (0x0010)  
	TArray<UPrimitiveComponent*>                       MoveIgnoreComponents;                                       // 0x0350   (0x0010)  
	unsigned char                                      UnknownData11_5[0x10];                                      // 0x0360   (0x0010)  MISSED
	FBodyInstance                                      BodyInstance;                                               // 0x0370   (0x0190)  
	FMulticastSparseDelegate                           OnComponentHit;                                             // 0x0500   (0x0001)  
	FMulticastSparseDelegate                           OnComponentBeginOverlap;                                    // 0x0501   (0x0001)  
	FMulticastSparseDelegate                           OnComponentEndOverlap;                                      // 0x0502   (0x0001)  
	FMulticastSparseDelegate                           OnComponentWake;                                            // 0x0503   (0x0001)  
	FMulticastSparseDelegate                           OnComponentSleep;                                           // 0x0504   (0x0001)  
	unsigned char                                      UnknownData12_5[0x1];                                       // 0x0505   (0x0001)  MISSED
	FMulticastSparseDelegate                           OnComponentPhysicsStateChanged;                             // 0x0506   (0x0001)  
	FMulticastSparseDelegate                           OnBeginCursorOver;                                          // 0x0507   (0x0001)  
	FMulticastSparseDelegate                           OnEndCursorOver;                                            // 0x0508   (0x0001)  
	FMulticastSparseDelegate                           OnClicked;                                                  // 0x0509   (0x0001)  
	FMulticastSparseDelegate                           OnReleased;                                                 // 0x050A   (0x0001)  
	FMulticastSparseDelegate                           OnInputTouchBegin;                                          // 0x050B   (0x0001)  
	FMulticastSparseDelegate                           OnInputTouchEnd;                                            // 0x050C   (0x0001)  
	FMulticastSparseDelegate                           OnInputTouchEnter;                                          // 0x050D   (0x0001)  
	FMulticastSparseDelegate                           OnInputTouchLeave;                                          // 0x050E   (0x0001)  
	ERayTracingGroupCullingPriority                    RayTracingGroupCullingPriority;                             // 0x050F   (0x0001)  
	ERendererStencilMask                               CustomDepthStencilWriteMask;                                // 0x0510   (0x0001)  
	unsigned char                                      UnknownData13_5[0x1F];                                      // 0x0511   (0x001F)  MISSED
	UPrimitiveComponent*                               LODParentPrimitive;                                         // 0x0530   (0x0008)  
	unsigned char                                      UnknownData14_6[0x8];                                       // 0x0538   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.PrimitiveComponent.WasRecentlyRendered
	bool WasRecentlyRendered(float Tolerance);                                                                               // [0x46862a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.WakeRigidBody
	void WakeRigidBody(FName BoneName);                                                                                      // [0x4686210] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.WakeAllRigidBodies
	void WakeAllRigidBodies();                                                                                               // [0x46861f0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetWalkableSlopeOverride
	void SetWalkableSlopeOverride(FWalkableSlopeOverride& NewOverride);                                                      // [0x4686140] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetVisibleInSceneCaptureOnly
	void SetVisibleInSceneCaptureOnly(bool bValue);                                                                          // [0x46860b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetVisibleInRayTracing
	void SetVisibleInRayTracing(bool bNewVisibleInRayTracing);                                                               // [0x4686020] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetVectorParameterForDefaultCustomPrimitiveData
	void SetVectorParameterForDefaultCustomPrimitiveData(FName ParameterName, FVector4 Value);                               // [0x4685f30] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetVectorParameterForCustomPrimitiveData
	void SetVectorParameterForCustomPrimitiveData(FName ParameterName, FVector4 Value);                                      // [0x4685e40] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetUseCCD
	void SetUseCCD(bool InUseCCD, FName BoneName);                                                                           // [0x4685d70] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetTranslucentSortPriority
	void SetTranslucentSortPriority(int32_t NewTranslucentSortPriority);                                                     // [0x4685ce0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetTranslucencySortDistanceOffset
	void SetTranslucencySortDistanceOffset(float NewTranslucencySortDistanceOffset);                                         // [0x4685c60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetSingleSampleShadowFromStationaryLights
	void SetSingleSampleShadowFromStationaryLights(bool bNewSingleSampleShadowFromStationaryLights);                         // [0x4685bd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetSimulatePhysics
	void SetSimulatePhysics(bool bSimulate);                                                                                 // [0x4685b40] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetScalarParameterForDefaultCustomPrimitiveData
	void SetScalarParameterForDefaultCustomPrimitiveData(FName ParameterName, float Value);                                  // [0x4685a70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetScalarParameterForCustomPrimitiveData
	void SetScalarParameterForCustomPrimitiveData(FName ParameterName, float Value);                                         // [0x46859a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetRenderInMainPass
	void SetRenderInMainPass(bool bValue);                                                                                   // [0x4685910] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetRenderInDepthPass
	void SetRenderInDepthPass(bool bValue);                                                                                  // [0x4685880] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetRenderCustomDepth
	void SetRenderCustomDepth(bool bValue);                                                                                  // [0x46857f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetReceivesDecals
	void SetReceivesDecals(bool bNewReceivesDecals);                                                                         // [0x4685760] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetPhysMaterialOverride
	void SetPhysMaterialOverride(UPhysicalMaterial* NewPhysMaterial);                                                        // [0x4685040] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocityInRadians
	void SetPhysicsMaxAngularVelocityInRadians(float NewMaxAngVel, bool bAddToCurrent, FName BoneName);                      // [0x46855c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocityInDegrees
	void SetPhysicsMaxAngularVelocityInDegrees(float NewMaxAngVel, bool bAddToCurrent, FName BoneName);                      // [0x46854a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetPhysicsLinearVelocity
	void SetPhysicsLinearVelocity(FVector NewVel, bool bAddToCurrent, FName BoneName);                                       // [0x4685360] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetPhysicsAngularVelocityInRadians
	void SetPhysicsAngularVelocityInRadians(FVector NewAngVel, bool bAddToCurrent, FName BoneName);                          // [0x4685220] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetPhysicsAngularVelocityInDegrees
	void SetPhysicsAngularVelocityInDegrees(FVector NewAngVel, bool bAddToCurrent, FName BoneName);                          // [0x46850d0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetOwnerNoSee
	void SetOwnerNoSee(bool bNewOwnerNoSee);                                                                                 // [0x4684fb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetOnlyOwnerSee
	void SetOnlyOwnerSee(bool bNewOnlyOwnerSee);                                                                             // [0x4684f20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetNotifyRigidBodyCollision
	void SetNotifyRigidBodyCollision(bool bNewNotifyRigidBodyCollision);                                                     // [0x4684e90] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetMaterialByName
	void SetMaterialByName(FName MaterialSlotName, UMaterialInterface* Material);                                            // [0x4684dc0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetMaterial
	void SetMaterial(int32_t ElementIndex, UMaterialInterface* Material);                                                    // [0x4684cf0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetMassScale
	void SetMassScale(FName BoneName, float InMassScale);                                                                    // [0x4684c10] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetMassOverrideInKg
	void SetMassOverrideInKg(FName BoneName, float MassInKg, bool bOverrideMass);                                            // [0x4684b00] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetLinearDamping
	void SetLinearDamping(float InDamping);                                                                                  // [0x4684a70] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetLightingChannels
	void SetLightingChannels(bool bChannel0, bool bChannel1, bool bChannel2);                                                // [0x4684940] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetLightAttachmentsAsGroup
	void SetLightAttachmentsAsGroup(bool bInLightAttachmentsAsGroup);                                                        // [0x4684830] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetHiddenInSceneCapture
	void SetHiddenInSceneCapture(bool bValue);                                                                               // [0x46847a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetGenerateOverlapEvents
	void SetGenerateOverlapEvents(bool bInGenerateOverlapEvents);                                                            // [0x4684710] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetExcludeFromLightAttachmentGroup
	void SetExcludeFromLightAttachmentGroup(bool bInExcludeFromLightAttachmentGroup);                                        // [0x4684680] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetEnableGravity
	void SetEnableGravity(bool bGravityEnabled);                                                                             // [0x46845f0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetEmissiveLightSource
	void SetEmissiveLightSource(bool NewEmissiveLightSource);                                                                // [0x4684560] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetDefaultCustomPrimitiveDataVector4
	void SetDefaultCustomPrimitiveDataVector4(int32_t DataIndex, FVector4 Value);                                            // [0x4684470] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetDefaultCustomPrimitiveDataVector3
	void SetDefaultCustomPrimitiveDataVector3(int32_t DataIndex, FVector Value);                                             // [0x4684390] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetDefaultCustomPrimitiveDataVector2
	void SetDefaultCustomPrimitiveDataVector2(int32_t DataIndex, FVector2D Value);                                           // [0x46842c0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetDefaultCustomPrimitiveDataFloat
	void SetDefaultCustomPrimitiveDataFloat(int32_t DataIndex, float Value);                                                 // [0x46841f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCustomPrimitiveDataVector4
	void SetCustomPrimitiveDataVector4(int32_t DataIndex, FVector4 Value);                                                   // [0x4684100] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCustomPrimitiveDataVector3
	void SetCustomPrimitiveDataVector3(int32_t DataIndex, FVector Value);                                                    // [0x4684020] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCustomPrimitiveDataVector2
	void SetCustomPrimitiveDataVector2(int32_t DataIndex, FVector2D Value);                                                  // [0x4683f50] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCustomPrimitiveDataFloat
	void SetCustomPrimitiveDataFloat(int32_t DataIndex, float Value);                                                        // [0x4683e80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCustomDepthStencilWriteMask
	void SetCustomDepthStencilWriteMask(ERendererStencilMask WriteMaskBit);                                                  // [0x4683e00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCustomDepthStencilValue
	void SetCustomDepthStencilValue(int32_t Value);                                                                          // [0x4683d70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCullDistance
	void SetCullDistance(float NewCullDistance);                                                                             // [0x4683cf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetConstraintMode
	void SetConstraintMode(TEnumAsByte<EDOFMode> ConstraintMode);                                                            // [0x4683c70] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCollisionResponseToChannel
	void SetCollisionResponseToChannel(TEnumAsByte<ECollisionChannel> Channel, TEnumAsByte<ECollisionResponse> NewResponse); // [0x4683ba0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCollisionResponseToAllChannels
	void SetCollisionResponseToAllChannels(TEnumAsByte<ECollisionResponse> NewResponse);                                     // [0x4683b20] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCollisionProfileName
	void SetCollisionProfileName(FName InCollisionProfileName, bool bUpdateOverlaps);                                        // [0x4683a50] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCollisionObjectType
	void SetCollisionObjectType(TEnumAsByte<ECollisionChannel> Channel);                                                     // [0x46839d0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCollisionEnabled
	void SetCollisionEnabled(TEnumAsByte<ECollisionEnabled> NewType);                                                        // [0x4683950] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCenterOfMass
	void SetCenterOfMass(FVector CenterOfMassOffset, FName BoneName);                                                        // [0x4683870] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCastShadow
	void SetCastShadow(bool NewCastShadow);                                                                                  // [0x46837e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCastInsetShadow
	void SetCastInsetShadow(bool bInCastInsetShadow);                                                                        // [0x4683750] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCastHiddenShadow
	void SetCastHiddenShadow(bool NewCastHiddenShadow);                                                                      // [0x46836c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetCastContactShadow
	void SetCastContactShadow(bool bInCastContactShadow);                                                                    // [0x4683630] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetBoundsScale
	void SetBoundsScale(float NewBoundsScale);                                                                               // [0x46835b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetAngularDamping
	void SetAngularDamping(float InDamping);                                                                                 // [0x4683520] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetAllUseCCD
	void SetAllUseCCD(bool InUseCCD);                                                                                        // [0x4683490] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetAllPhysicsLinearVelocity
	void SetAllPhysicsLinearVelocity(FVector NewVel, bool bAddToCurrent);                                                    // [0x46833a0] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetAllPhysicsAngularVelocityInRadians
	void SetAllPhysicsAngularVelocityInRadians(FVector& NewAngVel, bool bAddToCurrent);                                      // [0x46832b0] Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetAllPhysicsAngularVelocityInDegrees
	void SetAllPhysicsAngularVelocityInDegrees(FVector& NewAngVel, bool bAddToCurrent);                                      // [0x46831a0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.SetAllMassScale
	void SetAllMassScale(float InMassScale);                                                                                 // [0x4683110] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.ScaleByMomentOfInertia
	FVector ScaleByMomentOfInertia(FVector InputVector, FName BoneName);                                                     // [0x4682ff0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.PutRigidBodyToSleep
	void PutRigidBodyToSleep(FName BoneName);                                                                                // [0x4682f60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.K2_SphereTraceComponent
	bool K2_SphereTraceComponent(FVector TraceStart, FVector TraceEnd, float SphereRadius, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, FVector& HitLocation, FVector& HitNormal, FName& BoneName, FHitResult& OutHit); // [0x4682b70] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.K2_SphereOverlapComponent
	bool K2_SphereOverlapComponent(FVector InSphereCentre, float InSphereRadius, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, FVector& HitLocation, FVector& HitNormal, FName& BoneName, FHitResult& OutHit); // [0x46827e0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.K2_LineTraceComponent
	bool K2_LineTraceComponent(FVector TraceStart, FVector TraceEnd, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, FVector& HitLocation, FVector& HitNormal, FName& BoneName, FHitResult& OutHit); // [0x4682440] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.K2_IsQueryCollisionEnabled
	bool K2_IsQueryCollisionEnabled();                                                                                       // [0x46823f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.K2_IsPhysicsCollisionEnabled
	bool K2_IsPhysicsCollisionEnabled();                                                                                     // [0x46823b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.K2_IsCollisionEnabled
	bool K2_IsCollisionEnabled();                                                                                            // [0x4682370] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.K2_BoxOverlapComponent
	bool K2_BoxOverlapComponent(FVector InBoxCentre, FBox InBox, bool bTraceComplex, bool bShowTrace, bool bPersistentShowTrace, FVector& HitLocation, FVector& HitNormal, FName& BoneName, FHitResult& OutHit); // [0x4681fc0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.IsOverlappingComponent
	bool IsOverlappingComponent(UPrimitiveComponent* OtherComp);                                                             // [0x4681f20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.IsOverlappingActor
	bool IsOverlappingActor(AActor* Other);                                                                                  // [0x4681e80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.IsGravityEnabled
	bool IsGravityEnabled();                                                                                                 // [0x4681e50] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.IsAnyRigidBodyAwake
	bool IsAnyRigidBodyAwake();                                                                                              // [0x4681e20] Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.PrimitiveComponent.InvalidateLumenSurfaceCache
	void InvalidateLumenSurfaceCache();                                                                                      // [0x4681e00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.IgnoreComponentWhenMoving
	void IgnoreComponentWhenMoving(UPrimitiveComponent* Component, bool bShouldIgnore);                                      // [0x4681d30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.IgnoreActorWhenMoving
	void IgnoreActorWhenMoving(AActor* Actor, bool bShouldIgnore);                                                           // [0x4681c60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.GetWalkableSlopeOverride
	FWalkableSlopeOverride GetWalkableSlopeOverride();                                                                       // [0x4681c30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetPhysicsLinearVelocityAtPoint
	FVector GetPhysicsLinearVelocityAtPoint(FVector Point, FName BoneName);                                                  // [0x4681b20] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.GetPhysicsLinearVelocity
	FVector GetPhysicsLinearVelocity(FName BoneName);                                                                        // [0x4681a70] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.GetPhysicsAngularVelocityInRadians
	FVector GetPhysicsAngularVelocityInRadians(FName BoneName);                                                              // [0x46819c0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetPhysicsAngularVelocityInDegrees
	FVector GetPhysicsAngularVelocityInDegrees(FName BoneName);                                                              // [0x4681900] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetOverlappingComponents
	void GetOverlappingComponents(TArray<UPrimitiveComponent*>& OutOverlappingComponents);                                   // [0x4681850] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetOverlappingActors
	void GetOverlappingActors(TArray<AActor*>& OverlappingActors, UClass* ClassFilter);                                      // [0x4681750] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetNumMaterials
	int32_t GetNumMaterials();                                                                                               // [0x4681720] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetMaterialFromCollisionFaceIndex
	UMaterialInterface* GetMaterialFromCollisionFaceIndex(int32_t FaceIndex, int32_t& SectionIndex);                         // [0x4681640] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetMaterial
	UMaterialInterface* GetMaterial(int32_t ElementIndex);                                                                   // [0x46815a0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetMassScale
	float GetMassScale(FName BoneName);                                                                                      // [0x4681500] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetMass
	float GetMass();                                                                                                         // [0x46814c0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetLinearDamping
	float GetLinearDamping();                                                                                                // [0x4681480] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetInertiaTensor
	FVector GetInertiaTensor(FName BoneName);                                                                                // [0x46813d0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetGenerateOverlapEvents
	bool GetGenerateOverlapEvents();                                                                                         // [0x46813a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetCustomPrimitiveDataIndexForVectorParameter
	int32_t GetCustomPrimitiveDataIndexForVectorParameter(FName ParameterName);                                              // [0x4681300] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetCustomPrimitiveDataIndexForScalarParameter
	int32_t GetCustomPrimitiveDataIndexForScalarParameter(FName ParameterName);                                              // [0x4681260] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetCollisionResponseToChannel
	TEnumAsByte<ECollisionResponse> GetCollisionResponseToChannel(TEnumAsByte<ECollisionChannel> Channel);                   // [0x46811d0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetCollisionProfileName
	FName GetCollisionProfileName();                                                                                         // [0x4681190] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetCollisionObjectType
	TEnumAsByte<ECollisionChannel> GetCollisionObjectType();                                                                 // [0x4681160] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetCollisionEnabled
	TEnumAsByte<ECollisionEnabled> GetCollisionEnabled();                                                                    // [0x4681130] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetClosestPointOnCollision
	float GetClosestPointOnCollision(FVector& Point, FVector& OutPointOnBody, FName BoneName);                               // [0x4680ff0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetCenterOfMass
	FVector GetCenterOfMass(FName BoneName);                                                                                 // [0x4680f40] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetBodyInstanceAsyncPhysicsTickHandle
	FBodyInstanceAsyncPhysicsTickHandle GetBodyInstanceAsyncPhysicsTickHandle(FName BoneName, bool bGetWelded, int32_t Index); // [0x4680e00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.GetAngularDamping
	float GetAngularDamping();                                                                                               // [0x4680dc0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.CreateDynamicMaterialInstance
	UMaterialInstanceDynamic* CreateDynamicMaterialInstance(int32_t ElementIndex, UMaterialInterface* SourceMaterial, FName OptionalName); // [0x4680ca0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.CreateAndSetMaterialInstanceDynamicFromMaterial
	UMaterialInstanceDynamic* CreateAndSetMaterialInstanceDynamicFromMaterial(int32_t ElementIndex, UMaterialInterface* Parent); // [0x4680bd0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.CreateAndSetMaterialInstanceDynamic
	UMaterialInstanceDynamic* CreateAndSetMaterialInstanceDynamic(int32_t ElementIndex);                                     // [0x4680b30] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.CopyArrayOfMoveIgnoreComponents
	TArray<UPrimitiveComponent*> CopyArrayOfMoveIgnoreComponents();                                                          // [0x4680ab0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.CopyArrayOfMoveIgnoreActors
	TArray<AActor*> CopyArrayOfMoveIgnoreActors();                                                                           // [0x4680a30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.ClearMoveIgnoreComponents
	void ClearMoveIgnoreComponents();                                                                                        // [0x4680a00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.ClearMoveIgnoreActors
	void ClearMoveIgnoreActors();                                                                                            // [0x46809e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.CanCharacterStepUp
	bool CanCharacterStepUp(APawn* Pawn);                                                                                    // [0x4680940] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PrimitiveComponent.AddVelocityChangeImpulseAtLocation
	void AddVelocityChangeImpulseAtLocation(FVector Impulse, FVector Location, FName BoneName);                              // [0x46807f0] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.AddTorqueInRadians
	void AddTorqueInRadians(FVector Torque, FName BoneName, bool bAccelChange);                                              // [0x46806c0] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.AddTorqueInDegrees
	void AddTorqueInDegrees(FVector Torque, FName BoneName, bool bAccelChange);                                              // [0x4680580] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.AddRadialImpulse
	void AddRadialImpulse(FVector Origin, float Radius, float Strength, TEnumAsByte<ERadialImpulseFalloff> Falloff, bool bVelChange); // [0x46803a0] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.AddRadialForce
	void AddRadialForce(FVector Origin, float Radius, float Strength, TEnumAsByte<ERadialImpulseFalloff> Falloff, bool bAccelChange); // [0x46801c0] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.AddImpulseAtLocation
	void AddImpulseAtLocation(FVector Impulse, FVector Location, FName BoneName);                                            // [0x4680070] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.AddImpulse
	void AddImpulse(FVector Impulse, FName BoneName, bool bVelChange);                                                       // [0x467ff40] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.AddForceAtLocationLocal
	void AddForceAtLocationLocal(FVector Force, FVector Location, FName BoneName);                                           // [0x467fdf0] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.AddForceAtLocation
	void AddForceAtLocation(FVector Force, FVector Location, FName BoneName);                                                // [0x467fca0] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.AddForce
	void AddForce(FVector Force, FName BoneName, bool bAccelChange);                                                         // [0x467fb70] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.AddAngularImpulseInRadians
	void AddAngularImpulseInRadians(FVector Impulse, FName BoneName, bool bVelChange);                                       // [0x467fa40] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PrimitiveComponent.AddAngularImpulseInDegrees
	void AddAngularImpulseInDegrees(FVector Impulse, FName BoneName, bool bVelChange);                                       // [0x467f900] Final|Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.FXSystemComponent
/// Size: 0x0000 (0x000540 - 0x000540)
class UFXSystemComponent : public UPrimitiveComponent
{ 
public:
};

/// Class /Script/Engine.FXSystemAsset
/// Size: 0x0008 (0x000028 - 0x000030)
class UFXSystemAsset : public UObject
{ 
public:
	uint32_t                                           MaxPoolSize;                                                // 0x0028   (0x0004)  
	uint32_t                                           PoolPrimeSize;                                              // 0x002C   (0x0004)  
};

/// Class /Script/Engine.Subsystem
/// Size: 0x0008 (0x000028 - 0x000030)
class USubsystem : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.DynamicSubsystem
/// Size: 0x0000 (0x000030 - 0x000030)
class UDynamicSubsystem : public USubsystem
{ 
public:
};

/// Class /Script/Engine.EngineSubsystem
/// Size: 0x0000 (0x000030 - 0x000030)
class UEngineSubsystem : public UDynamicSubsystem
{ 
public:
};

/// Class /Script/Engine.ShapeComponent
/// Size: 0x0020 (0x000540 - 0x000560)
class UShapeComponent : public UPrimitiveComponent
{ 
public:
	UBodySetup*                                        ShapeBodySetup;                                             // 0x0538   (0x0008)  
	FColor                                             ShapeColor;                                                 // 0x0540   (0x0004)  
	bool                                               bDrawOnlyIfSelected : 1;                                    // 0x0544:0 (0x0001)  
	bool                                               bShouldCollideWhenPlacing : 1;                              // 0x0544:1 (0x0001)  
	bool                                               bDynamicObstacle : 1;                                       // 0x0544:2 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0545   (0x0003)  MISSED
	UClass*                                            AreaClassOverride;                                          // 0x0548   (0x0008)  
	bool                                               bUseSystemDefaultObstacleAreaClass : 1;                     // 0x0550:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0xF];                                       // 0x0551   (0x000F)  MISSED
};

/// Class /Script/Engine.BoxComponent
/// Size: 0x0020 (0x000560 - 0x000580)
class UBoxComponent : public UShapeComponent
{ 
public:
	FVector                                            BoxExtent;                                                  // 0x0558   (0x0018)  
	float                                              LineThickness;                                              // 0x0570   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0574   (0x000C)  MISSED


	/// Functions
	// Function /Script/Engine.BoxComponent.SetLineThickness
	void SetLineThickness(float Thickness);                                                                                  // [0x48bfc60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.BoxComponent.SetBoxExtent
	void SetBoxExtent(FVector InBoxExtent, bool bUpdateOverlaps);                                                            // [0x48bf170] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.BoxComponent.GetUnscaledBoxExtent
	FVector GetUnscaledBoxExtent();                                                                                          // [0x48bdcb0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.BoxComponent.GetScaledBoxExtent
	FVector GetScaledBoxExtent();                                                                                            // [0x48bd880] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.Brush
/// Size: 0x0038 (0x000290 - 0x0002C8)
class ABrush : public AActor
{ 
public:
	TEnumAsByte<EBrushType>                            BrushType;                                                  // 0x0290   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0291   (0x0003)  MISSED
	FColor                                             BrushColor;                                                 // 0x0294   (0x0004)  
	int32_t                                            PolyFlags;                                                  // 0x0298   (0x0004)  
	bool                                               bColored : 1;                                               // 0x029C:0 (0x0001)  
	bool                                               bSolidWhenSelected : 1;                                     // 0x029C:1 (0x0001)  
	bool                                               bPlaceableFromClassBrowser : 1;                             // 0x029C:2 (0x0001)  
	bool                                               bNotForClientOrServer : 1;                                  // 0x029C:3 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x029D   (0x0003)  MISSED
	UModel*                                            Brush;                                                      // 0x02A0   (0x0008)  
	UBrushComponent*                                   BrushComponent;                                             // 0x02A8   (0x0008)  
	bool                                               bInManipulation : 1;                                        // 0x02B0:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x7];                                       // 0x02B1   (0x0007)  MISSED
	TArray<FGeomSelection>                             SavedSelections;                                            // 0x02B8   (0x0010)  
};

/// Class /Script/Engine.Volume
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class AVolume : public ABrush
{ 
public:
};

/// Class /Script/Engine.PhysicsVolume
/// Size: 0x0010 (0x0002C8 - 0x0002D8)
class APhysicsVolume : public AVolume
{ 
public:
	float                                              TerminalVelocity;                                           // 0x02C8   (0x0004)  
	int32_t                                            Priority;                                                   // 0x02CC   (0x0004)  
	float                                              FluidFriction;                                              // 0x02D0   (0x0004)  
	bool                                               bWaterVolume : 1;                                           // 0x02D4:0 (0x0001)  
	bool                                               bPhysicsOnContact : 1;                                      // 0x02D4:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02D5   (0x0003)  MISSED
};

/// Class /Script/Engine.HLODBuilder
/// Size: 0x0000 (0x000028 - 0x000028)
class UHLODBuilder : public UObject
{ 
public:
};

/// Class /Script/Engine.MeshComponent
/// Size: 0x0030 (0x000540 - 0x000570)
class UMeshComponent : public UPrimitiveComponent
{ 
public:
	TArray<UMaterialInterface*>                        OverrideMaterials;                                          // 0x0538   (0x0010)  
	UMaterialInterface*                                OverlayMaterial;                                            // 0x0548   (0x0008)  
	float                                              OverlayMaterialMaxDrawDistance;                             // 0x0550   (0x0004)  
	unsigned char                                      UnknownData00_5[0x14];                                      // 0x0554   (0x0014)  MISSED
	bool                                               bEnableMaterialParameterCaching : 1;                        // 0x0568:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0569   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.MeshComponent.SetVectorParameterValueOnMaterials
	void SetVectorParameterValueOnMaterials(FName ParameterName, FVector ParameterValue);                                    // [0x48fc560] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.MeshComponent.SetScalarParameterValueOnMaterials
	void SetScalarParameterValueOnMaterials(FName ParameterName, float ParameterValue);                                      // [0x48fb880] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.MeshComponent.SetOverlayMaterialMaxDrawDistance
	void SetOverlayMaterialMaxDrawDistance(float InMaxDrawDistance);                                                         // [0x48fb4b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.MeshComponent.SetOverlayMaterial
	void SetOverlayMaterial(UMaterialInterface* NewOverlayMaterial);                                                         // [0x48fb410] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.MeshComponent.PrestreamTextures
	void PrestreamTextures(float Seconds, bool bPrioritizeCharacterTextures, int32_t CinematicTextureGroups);                // [0x48f87c0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.MeshComponent.IsMaterialSlotNameValid
	bool IsMaterialSlotNameValid(FName MaterialSlotName);                                                                    // [0x48f8030] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MeshComponent.GetOverlayMaterial
	UMaterialInterface* GetOverlayMaterial();                                                                                // [0x48f7940] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MeshComponent.GetMaterialSlotNames
	TArray<FName> GetMaterialSlotNames();                                                                                    // [0x48f7800] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MeshComponent.GetMaterials
	TArray<UMaterialInterface*> GetMaterials();                                                                              // [0x48f7880] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MeshComponent.GetMaterialIndex
	int32_t GetMaterialIndex(FName MaterialSlotName);                                                                        // [0x48f7760] Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.SplineComponent
/// Size: 0x0100 (0x000540 - 0x000640)
class USplineComponent : public UPrimitiveComponent
{ 
public:
	FSplineCurves                                      SplineCurves;                                               // 0x0538   (0x0070)  
	FInterpCurveVector                                 SplineInfo;                                                 // 0x05A8   (0x0018)  
	FInterpCurveQuat                                   SplineRotInfo;                                              // 0x05C0   (0x0018)  
	FInterpCurveVector                                 SplineScaleInfo;                                            // 0x05D8   (0x0018)  
	FInterpCurveFloat                                  SplineReparamTable;                                         // 0x05F0   (0x0018)  
	bool                                               bAllowSplineEditingPerInstance;                             // 0x0608   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0609   (0x0003)  MISSED
	int32_t                                            ReparamStepsPerSegment;                                     // 0x060C   (0x0004)  
	float                                              Duration;                                                   // 0x0610   (0x0004)  
	bool                                               bStationaryEndpoints;                                       // 0x0614   (0x0001)  
	bool                                               bSplineHasBeenEdited;                                       // 0x0615   (0x0001)  
	bool                                               bModifiedByConstructionScript;                              // 0x0616   (0x0001)  
	bool                                               bInputSplinePointsToConstructionScript;                     // 0x0617   (0x0001)  
	bool                                               bDrawDebug;                                                 // 0x0618   (0x0001)  
	bool                                               bClosedLoop;                                                // 0x0619   (0x0001)  
	bool                                               bLoopPositionOverride;                                      // 0x061A   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x061B   (0x0001)  MISSED
	float                                              LoopPosition;                                               // 0x061C   (0x0004)  
	FVector                                            DefaultUpVector;                                            // 0x0620   (0x0018)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0638   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.SplineComponent.UpdateSpline
	void UpdateSpline();                                                                                                     // [0x4974c00] Native|Public|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetWorldLocationAtSplinePoint
	void SetWorldLocationAtSplinePoint(int32_t PointIndex, FVector& InLocation);                                             // [0x4974af0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetUpVectorAtSplinePoint
	void SetUpVectorAtSplinePoint(int32_t PointIndex, FVector& InUpVector, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline); // [0x49745d0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetUnselectedSplineSegmentColor
	void SetUnselectedSplineSegmentColor(FLinearColor& SegmentColor);                                                        // [0x4972b40] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetTangentsAtSplinePoint
	void SetTangentsAtSplinePoint(int32_t PointIndex, FVector& InArriveTangent, FVector& InLeaveTangent, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline); // [0x4973fa0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetTangentColor
	void SetTangentColor(FLinearColor& TangentColor);                                                                        // [0x4972b40] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetTangentAtSplinePoint
	void SetTangentAtSplinePoint(int32_t PointIndex, FVector& InTangent, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline); // [0x4973b80] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetSplineWorldPoints
	void SetSplineWorldPoints(TArray<FVector>& Points);                                                                      // [0x4973350] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetSplinePointType
	void SetSplinePointType(int32_t PointIndex, TEnumAsByte<ESplinePointType> Type, bool bUpdateSpline);                     // [0x4972f40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetSplinePoints
	void SetSplinePoints(TArray<FVector>& Points, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline);  // [0x49730b0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetSplineLocalPoints
	void SetSplineLocalPoints(TArray<FVector>& Points);                                                                      // [0x4972e90] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetSelectedSplineSegmentColor
	void SetSelectedSplineSegmentColor(FLinearColor& SegmentColor);                                                          // [0x4972b40] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetScaleAtSplinePoint
	void SetScaleAtSplinePoint(int32_t PointIndex, FVector& InScaleVector, bool bUpdateSpline);                              // [0x49729f0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetRotationAtSplinePoint
	void SetRotationAtSplinePoint(int32_t PointIndex, FRotator& InRotation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline); // [0x4972880] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetLocationAtSplinePoint
	void SetLocationAtSplinePoint(int32_t PointIndex, FVector& InLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline); // [0x4971840] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetDrawDebug
	void SetDrawDebug(bool bShow);                                                                                           // [0x4970d30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetDefaultUpVector
	void SetDefaultUpVector(FVector& UpVector, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);                         // [0x4970840] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetClosedLoopAtPosition
	void SetClosedLoopAtPosition(bool bInClosedLoop, float Key, bool bUpdateSpline);                                         // [0x4970710] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.SetClosedLoop
	void SetClosedLoop(bool bInClosedLoop, bool bUpdateSpline);                                                              // [0x4970630] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.RemoveSplinePoint
	void RemoveSplinePoint(int32_t Index, bool bUpdateSpline);                                                               // [0x4970200] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.IsClosedLoop
	bool IsClosedLoop();                                                                                                     // [0x496ffc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetWorldTangentAtDistanceAlongSpline
	FVector GetWorldTangentAtDistanceAlongSpline(float Distance);                                                            // [0x496fef0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetWorldRotationAtTime
	FRotator GetWorldRotationAtTime(float Time, bool bUseConstantVelocity);                                                  // [0x496fdf0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetWorldRotationAtDistanceAlongSpline
	FRotator GetWorldRotationAtDistanceAlongSpline(float Distance);                                                          // [0x496fd10] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetWorldLocationAtTime
	FVector GetWorldLocationAtTime(float Time, bool bUseConstantVelocity);                                                   // [0x496fc10] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetWorldLocationAtSplinePoint
	FVector GetWorldLocationAtSplinePoint(int32_t PointIndex);                                                               // [0x496fb60] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetWorldLocationAtDistanceAlongSpline
	FVector GetWorldLocationAtDistanceAlongSpline(float Distance);                                                           // [0x496fa90] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetWorldDirectionAtTime
	FVector GetWorldDirectionAtTime(float Time, bool bUseConstantVelocity);                                                  // [0x496f990] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetWorldDirectionAtDistanceAlongSpline
	FVector GetWorldDirectionAtDistanceAlongSpline(float Distance);                                                          // [0x496f8c0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetVectorPropertyAtSplinePoint
	FVector GetVectorPropertyAtSplinePoint(int32_t Index, FName PropertyName);                                               // [0x496f780] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetVectorPropertyAtSplineInputKey
	FVector GetVectorPropertyAtSplineInputKey(float InKey, FName PropertyName);                                              // [0x496f620] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetUpVectorAtTime
	FVector GetUpVectorAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity);   // [0x496f020] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetUpVectorAtSplinePoint
	FVector GetUpVectorAtSplinePoint(int32_t PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);               // [0x496ecb0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetUpVectorAtSplineInputKey
	FVector GetUpVectorAtSplineInputKey(float InKey, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);                   // [0x496e980] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetUpVectorAtDistanceAlongSpline
	FVector GetUpVectorAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);           // [0x496e630] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetTransformAtTime
	FTransform GetTransformAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity, bool bUseScale); // [0x496e3d0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetTransformAtSplinePoint
	FTransform GetTransformAtSplinePoint(int32_t PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseScale); // [0x496e210] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetTransformAtSplineInputKey
	FTransform GetTransformAtSplineInputKey(float InKey, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseScale); // [0x496e090] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetTransformAtDistanceAlongSpline
	FTransform GetTransformAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseScale); // [0x496def0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetTimeAtDistanceAlongSpline
	float GetTimeAtDistanceAlongSpline(float Distance);                                                                      // [0x496a360] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetTangentAtTime
	FVector GetTangentAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity);    // [0x496dbb0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetTangentAtSplinePoint
	FVector GetTangentAtSplinePoint(int32_t PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);                // [0x496a4c0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetTangentAtSplineInputKey
	FVector GetTangentAtSplineInputKey(float InKey, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);                    // [0x496d950] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetTangentAtDistanceAlongSpline
	FVector GetTangentAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);            // [0x496d6d0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetSplinePointType
	TEnumAsByte<ESplinePointType> GetSplinePointType(int32_t PointIndex);                                                    // [0x496d4e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetSplineLength
	float GetSplineLength();                                                                                                 // [0x496d490] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetScaleAtTime
	FVector GetScaleAtTime(float Time, bool bUseConstantVelocity);                                                           // [0x496d220] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetScaleAtSplinePoint
	FVector GetScaleAtSplinePoint(int32_t PointIndex);                                                                       // [0x496d140] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetScaleAtSplineInputKey
	FVector GetScaleAtSplineInputKey(float InKey);                                                                           // [0x496d070] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetScaleAtDistanceAlongSpline
	FVector GetScaleAtDistanceAlongSpline(float Distance);                                                                   // [0x496cf80] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetRotationAtTime
	FRotator GetRotationAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity);  // [0x496ce30] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetRotationAtSplinePoint
	FRotator GetRotationAtSplinePoint(int32_t PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);              // [0x496cce0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetRotationAtSplineInputKey
	FRotator GetRotationAtSplineInputKey(float InKey, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);                  // [0x496cbd0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetRotationAtDistanceAlongSpline
	FRotator GetRotationAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);          // [0x496caa0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetRollAtTime
	float GetRollAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity);         // [0x496c8c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetRollAtSplinePoint
	float GetRollAtSplinePoint(int32_t PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);                     // [0x496c770] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetRollAtSplineInputKey
	float GetRollAtSplineInputKey(float InKey, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);                         // [0x496c660] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetRollAtDistanceAlongSpline
	float GetRollAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);                 // [0x496c540] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetRightVectorAtTime
	FVector GetRightVectorAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity); // [0x496bf40] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetRightVectorAtSplinePoint
	FVector GetRightVectorAtSplinePoint(int32_t PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);            // [0x496bbd0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetRightVectorAtSplineInputKey
	FVector GetRightVectorAtSplineInputKey(float InKey, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);                // [0x496b8a0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetRightVectorAtDistanceAlongSpline
	FVector GetRightVectorAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);        // [0x496b550] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetNumberOfSplineSegments
	int32_t GetNumberOfSplineSegments();                                                                                     // [0x496b520] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetNumberOfSplinePoints
	int32_t GetNumberOfSplinePoints();                                                                                       // [0x496b500] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetLocationAtTime
	FVector GetLocationAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity);   // [0x496b3b0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetLocationAtSplinePoint
	FVector GetLocationAtSplinePoint(int32_t PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);               // [0x496b110] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetLocationAtSplineInputKey
	FVector GetLocationAtSplineInputKey(float InKey, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);                   // [0x496ae90] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetLocationAtDistanceAlongSpline
	FVector GetLocationAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);           // [0x496abf0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetLocationAndTangentAtSplinePoint
	void GetLocationAndTangentAtSplinePoint(int32_t PointIndex, FVector& Location, FVector& Tangent, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace); // [0x496aa60] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetLocalLocationAndTangentAtSplinePoint
	void GetLocalLocationAndTangentAtSplinePoint(int32_t PointIndex, FVector& LocalLocation, FVector& LocalTangent);         // [0x496a920] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetLeaveTangentAtSplinePoint
	FVector GetLeaveTangentAtSplinePoint(int32_t PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);           // [0x496a4c0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetInputKeyValueAtDistanceAlongSpline
	float GetInputKeyValueAtDistanceAlongSpline(float Distance);                                                             // [0x496a400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetInputKeyAtDistanceAlongSpline
	float GetInputKeyAtDistanceAlongSpline(float Distance);                                                                  // [0x496a360] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetFloatPropertyAtSplinePoint
	float GetFloatPropertyAtSplinePoint(int32_t Index, FName PropertyName);                                                  // [0x496a1f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetFloatPropertyAtSplineInputKey
	float GetFloatPropertyAtSplineInputKey(float InKey, FName PropertyName);                                                 // [0x496a0c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetDistanceAlongSplineAtSplinePoint
	float GetDistanceAlongSplineAtSplinePoint(int32_t PointIndex);                                                           // [0x4969f00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetDistanceAlongSplineAtSplineInputKey
	float GetDistanceAlongSplineAtSplineInputKey(float InKey);                                                               // [0x4969da0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetDirectionAtTime
	FVector GetDirectionAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseConstantVelocity);  // [0x4969c50] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetDirectionAtSplinePoint
	FVector GetDirectionAtSplinePoint(int32_t PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);              // [0x4969920] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetDirectionAtSplineInputKey
	FVector GetDirectionAtSplineInputKey(float InKey, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);                  // [0x49695c0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetDirectionAtDistanceAlongSpline
	FVector GetDirectionAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);          // [0x4969270] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetDefaultUpVector
	FVector GetDefaultUpVector(TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);                                         // [0x4969080] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.GetArriveTangentAtSplinePoint
	FVector GetArriveTangentAtSplinePoint(int32_t PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);          // [0x4968c90] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.FindUpVectorClosestToWorldLocation
	FVector FindUpVectorClosestToWorldLocation(FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace); // [0x4968950] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.FindTransformClosestToWorldLocation
	FTransform FindTransformClosestToWorldLocation(FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUseScale); // [0x49687b0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.FindTangentClosestToWorldLocation
	FVector FindTangentClosestToWorldLocation(FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);  // [0x4968520] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.FindScaleClosestToWorldLocation
	FVector FindScaleClosestToWorldLocation(FVector& WorldLocation);                                                         // [0x4968430] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.FindRotationClosestToWorldLocation
	FRotator FindRotationClosestToWorldLocation(FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace); // [0x4968310] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.FindRollClosestToWorldLocation
	float FindRollClosestToWorldLocation(FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);       // [0x49681f0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.FindRightVectorClosestToWorldLocation
	FVector FindRightVectorClosestToWorldLocation(FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace); // [0x4967eb0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.FindLocationClosestToWorldLocation
	FVector FindLocationClosestToWorldLocation(FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace); // [0x4967c10] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.FindInputKeyClosestToWorldLocation
	float FindInputKeyClosestToWorldLocation(FVector& WorldLocation);                                                        // [0x4967b70] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.FindDirectionClosestToWorldLocation
	FVector FindDirectionClosestToWorldLocation(FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace); // [0x49677f0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.DivideSplineIntoPolylineRecursiveWithDistances
	bool DivideSplineIntoPolylineRecursiveWithDistances(float StartDistanceAlongSpline, float EndDistanceAlongSpline, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, float MaxSquareDistanceFromSpline, TArray<FVector>& OutPoints, TArray<double>& OutDistancesAlongSpline); // [0x49675c0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.DivideSplineIntoPolylineRecursive
	bool DivideSplineIntoPolylineRecursive(float StartDistanceAlongSpline, float EndDistanceAlongSpline, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, float MaxSquareDistanceFromSpline, TArray<FVector>& OutPoints); // [0x49673d0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.ConvertSplineToPolyLine
	bool ConvertSplineToPolyLine(TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, float MaxSquareDistanceFromSpline, TArray<FVector>& OutPoints); // [0x4967160] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.ConvertSplineSegmentToPolyLine
	bool ConvertSplineSegmentToPolyLine(int32_t SplinePointStartIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, float MaxSquareDistanceFromSpline, TArray<FVector>& OutPoints); // [0x4966fe0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineComponent.ClearSplinePoints
	void ClearSplinePoints(bool bUpdateSpline);                                                                              // [0x4966ed0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.AddSplineWorldPoint
	void AddSplineWorldPoint(FVector& Position);                                                                             // [0x4966e30] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.AddSplinePointAtIndex
	void AddSplinePointAtIndex(FVector& Position, int32_t Index, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline); // [0x4966cc0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.AddSplinePoint
	void AddSplinePoint(FVector& Position, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, bool bUpdateSpline);         // [0x4966ba0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.AddSplineLocalPoint
	void AddSplineLocalPoint(FVector& Position);                                                                             // [0x4966b00] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.AddPoints
	void AddPoints(TArray<FSplinePoint>& Points, bool bUpdateSpline);                                                        // [0x49669a0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SplineComponent.AddPoint
	void AddPoint(FSplinePoint& Point, bool bUpdateSpline);                                                                  // [0x4966860] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Engine.SplineMetadata
/// Size: 0x0000 (0x000028 - 0x000028)
class USplineMetadata : public UObject
{ 
public:
};

/// Class /Script/Engine.WorldSubsystem
/// Size: 0x0000 (0x000030 - 0x000030)
class UWorldSubsystem : public USubsystem
{ 
public:
};

/// Class /Script/Engine.TickableWorldSubsystem
/// Size: 0x0010 (0x000030 - 0x000040)
class UTickableWorldSubsystem : public UWorldSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/Engine.ReplicationDriver
/// Size: 0x0000 (0x000028 - 0x000028)
class UReplicationDriver : public UObject
{ 
public:
};

/// Class /Script/Engine.ReplicationConnectionDriver
/// Size: 0x0000 (0x000028 - 0x000028)
class UReplicationConnectionDriver : public UObject
{ 
public:
};

/// Class /Script/Engine.Player
/// Size: 0x0020 (0x000028 - 0x000048)
class UPlayer : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	APlayerController*                                 PlayerController;                                           // 0x0030   (0x0008)  
	int32_t                                            CurrentNetSpeed;                                            // 0x0038   (0x0004)  
	int32_t                                            ConfiguredInternetSpeed;                                    // 0x003C   (0x0004)  
	int32_t                                            ConfiguredLanSpeed;                                         // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Class /Script/Engine.NetConnection
/// Size: 0x32C8 (0x000048 - 0x003310)
class UNetConnection : public UPlayer
{ 
public:
	TArray<UChildConnection*>                          Children;                                                   // 0x0048   (0x0010)  
	UNetDriver*                                        Driver;                                                     // 0x0058   (0x0008)  
	UClass*                                            PackageMapClass;                                            // 0x0060   (0x0008)  
	UPackageMap*                                       PackageMap;                                                 // 0x0068   (0x0008)  
	TArray<UChannel*>                                  OpenChannels;                                               // 0x0070   (0x0010)  
	TArray<AActor*>                                    SentTemporaries;                                            // 0x0080   (0x0010)  
	AActor*                                            ViewTarget;                                                 // 0x0090   (0x0008)  
	AActor*                                            OwningActor;                                                // 0x0098   (0x0008)  
	int32_t                                            MaxPacket;                                                  // 0x00A0   (0x0004)  
	bool                                               InternalAck : 1;                                            // 0x00A4:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0xBB];                                      // 0x00A5   (0x00BB)  MISSED
	FUniqueNetIdRepl                                   PlayerId;                                                   // 0x0160   (0x0030)  
	unsigned char                                      UnknownData01_5[0x48];                                      // 0x0190   (0x0048)  MISSED
	double                                             LastReceiveTime;                                            // 0x01D8   (0x0008)  
	unsigned char                                      UnknownData02_5[0x11E0];                                    // 0x01E0   (0x11E0)  MISSED
	int32_t                                            DefaultMaxChannelSize;                                      // 0x13C0   (0x0004)  
	unsigned char                                      UnknownData03_5[0x284];                                     // 0x13C4   (0x0284)  MISSED
	TArray<UChannel*>                                  ChannelsToTick;                                             // 0x1648   (0x0010)  
	unsigned char                                      UnknownData04_6[0x1CB8];                                    // 0x1658   (0x1CB8)  MISSED
};

/// Class /Script/Engine.NetDriver
/// Size: 0x0768 (0x000028 - 0x000790)
class UNetDriver : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	FString                                            NetConnectionClassName;                                     // 0x0030   (0x0010)  
	FString                                            ReplicationDriverClassName;                                 // 0x0040   (0x0010)  
	FString                                            ReplicationBridgeClassName;                                 // 0x0050   (0x0010)  
	int32_t                                            MaxDownloadSize;                                            // 0x0060   (0x0004)  
	bool                                               bClampListenServerTickRate : 1;                             // 0x0064:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0065   (0x0003)  MISSED
	int32_t                                            NetServerMaxTickRate;                                       // 0x0068   (0x0004)  
	int32_t                                            MaxNetTickRate;                                             // 0x006C   (0x0004)  
	int32_t                                            MaxInternetClientRate;                                      // 0x0070   (0x0004)  
	int32_t                                            MaxClientRate;                                              // 0x0074   (0x0004)  
	float                                              ServerTravelPause;                                          // 0x0078   (0x0004)  
	float                                              SpawnPrioritySeconds;                                       // 0x007C   (0x0004)  
	float                                              RelevantTimeout;                                            // 0x0080   (0x0004)  
	float                                              KeepAliveTime;                                              // 0x0084   (0x0004)  
	float                                              InitialConnectTimeout;                                      // 0x0088   (0x0004)  
	float                                              ConnectionTimeout;                                          // 0x008C   (0x0004)  
	float                                              TimeoutMultiplierForUnoptimizedBuilds;                      // 0x0090   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0094   (0x0004)  MISSED
	UNetConnection*                                    ServerConnection;                                           // 0x0098   (0x0008)  
	TArray<UNetConnection*>                            ClientConnections;                                          // 0x00A0   (0x0010)  
	unsigned char                                      UnknownData03_5[0x60];                                      // 0x00B0   (0x0060)  MISSED
	int32_t                                            RecentlyDisconnectedTrackingTime;                           // 0x0110   (0x0004)  
	unsigned char                                      UnknownData04_5[0x3C];                                      // 0x0114   (0x003C)  MISSED
	UWorld*                                            World;                                                      // 0x0150   (0x0008)  
	UPackage*                                          WorldPackage;                                               // 0x0158   (0x0008)  
	unsigned char                                      UnknownData05_5[0x20];                                      // 0x0160   (0x0020)  MISSED
	UClass*                                            NetConnectionClass;                                         // 0x0180   (0x0008)  
	UClass*                                            ReplicationDriverClass;                                     // 0x0188   (0x0008)  
	UClass*                                            ReplicationBridgeClass;                                     // 0x0190   (0x0008)  
	unsigned char                                      UnknownData06_5[0x10];                                      // 0x0198   (0x0010)  MISSED
	FName                                              NetDriverName;                                              // 0x01A8   (0x0008)  
	TArray<FChannelDefinition>                         ChannelDefinitions;                                         // 0x01B0   (0x0010)  
	TMap<FName, FChannelDefinition>                    ChannelDefinitionMap;                                       // 0x01C0   (0x0050)  
	TArray<UChannel*>                                  ActorChannelPool;                                           // 0x0210   (0x0010)  
	unsigned char                                      UnknownData07_5[0x21];                                      // 0x0220   (0x0021)  MISSED
	unsigned char                                      UnknownBit08 : 1;                                           // 0x0241:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit09 : 1;                                           // 0x0241:1 (0x0001)  MISSED
	unsigned char                                      UnknownBit10 : 1;                                           // 0x0241:2 (0x0001)  MISSED
	unsigned char                                      UnknownBit11 : 1;                                           // 0x0241:3 (0x0001)  MISSED
	unsigned char                                      UnknownBit12 : 1;                                           // 0x0241:4 (0x0001)  MISSED
	unsigned char                                      UnknownBit13 : 1;                                           // 0x0241:5 (0x0001)  MISSED
	bool                                               bNoTimeouts : 1;                                            // 0x0241:6 (0x0001)  
	bool                                               bNeverApplyNetworkEmulationSettings : 1;                    // 0x0241:7 (0x0001)  
	unsigned char                                      UnknownData14_4[0x4DE];                                     // 0x0242   (0x04DE)  MISSED
	UReplicationDriver*                                ReplicationDriver;                                          // 0x0720   (0x0008)  
	unsigned char                                      UnknownData15_6[0x68];                                      // 0x0728   (0x0068)  MISSED
};

/// Class /Script/Engine.OnlineBlueprintCallProxyBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UOnlineBlueprintCallProxyBase : public UBlueprintAsyncActionBase
{ 
public:
};

/// Class /Script/Engine.OnlineEngineInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UOnlineEngineInterface : public UObject
{ 
public:
};

/// Class /Script/Engine.OnlineSession
/// Size: 0x0000 (0x000028 - 0x000028)
class UOnlineSession : public UObject
{ 
public:
};

/// Class /Script/Engine.DynamicBlueprintBinding
/// Size: 0x0000 (0x000028 - 0x000028)
class UDynamicBlueprintBinding : public UObject
{ 
public:
};

/// Class /Script/Engine.InputDelegateBinding
/// Size: 0x0000 (0x000028 - 0x000028)
class UInputDelegateBinding : public UDynamicBlueprintBinding
{ 
public:
};

/// Class /Script/Engine.InputComponent
/// Size: 0x0088 (0x0000A0 - 0x000128)
class UInputComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x70];                                      // 0x00A0   (0x0070)  MISSED
	TArray<FCachedKeyToActionInfo>                     CachedKeyToActionInfo;                                      // 0x0110   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0120   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.InputComponent.WasControllerKeyJustReleased
	bool WasControllerKeyJustReleased(FKey Key);                                                                             // [0x48f7da0] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InputComponent.WasControllerKeyJustPressed
	bool WasControllerKeyJustPressed(FKey Key);                                                                              // [0x48f7da0] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InputComponent.OnInputOwnerEndPlayed
	void OnInputOwnerEndPlayed(AActor* InOwner, TEnumAsByte<EEndPlayReason> EndPlayReason);                                  // [0x48f86f0] Final|Native|Private 
	// Function /Script/Engine.InputComponent.IsControllerKeyDown
	bool IsControllerKeyDown(FKey Key);                                                                                      // [0x48f7da0] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InputComponent.GetTouchState
	void GetTouchState(int32_t FingerIndex, float& LocationX, float& LocationY, bool& bIsCurrentlyPressed);                  // [0x48f7aa0] Final|Native|Private|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InputComponent.GetControllerVectorKeyState
	FVector GetControllerVectorKeyState(FKey Key);                                                                           // [0x48f74e0] Final|Native|Private|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InputComponent.GetControllerMouseDelta
	void GetControllerMouseDelta(float& DeltaX, float& DeltaY);                                                              // [0x48f7420] Final|Native|Private|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InputComponent.GetControllerKeyTimeDown
	float GetControllerKeyTimeDown(FKey Key);                                                                                // [0x48f7210] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InputComponent.GetControllerAnalogStickState
	void GetControllerAnalogStickState(TEnumAsByte<EControllerAnalogStick> WhichStick, float& StickX, float& StickY);        // [0x48f7320] Final|Native|Private|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InputComponent.GetControllerAnalogKeyState
	float GetControllerAnalogKeyState(FKey Key);                                                                             // [0x48f7210] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.Engine
/// Size: 0x1028 (0x000028 - 0x001050)
class UEngine : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	UFont*                                             TinyFont;                                                   // 0x0030   (0x0008)  
	FSoftObjectPath                                    TinyFontName;                                               // 0x0038   (0x0020)  
	UFont*                                             SmallFont;                                                  // 0x0058   (0x0008)  
	FSoftObjectPath                                    SmallFontName;                                              // 0x0060   (0x0020)  
	UFont*                                             MediumFont;                                                 // 0x0080   (0x0008)  
	FSoftObjectPath                                    MediumFontName;                                             // 0x0088   (0x0020)  
	UFont*                                             LargeFont;                                                  // 0x00A8   (0x0008)  
	FSoftObjectPath                                    LargeFontName;                                              // 0x00B0   (0x0020)  
	UFont*                                             SubtitleFont;                                               // 0x00D0   (0x0008)  
	FSoftObjectPath                                    SubtitleFontName;                                           // 0x00D8   (0x0020)  
	TArray<UFont*>                                     AdditionalFonts;                                            // 0x00F8   (0x0010)  
	TArray<FString>                                    AdditionalFontNames;                                        // 0x0108   (0x0010)  
	UClass*                                            ConsoleClass;                                               // 0x0118   (0x0008)  
	FSoftClassPath                                     ConsoleClassName;                                           // 0x0120   (0x0020)  
	UClass*                                            GameViewportClientClass;                                    // 0x0140   (0x0008)  
	FSoftClassPath                                     GameViewportClientClassName;                                // 0x0148   (0x0020)  
	UClass*                                            LocalPlayerClass;                                           // 0x0168   (0x0008)  
	FSoftClassPath                                     LocalPlayerClassName;                                       // 0x0170   (0x0020)  
	UClass*                                            WorldSettingsClass;                                         // 0x0190   (0x0008)  
	FSoftClassPath                                     WorldSettingsClassName;                                     // 0x0198   (0x0020)  
	FSoftClassPath                                     NavigationSystemClassName;                                  // 0x01B8   (0x0020)  
	UClass*                                            NavigationSystemClass;                                      // 0x01D8   (0x0008)  
	FSoftClassPath                                     NavigationSystemConfigClassName;                            // 0x01E0   (0x0020)  
	UClass*                                            NavigationSystemConfigClass;                                // 0x0200   (0x0008)  
	FSoftClassPath                                     AvoidanceManagerClassName;                                  // 0x0208   (0x0020)  
	UClass*                                            AvoidanceManagerClass;                                      // 0x0228   (0x0008)  
	FSoftClassPath                                     AIControllerClassName;                                      // 0x0230   (0x0020)  
	UClass*                                            PhysicsCollisionHandlerClass;                               // 0x0250   (0x0008)  
	FSoftClassPath                                     PhysicsCollisionHandlerClassName;                           // 0x0258   (0x0020)  
	FSoftClassPath                                     GameUserSettingsClassName;                                  // 0x0278   (0x0020)  
	UClass*                                            GameUserSettingsClass;                                      // 0x0298   (0x0008)  
	UGameUserSettings*                                 GameUserSettings;                                           // 0x02A0   (0x0008)  
	UClass*                                            LevelScriptActorClass;                                      // 0x02A8   (0x0008)  
	FSoftClassPath                                     LevelScriptActorClassName;                                  // 0x02B0   (0x0020)  
	FSoftClassPath                                     DefaultBlueprintBaseClassName;                              // 0x02D0   (0x0020)  
	FSoftClassPath                                     GameSingletonClassName;                                     // 0x02F0   (0x0020)  
	UObject*                                           GameSingleton;                                              // 0x0310   (0x0008)  
	FSoftClassPath                                     AssetManagerClassName;                                      // 0x0318   (0x0020)  
	UAssetManager*                                     AssetManager;                                               // 0x0338   (0x0008)  
	UTexture2D*                                        DefaultTexture;                                             // 0x0340   (0x0008)  
	FSoftObjectPath                                    DefaultTextureName;                                         // 0x0348   (0x0020)  
	UTexture*                                          DefaultDiffuseTexture;                                      // 0x0368   (0x0008)  
	FSoftObjectPath                                    DefaultDiffuseTextureName;                                  // 0x0370   (0x0020)  
	UTexture2D*                                        DefaultBSPVertexTexture;                                    // 0x0390   (0x0008)  
	FSoftObjectPath                                    DefaultBSPVertexTextureName;                                // 0x0398   (0x0020)  
	UTexture2D*                                        HighFrequencyNoiseTexture;                                  // 0x03B8   (0x0008)  
	FSoftObjectPath                                    HighFrequencyNoiseTextureName;                              // 0x03C0   (0x0020)  
	UTexture2D*                                        DefaultBokehTexture;                                        // 0x03E0   (0x0008)  
	FSoftObjectPath                                    DefaultBokehTextureName;                                    // 0x03E8   (0x0020)  
	UTexture2D*                                        DefaultBloomKernelTexture;                                  // 0x0408   (0x0008)  
	FSoftObjectPath                                    DefaultBloomKernelTextureName;                              // 0x0410   (0x0020)  
	UTexture2D*                                        DefaultFilmGrainTexture;                                    // 0x0430   (0x0008)  
	FSoftObjectPath                                    DefaultFilmGrainTextureName;                                // 0x0438   (0x0020)  
	UMaterial*                                         WireframeMaterial;                                          // 0x0458   (0x0008)  
	FString                                            WireframeMaterialName;                                      // 0x0460   (0x0010)  
	UMaterial*                                         DebugMeshMaterial;                                          // 0x0470   (0x0008)  
	FSoftObjectPath                                    DebugMeshMaterialName;                                      // 0x0478   (0x0020)  
	UMaterial*                                         EmissiveMeshMaterial;                                       // 0x0498   (0x0008)  
	FSoftObjectPath                                    EmissiveMeshMaterialName;                                   // 0x04A0   (0x0020)  
	UMaterial*                                         LevelColorationLitMaterial;                                 // 0x04C0   (0x0008)  
	FString                                            LevelColorationLitMaterialName;                             // 0x04C8   (0x0010)  
	UMaterial*                                         LevelColorationUnlitMaterial;                               // 0x04D8   (0x0008)  
	FString                                            LevelColorationUnlitMaterialName;                           // 0x04E0   (0x0010)  
	UMaterial*                                         LightingTexelDensityMaterial;                               // 0x04F0   (0x0008)  
	FString                                            LightingTexelDensityName;                                   // 0x04F8   (0x0010)  
	UMaterial*                                         ShadedLevelColorationLitMaterial;                           // 0x0508   (0x0008)  
	FString                                            ShadedLevelColorationLitMaterialName;                       // 0x0510   (0x0010)  
	UMaterial*                                         ShadedLevelColorationUnlitMaterial;                         // 0x0520   (0x0008)  
	FString                                            ShadedLevelColorationUnlitMaterialName;                     // 0x0528   (0x0010)  
	UMaterial*                                         RemoveSurfaceMaterial;                                      // 0x0538   (0x0008)  
	FSoftObjectPath                                    RemoveSurfaceMaterialName;                                  // 0x0540   (0x0020)  
	UMaterial*                                         VertexColorMaterial;                                        // 0x0560   (0x0008)  
	FString                                            VertexColorMaterialName;                                    // 0x0568   (0x0010)  
	UMaterial*                                         VertexColorViewModeMaterial_ColorOnly;                      // 0x0578   (0x0008)  
	FString                                            VertexColorViewModeMaterialName_ColorOnly;                  // 0x0580   (0x0010)  
	UMaterial*                                         VertexColorViewModeMaterial_AlphaAsColor;                   // 0x0590   (0x0008)  
	FString                                            VertexColorViewModeMaterialName_AlphaAsColor;               // 0x0598   (0x0010)  
	UMaterial*                                         VertexColorViewModeMaterial_RedOnly;                        // 0x05A8   (0x0008)  
	FString                                            VertexColorViewModeMaterialName_RedOnly;                    // 0x05B0   (0x0010)  
	UMaterial*                                         VertexColorViewModeMaterial_GreenOnly;                      // 0x05C0   (0x0008)  
	FString                                            VertexColorViewModeMaterialName_GreenOnly;                  // 0x05C8   (0x0010)  
	UMaterial*                                         VertexColorViewModeMaterial_BlueOnly;                       // 0x05D8   (0x0008)  
	FString                                            VertexColorViewModeMaterialName_BlueOnly;                   // 0x05E0   (0x0010)  
	FSoftObjectPath                                    DebugEditorMaterialName;                                    // 0x05F0   (0x0020)  
	UMaterial*                                         ConstraintLimitMaterial;                                    // 0x0610   (0x0008)  
	UMaterialInstanceDynamic*                          ConstraintLimitMaterialX;                                   // 0x0618   (0x0008)  
	UMaterialInstanceDynamic*                          ConstraintLimitMaterialXAxis;                               // 0x0620   (0x0008)  
	UMaterialInstanceDynamic*                          ConstraintLimitMaterialY;                                   // 0x0628   (0x0008)  
	UMaterialInstanceDynamic*                          ConstraintLimitMaterialYAxis;                               // 0x0630   (0x0008)  
	UMaterialInstanceDynamic*                          ConstraintLimitMaterialZ;                                   // 0x0638   (0x0008)  
	UMaterialInstanceDynamic*                          ConstraintLimitMaterialZAxis;                               // 0x0640   (0x0008)  
	UMaterialInstanceDynamic*                          ConstraintLimitMaterialPrismatic;                           // 0x0648   (0x0008)  
	UMaterial*                                         InvalidLightmapSettingsMaterial;                            // 0x0650   (0x0008)  
	FSoftObjectPath                                    InvalidLightmapSettingsMaterialName;                        // 0x0658   (0x0020)  
	UMaterial*                                         PreviewShadowsIndicatorMaterial;                            // 0x0678   (0x0008)  
	FSoftObjectPath                                    PreviewShadowsIndicatorMaterialName;                        // 0x0680   (0x0020)  
	UMaterial*                                         ArrowMaterial;                                              // 0x06A0   (0x0008)  
	UMaterialInstanceDynamic*                          ArrowMaterialYellow;                                        // 0x06A8   (0x0008)  
	FSoftObjectPath                                    ArrowMaterialName;                                          // 0x06B0   (0x0020)  
	FLinearColor                                       LightingOnlyBrightness;                                     // 0x06D0   (0x0010)  
	TArray<FLinearColor>                               ShaderComplexityColors;                                     // 0x06E0   (0x0010)  
	TArray<FLinearColor>                               QuadComplexityColors;                                       // 0x06F0   (0x0010)  
	TArray<FLinearColor>                               LightComplexityColors;                                      // 0x0700   (0x0010)  
	TArray<FLinearColor>                               StationaryLightOverlapColors;                               // 0x0710   (0x0010)  
	TArray<FLinearColor>                               LODColorationColors;                                        // 0x0720   (0x0010)  
	TArray<FLinearColor>                               HLODColorationColors;                                       // 0x0730   (0x0010)  
	TArray<FLinearColor>                               StreamingAccuracyColors;                                    // 0x0740   (0x0010)  
	FLinearColor                                       GPUSkinCacheVisualizationExcludedColor;                     // 0x0750   (0x0010)  
	FLinearColor                                       GPUSkinCacheVisualizationIncludedColor;                     // 0x0760   (0x0010)  
	FLinearColor                                       GPUSkinCacheVisualizationRecomputeTangentsColor;            // 0x0770   (0x0010)  
	float                                              GPUSkinCacheVisualizationLowMemoryThresholdInMB;            // 0x0780   (0x0004)  
	float                                              GPUSkinCacheVisualizationHighMemoryThresholdInMB;           // 0x0784   (0x0004)  
	FLinearColor                                       GPUSkinCacheVisualizationLowMemoryColor;                    // 0x0788   (0x0010)  
	FLinearColor                                       GPUSkinCacheVisualizationMidMemoryColor;                    // 0x0798   (0x0010)  
	FLinearColor                                       GPUSkinCacheVisualizationHighMemoryColor;                   // 0x07A8   (0x0010)  
	TArray<FLinearColor>                               GPUSkinCacheVisualizationRayTracingLODOffsetColors;         // 0x07B8   (0x0010)  
	float                                              MaxPixelShaderAdditiveComplexityCount;                      // 0x07C8   (0x0004)  
	float                                              MaxES3PixelShaderAdditiveComplexityCount;                   // 0x07CC   (0x0004)  
	float                                              MinLightMapDensity;                                         // 0x07D0   (0x0004)  
	float                                              IdealLightMapDensity;                                       // 0x07D4   (0x0004)  
	float                                              MaxLightMapDensity;                                         // 0x07D8   (0x0004)  
	bool                                               bRenderLightMapDensityGrayscale : 1;                        // 0x07DC:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x07DD   (0x0003)  MISSED
	float                                              RenderLightMapDensityGrayscaleScale;                        // 0x07E0   (0x0004)  
	float                                              RenderLightMapDensityColorScale;                            // 0x07E4   (0x0004)  
	FLinearColor                                       LightMapDensityVertexMappedColor;                           // 0x07E8   (0x0010)  
	FLinearColor                                       LightMapDensitySelectedColor;                               // 0x07F8   (0x0010)  
	TArray<FStatColorMapping>                          StatColorMappings;                                          // 0x0808   (0x0010)  
	UPhysicalMaterial*                                 DefaultPhysMaterial;                                        // 0x0818   (0x0008)  
	FSoftObjectPath                                    DefaultPhysMaterialName;                                    // 0x0820   (0x0020)  
	UPhysicalMaterial*                                 DefaultDestructiblePhysMaterial;                            // 0x0840   (0x0008)  
	FSoftObjectPath                                    DefaultDestructiblePhysMaterialName;                        // 0x0848   (0x0020)  
	TArray<FGameNameRedirect>                          ActiveGameNameRedirects;                                    // 0x0868   (0x0010)  
	TArray<FClassRedirect>                             ActiveClassRedirects;                                       // 0x0878   (0x0010)  
	TArray<FPluginRedirect>                            ActivePluginRedirects;                                      // 0x0888   (0x0010)  
	TArray<FStructRedirect>                            ActiveStructRedirects;                                      // 0x0898   (0x0010)  
	UTexture2D*                                        PreIntegratedSkinBRDFTexture;                               // 0x08A8   (0x0008)  
	FSoftObjectPath                                    PreIntegratedSkinBRDFTextureName;                           // 0x08B0   (0x0020)  
	UTexture2D*                                        BlueNoiseScalarTexture;                                     // 0x08D0   (0x0008)  
	UTexture2D*                                        BlueNoiseVec2Texture;                                       // 0x08D8   (0x0008)  
	FSoftObjectPath                                    BlueNoiseScalarTextureName;                                 // 0x08E0   (0x0020)  
	FSoftObjectPath                                    BlueNoiseVec2TextureName;                                   // 0x0900   (0x0020)  
	UTexture2D*                                        MiniFontTexture;                                            // 0x0920   (0x0008)  
	FSoftObjectPath                                    MiniFontTextureName;                                        // 0x0928   (0x0020)  
	UTexture*                                          WeightMapPlaceholderTexture;                                // 0x0948   (0x0008)  
	FSoftObjectPath                                    WeightMapPlaceholderTextureName;                            // 0x0950   (0x0020)  
	UTexture2D*                                        LightMapDensityTexture;                                     // 0x0970   (0x0008)  
	FSoftObjectPath                                    LightMapDensityTextureName;                                 // 0x0978   (0x0020)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0998   (0x0008)  MISSED
	UGameViewportClient*                               GameViewport;                                               // 0x09A0   (0x0008)  
	TArray<FString>                                    DeferredCommands;                                           // 0x09A8   (0x0010)  
	float                                              NearClipPlane;                                              // 0x09B8   (0x0004)  
	bool                                               bSubtitlesEnabled : 1;                                      // 0x09BC:0 (0x0001)  
	bool                                               bSubtitlesForcedOff : 1;                                    // 0x09BC:1 (0x0001)  
	unsigned char                                      UnknownData03_4[0x3];                                       // 0x09BD   (0x0003)  MISSED
	int32_t                                            MaximumLoopIterationCount;                                  // 0x09C0   (0x0004)  
	bool                                               bCanBlueprintsTickByDefault : 1;                            // 0x09C4:0 (0x0001)  
	bool                                               bOptimizeAnimBlueprintMemberVariableAccess : 1;             // 0x09C4:1 (0x0001)  
	bool                                               bAllowMultiThreadedAnimationUpdate : 1;                     // 0x09C4:2 (0x0001)  
	bool                                               bEnableEditorPSysRealtimeLOD : 1;                           // 0x09C4:3 (0x0001)  
	unsigned char                                      UnknownBit04 : 1;                                           // 0x09C4:4 (0x0001)  MISSED
	bool                                               bSmoothFrameRate : 1;                                       // 0x09C4:5 (0x0001)  
	bool                                               bUseFixedFrameRate : 1;                                     // 0x09C4:6 (0x0001)  
	unsigned char                                      UnknownData05_4[0x3];                                       // 0x09C5   (0x0003)  MISSED
	float                                              FixedFrameRate;                                             // 0x09C8   (0x0004)  
	FFloatRange                                        SmoothedFrameRateRange;                                     // 0x09CC   (0x0010)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x09DC   (0x0004)  MISSED
	UEngineCustomTimeStep*                             CustomTimeStep;                                             // 0x09E0   (0x0008)  
	unsigned char                                      UnknownData07_5[0x20];                                      // 0x09E8   (0x0020)  MISSED
	FSoftClassPath                                     CustomTimeStepClassName;                                    // 0x0A08   (0x0020)  
	UTimecodeProvider*                                 TimecodeProvider;                                           // 0x0A28   (0x0008)  
	unsigned char                                      UnknownData08_5[0x20];                                      // 0x0A30   (0x0020)  MISSED
	FSoftClassPath                                     TimecodeProviderClassName;                                  // 0x0A50   (0x0020)  
	bool                                               bGenerateDefaultTimecode;                                   // 0x0A70   (0x0001)  
	unsigned char                                      UnknownData09_5[0x3];                                       // 0x0A71   (0x0003)  MISSED
	FFrameRate                                         GenerateDefaultTimecodeFrameRate;                           // 0x0A74   (0x0008)  
	float                                              GenerateDefaultTimecodeFrameDelay;                          // 0x0A7C   (0x0004)  
	bool                                               bCheckForMultiplePawnsSpawnedInAFrame : 1;                  // 0x0A80:0 (0x0001)  
	unsigned char                                      UnknownData10_4[0x3];                                       // 0x0A81   (0x0003)  MISSED
	int32_t                                            NumPawnsAllowedToBeSpawnedInAFrame;                         // 0x0A84   (0x0004)  
	bool                                               bShouldGenerateLowQualityLightmaps : 1;                     // 0x0A88:0 (0x0001)  
	unsigned char                                      UnknownData11_4[0x3];                                       // 0x0A89   (0x0003)  MISSED
	FColor                                             C_WorldBox;                                                 // 0x0A8C   (0x0004)  
	FColor                                             C_BrushWire;                                                // 0x0A90   (0x0004)  
	FColor                                             C_AddWire;                                                  // 0x0A94   (0x0004)  
	FColor                                             C_SubtractWire;                                             // 0x0A98   (0x0004)  
	FColor                                             C_SemiSolidWire;                                            // 0x0A9C   (0x0004)  
	FColor                                             C_NonSolidWire;                                             // 0x0AA0   (0x0004)  
	FColor                                             C_WireBackground;                                           // 0x0AA4   (0x0004)  
	FColor                                             C_ScaleBoxHi;                                               // 0x0AA8   (0x0004)  
	FColor                                             C_VolumeCollision;                                          // 0x0AAC   (0x0004)  
	FColor                                             C_BSPCollision;                                             // 0x0AB0   (0x0004)  
	FColor                                             C_OrthoBackground;                                          // 0x0AB4   (0x0004)  
	FColor                                             C_Volume;                                                   // 0x0AB8   (0x0004)  
	FColor                                             C_BrushShape;                                               // 0x0ABC   (0x0004)  
	float                                              StreamingDistanceFactor;                                    // 0x0AC0   (0x0004)  
	unsigned char                                      UnknownData12_5[0x4];                                       // 0x0AC4   (0x0004)  MISSED
	FDirectoryPath                                     GameScreenshotSaveDirectory;                                // 0x0AC8   (0x0010)  
	bool                                               UseStaticMeshMinLODPerQualityLevels;                        // 0x0AD8   (0x0001)  
	bool                                               UseSkeletalMeshMinLODPerQualityLevels;                      // 0x0AD9   (0x0001)  
	ETransitionType                                    TransitionType;                                             // 0x0ADA   (0x0001)  
	unsigned char                                      UnknownData13_5[0x5];                                       // 0x0ADB   (0x0005)  MISSED
	FString                                            TransitionDescription;                                      // 0x0AE0   (0x0010)  
	FString                                            TransitionGameMode;                                         // 0x0AF0   (0x0010)  
	bool                                               bAllowMatureLanguage : 1;                                   // 0x0B00:0 (0x0001)  
	unsigned char                                      UnknownData14_4[0x3];                                       // 0x0B01   (0x0003)  MISSED
	float                                              CameraRotationThreshold;                                    // 0x0B04   (0x0004)  
	float                                              CameraTranslationThreshold;                                 // 0x0B08   (0x0004)  
	float                                              PrimitiveProbablyVisibleTime;                               // 0x0B0C   (0x0004)  
	float                                              MaxOcclusionPixelsFraction;                                 // 0x0B10   (0x0004)  
	bool                                               bPauseOnLossOfFocus : 1;                                    // 0x0B14:0 (0x0001)  
	unsigned char                                      UnknownData15_4[0x3];                                       // 0x0B15   (0x0003)  MISSED
	int32_t                                            MaxParticleResize;                                          // 0x0B18   (0x0004)  
	int32_t                                            MaxParticleResizeWarn;                                      // 0x0B1C   (0x0004)  
	TArray<FDropNoteInfo>                              PendingDroppedNotes;                                        // 0x0B20   (0x0010)  
	float                                              NetClientTicksPerSecond;                                    // 0x0B30   (0x0004)  
	float                                              DisplayGamma;                                               // 0x0B34   (0x0004)  
	float                                              MinDesiredFrameRate;                                        // 0x0B38   (0x0004)  
	FLinearColor                                       DefaultSelectedMaterialColor;                               // 0x0B3C   (0x0010)  
	FLinearColor                                       SelectedMaterialColor;                                      // 0x0B4C   (0x0010)  
	FLinearColor                                       SelectionOutlineColor;                                      // 0x0B5C   (0x0010)  
	FLinearColor                                       SubduedSelectionOutlineColor;                               // 0x0B6C   (0x0010)  
	FLinearColor                                       SelectedMaterialColorOverride;                              // 0x0B7C   (0x0010)  
	bool                                               bIsOverridingSelectedColor;                                 // 0x0B8C   (0x0001)  
	unsigned char                                      UnknownData16_5[0x3];                                       // 0x0B8D   (0x0003)  MISSED
	bool                                               bEnableOnScreenDebugMessages : 1;                           // 0x0B90:0 (0x0001)  
	bool                                               bEnableOnScreenDebugMessagesDisplay : 1;                    // 0x0B90:1 (0x0001)  
	bool                                               bSuppressMapWarnings : 1;                                   // 0x0B90:2 (0x0001)  
	bool                                               bDisableAILogging : 1;                                      // 0x0B90:3 (0x0001)  
	unsigned char                                      UnknownData17_4[0x3];                                       // 0x0B91   (0x0003)  MISSED
	uint32_t                                           bEnableVisualLogRecordingOnStart;                           // 0x0B94   (0x0004)  
	int32_t                                            ScreenSaverInhibitorSemaphore;                              // 0x0B98   (0x0004)  
	bool                                               bLockReadOnlyLevels : 1;                                    // 0x0B9C:0 (0x0001)  
	unsigned char                                      UnknownData18_4[0x3];                                       // 0x0B9D   (0x0003)  MISSED
	FString                                            ParticleEventManagerClassPath;                              // 0x0BA0   (0x0010)  
	float                                              SelectionHighlightIntensity;                                // 0x0BB0   (0x0004)  
	float                                              BSPSelectionHighlightIntensity;                             // 0x0BB4   (0x0004)  
	float                                              SelectionHighlightIntensityBillboards;                      // 0x0BB8   (0x0004)  
	unsigned char                                      UnknownData19_5[0x294];                                     // 0x0BBC   (0x0294)  MISSED
	uint32_t                                           GlobalNetTravelCount;                                       // 0x0E50   (0x0004)  
	unsigned char                                      UnknownData20_5[0x4];                                       // 0x0E54   (0x0004)  MISSED
	TArray<FNetDriverDefinition>                       NetDriverDefinitions;                                       // 0x0E58   (0x0010)  
	TArray<FIrisNetDriverConfig>                       IrisNetDriverConfigs;                                       // 0x0E68   (0x0010)  
	TArray<FString>                                    ServerActors;                                               // 0x0E78   (0x0010)  
	TArray<FString>                                    RuntimeServerActors;                                        // 0x0E88   (0x0010)  
	float                                              NetErrorLogInterval;                                        // 0x0E98   (0x0004)  
	bool                                               bStartedLoadMapMovie : 1;                                   // 0x0E9C:0 (0x0001)  
	unsigned char                                      UnknownData21_4[0x1B];                                      // 0x0E9D   (0x001B)  MISSED
	int32_t                                            NextWorldContextHandle;                                     // 0x0EB8   (0x0004)  
	unsigned char                                      UnknownData22_6[0x194];                                     // 0x0EBC   (0x0194)  MISSED
};

/// Class /Script/Engine.LocalPlayer
/// Size: 0x0250 (0x000048 - 0x000298)
class ULocalPlayer : public UPlayer
{ 
public:
	unsigned char                                      UnknownData00_2[0x30];                                      // 0x0048   (0x0030)  MISSED
	UGameViewportClient*                               ViewportClient;                                             // 0x0078   (0x0008)  
	unsigned char                                      UnknownData01_5[0x38];                                      // 0x0080   (0x0038)  MISSED
	TEnumAsByte<EAspectRatioAxisConstraint>            AspectRatioAxisConstraint;                                  // 0x00B8   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x00B9   (0x0007)  MISSED
	UClass*                                            PendingLevelPlayerControllerClass;                          // 0x00C0   (0x0008)  
	bool                                               bSentSplitJoin : 1;                                         // 0x00C8:0 (0x0001)  
	unsigned char                                      UnknownData03_4[0x17];                                      // 0x00C9   (0x0017)  MISSED
	int32_t                                            ControllerId;                                               // 0x00E0   (0x0004)  
	unsigned char                                      UnknownData04_6[0x1B4];                                     // 0x00E4   (0x01B4)  MISSED
};

/// Class /Script/Engine.LocalPlayerSubsystem
/// Size: 0x0000 (0x000030 - 0x000030)
class ULocalPlayerSubsystem : public USubsystem
{ 
public:
};

/// Class /Script/Engine.PlayerInput
/// Size: 0x0470 (0x000028 - 0x000498)
class UPlayerInput : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x178];                                     // 0x0028   (0x0178)  MISSED
	TArray<FKeyBind>                                   DebugExecBindings;                                          // 0x01A0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x30];                                      // 0x01B0   (0x0030)  MISSED
	TArray<FName>                                      InvertedAxis;                                               // 0x01E0   (0x0010)  
	unsigned char                                      UnknownData02_6[0x2A8];                                     // 0x01F0   (0x02A8)  MISSED


	/// Functions
	// Function /Script/Engine.PlayerInput.SetMouseSensitivity
	void SetMouseSensitivity(float Sensitivity);                                                                             // [0x5021480] Final|Exec|Native|Public 
	// Function /Script/Engine.PlayerInput.SetBind
	void SetBind(FName BindName, FString Command);                                                                           // [0x50213c0] Final|Exec|Native|Public 
	// Function /Script/Engine.PlayerInput.InvertAxisKey
	void InvertAxisKey(FKey AxisKey);                                                                                        // [0x501e4f0] Final|Exec|Native|Public 
	// Function /Script/Engine.PlayerInput.InvertAxis
	void InvertAxis(FName AxisName);                                                                                         // [0x501e460] Final|Exec|Native|Public 
	// Function /Script/Engine.PlayerInput.GetOuterAPlayerController
	APlayerController* GetOuterAPlayerController();                                                                          // [0x501e3f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerInput.ClearSmoothing
	void ClearSmoothing();                                                                                                   // [0x501dcb0] Final|Exec|Native|Public 
};

/// Class /Script/Engine.PrimaryDataAsset
/// Size: 0x0000 (0x000030 - 0x000030)
class UPrimaryDataAsset : public UDataAsset
{ 
public:
};

/// Class /Script/Engine.ScriptViewportClient
/// Size: 0x0010 (0x000028 - 0x000038)
class UScriptViewportClient : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/Engine.GameViewportClient
/// Size: 0x0368 (0x000038 - 0x0003A0)
class UGameViewportClient : public UScriptViewportClient
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0038   (0x0008)  MISSED
	UConsole*                                          ViewportConsole;                                            // 0x0040   (0x0008)  
	TArray<FDebugDisplayProperty>                      DebugProperties;                                            // 0x0048   (0x0010)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0058   (0x0010)  MISSED
	int32_t                                            MaxSplitscreenPlayers;                                      // 0x0068   (0x0004)  
	unsigned char                                      UnknownData02_5[0xC];                                       // 0x006C   (0x000C)  MISSED
	UWorld*                                            World;                                                      // 0x0078   (0x0008)  
	UGameInstance*                                     GameInstance;                                               // 0x0080   (0x0008)  
	unsigned char                                      UnknownData03_6[0x318];                                     // 0x0088   (0x0318)  MISSED


	/// Functions
	// Function /Script/Engine.GameViewportClient.SSSwapControllers
	void SSSwapControllers();                                                                                                // [0x1343080] Exec|Native|Public   
	// Function /Script/Engine.GameViewportClient.ShowTitleSafeArea
	void ShowTitleSafeArea();                                                                                                // [0x3d49e80] Exec|Native|Public   
	// Function /Script/Engine.GameViewportClient.SetConsoleTarget
	void SetConsoleTarget(int32_t PlayerIndex);                                                                              // [0x4a98e60] Exec|Native|Public   
};

/// Class /Script/Engine.GameInstance
/// Size: 0x0198 (0x000028 - 0x0001C0)
class UGameInstance : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0028   (0x0010)  MISSED
	TArray<ULocalPlayer*>                              LocalPlayers;                                               // 0x0038   (0x0010)  
	UOnlineSession*                                    OnlineSession;                                              // 0x0048   (0x0008)  
	TArray<UObject*>                                   ReferencedObjects;                                          // 0x0050   (0x0010)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x0060   (0x0018)  MISSED
	FMulticastInlineDelegate                           OnPawnControllerChangedDelegates;                           // 0x0078   (0x0010)  
	unsigned char                                      UnknownData02_5[0x18];                                      // 0x0088   (0x0018)  MISSED
	FMulticastInlineDelegate                           OnInputDeviceConnectionChange;                              // 0x00A0   (0x0010)  
	FMulticastInlineDelegate                           OnUserInputDevicePairingChange;                             // 0x00B0   (0x0010)  
	unsigned char                                      UnknownData03_6[0x100];                                     // 0x00C0   (0x0100)  MISSED


	/// Functions
	// Function /Script/Engine.GameInstance.ReceiveShutdown
	void ReceiveShutdown();                                                                                                  // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.GameInstance.ReceiveInit
	void ReceiveInit();                                                                                                      // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.GameInstance.HandleTravelError
	void HandleTravelError(TEnumAsByte<ETravelFailure> FailureType);                                                         // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.GameInstance.HandleNetworkError
	void HandleNetworkError(TEnumAsByte<ENetworkFailure> FailureType, bool bIsServer);                                       // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.GameInstance.DebugRemovePlayer
	void DebugRemovePlayer(int32_t ControllerId);                                                                            // [0x4a55d60] Exec|Native|Public   
	// Function /Script/Engine.GameInstance.DebugCreatePlayer
	void DebugCreatePlayer(int32_t ControllerId);                                                                            // [0x4a55cd0] Exec|Native|Public   
};

/// Class /Script/Engine.GameInstanceSubsystem
/// Size: 0x0000 (0x000030 - 0x000030)
class UGameInstanceSubsystem : public USubsystem
{ 
public:
};

/// Class /Script/Engine.DataTable
/// Size: 0x0088 (0x000028 - 0x0000B0)
class UDataTable : public UObject
{ 
public:
	UScriptStruct*                                     RowStruct;                                                  // 0x0028   (0x0008)  
	unsigned char                                      UnknownData00_5[0x50];                                      // 0x0030   (0x0050)  MISSED
	bool                                               bStripFromClientBuilds : 1;                                 // 0x0080:0 (0x0001)  
	bool                                               bIgnoreExtraFields : 1;                                     // 0x0080:1 (0x0001)  
	bool                                               bIgnoreMissingFields : 1;                                   // 0x0080:2 (0x0001)  
	unsigned char                                      UnknownData01_4[0x7];                                       // 0x0081   (0x0007)  MISSED
	FString                                            ImportKeyField;                                             // 0x0088   (0x0010)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x0098   (0x0018)  MISSED
};

/// Class /Script/Engine.World
/// Size: 0x0870 (0x000028 - 0x000898)
class UWorld : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	ULevel*                                            PersistentLevel;                                            // 0x0030   (0x0008)  
	UNetDriver*                                        NetDriver;                                                  // 0x0038   (0x0008)  
	ULineBatchComponent*                               LineBatcher;                                                // 0x0040   (0x0008)  
	ULineBatchComponent*                               PersistentLineBatcher;                                      // 0x0048   (0x0008)  
	ULineBatchComponent*                               ForegroundLineBatcher;                                      // 0x0050   (0x0008)  
	AGameNetworkManager*                               NetworkManager;                                             // 0x0058   (0x0008)  
	UPhysicsCollisionHandler*                          PhysicsCollisionHandler;                                    // 0x0060   (0x0008)  
	TArray<UObject*>                                   ExtraReferencedObjects;                                     // 0x0068   (0x0010)  
	TArray<UObject*>                                   PerModuleDataObjects;                                       // 0x0078   (0x0010)  
	TArray<ULevelStreaming*>                           StreamingLevels;                                            // 0x0088   (0x0010)  
	FStreamingLevelsToConsider                         StreamingLevelsToConsider;                                  // 0x0098   (0x0028)  
	AServerStreamingLevelsVisibility*                  ServerStreamingLevelsVisibility;                            // 0x00C0   (0x0008)  
	FString                                            StreamingLevelsPrefix;                                      // 0x00C8   (0x0010)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x00D8   (0x0008)  MISSED
	ULevel*                                            CurrentLevelPendingVisibility;                              // 0x00E0   (0x0008)  
	ULevel*                                            CurrentLevelPendingInvisibility;                            // 0x00E8   (0x0008)  
	UDemoNetDriver*                                    DemoNetDriver;                                              // 0x00F0   (0x0008)  
	AParticleEventManager*                             MyParticleEventManager;                                     // 0x00F8   (0x0008)  
	APhysicsVolume*                                    DefaultPhysicsVolume;                                       // 0x0100   (0x0008)  
	unsigned char                                      UnknownData02_5[0x36];                                      // 0x0108   (0x0036)  MISSED
	unsigned char                                      UnknownBit03 : 1;                                           // 0x013E:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit04 : 1;                                           // 0x013E:1 (0x0001)  MISSED
	bool                                               bAreConstraintsDirty : 1;                                   // 0x013E:2 (0x0001)  
	unsigned char                                      UnknownData05_4[0x9];                                       // 0x013F   (0x0009)  MISSED
	UNavigationSystemBase*                             NavigationSystem;                                           // 0x0148   (0x0008)  
	AGameModeBase*                                     AuthorityGameMode;                                          // 0x0150   (0x0008)  
	AGameStateBase*                                    GameState;                                                  // 0x0158   (0x0008)  
	UAISystemBase*                                     AISystem;                                                   // 0x0160   (0x0008)  
	UAvoidanceManager*                                 AvoidanceManager;                                           // 0x0168   (0x0008)  
	TArray<ULevel*>                                    Levels;                                                     // 0x0170   (0x0010)  
	TArray<FLevelCollection>                           LevelCollections;                                           // 0x0180   (0x0010)  
	unsigned char                                      UnknownData06_5[0x28];                                      // 0x0190   (0x0028)  MISSED
	UGameInstance*                                     OwningGameInstance;                                         // 0x01B8   (0x0008)  
	TArray<UMaterialParameterCollectionInstance*>      ParameterCollectionInstances;                               // 0x01C0   (0x0010)  
	UCanvas*                                           CanvasForRenderingToTarget;                                 // 0x01D0   (0x0008)  
	UCanvas*                                           CanvasForDrawMaterialToRenderTarget;                        // 0x01D8   (0x0008)  
	unsigned char                                      UnknownData07_5[0x70];                                      // 0x01E0   (0x0070)  MISSED
	UPhysicsFieldComponent*                            PhysicsField;                                               // 0x0250   (0x0008)  
	uint32_t                                           LWILastAssignedUID;                                         // 0x0258   (0x0004)  
	unsigned char                                      UnknownData08_5[0x4];                                       // 0x025C   (0x0004)  MISSED
	TSet<UActorComponent*>                             ComponentsThatNeedPreEndOfFrameSync;                        // 0x0260   (0x0050)  
	TArray<UActorComponent*>                           ComponentsThatNeedEndOfFrameUpdate;                         // 0x02B0   (0x0010)  
	TArray<UActorComponent*>                           ComponentsThatNeedEndOfFrameUpdate_OnGameThread;            // 0x02C0   (0x0010)  
	unsigned char                                      UnknownData09_5[0x3F8];                                     // 0x02D0   (0x03F8)  MISSED
	UWorldComposition*                                 WorldComposition;                                           // 0x06C8   (0x0008)  
	UContentBundleManager*                             ContentBundleManager;                                       // 0x06D0   (0x0008)  
	unsigned char                                      UnknownData10_5[0xA8];                                      // 0x06D8   (0x00A8)  MISSED
	FWorldPSCPool                                      PSCPool;                                                    // 0x0780   (0x0058)  
	unsigned char                                      UnknownData11_6[0xC0];                                      // 0x07D8   (0x00C0)  MISSED


	/// Functions
	// Function /Script/Engine.World.K2_GetWorldSettings
	AWorldSettings* K2_GetWorldSettings();                                                                                   // [0x5053ee0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.World.HandleTimelineScrubbed
	void HandleTimelineScrubbed();                                                                                           // [0x5053de0] Final|Native|Public  
};

/// Class /Script/Engine.RuntimeOptionsBase
/// Size: 0x0010 (0x000028 - 0x000038)
class URuntimeOptionsBase : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/Engine.Character
/// Size: 0x0308 (0x000318 - 0x000620)
class ACharacter : public APawn
{ 
public:
	USkeletalMeshComponent*                            Mesh;                                                       // 0x0318   (0x0008)  
	UCharacterMovementComponent*                       CharacterMovement;                                          // 0x0320   (0x0008)  
	UCapsuleComponent*                                 CapsuleComponent;                                           // 0x0328   (0x0008)  
	FBasedMovementInfo                                 BasedMovement;                                              // 0x0330   (0x0048)  
	FBasedMovementInfo                                 ReplicatedBasedMovement;                                    // 0x0378   (0x0048)  
	float                                              AnimRootMotionTranslationScale;                             // 0x03C0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x03C4   (0x0004)  MISSED
	FVector                                            BaseTranslationOffset;                                      // 0x03C8   (0x0018)  
	FQuat                                              BaseRotationOffset;                                         // 0x03E0   (0x0020)  
	float                                              ReplicatedServerLastTransformUpdateTimeStamp;               // 0x0400   (0x0004)  
	float                                              ReplayLastTransformUpdateTimeStamp;                         // 0x0404   (0x0004)  
	char                                               ReplicatedMovementMode;                                     // 0x0408   (0x0001)  
	bool                                               bInBaseReplication;                                         // 0x0409   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x040A   (0x0002)  MISSED
	float                                              CrouchedEyeHeight;                                          // 0x040C   (0x0004)  
	bool                                               bIsCrouched : 1;                                            // 0x0410:0 (0x0001)  
	bool                                               bProxyIsJumpForceApplied : 1;                               // 0x0410:1 (0x0001)  
	bool                                               bPressedJump : 1;                                           // 0x0410:2 (0x0001)  
	bool                                               bClientUpdating : 1;                                        // 0x0410:3 (0x0001)  
	bool                                               bClientWasFalling : 1;                                      // 0x0410:4 (0x0001)  
	bool                                               bClientResimulateRootMotion : 1;                            // 0x0410:5 (0x0001)  
	bool                                               bClientResimulateRootMotionSources : 1;                     // 0x0410:6 (0x0001)  
	bool                                               bSimGravityDisabled : 1;                                    // 0x0410:7 (0x0001)  
	bool                                               bClientCheckEncroachmentOnNetUpdate : 1;                    // 0x0411:0 (0x0001)  
	bool                                               bServerMoveIgnoreRootMotion : 1;                            // 0x0411:1 (0x0001)  
	bool                                               bWasJumping : 1;                                            // 0x0411:2 (0x0001)  
	unsigned char                                      UnknownData02_4[0x2];                                       // 0x0412   (0x0002)  MISSED
	float                                              JumpKeyHoldTime;                                            // 0x0414   (0x0004)  
	float                                              JumpForceTimeRemaining;                                     // 0x0418   (0x0004)  
	float                                              ProxyJumpForceStartedTime;                                  // 0x041C   (0x0004)  
	float                                              JumpMaxHoldTime;                                            // 0x0420   (0x0004)  
	int32_t                                            JumpMaxCount;                                               // 0x0424   (0x0004)  
	int32_t                                            JumpCurrentCount;                                           // 0x0428   (0x0004)  
	int32_t                                            JumpCurrentCountPreJump;                                    // 0x042C   (0x0004)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0430   (0x0008)  MISSED
	FMulticastInlineDelegate                           OnReachedJumpApex;                                          // 0x0438   (0x0010)  
	FMulticastInlineDelegate                           LandedDelegate;                                             // 0x0448   (0x0010)  
	FMulticastInlineDelegate                           MovementModeChangedDelegate;                                // 0x0458   (0x0010)  
	FMulticastInlineDelegate                           OnCharacterMovementUpdated;                                 // 0x0468   (0x0010)  
	FRootMotionSourceGroup                             SavedRootMotion;                                            // 0x0478   (0x0048)  
	FRootMotionMovementParams                          ClientRootMotionParams;                                     // 0x04C0   (0x0070)  
	TArray<FSimulatedRootMotionReplicatedMove>         RootMotionRepMoves;                                         // 0x0530   (0x0010)  
	FRepRootMotionMontage                              RepRootMotion;                                              // 0x0540   (0x00D8)  
	unsigned char                                      UnknownData04_6[0x8];                                       // 0x0618   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.Character.UnCrouch
	void UnCrouch(bool bClientSimulation);                                                                                   // [0x4855c20] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Character.StopJumping
	void StopJumping();                                                                                                      // [0x4855c00] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Character.StopAnimMontage
	void StopAnimMontage(UAnimMontage* AnimMontage);                                                                         // [0x4855b70] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Character.ServerMovePacked
	void ServerMovePacked(FCharacterServerMovePackedBits PackedBits);                                                        // [0x48535a0] Net|Native|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.Character.ServerMoveOld
	void ServerMoveOld(float OldTimeStamp, FVector_NetQuantize10 OldAccel, char OldMoveFlags);                               // [0x4853420] Net|Native|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.Character.ServerMoveNoBase
	void ServerMoveNoBase(float Timestamp, FVector_NetQuantize10 InAccel, FVector_NetQuantize100 ClientLoc, char CompressedMoveFlags, char ClientRoll, uint32_t View, char ClientMovementMode); // [0x4853140] Net|Native|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.Character.ServerMoveDualNoBase
	void ServerMoveDualNoBase(float TimeStamp0, FVector_NetQuantize10 InAccel0, char PendingFlags, uint32_t View0, float Timestamp, FVector_NetQuantize10 InAccel, FVector_NetQuantize100 ClientLoc, char NewFlags, char ClientRoll, uint32_t View, char ClientMovementMode); // [0x4852cf0] Net|Native|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.Character.ServerMoveDualHybridRootMotion
	void ServerMoveDualHybridRootMotion(float TimeStamp0, FVector_NetQuantize10 InAccel0, char PendingFlags, uint32_t View0, float Timestamp, FVector_NetQuantize10 InAccel, FVector_NetQuantize100 ClientLoc, char NewFlags, char ClientRoll, uint32_t View, UPrimitiveComponent* ClientMovementBase, FName ClientBaseBoneName, char ClientMovementMode); // [0x4852820] Net|Native|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.Character.ServerMoveDual
	void ServerMoveDual(float TimeStamp0, FVector_NetQuantize10 InAccel0, char PendingFlags, uint32_t View0, float Timestamp, FVector_NetQuantize10 InAccel, FVector_NetQuantize100 ClientLoc, char NewFlags, char ClientRoll, uint32_t View, UPrimitiveComponent* ClientMovementBase, FName ClientBaseBoneName, char ClientMovementMode); // [0x4852350] Net|Native|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.Character.ServerMove
	void ServerMove(float Timestamp, FVector_NetQuantize10 InAccel, FVector_NetQuantize100 ClientLoc, char CompressedMoveFlags, char ClientRoll, uint32_t View, UPrimitiveComponent* ClientMovementBase, FName ClientBaseBoneName, char ClientMovementMode); // [0x4851ff0] Net|Native|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.Character.RootMotionDebugClientPrintOnScreen
	void RootMotionDebugClientPrintOnScreen(FString InString);                                                               // [0x4851f50] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.Character.PlayAnimMontage
	float PlayAnimMontage(UAnimMontage* AnimMontage, float InPlayRate, FName StartSectionName);                              // [0x4851d00] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Character.OnWalkingOffLedge
	void OnWalkingOffLedge(FVector& PreviousFloorImpactNormal, FVector& PreviousFloorContactNormal, FVector& PreviousLocation, float TimeDelta); // [0x4851b50] Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/Engine.Character.OnRep_RootMotion
	void OnRep_RootMotion();                                                                                                 // [0x4851a00] Final|Native|Public  
	// Function /Script/Engine.Character.OnRep_ReplicatedBasedMovement
	void OnRep_ReplicatedBasedMovement();                                                                                    // [0x48519e0] Native|Public        
	// Function /Script/Engine.Character.OnRep_ReplayLastTransformUpdateTimeStamp
	void OnRep_ReplayLastTransformUpdateTimeStamp();                                                                         // [0x48519b0] Final|Native|Public  
	// Function /Script/Engine.Character.OnRep_IsCrouched
	void OnRep_IsCrouched();                                                                                                 // [0x467b4c0] Native|Public        
	// Function /Script/Engine.Character.OnLaunched
	void OnLaunched(FVector LaunchVelocity, bool bXYOverride, bool bZOverride);                                              // [0x2e6eb70] Event|Public|HasDefaults|BlueprintEvent 
	// Function /Script/Engine.Character.OnLanded
	void OnLanded(FHitResult& Hit);                                                                                          // [0x2e6eb70] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/Engine.Character.OnJumped
	void OnJumped();                                                                                                         // [0xc4b180] Native|Event|Public|BlueprintEvent 
	// Function /Script/Engine.Character.LaunchCharacter
	void LaunchCharacter(FVector LaunchVelocity, bool bXYOverride, bool bZOverride);                                         // [0x4850470] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Character.K2_UpdateCustomMovement
	void K2_UpdateCustomMovement(float DeltaTime);                                                                           // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Character.K2_OnStartCrouch
	void K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);                                             // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Character.K2_OnMovementModeChanged
	void K2_OnMovementModeChanged(TEnumAsByte<EMovementMode> PrevMovementMode, TEnumAsByte<EMovementMode> NewMovementMode, char PrevCustomMode, char NewCustomMode); // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Character.K2_OnEndCrouch
	void K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);                                               // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Character.Jump
	void Jump();                                                                                                             // [0x4850450] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Character.IsPlayingRootMotion
	bool IsPlayingRootMotion();                                                                                              // [0x4850400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Character.IsPlayingNetworkedRootMotionMontage
	bool IsPlayingNetworkedRootMotionMontage();                                                                              // [0x48503b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Character.IsJumpProvidingForce
	bool IsJumpProvidingForce();                                                                                             // [0x4850380] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Character.HasAnyRootMotion
	bool HasAnyRootMotion();                                                                                                 // [0x4850160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Character.GetCurrentMontage
	UAnimMontage* GetCurrentMontage();                                                                                       // [0x484feb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Character.GetBaseTranslationOffset
	FVector GetBaseTranslationOffset();                                                                                      // [0x484fcd0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Character.GetBaseRotationOffsetRotator
	FRotator GetBaseRotationOffsetRotator();                                                                                 // [0x484fc70] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Character.GetAnimRootMotionTranslationScale
	float GetAnimRootMotionTranslationScale();                                                                               // [0x484fb80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Character.Crouch
	void Crouch(bool bClientSimulation);                                                                                     // [0x484fa60] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Character.ClientVeryShortAdjustPosition
	void ClientVeryShortAdjustPosition(float Timestamp, FVector NewLoc, UPrimitiveComponent* NewBase, FName NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, char ServerMovementMode); // [0x484f560] Net|Native|Event|Public|HasDefaults|NetClient 
	// Function /Script/Engine.Character.ClientMoveResponsePacked
	void ClientMoveResponsePacked(FCharacterMoveResponsePackedBits PackedBits);                                              // [0x484f480] Net|Native|Event|Public|NetClient|NetValidate 
	// Function /Script/Engine.Character.ClientCheatWalk
	void ClientCheatWalk();                                                                                                  // [0x484f460] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.Character.ClientCheatGhost
	void ClientCheatGhost();                                                                                                 // [0x484f440] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.Character.ClientCheatFly
	void ClientCheatFly();                                                                                                   // [0x484f420] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.Character.ClientAdjustRootMotionSourcePosition
	void ClientAdjustRootMotionSourcePosition(float Timestamp, FRootMotionSourceGroup ServerRootMotion, bool bHasAnimRootMotion, float ServerMontageTrackPosition, FVector ServerLoc, FVector_NetQuantizeNormal ServerRotation, float ServerVelZ, UPrimitiveComponent* ServerBase, FName ServerBoneName, bool bHasBase, bool bBaseRelativePosition, char ServerMovementMode); // [0x484ef70] Net|Native|Event|Public|HasDefaults|NetClient 
	// Function /Script/Engine.Character.ClientAdjustRootMotionPosition
	void ClientAdjustRootMotionPosition(float Timestamp, float ServerMontageTrackPosition, FVector ServerLoc, FVector_NetQuantizeNormal ServerRotation, float ServerVelZ, UPrimitiveComponent* ServerBase, FName ServerBoneName, bool bHasBase, bool bBaseRelativePosition, char ServerMovementMode); // [0x484ec40] Net|Native|Event|Public|HasDefaults|NetClient 
	// Function /Script/Engine.Character.ClientAdjustPosition
	void ClientAdjustPosition(float Timestamp, FVector NewLoc, FVector NewVel, UPrimitiveComponent* NewBase, FName NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, char ServerMovementMode); // [0x484e990] Net|Native|Event|Public|HasDefaults|NetClient 
	// Function /Script/Engine.Character.ClientAckGoodMove
	void ClientAckGoodMove(float Timestamp);                                                                                 // [0x484e900] Net|Native|Event|Public|NetClient 
	// Function /Script/Engine.Character.CanJumpInternal
	bool CanJumpInternal();                                                                                                  // [0x484e8d0] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/Engine.Character.CanJump
	bool CanJump();                                                                                                          // [0x484e860] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Character.CanCrouch
	bool CanCrouch();                                                                                                        // [0x484e830] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Character.CacheInitialMeshOffset
	void CacheInitialMeshOffset(FVector MeshRelativeLocation, FRotator MeshRelativeRotation);                                // [0x484e730] Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.MaterialExpression
/// Size: 0x0088 (0x000028 - 0x0000B0)
class UMaterialExpression : public UObject
{ 
public:
	int32_t                                            MaterialExpressionEditorX;                                  // 0x0028   (0x0004)  
	int32_t                                            MaterialExpressionEditorY;                                  // 0x002C   (0x0004)  
	UEdGraphNode*                                      GraphNode;                                                  // 0x0030   (0x0008)  
	UMaterialExpression*                               SubgraphExpression;                                         // 0x0038   (0x0008)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x0040   (0x0010)  MISSED
	FGuid                                              MaterialExpressionGuid;                                     // 0x0050   (0x0010)  
	UMaterial*                                         Material;                                                   // 0x0060   (0x0008)  
	UMaterialFunction*                                 Function;                                                   // 0x0068   (0x0008)  
	FString                                            Desc;                                                       // 0x0070   (0x0010)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0080   (0x0004)  MISSED
	bool                                               bRealtimePreview : 1;                                       // 0x0084:0 (0x0001)  
	bool                                               bNeedToUpdatePreview : 1;                                   // 0x0084:1 (0x0001)  
	unsigned char                                      UnknownData02_3[0x3];                                       // 0x0085   (0x0003)  MISSED
	bool                                               bIsParameterExpression : 1;                                 // 0x0088:0 (0x0001)  
	unsigned char                                      UnknownData03_3[0x3];                                       // 0x0089   (0x0003)  MISSED
	bool                                               bCommentBubbleVisible : 1;                                  // 0x008C:0 (0x0001)  
	bool                                               bShowOutputNameOnPin : 1;                                   // 0x008C:1 (0x0001)  
	bool                                               bShowMaskColorsOnPin : 1;                                   // 0x008C:2 (0x0001)  
	bool                                               bHidePreviewWindow : 1;                                     // 0x008C:3 (0x0001)  
	bool                                               bCollapsed : 1;                                             // 0x008C:4 (0x0001)  
	bool                                               bShaderInputData : 1;                                       // 0x008C:5 (0x0001)  
	bool                                               bShowInputs : 1;                                            // 0x008C:6 (0x0001)  
	bool                                               bShowOutputs : 1;                                           // 0x008C:7 (0x0001)  
	unsigned char                                      UnknownData04_4[0x3];                                       // 0x008D   (0x0003)  MISSED
	TArray<FText>                                      MenuCategories;                                             // 0x0090   (0x0010)  
	TArray<FExpressionOutput>                          Outputs;                                                    // 0x00A0   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionTextureBase
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UMaterialExpressionTextureBase : public UMaterialExpression
{ 
public:
	UTexture*                                          Texture;                                                    // 0x00B0   (0x0008)  
	TEnumAsByte<EMaterialSamplerType>                  SamplerType;                                                // 0x00B8   (0x0001)  
	bool                                               IsDefaultMeshpaintTexture : 1;                              // 0x00B9:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x00BA   (0x0006)  MISSED
};

/// Class /Script/Engine.MaterialExpressionTextureSample
/// Size: 0x00F8 (0x0000C0 - 0x0001B8)
class UMaterialExpressionTextureSample : public UMaterialExpressionTextureBase
{ 
public:
	FExpressionInput                                   Coordinates;                                                // 0x00C0   (0x0028)  
	FExpressionInput                                   TextureObject;                                              // 0x00E8   (0x0028)  
	FExpressionInput                                   MipValue;                                                   // 0x0110   (0x0028)  
	FExpressionInput                                   CoordinatesDX;                                              // 0x0138   (0x0028)  
	FExpressionInput                                   CoordinatesDY;                                              // 0x0160   (0x0028)  
	FExpressionInput                                   AutomaticViewMipBiasValue;                                  // 0x0188   (0x0028)  
	TEnumAsByte<ETextureMipValueMode>                  MipValueMode;                                               // 0x01B0   (0x0001)  
	TEnumAsByte<ESamplerSourceMode>                    SamplerSource;                                              // 0x01B1   (0x0001)  
	bool                                               AutomaticViewMipBias : 1;                                   // 0x01B2:0 (0x0001)  
	char                                               ConstCoordinate;                                            // 0x01B3   (0x0001)  
	int32_t                                            ConstMipValue;                                              // 0x01B4   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionTextureSampleParameter
/// Size: 0x0088 (0x0001B8 - 0x000240)
class UMaterialExpressionTextureSampleParameter : public UMaterialExpressionTextureSample
{ 
public:
	FName                                              ParameterName;                                              // 0x01B8   (0x0008)  
	FGuid                                              ExpressionGUID;                                             // 0x01C0   (0x0010)  
	FName                                              Group;                                                      // 0x01D0   (0x0008)  
	int32_t                                            SortPriority;                                               // 0x01D8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x01DC   (0x0004)  MISSED
	FParameterChannelNames                             ChannelNames;                                               // 0x01E0   (0x0060)  
};

/// Class /Script/Engine.MaterialExpressionTextureSampleParameter2D
/// Size: 0x0000 (0x000240 - 0x000240)
class UMaterialExpressionTextureSampleParameter2D : public UMaterialExpressionTextureSampleParameter
{ 
public:
};

/// Class /Script/Engine.SkinnedMeshComponent
/// Size: 0x0330 (0x000570 - 0x0008A0)
class USkinnedMeshComponent : public UMeshComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0570   (0x0008)  MISSED
	USkeletalMesh*                                     SkeletalMesh;                                               // 0x0578   (0x0008)  
	USkinnedAsset*                                     SkinnedAsset;                                               // 0x0580   (0x0008)  
	TWeakObjectPtr<USkinnedMeshComponent*>             LeaderPoseComponent;                                        // 0x0588   (0x0008)  
	TArray<ESkinCacheUsage>                            SkinCacheUsage;                                             // 0x0590   (0x0010)  
	bool                                               bSetMeshDeformer;                                           // 0x05A0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x05A1   (0x0007)  MISSED
	UMeshDeformer*                                     MeshDeformer;                                               // 0x05A8   (0x0008)  
	UMeshDeformerInstanceSettings*                     MeshDeformerInstanceSettings;                               // 0x05B0   (0x0008)  
	UMeshDeformerInstance*                             MeshDeformerInstance;                                       // 0x05B8   (0x0008)  
	unsigned char                                      UnknownData02_5[0x168];                                     // 0x05C0   (0x0168)  MISSED
	UPhysicsAsset*                                     PhysicsAssetOverride;                                       // 0x0728   (0x0008)  
	int32_t                                            ForcedLodModel;                                             // 0x0730   (0x0004)  
	int32_t                                            MinLodModel;                                                // 0x0734   (0x0004)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x0738   (0x0008)  MISSED
	float                                              StreamingDistanceMultiplier;                                // 0x0740   (0x0004)  
	unsigned char                                      UnknownData04_5[0xC];                                       // 0x0744   (0x000C)  MISSED
	TArray<FSkelMeshComponentLODInfo>                  LODInfo;                                                    // 0x0750   (0x0010)  
	unsigned char                                      UnknownData05_5[0x24];                                      // 0x0760   (0x0024)  MISSED
	EVisibilityBasedAnimTickOption                     VisibilityBasedAnimTickOption;                              // 0x0784   (0x0001)  
	unsigned char                                      UnknownData06_5[0x1];                                       // 0x0785   (0x0001)  MISSED
	unsigned char                                      UnknownBit07 : 1;                                           // 0x0786:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit08 : 1;                                           // 0x0786:1 (0x0001)  MISSED
	unsigned char                                      UnknownBit09 : 1;                                           // 0x0786:2 (0x0001)  MISSED
	bool                                               bOverrideMinLod : 1;                                        // 0x0786:3 (0x0001)  
	bool                                               bUseBoundsFromLeaderPoseComponent : 1;                      // 0x0786:4 (0x0001)  
	bool                                               bForceWireframe : 1;                                        // 0x0786:5 (0x0001)  
	bool                                               bDisplayBones : 1;                                          // 0x0786:6 (0x0001)  
	bool                                               bDisableMorphTarget : 1;                                    // 0x0786:7 (0x0001)  
	bool                                               bHideSkin : 1;                                              // 0x0787:0 (0x0001)  
	bool                                               bPerBoneMotionBlur : 1;                                     // 0x0787:1 (0x0001)  
	bool                                               bComponentUseFixedSkelBounds : 1;                           // 0x0787:2 (0x0001)  
	bool                                               bConsiderAllBodiesForBounds : 1;                            // 0x0787:3 (0x0001)  
	bool                                               bSyncAttachParentLOD : 1;                                   // 0x0787:4 (0x0001)  
	bool                                               bCanHighlightSelectedSections : 1;                          // 0x0787:5 (0x0001)  
	bool                                               bRecentlyRendered : 1;                                      // 0x0787:6 (0x0001)  
	bool                                               bCastCapsuleDirectShadow : 1;                               // 0x0787:7 (0x0001)  
	bool                                               bCastCapsuleIndirectShadow : 1;                             // 0x0788:0 (0x0001)  
	bool                                               bCPUSkinning : 1;                                           // 0x0788:1 (0x0001)  
	bool                                               bEnableUpdateRateOptimizations : 1;                         // 0x0788:2 (0x0001)  
	bool                                               bDisplayDebugUpdateRateOptimizations : 1;                   // 0x0788:3 (0x0001)  
	bool                                               bRenderStatic : 1;                                          // 0x0788:4 (0x0001)  
	bool                                               bIgnoreLeaderPoseComponentLOD : 1;                          // 0x0788:5 (0x0001)  
	unsigned char                                      UnknownBit10 : 1;                                           // 0x0788:6 (0x0001)  MISSED
	unsigned char                                      UnknownBit11 : 1;                                           // 0x0788:7 (0x0001)  MISSED
	bool                                               bCachedLocalBoundsUpToDate : 1;                             // 0x0789:0 (0x0001)  
	bool                                               bCachedWorldSpaceBoundsUpToDate : 1;                        // 0x0789:1 (0x0001)  
	unsigned char                                      UnknownBit12 : 1;                                           // 0x0789:2 (0x0001)  MISSED
	unsigned char                                      UnknownBit13 : 1;                                           // 0x0789:3 (0x0001)  MISSED
	bool                                               bForceMeshObjectUpdate : 1;                                 // 0x0789:4 (0x0001)  
	unsigned char                                      UnknownBit14 : 1;                                           // 0x0789:5 (0x0001)  MISSED
	unsigned char                                      UnknownBit15 : 1;                                           // 0x0789:6 (0x0001)  MISSED
	unsigned char                                      UnknownBit16 : 1;                                           // 0x0789:7 (0x0001)  MISSED
	unsigned char                                      UnknownBit17 : 1;                                           // 0x078A:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit18 : 1;                                           // 0x078A:1 (0x0001)  MISSED
	bool                                               bFollowerShouldTickPose : 1;                                // 0x078A:2 (0x0001)  
	unsigned char                                      UnknownData19_4[0x1];                                       // 0x078B   (0x0001)  MISSED
	float                                              CapsuleIndirectShadowMinVisibility;                         // 0x078C   (0x0004)  
	unsigned char                                      UnknownData20_5[0x38];                                      // 0x0790   (0x0038)  MISSED
	FBoxSphereBounds                                   CachedWorldOrLocalSpaceBounds;                              // 0x07C8   (0x0038)  
	FMatrix                                            CachedWorldToLocalTransform;                                // 0x0800   (0x0080)  
	unsigned char                                      UnknownData21_6[0x20];                                      // 0x0880   (0x0020)  MISSED


	/// Functions
	// Function /Script/Engine.SkinnedMeshComponent.UnloadSkinWeightProfile
	void UnloadSkinWeightProfile(FName InProfileName);                                                                       // [0x4696530] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.UnHideBoneByName
	void UnHideBoneByName(FName BoneName);                                                                                   // [0x46964a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.TransformToBoneSpace
	void TransformToBoneSpace(FName BoneName, FVector InPosition, FRotator InRotation, FVector& OutPosition, FRotator& OutRotation); // [0x46962d0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.TransformFromBoneSpace
	void TransformFromBoneSpace(FName BoneName, FVector InPosition, FRotator InRotation, FVector& OutPosition, FRotator& OutRotation); // [0x4696100] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.ShowMaterialSection
	void ShowMaterialSection(int32_t MaterialID, int32_t SectionIndex, bool bShow, int32_t LODIndex);                        // [0x4695fb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.ShowAllMaterialSections
	void ShowAllMaterialSections(int32_t LODIndex);                                                                          // [0x4695f20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetVertexOffsetUsage
	void SetVertexOffsetUsage(int32_t LODIndex, int32_t Usage);                                                              // [0x4695e70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetVertexColorOverride_LinearColor
	void SetVertexColorOverride_LinearColor(int32_t LODIndex, TArray<FLinearColor>& VertexColors);                           // [0x4695d80] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetSkinWeightProfile
	bool SetSkinWeightProfile(FName InProfileName);                                                                          // [0x4695c10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetSkinWeightOverride
	void SetSkinWeightOverride(int32_t LODIndex, TArray<FSkelMeshSkinWeightInfo>& SkinWeights);                              // [0x4695b20] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetSkinnedAssetAndUpdate
	void SetSkinnedAssetAndUpdate(USkinnedAsset* NewMesh, bool bReinitPose);                                                 // [0x4695cb0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetRenderStatic
	void SetRenderStatic(bool bNewValue);                                                                                    // [0x4695a90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetPreSkinningOffsets
	void SetPreSkinningOffsets(int32_t LODIndex, TArray<FVector> Offsets);                                                   // [0x4695980] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetPostSkinningOffsets
	void SetPostSkinningOffsets(int32_t LODIndex, TArray<FVector> Offsets);                                                  // [0x4695980] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetPhysicsAsset
	void SetPhysicsAsset(UPhysicsAsset* NewPhysicsAsset, bool bForceReInit);                                                 // [0x46958b0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetMinLOD
	void SetMinLOD(int32_t InNewMinLOD);                                                                                     // [0x4695820] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetMeshDeformer
	void SetMeshDeformer(UMeshDeformer* InMeshDeformer);                                                                     // [0x4695790] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetLeaderPoseComponent
	void SetLeaderPoseComponent(USkinnedMeshComponent* NewLeaderBoneComponent, bool bForceUpdate, bool bInFollowerShouldTickPose); // [0x4695680] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetForcedLOD
	void SetForcedLOD(int32_t InNewForcedLOD);                                                                               // [0x46955f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetCastCapsuleIndirectShadow
	void SetCastCapsuleIndirectShadow(bool bNewValue);                                                                       // [0x4695560] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetCastCapsuleDirectShadow
	void SetCastCapsuleDirectShadow(bool bNewValue);                                                                         // [0x46954d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.SetCapsuleIndirectShadowMinVisibility
	void SetCapsuleIndirectShadowMinVisibility(float NewValue);                                                              // [0x4695450] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.IsUsingSkinWeightProfile
	bool IsUsingSkinWeightProfile();                                                                                         // [0x4695420] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.IsMaterialSectionShown
	bool IsMaterialSectionShown(int32_t MaterialID, int32_t LODIndex);                                                       // [0x4695350] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.IsBoneHiddenByName
	bool IsBoneHiddenByName(FName BoneName);                                                                                 // [0x46952b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.HideBoneByName
	void HideBoneByName(FName BoneName, TEnumAsByte<EPhysBodyOp> PhysBodyOption);                                            // [0x4695090] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.GetVertexOffsetUsage
	int32_t GetVertexOffsetUsage(int32_t LODIndex);                                                                          // [0x1acb500] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetTwistAndSwingAngleOfDeltaRotationFromRefPose
	bool GetTwistAndSwingAngleOfDeltaRotationFromRefPose(FName BoneName, float& OutTwistAngle, float& OutSwingAngle);        // [0x4694f60] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetSocketBoneName
	FName GetSocketBoneName(FName InSocketName);                                                                             // [0x4694e20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetSkinnedAsset
	USkinnedAsset* GetSkinnedAsset();                                                                                        // [0x4694df0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetSkeletalMesh_DEPRECATED
	USkeletalMesh* GetSkeletalMesh_DEPRECATED();                                                                             // [0x4694dc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetRefPoseTransform
	FTransform GetRefPoseTransform(int32_t BoneIndex);                                                                       // [0x4694ce0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetRefPosePosition
	FVector GetRefPosePosition(int32_t BoneIndex);                                                                           // [0x4694c30] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetPredictedLODLevel
	int32_t GetPredictedLODLevel();                                                                                          // [0x4694c10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetParentBone
	FName GetParentBone(FName BoneName);                                                                                     // [0x4694b80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetNumLODs
	int32_t GetNumLODs();                                                                                                    // [0x4694b50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetNumBones
	int32_t GetNumBones();                                                                                                   // [0x4694b20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetForcedLOD
	int32_t GetForcedLOD();                                                                                                  // [0x4694af0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetDeltaTransformFromRefPose
	FTransform GetDeltaTransformFromRefPose(FName BoneName, FName BaseName);                                                 // [0x46949c0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetCurrentSkinWeightProfileName
	FName GetCurrentSkinWeightProfileName();                                                                                 // [0x46949a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetBoneName
	FName GetBoneName(int32_t BoneIndex);                                                                                    // [0x4694910] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.GetBoneIndex
	int32_t GetBoneIndex(FName BoneName);                                                                                    // [0x4694870] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.FindClosestBone_K2
	FName FindClosestBone_K2(FVector TestLocation, FVector& BoneLocation, float IgnoreScale, bool bRequirePhysicsAsset);     // [0x4694410] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkinnedMeshComponent.ClearVertexColorOverride
	void ClearVertexColorOverride(int32_t LODIndex);                                                                         // [0x4694380] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.ClearSkinWeightProfile
	void ClearSkinWeightProfile();                                                                                           // [0x4694360] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.ClearSkinWeightOverride
	void ClearSkinWeightOverride(int32_t LODIndex);                                                                          // [0x46942d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkinnedMeshComponent.BoneIsChildOf
	bool BoneIsChildOf(FName BoneName, FName ParentBoneName);                                                                // [0x4694200] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.SkeletalMeshComponent
/// Size: 0x06E0 (0x0008A0 - 0x000F80)
class USkeletalMeshComponent : public USkinnedMeshComponent
{ 
public:
	UAnimBlueprintGeneratedClass*                      AnimBlueprintGeneratedClass;                                // 0x08A0   (0x0008)  
	UClass*                                            AnimClass;                                                  // 0x08A8   (0x0008)  
	UAnimInstance*                                     AnimScriptInstance;                                         // 0x08B0   (0x0008)  
	UAnimInstance*                                     PostProcessAnimInstance;                                    // 0x08B8   (0x0008)  
	FSingleAnimationPlayData                           AnimationData;                                              // 0x08C0   (0x0018)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x08D8   (0x0010)  MISSED
	FVector                                            RootBoneTranslation;                                        // 0x08E8   (0x0018)  
	FVector                                            LineCheckBoundsScale;                                       // 0x0900   (0x0018)  
	unsigned char                                      UnknownData01_5[0x30];                                      // 0x0918   (0x0030)  MISSED
	TArray<UAnimInstance*>                             LinkedInstances;                                            // 0x0948   (0x0010)  
	TArray<FTransform>                                 CachedBoneSpaceTransforms;                                  // 0x0958   (0x0010)  
	TArray<FTransform>                                 CachedComponentSpaceTransforms;                             // 0x0968   (0x0010)  
	unsigned char                                      UnknownData02_5[0xB0];                                      // 0x0978   (0x00B0)  MISSED
	float                                              GlobalAnimRateScale;                                        // 0x0A28   (0x0004)  
	TEnumAsByte<EKinematicBonesUpdateToPhysics>        KinematicBonesUpdateType;                                   // 0x0A2C   (0x0001)  
	TEnumAsByte<EPhysicsTransformUpdateMode>           PhysicsTransformUpdateMode;                                 // 0x0A2D   (0x0001)  
	unsigned char                                      UnknownData03_5[0x1];                                       // 0x0A2E   (0x0001)  MISSED
	TEnumAsByte<EAnimationMode>                        AnimationMode;                                              // 0x0A2F   (0x0001)  
	unsigned char                                      UnknownData04_5[0x1];                                       // 0x0A30   (0x0001)  MISSED
	bool                                               bDisablePostProcessBlueprint : 1;                           // 0x0A31:0 (0x0001)  
	unsigned char                                      UnknownBit05 : 1;                                           // 0x0A31:1 (0x0001)  MISSED
	bool                                               bUpdateOverlapsOnAnimationFinalize : 1;                     // 0x0A31:2 (0x0001)  
	unsigned char                                      UnknownBit06 : 1;                                           // 0x0A31:3 (0x0001)  MISSED
	bool                                               bHasValidBodies : 1;                                        // 0x0A31:4 (0x0001)  
	bool                                               bBlendPhysics : 1;                                          // 0x0A31:5 (0x0001)  
	bool                                               bEnablePhysicsOnDedicatedServer : 1;                        // 0x0A31:6 (0x0001)  
	bool                                               bUpdateMeshWhenKinematic : 1;                               // 0x0A31:7 (0x0001)  
	bool                                               bUpdateJointsFromAnimation : 1;                             // 0x0A32:0 (0x0001)  
	bool                                               bAllowClothActors : 1;                                      // 0x0A32:1 (0x0001)  
	bool                                               bDisableClothSimulation : 1;                                // 0x0A32:2 (0x0001)  
	unsigned char                                      UnknownData07_3[0x5];                                       // 0x0A33   (0x0005)  MISSED
	bool                                               bDisableRigidBodyAnimNode : 1;                              // 0x0A38:0 (0x0001)  
	bool                                               bAllowAnimCurveEvaluation : 1;                              // 0x0A38:1 (0x0001)  
	bool                                               bDisableAnimCurves : 1;                                     // 0x0A38:2 (0x0001)  
	unsigned char                                      UnknownBit08 : 1;                                           // 0x0A38:3 (0x0001)  MISSED
	unsigned char                                      UnknownBit09 : 1;                                           // 0x0A38:4 (0x0001)  MISSED
	unsigned char                                      UnknownBit10 : 1;                                           // 0x0A38:5 (0x0001)  MISSED
	bool                                               bCollideWithEnvironment : 1;                                // 0x0A38:6 (0x0001)  
	bool                                               bCollideWithAttachedChildren : 1;                           // 0x0A38:7 (0x0001)  
	bool                                               bForceCollisionUpdate : 1;                                  // 0x0A39:0 (0x0001)  
	bool                                               bLocalSpaceSimulation : 1;                                  // 0x0A39:1 (0x0001)  
	bool                                               bResetAfterTeleport : 1;                                    // 0x0A39:2 (0x0001)  
	unsigned char                                      UnknownBit11 : 1;                                           // 0x0A39:3 (0x0001)  MISSED
	bool                                               bDeferKinematicBoneUpdate : 1;                              // 0x0A39:4 (0x0001)  
	bool                                               bNoSkeletonUpdate : 1;                                      // 0x0A39:5 (0x0001)  
	bool                                               bPauseAnims : 1;                                            // 0x0A39:6 (0x0001)  
	bool                                               bUseRefPoseOnInitAnim : 1;                                  // 0x0A39:7 (0x0001)  
	bool                                               bEnablePerPolyCollision : 1;                                // 0x0A3A:0 (0x0001)  
	bool                                               bForceRefpose : 1;                                          // 0x0A3A:1 (0x0001)  
	bool                                               bOnlyAllowAutonomousTickPose : 1;                           // 0x0A3A:2 (0x0001)  
	bool                                               bIsAutonomousTickPose : 1;                                  // 0x0A3A:3 (0x0001)  
	bool                                               bOldForceRefPose : 1;                                       // 0x0A3A:4 (0x0001)  
	bool                                               bShowPrePhysBones : 1;                                      // 0x0A3A:5 (0x0001)  
	bool                                               bRequiredBonesUpToDate : 1;                                 // 0x0A3A:6 (0x0001)  
	bool                                               bAnimTreeInitialised : 1;                                   // 0x0A3A:7 (0x0001)  
	bool                                               bIncludeComponentLocationIntoBounds : 1;                    // 0x0A3B:0 (0x0001)  
	bool                                               bEnableLineCheckWithBounds : 1;                             // 0x0A3B:1 (0x0001)  
	bool                                               bPropagateCurvesToFollowers : 1;                            // 0x0A3B:2 (0x0001)  
	bool                                               bSkipKinematicUpdateWhenInterpolating : 1;                  // 0x0A3B:3 (0x0001)  
	bool                                               bSkipBoundsUpdateWhenInterpolating : 1;                     // 0x0A3B:4 (0x0001)  
	unsigned char                                      UnknownBit12 : 1;                                           // 0x0A3B:5 (0x0001)  MISSED
	unsigned char                                      UnknownBit13 : 1;                                           // 0x0A3B:6 (0x0001)  MISSED
	bool                                               bNeedsQueuedAnimEventsDispatched : 1;                       // 0x0A3B:7 (0x0001)  
	unsigned char                                      UnknownData14_4[0x2];                                       // 0x0A3C   (0x0002)  MISSED
	uint16_t                                           CachedAnimCurveUidVersion;                                  // 0x0A3E   (0x0002)  
	float                                              ClothBlendWeight;                                           // 0x0A40   (0x0004)  
	bool                                               bWaitForParallelClothTask;                                  // 0x0A44   (0x0001)  
	unsigned char                                      UnknownData15_5[0x3];                                       // 0x0A45   (0x0003)  MISSED
	TArray<FName>                                      DisallowedAnimCurves;                                       // 0x0A48   (0x0010)  
	UBodySetup*                                        BodySetup;                                                  // 0x0A58   (0x0008)  
	unsigned char                                      UnknownData16_5[0x4];                                       // 0x0A60   (0x0004)  MISSED
	float                                              ClothMaxDistanceScale;                                      // 0x0A64   (0x0004)  
	FMulticastInlineDelegate                           OnConstraintBroken;                                         // 0x0A68   (0x0010)  
	FMulticastInlineDelegate                           OnPlasticDeformation;                                       // 0x0A78   (0x0010)  
	UClass*                                            ClothingSimulationFactory;                                  // 0x0A88   (0x0008)  
	unsigned char                                      UnknownData17_5[0xF8];                                      // 0x0A90   (0x00F8)  MISSED
	float                                              TeleportDistanceThreshold;                                  // 0x0B88   (0x0004)  
	float                                              TeleportRotationThreshold;                                  // 0x0B8C   (0x0004)  
	unsigned char                                      UnknownData18_5[0x8];                                       // 0x0B90   (0x0008)  MISSED
	uint32_t                                           LastPoseTickFrame;                                          // 0x0B98   (0x0004)  
	unsigned char                                      UnknownData19_5[0x94];                                      // 0x0B9C   (0x0094)  MISSED
	UClothingSimulationInteractor*                     ClothingInteractor;                                         // 0x0C30   (0x0008)  
	unsigned char                                      UnknownData20_5[0xC8];                                      // 0x0C38   (0x00C8)  MISSED
	FMulticastInlineDelegate                           OnAnimInitialized;                                          // 0x0D00   (0x0010)  
	unsigned char                                      UnknownData21_6[0x270];                                     // 0x0D10   (0x0270)  MISSED


	/// Functions
	// Function /Script/Engine.SkeletalMeshComponent.UnlinkAnimClassLayers
	void UnlinkAnimClassLayers(UClass* InClass);                                                                             // [0x4930f70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.UnbindClothFromLeaderPoseComponent
	void UnbindClothFromLeaderPoseComponent(bool bRestoreSimulationSpace);                                                   // [0x4930ea0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.ToggleDisablePostProcessBlueprint
	void ToggleDisablePostProcessBlueprint();                                                                                // [0x4930e30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.TermBodiesBelow
	void TermBodiesBelow(FName ParentBoneName);                                                                              // [0x4930da0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SuspendClothingSimulation
	void SuspendClothingSimulation();                                                                                        // [0x4930d80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.Stop
	void Stop();                                                                                                             // [0x4930c00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SnapshotPose
	void SnapshotPose(FPoseSnapshot& Snapshot);                                                                              // [0x4930b30] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetUpdateClothInEditor
	void SetUpdateClothInEditor(bool NewUpdateState);                                                                        // [0x3d871a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetUpdateAnimationInEditor
	void SetUpdateAnimationInEditor(bool NewUpdateState);                                                                    // [0x3d871a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetTeleportRotationThreshold
	void SetTeleportRotationThreshold(float Threshold);                                                                      // [0x4930710] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetTeleportDistanceThreshold
	void SetTeleportDistanceThreshold(float Threshold);                                                                      // [0x4930680] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetSkeletalMeshAsset
	void SetSkeletalMeshAsset(USkeletalMesh* NewMesh);                                                                       // [0x4930470] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetPosition
	void SetPosition(float InPos, bool bFireNotifies);                                                                       // [0x4930350] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetPlayRate
	void SetPlayRate(float Rate);                                                                                            // [0x4930280] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetPhysicsBlendWeight
	void SetPhysicsBlendWeight(float PhysicsBlendWeight);                                                                    // [0x4930200] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetNotifyRigidBodyCollisionBelow
	void SetNotifyRigidBodyCollisionBelow(bool bNewNotifyRigidBodyCollision, FName BoneName, bool bIncludeSelf);             // [0x49300e0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetMorphTarget
	void SetMorphTarget(FName MorphTargetName, float Value, bool bRemoveZeroWeight);                                         // [0x492fee0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetEnablePhysicsBlending
	void SetEnablePhysicsBlending(bool bNewBlendPhysics);                                                                    // [0x492fdc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetEnableGravityOnAllBodiesBelow
	void SetEnableGravityOnAllBodiesBelow(bool bEnableGravity, FName BoneName, bool bIncludeSelf);                           // [0x492fcb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetEnableBodyGravity
	void SetEnableBodyGravity(bool bEnableGravity, FName BoneName);                                                          // [0x492fbe0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetDisablePostProcessBlueprint
	void SetDisablePostProcessBlueprint(bool bInDisablePostProcess);                                                         // [0x492fb20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetDisableAnimCurves
	void SetDisableAnimCurves(bool bInDisableAnimCurves);                                                                    // [0x492fa70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetConstraintProfileForAll
	void SetConstraintProfileForAll(FName ProfileName, bool bDefaultIfNotFound);                                             // [0x492f9a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetConstraintProfile
	void SetConstraintProfile(FName JointName, FName ProfileName, bool bDefaultIfNotFound);                                  // [0x492f890] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetClothMaxDistanceScale
	void SetClothMaxDistanceScale(float Scale);                                                                              // [0x492f810] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetBodyNotifyRigidBodyCollision
	void SetBodyNotifyRigidBodyCollision(bool bNewNotifyRigidBodyCollision, FName BoneName);                                 // [0x492f6b0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAnimClass
	void SetAnimClass(UClass* NewClass);                                                                                     // [0x492f370] Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAnimationMode
	void SetAnimationMode(TEnumAsByte<EAnimationMode> InAnimationMode);                                                      // [0x492f490] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAnimation
	void SetAnimation(UAnimationAsset* NewAnimToPlay);                                                                       // [0x492f400] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAngularLimits
	void SetAngularLimits(FName InBoneName, float Swing1LimitAngle, float TwistLimitAngle, float Swing2LimitAngle);          // [0x492f210] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAllowRigidBodyAnimNode
	void SetAllowRigidBodyAnimNode(bool bInAllow, bool bReinitAnim);                                                         // [0x492f000] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAllowedAnimCurvesEvaluation
	void SetAllowedAnimCurvesEvaluation(TArray<FName>& List, bool bAllow);                                                   // [0x492f110] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAllowClothActors
	void SetAllowClothActors(bool bInAllow);                                                                                 // [0x492ef70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAllowAnimCurveEvaluation
	void SetAllowAnimCurveEvaluation(bool bInAllow);                                                                         // [0x492eec0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAllMotorsAngularVelocityDrive
	void SetAllMotorsAngularVelocityDrive(bool bEnableSwingDrive, bool bEnableTwistDrive, bool bSkipCustomPhysicsType);      // [0x492ed90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAllMotorsAngularPositionDrive
	void SetAllMotorsAngularPositionDrive(bool bEnableSwingDrive, bool bEnableTwistDrive, bool bSkipCustomPhysicsType);      // [0x492ec60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAllMotorsAngularDriveParams
	void SetAllMotorsAngularDriveParams(float InSpring, float InDamping, float InForceLimit, bool bSkipCustomPhysicsType);   // [0x492eaf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAllBodiesSimulatePhysics
	void SetAllBodiesSimulatePhysics(bool bNewSimulate);                                                                     // [0x492ea60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAllBodiesPhysicsBlendWeight
	void SetAllBodiesPhysicsBlendWeight(float PhysicsBlendWeight, bool bSkipCustomPhysicsType);                              // [0x492e980] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAllBodiesBelowSimulatePhysics
	void SetAllBodiesBelowSimulatePhysics(FName& InBoneName, bool bNewSimulate, bool bIncludeSelf);                          // [0x492e850] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAllBodiesBelowPhysicsDisabled
	void SetAllBodiesBelowPhysicsDisabled(FName& InBoneName, bool bDisabled, bool bIncludeSelf);                             // [0x492e720] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAllBodiesBelowPhysicsBlendWeight
	void SetAllBodiesBelowPhysicsBlendWeight(FName& InBoneName, float PhysicsBlendWeight, bool bSkipCustomPhysicsType, bool bIncludeSelf); // [0x492e5a0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.SetAllBodiesBelowLinearVelocity
	void SetAllBodiesBelowLinearVelocity(FName& InBoneName, FVector& LinearVelocity, bool bIncludeSelf);                     // [0x492e460] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.ResumeClothingSimulation
	void ResumeClothingSimulation();                                                                                         // [0x492e430] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.ResetClothTeleportMode
	void ResetClothTeleportMode();                                                                                           // [0x492e410] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.ResetAnimInstanceDynamics
	void ResetAnimInstanceDynamics(ETeleportType InTeleportType);                                                            // [0x492e390] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.ResetAllowedAnimCurveEvaluation
	void ResetAllowedAnimCurveEvaluation();                                                                                  // [0x492e340] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.ResetAllBodiesSimulatePhysics
	void ResetAllBodiesSimulatePhysics();                                                                                    // [0x492e320] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.PlayAnimation
	void PlayAnimation(UAnimationAsset* NewAnimToPlay, bool bLooping);                                                       // [0x492def0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.Play
	void Play(bool bLooping);                                                                                                // [0x492de60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.OverrideAnimationData
	void OverrideAnimationData(UAnimationAsset* InAnimToPlay, bool bIsLooping, bool bIsPlaying, float Position, float PlayRate); // [0x492dc70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.LinkAnimGraphByTag
	void LinkAnimGraphByTag(FName InTag, UClass* InClass);                                                                   // [0x492daa0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.LinkAnimClassLayers
	void LinkAnimClassLayers(UClass* InClass);                                                                               // [0x492da00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.K2_GetClosestPointOnPhysicsAsset
	bool K2_GetClosestPointOnPhysicsAsset(FVector& WorldPosition, FVector& ClosestWorldPosition, FVector& Normal, FName& BoneName, float& Distance); // [0x492d720] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.IsPlaying
	bool IsPlaying();                                                                                                        // [0x492d630] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.IsClothingSimulationSuspended
	bool IsClothingSimulationSuspended();                                                                                    // [0x492d5d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.IsBodyGravityEnabled
	bool IsBodyGravityEnabled(FName BoneName);                                                                               // [0x492d530] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.HasValidAnimationInstance
	bool HasValidAnimationInstance();                                                                                        // [0x492d0d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetTransformAttribute_Ref
	bool GetTransformAttribute_Ref(FName& BoneName, FName& AttributeName, FTransform& OutValue, ECustomBoneAttributeLookup LookupType); // [0x492ce90] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.GetTransformAttribute
	bool GetTransformAttribute(FName& BoneName, FName& AttributeName, FTransform DefaultValue, FTransform& OutValue, ECustomBoneAttributeLookup LookupType); // [0x492cbd0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.GetTeleportRotationThreshold
	float GetTeleportRotationThreshold();                                                                                    // [0x492cbb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetTeleportDistanceThreshold
	float GetTeleportDistanceThreshold();                                                                                    // [0x492cbb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetStringAttribute_Ref
	bool GetStringAttribute_Ref(FName& BoneName, FName& AttributeName, FString& OutValue, ECustomBoneAttributeLookup LookupType); // [0x492c9d0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.GetStringAttribute
	bool GetStringAttribute(FName& BoneName, FName& AttributeName, FString DefaultValue, FString& OutValue, ECustomBoneAttributeLookup LookupType); // [0x492c780] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.GetSkeletalMeshAsset
	USkeletalMesh* GetSkeletalMeshAsset();                                                                                   // [0x492c710] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetSkeletalCenterOfMass
	FVector GetSkeletalCenterOfMass();                                                                                       // [0x492c6d0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetPostProcessInstance
	UAnimInstance* GetPostProcessInstance();                                                                                 // [0x492c6b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetPosition
	float GetPosition();                                                                                                     // [0x492c620] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetPlayRate
	float GetPlayRate();                                                                                                     // [0x492c590] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetMorphTarget
	float GetMorphTarget(FName MorphTargetName);                                                                             // [0x492c470] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetLinkedAnimLayerInstanceByGroup
	UAnimInstance* GetLinkedAnimLayerInstanceByGroup(FName InGroup);                                                         // [0x492c3c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetLinkedAnimLayerInstanceByClass
	UAnimInstance* GetLinkedAnimLayerInstanceByClass(UClass* InClass);                                                       // [0x492c310] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetLinkedAnimGraphInstancesByTag
	void GetLinkedAnimGraphInstancesByTag(FName InTag, TArray<UAnimInstance*>& OutLinkedInstances);                          // [0x492c210] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetLinkedAnimGraphInstanceByTag
	UAnimInstance* GetLinkedAnimGraphInstanceByTag(FName InTag);                                                             // [0x492c160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetIntegerAttribute_Ref
	bool GetIntegerAttribute_Ref(FName& BoneName, FName& AttributeName, int32_t& OutValue, ECustomBoneAttributeLookup LookupType); // [0x492bfb0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.GetIntegerAttribute
	bool GetIntegerAttribute(FName& BoneName, FName& AttributeName, int32_t DefaultValue, int32_t& OutValue, ECustomBoneAttributeLookup LookupType); // [0x492bdb0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.GetFloatAttribute_Ref
	bool GetFloatAttribute_Ref(FName& BoneName, FName& AttributeName, float& OutValue, ECustomBoneAttributeLookup LookupType); // [0x492bbf0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.GetFloatAttribute
	bool GetFloatAttribute(FName& BoneName, FName& AttributeName, float DefaultValue, float& OutValue, ECustomBoneAttributeLookup LookupType); // [0x492b9f0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.GetDisablePostProcessBlueprint
	bool GetDisablePostProcessBlueprint();                                                                                   // [0x492b9c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetDisableAnimCurves
	bool GetDisableAnimCurves();                                                                                             // [0x492b990] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetCurrentJointAngles
	void GetCurrentJointAngles(FName InBoneName, float& Swing1Angle, float& TwistAngle, float& Swing2Angle);                 // [0x492b800] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.GetConstraintsFromBody
	void GetConstraintsFromBody(FName BodyName, bool bParentConstraints, bool bChildConstraints, bool bIncludesTerminated, TArray<FConstraintInstanceAccessor>& OutConstraints); // [0x492b630] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.GetConstraints
	void GetConstraints(bool bIncludesTerminated, TArray<FConstraintInstanceAccessor>& OutConstraints);                      // [0x492b530] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.GetConstraintByName
	FConstraintInstanceAccessor GetConstraintByName(FName ConstraintName, bool bIncludesTerminated);                         // [0x492b450] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.GetClothMaxDistanceScale
	float GetClothMaxDistanceScale();                                                                                        // [0x492b400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetClothingSimulationInteractor
	UClothingSimulationInteractor* GetClothingSimulationInteractor();                                                        // [0x492b430] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetBoneMass
	float GetBoneMass(FName BoneName, bool bScaleMass);                                                                      // [0x492b330] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetBoneLinearVelocity
	FVector GetBoneLinearVelocity(FName& InBoneName);                                                                        // [0x492b270] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.GetAnimInstance
	UAnimInstance* GetAnimInstance();                                                                                        // [0x492b230] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetAnimClass
	UClass* GetAnimClass();                                                                                                  // [0x492b1a0] Final|Native|Public  
	// Function /Script/Engine.SkeletalMeshComponent.GetAnimationMode
	TEnumAsByte<EAnimationMode> GetAnimationMode();                                                                          // [0x492b250] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetAllowRigidBodyAnimNode
	bool GetAllowRigidBodyAnimNode();                                                                                        // [0x492b140] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetAllowedAnimCurveEvaluate
	bool GetAllowedAnimCurveEvaluate();                                                                                      // [0x492b170] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.GetAllowClothActors
	bool GetAllowClothActors();                                                                                              // [0x492b110] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMeshComponent.ForceClothNextUpdateTeleportAndReset
	void ForceClothNextUpdateTeleportAndReset();                                                                             // [0x492b0f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.ForceClothNextUpdateTeleport
	void ForceClothNextUpdateTeleport();                                                                                     // [0x492b0d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.FindConstraintBoneName
	FName FindConstraintBoneName(int32_t ConstraintIndex);                                                                   // [0x492b040] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.ClearMorphTargets
	void ClearMorphTargets();                                                                                                // [0x492aff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.BreakConstraint
	void BreakConstraint(FVector Impulse, FVector HitLocation, FName InBoneName);                                            // [0x492ae70] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.BindClothToLeaderPoseComponent
	void BindClothToLeaderPoseComponent();                                                                                   // [0x492ad70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.AllowAnimCurveEvaluation
	void AllowAnimCurveEvaluation(FName NameOfCurve, bool bAllow);                                                           // [0x492aba0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.AddImpulseToAllBodiesBelow
	void AddImpulseToAllBodiesBelow(FVector Impulse, FName BoneName, bool bVelChange, bool bIncludeSelf);                    // [0x492aa00] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.AddForceToAllBodiesBelow
	void AddForceToAllBodiesBelow(FVector Force, FName BoneName, bool bAccelChange, bool bIncludeSelf);                      // [0x492a860] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshComponent.AccumulateAllBodiesBelowPhysicsBlendWeight
	void AccumulateAllBodiesBelowPhysicsBlendWeight(FName& InBoneName, float AddPhysicsBlendWeight, bool bSkipCustomPhysicsType); // [0x492a740] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Engine.AnimInstance
/// Size: 0x0328 (0x000028 - 0x000350)
class UAnimInstance : public UObject
{ 
public:
	USkeleton*                                         CurrentSkeleton;                                            // 0x0028   (0x0008)  
	TEnumAsByte<ERootMotionMode>                       RootMotionMode;                                             // 0x0030   (0x0001)  
	bool                                               bUseMultiThreadedAnimationUpdate : 1;                       // 0x0031:0 (0x0001)  
	bool                                               bUsingCopyPoseFromMesh : 1;                                 // 0x0031:1 (0x0001)  
	unsigned char                                      UnknownBit00 : 1;                                           // 0x0031:2 (0x0001)  MISSED
	unsigned char                                      UnknownBit01 : 1;                                           // 0x0031:3 (0x0001)  MISSED
	bool                                               bReceiveNotifiesFromLinkedInstances : 1;                    // 0x0031:4 (0x0001)  
	bool                                               bPropagateNotifiesToLinkedInstances : 1;                    // 0x0031:5 (0x0001)  
	bool                                               bUseMainInstanceMontageEvaluationData : 1;                  // 0x0031:6 (0x0001)  
	bool                                               bQueueMontageEvents : 1;                                    // 0x0031:7 (0x0001)  
	unsigned char                                      UnknownData02_4[0x6];                                       // 0x0032   (0x0006)  MISSED
	FMulticastInlineDelegate                           OnMontageBlendingOut;                                       // 0x0038   (0x0010)  
	FMulticastInlineDelegate                           OnMontageStarted;                                           // 0x0048   (0x0010)  
	FMulticastInlineDelegate                           OnMontageEnded;                                             // 0x0058   (0x0010)  
	FMulticastInlineDelegate                           OnAllMontageInstancesEnded;                                 // 0x0068   (0x0010)  
	unsigned char                                      UnknownData03_5[0xD8];                                      // 0x0078   (0x00D8)  MISSED
	FAnimNotifyQueue                                   NotifyQueue;                                                // 0x0150   (0x0070)  
	TArray<FAnimNotifyEvent>                           ActiveAnimNotifyState;                                      // 0x01C0   (0x0010)  
	TArray<FAnimNotifyEventReference>                  ActiveAnimNotifyEventReference;                             // 0x01D0   (0x0010)  
	unsigned char                                      UnknownData04_6[0x170];                                     // 0x01E0   (0x0170)  MISSED


	/// Functions
	// Function /Script/Engine.AnimInstance.WasAnimNotifyTriggeredInStateMachine
	bool WasAnimNotifyTriggeredInStateMachine(int32_t MachineIndex, UClass* AnimNotifyType);                                 // [0x4740f50] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.WasAnimNotifyTriggeredInSourceState
	bool WasAnimNotifyTriggeredInSourceState(int32_t MachineIndex, int32_t StateIndex, UClass* AnimNotifyType);              // [0x4740e10] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.WasAnimNotifyTriggeredInAnyState
	bool WasAnimNotifyTriggeredInAnyState(UClass* AnimNotifyType);                                                           // [0x4740d60] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.WasAnimNotifyStateActiveInStateMachine
	bool WasAnimNotifyStateActiveInStateMachine(int32_t MachineIndex, UClass* AnimNotifyStateType);                          // [0x4740c50] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.WasAnimNotifyStateActiveInSourceState
	bool WasAnimNotifyStateActiveInSourceState(int32_t MachineIndex, int32_t StateIndex, UClass* AnimNotifyStateType);       // [0x4740b10] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.WasAnimNotifyStateActiveInAnyState
	bool WasAnimNotifyStateActiveInAnyState(UClass* AnimNotifyStateType);                                                    // [0x4740a60] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.WasAnimNotifyNameTriggeredInStateMachine
	bool WasAnimNotifyNameTriggeredInStateMachine(int32_t MachineIndex, FName NotifyName);                                   // [0x4740950] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.WasAnimNotifyNameTriggeredInSourceState
	bool WasAnimNotifyNameTriggeredInSourceState(int32_t MachineIndex, int32_t StateIndex, FName NotifyName);                // [0x4740810] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.WasAnimNotifyNameTriggeredInAnyState
	bool WasAnimNotifyNameTriggeredInAnyState(FName NotifyName);                                                             // [0x4740760] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.UnlockAIResources
	void UnlockAIResources(bool bUnlockMovement, bool UnlockAILogic);                                                        // [0x473cb20] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.UnlinkAnimClassLayers
	void UnlinkAnimClassLayers(UClass* InClass);                                                                             // [0x1329f90] Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.TryGetPawnOwner
	APawn* TryGetPawnOwner();                                                                                                // [0x4740730] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.StopSlotAnimation
	void StopSlotAnimation(float InBlendOutTime, FName SlotNodeName);                                                        // [0x4740530] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.SnapshotPose
	void SnapshotPose(FPoseSnapshot& Snapshot);                                                                              // [0x4740460] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.SetUseMainInstanceMontageEvaluationData
	void SetUseMainInstanceMontageEvaluationData(bool bSet);                                                                 // [0x47403d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.SetRootMotionMode
	void SetRootMotionMode(TEnumAsByte<ERootMotionMode> Value);                                                              // [0x46d6b00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.SetReceiveNotifiesFromLinkedInstances
	void SetReceiveNotifiesFromLinkedInstances(bool bSet);                                                                   // [0x4740340] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.SetPropagateNotifiesToLinkedInstances
	void SetPropagateNotifiesToLinkedInstances(bool bSet);                                                                   // [0x47402b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.SetMorphTarget
	void SetMorphTarget(FName MorphTargetName, float Value);                                                                 // [0x47401d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.SavePoseSnapshot
	void SavePoseSnapshot(FName SnapshotName);                                                                               // [0x4740140] Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.ResetDynamics
	void ResetDynamics(ETeleportType InTeleportType);                                                                        // [0x47400b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.RequestTransitionEvent
	bool RequestTransitionEvent(FName EventName, double RequestTimeout, ETransitionRequestQueueMode QueueMode, ETransitionRequestOverwriteMode OverwriteMode); // [0x473fe20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.RequestSlotGroupInertialization
	void RequestSlotGroupInertialization(FName InSlotGroupName, float Duration, UBlendProfile* BlendProfile);                // [0x473fbb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.RemovePoseSnapshot
	void RemovePoseSnapshot(FName SnapshotName);                                                                             // [0x473fb20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.QueryTransitionEvent
	bool QueryTransitionEvent(int32_t MachineIndex, int32_t TransitionIndex, FName EventName);                               // [0x473f960] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.QueryAndMarkTransitionEvent
	bool QueryAndMarkTransitionEvent(int32_t MachineIndex, int32_t TransitionIndex, FName EventName);                        // [0x473f770] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.PlaySlotAnimationAsDynamicMontage_WithBlendSettings
	UAnimMontage* PlaySlotAnimationAsDynamicMontage_WithBlendSettings(UAnimSequenceBase* Asset, FName SlotNodeName, FMontageBlendSettings& BlendInSettings, FMontageBlendSettings& BlendOutSettings, float InPlayRate, int32_t LoopCount, float BlendOutTriggerTime, float InTimeToStartMontageAt); // [0x473f450] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.PlaySlotAnimationAsDynamicMontage_WithBlendArgs
	UAnimMontage* PlaySlotAnimationAsDynamicMontage_WithBlendArgs(UAnimSequenceBase* Asset, FName SlotNodeName, FAlphaBlendArgs& BlendIn, FAlphaBlendArgs& BlendOut, float InPlayRate, int32_t LoopCount, float BlendOutTriggerTime, float InTimeToStartMontageAt); // [0x473f100] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.PlaySlotAnimationAsDynamicMontage
	UAnimMontage* PlaySlotAnimationAsDynamicMontage(UAnimSequenceBase* Asset, FName SlotNodeName, float BlendInTime, float BlendOutTime, float InPlayRate, int32_t LoopCount, float BlendOutTriggerTime, float InTimeToStartMontageAt); // [0x473ede0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.MontageSync_StopFollowing
	void MontageSync_StopFollowing(UAnimMontage* MontageFollower);                                                           // [0x473cd10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.MontageSync_Follow
	void MontageSync_Follow(UAnimMontage* MontageFollower, UAnimInstance* OtherAnimInstance, UAnimMontage* MontageLeader);   // [0x473cbd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_StopWithBlendSettings
	void Montage_StopWithBlendSettings(FMontageBlendSettings& BlendOutSettings, UAnimMontage* Montage);                      // [0x473ecc0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_StopWithBlendOut
	void Montage_StopWithBlendOut(FAlphaBlendArgs& BlendOut, UAnimMontage* Montage);                                         // [0x473ebb0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_StopGroupByName
	void Montage_StopGroupByName(float InBlendOutTime, FName GroupName);                                                     // [0x473ea10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_Stop
	void Montage_Stop(float InBlendOutTime, UAnimMontage* Montage);                                                          // [0x473e940] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_SetPosition
	void Montage_SetPosition(UAnimMontage* Montage, float NewPosition);                                                      // [0x473e7e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_SetPlayRate
	void Montage_SetPlayRate(UAnimMontage* Montage, float NewPlayRate);                                                      // [0x473e6a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_SetNextSection
	void Montage_SetNextSection(FName SectionNameToChange, FName NextSection, UAnimMontage* Montage);                        // [0x473e500] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_Resume
	void Montage_Resume(UAnimMontage* Montage);                                                                              // [0x473e400] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_PlayWithBlendSettings
	float Montage_PlayWithBlendSettings(UAnimMontage* MontageToPlay, FMontageBlendSettings& BlendInSettings, float InPlayRate, EMontagePlayReturnType ReturnValueType, float InTimeToStartMontageAt, bool bStopAllMontages); // [0x473e020] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_PlayWithBlendIn
	float Montage_PlayWithBlendIn(UAnimMontage* MontageToPlay, FAlphaBlendArgs& BlendIn, float InPlayRate, EMontagePlayReturnType ReturnValueType, float InTimeToStartMontageAt, bool bStopAllMontages); // [0x473dc00] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_Play
	float Montage_Play(UAnimMontage* MontageToPlay, float InPlayRate, EMontagePlayReturnType ReturnValueType, float InTimeToStartMontageAt, bool bStopAllMontages); // [0x473d830] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_Pause
	void Montage_Pause(UAnimMontage* Montage);                                                                               // [0x473d730] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_JumpToSectionsEnd
	void Montage_JumpToSectionsEnd(FName SectionName, UAnimMontage* Montage);                                                // [0x473d5c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_JumpToSection
	void Montage_JumpToSection(FName SectionName, UAnimMontage* Montage);                                                    // [0x473d450] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.Montage_IsPlaying
	bool Montage_IsPlaying(UAnimMontage* Montage);                                                                           // [0x473d350] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.Montage_IsActive
	bool Montage_IsActive(UAnimMontage* Montage);                                                                            // [0x473d260] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.Montage_GetPosition
	float Montage_GetPosition(UAnimMontage* Montage);                                                                        // [0x473d160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.Montage_GetPlayRate
	float Montage_GetPlayRate(UAnimMontage* Montage);                                                                        // [0x473d060] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.Montage_GetIsStopped
	bool Montage_GetIsStopped(UAnimMontage* Montage);                                                                        // [0x473cfb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.Montage_GetCurrentSection
	FName Montage_GetCurrentSection(UAnimMontage* Montage);                                                                  // [0x473ceb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.Montage_GetBlendTime
	float Montage_GetBlendTime(UAnimMontage* Montage);                                                                       // [0x473cdb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.LockAIResources
	void LockAIResources(bool bLockMovement, bool LockAILogic);                                                              // [0x473cb20] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.LinkAnimGraphByTag
	void LinkAnimGraphByTag(FName InTag, UClass* InClass);                                                                   // [0x473ca00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.LinkAnimClassLayers
	void LinkAnimClassLayers(UClass* InClass);                                                                               // [0x1329f00] Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.IsUsingMainInstanceMontageEvaluationData
	bool IsUsingMainInstanceMontageEvaluationData();                                                                         // [0x473c930] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.IsSyncGroupBetweenMarkers
	bool IsSyncGroupBetweenMarkers(FName InSyncGroupName, FName PreviousMarker, FName NextMarker, bool bRespectMarkerOrder); // [0x473c740] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.IsPlayingSlotAnimation
	bool IsPlayingSlotAnimation(UAnimSequenceBase* Asset, FName SlotNodeName);                                               // [0x473c5f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.IsAnyMontagePlaying
	bool IsAnyMontagePlaying();                                                                                              // [0x473c5c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.HasMarkerBeenHitThisFrame
	bool HasMarkerBeenHitThisFrame(FName SyncGroup, FName MarkerName);                                                       // [0x473c470] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetTimeToClosestMarker
	bool GetTimeToClosestMarker(FName SyncGroup, FName MarkerName, float& OutMarkerTime);                                    // [0x473c2d0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetSyncGroupPosition
	FMarkerSyncAnimPosition GetSyncGroupPosition(FName InSyncGroupName);                                                     // [0x473c1b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetRelevantAnimTimeRemainingFraction
	float GetRelevantAnimTimeRemainingFraction(int32_t MachineIndex, int32_t StateIndex);                                    // [0x473c030] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetRelevantAnimTimeRemaining
	float GetRelevantAnimTimeRemaining(int32_t MachineIndex, int32_t StateIndex);                                            // [0x473beb0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetRelevantAnimTimeFraction
	float GetRelevantAnimTimeFraction(int32_t MachineIndex, int32_t StateIndex);                                             // [0x473bce0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetRelevantAnimTime
	float GetRelevantAnimTime(int32_t MachineIndex, int32_t StateIndex);                                                     // [0x473bb40] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetRelevantAnimLength
	float GetRelevantAnimLength(int32_t MachineIndex, int32_t StateIndex);                                                   // [0x473b990] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetReceiveNotifiesFromLinkedInstances
	bool GetReceiveNotifiesFromLinkedInstances();                                                                            // [0x473b960] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetPropagateNotifiesToLinkedInstances
	bool GetPropagateNotifiesToLinkedInstances();                                                                            // [0x473b930] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetOwningComponent
	USkeletalMeshComponent* GetOwningComponent();                                                                            // [0x473b910] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetOwningActor
	AActor* GetOwningActor();                                                                                                // [0x473b8e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetLinkedAnimLayerInstancesByGroup
	void GetLinkedAnimLayerInstancesByGroup(FName InGroup, TArray<UAnimInstance*>& OutLinkedInstances);                      // [0x473b7b0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetLinkedAnimLayerInstanceByGroupAndClass
	UAnimInstance* GetLinkedAnimLayerInstanceByGroupAndClass(FName InGroup, UClass* InClass);                                // [0x473b6e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetLinkedAnimLayerInstanceByGroup
	UAnimInstance* GetLinkedAnimLayerInstanceByGroup(FName InGroup);                                                         // [0x473b550] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetLinkedAnimLayerInstanceByClass
	UAnimInstance* GetLinkedAnimLayerInstanceByClass(UClass* InClass);                                                       // [0x473b3e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetLinkedAnimGraphInstancesByTag
	void GetLinkedAnimGraphInstancesByTag(FName InTag, TArray<UAnimInstance*>& OutLinkedInstances);                          // [0x473b2c0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetLinkedAnimGraphInstanceByTag
	UAnimInstance* GetLinkedAnimGraphInstanceByTag(FName InTag);                                                             // [0x473b220] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetInstanceTransitionTimeElapsedFraction
	float GetInstanceTransitionTimeElapsedFraction(int32_t MachineIndex, int32_t TransitionIndex);                           // [0x473b150] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetInstanceTransitionTimeElapsed
	float GetInstanceTransitionTimeElapsed(int32_t MachineIndex, int32_t TransitionIndex);                                   // [0x473b080] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetInstanceTransitionCrossfadeDuration
	float GetInstanceTransitionCrossfadeDuration(int32_t MachineIndex, int32_t TransitionIndex);                             // [0x473aef0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetInstanceStateWeight
	float GetInstanceStateWeight(int32_t MachineIndex, int32_t StateIndex);                                                  // [0x473ae20] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetInstanceMachineWeight
	float GetInstanceMachineWeight(int32_t MachineIndex);                                                                    // [0x473acc0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetInstanceCurrentStateElapsedTime
	float GetInstanceCurrentStateElapsedTime(int32_t MachineIndex);                                                          // [0x473ab80] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetInstanceAssetPlayerTimeFromEndFraction
	float GetInstanceAssetPlayerTimeFromEndFraction(int32_t AssetPlayerIndex);                                               // [0x473aa20] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetInstanceAssetPlayerTimeFromEnd
	float GetInstanceAssetPlayerTimeFromEnd(int32_t AssetPlayerIndex);                                                       // [0x473a8d0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetInstanceAssetPlayerTimeFraction
	float GetInstanceAssetPlayerTimeFraction(int32_t AssetPlayerIndex);                                                      // [0x473a780] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetInstanceAssetPlayerTime
	float GetInstanceAssetPlayerTime(int32_t AssetPlayerIndex);                                                              // [0x473a660] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetInstanceAssetPlayerLength
	float GetInstanceAssetPlayerLength(int32_t AssetPlayerIndex);                                                            // [0x473a540] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetDeltaSeconds
	float GetDeltaSeconds();                                                                                                 // [0x473a470] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetCurveValueWithDefault
	bool GetCurveValueWithDefault(FName CurveName, float DefaultValue, float& OutValue);                                     // [0x473a350] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetCurveValue
	float GetCurveValue(FName CurveName);                                                                                    // [0x473a2b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetCurrentStateName
	FName GetCurrentStateName(int32_t MachineIndex);                                                                         // [0x473a1d0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.AnimInstance.GetCurrentActiveMontage
	UAnimMontage* GetCurrentActiveMontage();                                                                                 // [0x473a160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetAllCurveNames
	void GetAllCurveNames(TArray<FName>& OutNames);                                                                          // [0x4739b60] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.GetActiveCurveNames
	void GetActiveCurveNames(EAnimCurveType CurveType, TArray<FName>& OutNames);                                             // [0x47399a0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.ClearTransitionEvents
	void ClearTransitionEvents(FName EventName);                                                                             // [0x4739890] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.ClearMorphTargets
	void ClearMorphTargets();                                                                                                // [0x4739860] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.ClearAllTransitionEvents
	void ClearAllTransitionEvents();                                                                                         // [0x47397a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimInstance.CalculateDirection
	float CalculateDirection(FVector& Velocity, FRotator& BaseRotation);                                                     // [0x47396a0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimInstance.BlueprintUpdateAnimation
	void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.AnimInstance.BlueprintThreadSafeUpdateAnimation
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);                                                                // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.AnimInstance.BlueprintPostEvaluateAnimation
	void BlueprintPostEvaluateAnimation();                                                                                   // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.AnimInstance.BlueprintLinkedAnimationLayersInitialized
	void BlueprintLinkedAnimationLayersInitialized();                                                                        // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.AnimInstance.BlueprintInitializeAnimation
	void BlueprintInitializeAnimation();                                                                                     // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.AnimInstance.BlueprintBeginPlay
	void BlueprintBeginPlay();                                                                                               // [0x2e6eb70] Event|Public|BlueprintEvent 
};

/// Class /Script/Engine.BlueprintGeneratedClass
/// Size: 0x0150 (0x000230 - 0x000380)
class UBlueprintGeneratedClass : public UClass
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0230   (0x0008)  MISSED
	int32_t                                            NumReplicatedProperties;                                    // 0x0238   (0x0004)  
	bool                                               bHasNativizedParent : 1;                                    // 0x023C:0 (0x0001)  
	bool                                               bHasCookedComponentInstancingData : 1;                      // 0x023C:1 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x023D   (0x0003)  MISSED
	TArray<UDynamicBlueprintBinding*>                  DynamicBindingObjects;                                      // 0x0240   (0x0010)  
	TArray<UActorComponent*>                           ComponentTemplates;                                         // 0x0250   (0x0010)  
	TArray<UTimelineTemplate*>                         Timelines;                                                  // 0x0260   (0x0010)  
	TArray<FBPComponentClassOverride>                  ComponentClassOverrides;                                    // 0x0270   (0x0010)  
	USimpleConstructionScript*                         SimpleConstructionScript;                                   // 0x0280   (0x0008)  
	UInheritableComponentHandler*                      InheritableComponentHandler;                                // 0x0288   (0x0008)  
	UStructProperty*                                   UberGraphFramePointerProperty;                              // 0x0290   (0x0008)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x0298   (0x0008)  MISSED
	UFunction*                                         UberGraphFunction;                                          // 0x02A0   (0x0008)  
	TMap<FName, FGuid>                                 CookedPropertyGuids;                                        // 0x02A8   (0x0050)  
	TMap<FName, FBlueprintCookedComponentInstancingData> CookedComponentInstancingData;                            // 0x02F8   (0x0050)  
	unsigned char                                      UnknownData03_6[0x38];                                      // 0x0348   (0x0038)  MISSED
};

/// Class /Script/Engine.CameraShakeBase
/// Size: 0x00C8 (0x000028 - 0x0000F0)
class UCameraShakeBase : public UObject
{ 
public:
	bool                                               bSingleInstance;                                            // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	float                                              ShakeScale;                                                 // 0x002C   (0x0004)  
	UCameraShakePattern*                               RootShakePattern;                                           // 0x0030   (0x0008)  
	APlayerCameraManager*                              CameraManager;                                              // 0x0038   (0x0008)  
	unsigned char                                      UnknownData01_6[0xB0];                                      // 0x0040   (0x00B0)  MISSED


	/// Functions
	// Function /Script/Engine.CameraShakeBase.SetRootShakePattern
	void SetRootShakePattern(UCameraShakePattern* InPattern);                                                                // [0x4854110] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraShakeBase.GetRootShakePattern
	UCameraShakePattern* GetRootShakePattern();                                                                              // [0x129ee30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.CameraShakePattern
/// Size: 0x0000 (0x000028 - 0x000028)
class UCameraShakePattern : public UObject
{ 
public:
};

/// Class /Script/Engine.CameraModifier
/// Size: 0x0020 (0x000028 - 0x000048)
class UCameraModifier : public UObject
{ 
public:
	bool                                               bDebug : 1;                                                 // 0x0028:0 (0x0001)  
	bool                                               bExclusive : 1;                                             // 0x0028:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0029   (0x0003)  MISSED
	char                                               Priority;                                                   // 0x002C   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x002D   (0x0003)  MISSED
	APlayerCameraManager*                              CameraOwner;                                                // 0x0030   (0x0008)  
	float                                              AlphaInTime;                                                // 0x0038   (0x0004)  
	float                                              AlphaOutTime;                                               // 0x003C   (0x0004)  
	float                                              Alpha;                                                      // 0x0040   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0044   (0x0004)  MISSED


	/// Functions
	// Function /Script/Engine.CameraModifier.OnCameraOwnerDestroyed
	void OnCameraOwnerDestroyed(AActor* InOwner);                                                                            // [0x4851920] Final|Native|Protected 
	// Function /Script/Engine.CameraModifier.IsDisabled
	bool IsDisabled();                                                                                                       // [0x3d709f0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CameraModifier.GetViewTarget
	AActor* GetViewTarget();                                                                                                 // [0x443f6f0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CameraModifier.EnableModifier
	void EnableModifier();                                                                                                   // [0xc4ef80] Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraModifier.DisableModifier
	void DisableModifier(bool bImmediate);                                                                                   // [0x484faf0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraModifier.BlueprintModifyPostProcess
	void BlueprintModifyPostProcess(float DeltaTime, float& PostProcessBlendWeight, FPostProcessSettings& PostProcessSettings); // [0x2e6eb70] BlueprintCosmetic|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/Engine.CameraModifier.BlueprintModifyCamera
	void BlueprintModifyCamera(float DeltaTime, FVector ViewLocation, FRotator ViewRotation, float FOV, FVector& NewViewLocation, FRotator& NewViewRotation, float& NewFOV); // [0x2e6eb70] BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintEvent 
};

/// Class /Script/Engine.Commandlet
/// Size: 0x0058 (0x000028 - 0x000080)
class UCommandlet : public UObject
{ 
public:
	FString                                            HelpDescription;                                            // 0x0028   (0x0010)  
	FString                                            HelpUsage;                                                  // 0x0038   (0x0010)  
	FString                                            HelpWebLink;                                                // 0x0048   (0x0010)  
	TArray<FString>                                    HelpParamNames;                                             // 0x0058   (0x0010)  
	TArray<FString>                                    HelpParamDescriptions;                                      // 0x0068   (0x0010)  
	bool                                               IsServer : 1;                                               // 0x0078:0 (0x0001)  
	bool                                               IsClient : 1;                                               // 0x0078:1 (0x0001)  
	bool                                               IsEditor : 1;                                               // 0x0078:2 (0x0001)  
	bool                                               LogToConsole : 1;                                           // 0x0078:3 (0x0001)  
	bool                                               ShowErrorCount : 1;                                         // 0x0078:4 (0x0001)  
	bool                                               ShowProgress : 1;                                           // 0x0078:5 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0079   (0x0007)  MISSED
};

/// Class /Script/Engine.AudioComponent
/// Size: 0x09C0 (0x0002A0 - 0x000C60)
class UAudioComponent : public USceneComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x198];                                     // 0x02A0   (0x0198)  MISSED
	USoundBase*                                        Sound;                                                      // 0x0438   (0x0008)  
	TArray<FAudioParameter>                            DefaultParameters;                                          // 0x0440   (0x0010)  
	TArray<FAudioParameter>                            InstanceParameters;                                         // 0x0450   (0x0010)  
	USoundClass*                                       SoundClassOverride;                                         // 0x0460   (0x0008)  
	bool                                               bAutoDestroy : 1;                                           // 0x0468:0 (0x0001)  
	bool                                               bStopWhenOwnerDestroyed : 1;                                // 0x0468:1 (0x0001)  
	bool                                               bShouldRemainActiveIfDropped : 1;                           // 0x0468:2 (0x0001)  
	bool                                               bAllowSpatialization : 1;                                   // 0x0468:3 (0x0001)  
	bool                                               bOverrideAttenuation : 1;                                   // 0x0468:4 (0x0001)  
	bool                                               bOverrideSubtitlePriority : 1;                              // 0x0468:5 (0x0001)  
	bool                                               bIsUISound : 1;                                             // 0x0468:6 (0x0001)  
	bool                                               bEnableLowPassFilter : 1;                                   // 0x0468:7 (0x0001)  
	bool                                               bOverridePriority : 1;                                      // 0x0469:0 (0x0001)  
	bool                                               bSuppressSubtitles : 1;                                     // 0x0469:1 (0x0001)  
	bool                                               bCanPlayMultipleInstances : 1;                              // 0x0469:2 (0x0001)  
	bool                                               bDisableParameterUpdatesWhilePlaying : 1;                   // 0x0469:3 (0x0001)  
	unsigned char                                      UnknownBit01 : 1;                                           // 0x0469:4 (0x0001)  MISSED
	unsigned char                                      UnknownBit02 : 1;                                           // 0x0469:5 (0x0001)  MISSED
	unsigned char                                      UnknownBit03 : 1;                                           // 0x0469:6 (0x0001)  MISSED
	unsigned char                                      UnknownBit04 : 1;                                           // 0x0469:7 (0x0001)  MISSED
	unsigned char                                      UnknownBit05 : 1;                                           // 0x046A:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit06 : 1;                                           // 0x046A:1 (0x0001)  MISSED
	unsigned char                                      UnknownBit07 : 1;                                           // 0x046A:2 (0x0001)  MISSED
	unsigned char                                      UnknownBit08 : 1;                                           // 0x046A:3 (0x0001)  MISSED
	unsigned char                                      UnknownBit09 : 1;                                           // 0x046A:4 (0x0001)  MISSED
	unsigned char                                      UnknownBit10 : 1;                                           // 0x046A:5 (0x0001)  MISSED
	bool                                               bAutoManageAttachment : 1;                                  // 0x046A:6 (0x0001)  
	unsigned char                                      UnknownData11_4[0x5];                                       // 0x046B   (0x0005)  MISSED
	FName                                              AudioComponentUserID;                                       // 0x0470   (0x0008)  
	float                                              PitchModulationMin;                                         // 0x0478   (0x0004)  
	float                                              PitchModulationMax;                                         // 0x047C   (0x0004)  
	float                                              VolumeModulationMin;                                        // 0x0480   (0x0004)  
	float                                              VolumeModulationMax;                                        // 0x0484   (0x0004)  
	float                                              VolumeMultiplier;                                           // 0x0488   (0x0004)  
	int32_t                                            EnvelopeFollowerAttackTime;                                 // 0x048C   (0x0004)  
	int32_t                                            EnvelopeFollowerReleaseTime;                                // 0x0490   (0x0004)  
	float                                              Priority;                                                   // 0x0494   (0x0004)  
	float                                              SubtitlePriority;                                           // 0x0498   (0x0004)  
	unsigned char                                      UnknownData12_5[0x4];                                       // 0x049C   (0x0004)  MISSED
	USoundEffectSourcePresetChain*                     SourceEffectChain;                                          // 0x04A0   (0x0008)  
	float                                              PitchMultiplier;                                            // 0x04A8   (0x0004)  
	float                                              LowPassFilterFrequency;                                     // 0x04AC   (0x0004)  
	unsigned char                                      UnknownData13_5[0x8];                                       // 0x04B0   (0x0008)  MISSED
	USoundAttenuation*                                 AttenuationSettings;                                        // 0x04B8   (0x0008)  
	FSoundAttenuationSettings                          AttenuationOverrides;                                       // 0x04C0   (0x03C8)  
	USoundConcurrency*                                 ConcurrencySettings;                                        // 0x0888   (0x0008)  
	TSet<USoundConcurrency*>                           ConcurrencySet;                                             // 0x0890   (0x0050)  
	unsigned char                                      UnknownData14_5[0xC];                                       // 0x08E0   (0x000C)  MISSED
	EAttachmentRule                                    AutoAttachLocationRule;                                     // 0x08EC   (0x0001)  
	EAttachmentRule                                    AutoAttachRotationRule;                                     // 0x08ED   (0x0001)  
	EAttachmentRule                                    AutoAttachScaleRule;                                        // 0x08EE   (0x0001)  
	unsigned char                                      UnknownData15_5[0x1];                                       // 0x08EF   (0x0001)  MISSED
	FSoundModulationDefaultRoutingSettings             ModulationRouting;                                          // 0x08F0   (0x0188)  
	FMulticastInlineDelegate                           OnAudioPlayStateChanged;                                    // 0x0A78   (0x0010)  
	unsigned char                                      UnknownData16_5[0x18];                                      // 0x0A88   (0x0018)  MISSED
	FMulticastInlineDelegate                           OnAudioVirtualizationChanged;                               // 0x0AA0   (0x0010)  
	unsigned char                                      UnknownData17_5[0x18];                                      // 0x0AB0   (0x0018)  MISSED
	FMulticastInlineDelegate                           OnAudioFinished;                                            // 0x0AC8   (0x0010)  
	unsigned char                                      UnknownData18_5[0x18];                                      // 0x0AD8   (0x0018)  MISSED
	FMulticastInlineDelegate                           OnAudioPlaybackPercent;                                     // 0x0AF0   (0x0010)  
	unsigned char                                      UnknownData19_5[0x18];                                      // 0x0B00   (0x0018)  MISSED
	FMulticastInlineDelegate                           OnAudioSingleEnvelopeValue;                                 // 0x0B18   (0x0010)  
	unsigned char                                      UnknownData20_5[0x18];                                      // 0x0B28   (0x0018)  MISSED
	FMulticastInlineDelegate                           OnAudioMultiEnvelopeValue;                                  // 0x0B40   (0x0010)  
	unsigned char                                      UnknownData21_5[0x18];                                      // 0x0B50   (0x0018)  MISSED
	FDelegateProperty                                  OnQueueSubtitles;                                           // 0x0B68   (0x0010)  
	unsigned char                                      UnknownData22_5[0x10];                                      // 0x0B78   (0x0010)  MISSED
	TWeakObjectPtr<USceneComponent*>                   AutoAttachParent;                                           // 0x0B88   (0x0008)  
	FName                                              AutoAttachSocketName;                                       // 0x0B90   (0x0008)  
	unsigned char                                      UnknownData23_6[0xC8];                                      // 0x0B98   (0x00C8)  MISSED


	/// Functions
	// Function /Script/Engine.AudioComponent.StopDelayed
	void StopDelayed(float DelayTime);                                                                                       // [0x48c0f80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.Stop
	void Stop();                                                                                                             // [0x134bcb0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetWaveParameter
	void SetWaveParameter(FName InName, USoundWave* InWave);                                                                 // [0x48c0e70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetVolumeMultiplier
	void SetVolumeMultiplier(float NewVolumeMultiplier);                                                                     // [0x48c0bc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetUISound
	void SetUISound(bool bInUISound);                                                                                        // [0x48c0980] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetSubmixSend
	void SetSubmixSend(USoundSubmixBase* Submix, float SendLevel);                                                           // [0x48c07a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetSourceBusSendPreEffect
	void SetSourceBusSendPreEffect(USoundSourceBus* SoundSourceBus, float SourceBusSendLevel);                               // [0x48c0530] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetSourceBusSendPostEffect
	void SetSourceBusSendPostEffect(USoundSourceBus* SoundSourceBus, float SourceBusSendLevel);                              // [0x48c0450] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetSound
	void SetSound(USoundBase* NewSound);                                                                                     // [0x48c0330] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetPitchMultiplier
	void SetPitchMultiplier(float NewPitchMultiplier);                                                                       // [0x48c0220] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetPaused
	void SetPaused(bool bPause);                                                                                             // [0x48c00e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetOutputToBusOnly
	void SetOutputToBusOnly(bool bInOutputToBusOnly);                                                                        // [0x48c0010] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetLowPassFilterFrequency
	void SetLowPassFilterFrequency(float InLowPassFilterFrequency);                                                          // [0x48bfdc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetLowPassFilterEnabled
	void SetLowPassFilterEnabled(bool InLowPassFilterEnabled);                                                               // [0x48bfcf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetIntParameter
	void SetIntParameter(FName InName, int32_t inInt);                                                                       // [0x48bfac0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetFloatParameter
	void SetFloatParameter(FName InName, float InFloat);                                                                     // [0x48bf780] Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetBoolParameter
	void SetBoolParameter(FName InName, bool InBool);                                                                        // [0x48bf090] Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetAudioBusSendPreEffect
	void SetAudioBusSendPreEffect(UAudioBus* AudioBus, float AudioBusSendLevel);                                             // [0x48bed90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.SetAudioBusSendPostEffect
	void SetAudioBusSendPostEffect(UAudioBus* AudioBus, float AudioBusSendLevel);                                            // [0x48becb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.PlayQuantized
	void PlayQuantized(UObject* WorldContextObject, UQuartzClockHandle*& InClockHandle, FQuartzQuantizationBoundary& InQuantizationBoundary, FDelegateProperty& InDelegate, float InStartTime, float InFadeInDuration, float InFadeVolumeLevel, EAudioFaderCurve InFadeCurve); // [0x48be6d0] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.Play
	void Play(float StartTime);                                                                                              // [0x48be640] Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.IsVirtualized
	bool IsVirtualized();                                                                                                    // [0x48be0e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AudioComponent.IsPlaying
	bool IsPlaying();                                                                                                        // [0x48be0a0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AudioComponent.HasCookedFFTData
	bool HasCookedFFTData();                                                                                                 // [0x48bdfc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AudioComponent.HasCookedAmplitudeEnvelopeData
	bool HasCookedAmplitudeEnvelopeData();                                                                                   // [0x48bdf70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AudioComponent.GetPlayState
	EAudioComponentPlayState GetPlayState();                                                                                 // [0x48bd7d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AudioComponent.GetCookedFFTDataForAllPlayingSounds
	bool GetCookedFFTDataForAllPlayingSounds(TArray<FSoundWaveSpectralDataPerSound>& OutSoundWaveSpectralData);              // [0x48bd3c0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.GetCookedFFTData
	bool GetCookedFFTData(TArray<float>& FrequenciesToGet, TArray<FSoundWaveSpectralData>& OutSoundWaveSpectralData);        // [0x48bd290] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.GetCookedEnvelopeDataForAllPlayingSounds
	bool GetCookedEnvelopeDataForAllPlayingSounds(TArray<FSoundWaveEnvelopeDataPerSound>& OutEnvelopeData);                  // [0x48bd1d0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.GetCookedEnvelopeData
	bool GetCookedEnvelopeData(float& OutEnvelopeData);                                                                      // [0x48bd120] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.FadeOut
	void FadeOut(float FadeOutDuration, float FadeVolumeLevel, EAudioFaderCurve FadeCurve);                                  // [0x48bcfc0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.FadeIn
	void FadeIn(float FadeInDuration, float FadeVolumeLevel, float StartTime, EAudioFaderCurve FadeCurve);                   // [0x48bce60] Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.BP_GetAttenuationSettingsToApply
	bool BP_GetAttenuationSettingsToApply(FSoundAttenuationSettings& OutAttenuationSettings);                                // [0x48bc870] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.AdjustVolume
	void AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel, EAudioFaderCurve FadeCurve);                      // [0x48bc750] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioComponent.AdjustAttenuation
	void AdjustAttenuation(FSoundAttenuationSettings& InAttenuationSettings);                                                // [0x48bc5a0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Engine.AssetImportData
/// Size: 0x0000 (0x000028 - 0x000028)
class UAssetImportData : public UObject
{ 
public:
};

/// Class /Script/Engine.AssetUserData
/// Size: 0x0000 (0x000028 - 0x000028)
class UAssetUserData : public UObject
{ 
public:
};

/// Class /Script/Engine.Exporter
/// Size: 0x0050 (0x000028 - 0x000078)
class UExporter : public UObject
{ 
public:
	UClass*                                            SupportedClass;                                             // 0x0028   (0x0008)  
	UObject*                                           ExportRootScope;                                            // 0x0030   (0x0008)  
	TArray<FString>                                    FormatExtension;                                            // 0x0038   (0x0010)  
	TArray<FString>                                    FormatDescription;                                          // 0x0048   (0x0010)  
	int32_t                                            PreferredFormatIndex;                                       // 0x0058   (0x0004)  
	int32_t                                            TextIndent;                                                 // 0x005C   (0x0004)  
	bool                                               bText : 1;                                                  // 0x0060:0 (0x0001)  
	bool                                               bSelectedOnly : 1;                                          // 0x0060:1 (0x0001)  
	bool                                               bForceFileOperations : 1;                                   // 0x0060:2 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0061   (0x0007)  MISSED
	UAssetExportTask*                                  ExportTask;                                                 // 0x0068   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0070   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.Exporter.ScriptRunAssetExportTask
	bool ScriptRunAssetExportTask(UAssetExportTask* Task);                                                                   // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.Exporter.RunAssetExportTasks
	bool RunAssetExportTasks(TArray<UAssetExportTask*>& ExportTasks);                                                        // [0x463cdc0] Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.Exporter.RunAssetExportTask
	bool RunAssetExportTask(UAssetExportTask* Task);                                                                         // [0x463cd30] Final|RequiredAPI|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/Engine.MovementComponent
/// Size: 0x0068 (0x0000A0 - 0x000108)
class UMovementComponent : public UActorComponent
{ 
public:
	USceneComponent*                                   UpdatedComponent;                                           // 0x00A0   (0x0008)  
	UPrimitiveComponent*                               UpdatedPrimitive;                                           // 0x00A8   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x00B0   (0x0008)  MISSED
	FVector                                            Velocity;                                                   // 0x00B8   (0x0018)  
	FVector                                            PlaneConstraintNormal;                                      // 0x00D0   (0x0018)  
	FVector                                            PlaneConstraintOrigin;                                      // 0x00E8   (0x0018)  
	bool                                               bUpdateOnlyIfRendered : 1;                                  // 0x0100:0 (0x0001)  
	bool                                               bAutoUpdateTickRegistration : 1;                            // 0x0100:1 (0x0001)  
	bool                                               bTickBeforeOwner : 1;                                       // 0x0100:2 (0x0001)  
	bool                                               bAutoRegisterUpdatedComponent : 1;                          // 0x0100:3 (0x0001)  
	bool                                               bConstrainToPlane : 1;                                      // 0x0100:4 (0x0001)  
	bool                                               bSnapToPlaneAtStart : 1;                                    // 0x0100:5 (0x0001)  
	bool                                               bAutoRegisterPhysicsVolumeUpdates : 1;                      // 0x0100:6 (0x0001)  
	bool                                               bComponentShouldUpdatePhysicsVolume : 1;                    // 0x0100:7 (0x0001)  
	unsigned char                                      UnknownData01_4[0x2];                                       // 0x0101   (0x0002)  MISSED
	EPlaneConstraintAxisSetting                        PlaneConstraintAxisSetting;                                 // 0x0103   (0x0001)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0104   (0x0004)  MISSED


	/// Functions
	// Function /Script/Engine.MovementComponent.StopMovementImmediately
	void StopMovementImmediately();                                                                                          // [0x48fc790] Native|Public|BlueprintCallable 
	// Function /Script/Engine.MovementComponent.SnapUpdatedComponentToPlane
	void SnapUpdatedComponentToPlane();                                                                                      // [0x48fc730] Native|Public|BlueprintCallable 
	// Function /Script/Engine.MovementComponent.SetUpdatedComponent
	void SetUpdatedComponent(USceneComponent* NewUpdatedComponent);                                                          // [0x132ca80] Native|Public|BlueprintCallable 
	// Function /Script/Engine.MovementComponent.SetPlaneConstraintOrigin
	void SetPlaneConstraintOrigin(FVector PlaneOrigin);                                                                      // [0x48fb7f0] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.MovementComponent.SetPlaneConstraintNormal
	void SetPlaneConstraintNormal(FVector PlaneNormal);                                                                      // [0x48fb760] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.MovementComponent.SetPlaneConstraintFromVectors
	void SetPlaneConstraintFromVectors(FVector Forward, FVector Up);                                                         // [0x48fb660] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.MovementComponent.SetPlaneConstraintEnabled
	void SetPlaneConstraintEnabled(bool bEnabled);                                                                           // [0x48fb5d0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.MovementComponent.SetPlaneConstraintAxisSetting
	void SetPlaneConstraintAxisSetting(EPlaneConstraintAxisSetting NewAxisSetting);                                          // [0x48fb550] Native|Public|BlueprintCallable 
	// Function /Script/Engine.MovementComponent.PhysicsVolumeChanged
	void PhysicsVolumeChanged(APhysicsVolume* NewVolume);                                                                    // [0x46d68c0] Native|Public        
	// Function /Script/Engine.MovementComponent.K2_MoveUpdatedComponent
	bool K2_MoveUpdatedComponent(FVector Delta, FRotator NewRotation, FHitResult& OutHit, bool bSweep, bool bTeleport);      // [0x48f8130] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.MovementComponent.IsExceedingMaxSpeed
	bool IsExceedingMaxSpeed(float MaxSpeed);                                                                                // [0x48f7ed0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MovementComponent.GetPlaneConstraintOrigin
	FVector GetPlaneConstraintOrigin();                                                                                      // [0x48f7a70] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MovementComponent.GetPlaneConstraintNormal
	FVector GetPlaneConstraintNormal();                                                                                      // [0x48f7a40] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MovementComponent.GetPlaneConstraintAxisSetting
	EPlaneConstraintAxisSetting GetPlaneConstraintAxisSetting();                                                             // [0x48f7a20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MovementComponent.GetPhysicsVolume
	APhysicsVolume* GetPhysicsVolume();                                                                                      // [0x48f79f0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MovementComponent.GetMaxSpeed
	float GetMaxSpeed();                                                                                                     // [0x48f7900] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MovementComponent.GetGravityZ
	float GetGravityZ();                                                                                                     // [0x48f7630] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MovementComponent.ConstrainNormalToPlane
	FVector ConstrainNormalToPlane(FVector Normal);                                                                          // [0x48f6a30] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MovementComponent.ConstrainLocationToPlane
	FVector ConstrainLocationToPlane(FVector Location);                                                                      // [0x48f6970] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MovementComponent.ConstrainDirectionToPlane
	FVector ConstrainDirectionToPlane(FVector Direction);                                                                    // [0x48f68b0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.NavMovementComponent
/// Size: 0x0048 (0x000108 - 0x000150)
class UNavMovementComponent : public UMovementComponent
{ 
public:
	FNavAgentProperties                                NavAgentProps;                                              // 0x0108   (0x0038)  
	float                                              FixedPathBrakingDistance;                                   // 0x0140   (0x0004)  
	bool                                               bUpdateNavAgentWithOwnersCollision : 1;                     // 0x0144:0 (0x0001)  
	bool                                               bUseAccelerationForPaths : 1;                               // 0x0144:1 (0x0001)  
	bool                                               bUseFixedBrakingDistanceForPaths : 1;                       // 0x0144:2 (0x0001)  
	FMovementProperties                                MovementState;                                              // 0x0145   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0146   (0x0002)  MISSED
	UObject*                                           PathFollowingComp;                                          // 0x0148   (0x0008)  


	/// Functions
	// Function /Script/Engine.NavMovementComponent.StopMovementKeepPathing
	void StopMovementKeepPathing();                                                                                          // [0x48fc7b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.NavMovementComponent.StopActiveMovement
	void StopActiveMovement();                                                                                               // [0x48fc770] Native|Public|BlueprintCallable 
	// Function /Script/Engine.NavMovementComponent.IsSwimming
	bool IsSwimming();                                                                                                       // [0x48f8100] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.NavMovementComponent.IsMovingOnGround
	bool IsMovingOnGround();                                                                                                 // [0x48be220] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.NavMovementComponent.IsFlying
	bool IsFlying();                                                                                                         // [0x48f7fa0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.NavMovementComponent.IsFalling
	bool IsFalling();                                                                                                        // [0x48f7f70] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.NavMovementComponent.IsCrouching
	bool IsCrouching();                                                                                                      // [0x48f7ea0] Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.PawnMovementComponent
/// Size: 0x0008 (0x000150 - 0x000158)
class UPawnMovementComponent : public UNavMovementComponent
{ 
public:
	APawn*                                             PawnOwner;                                                  // 0x0150   (0x0008)  


	/// Functions
	// Function /Script/Engine.PawnMovementComponent.IsMoveInputIgnored
	bool IsMoveInputIgnored();                                                                                               // [0x48f80d0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PawnMovementComponent.GetPendingInputVector
	FVector GetPendingInputVector();                                                                                         // [0x48f7980] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PawnMovementComponent.GetPawnOwner
	APawn* GetPawnOwner();                                                                                                   // [0x48f7960] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PawnMovementComponent.GetLastInputVector
	FVector GetLastInputVector();                                                                                            // [0x48f76f0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PawnMovementComponent.ConsumeInputVector
	FVector ConsumeInputVector();                                                                                            // [0x48f6af0] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PawnMovementComponent.AddInputVector
	void AddInputVector(FVector WorldVector, bool bForce);                                                                   // [0x48f63d0] Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.CharacterMovementComponent
/// Size: 0x0DA8 (0x000158 - 0x000F00)
class UCharacterMovementComponent : public UPawnMovementComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0158   (0x0010)  MISSED
	ACharacter*                                        CharacterOwner;                                             // 0x0168   (0x0008)  
	float                                              GravityScale;                                               // 0x0170   (0x0004)  
	float                                              MaxStepHeight;                                              // 0x0174   (0x0004)  
	float                                              JumpZVelocity;                                              // 0x0178   (0x0004)  
	float                                              JumpOffJumpZFactor;                                         // 0x017C   (0x0004)  
	unsigned char                                      UnknownData01_5[0x1C];                                      // 0x0180   (0x001C)  MISSED
	float                                              WalkableFloorAngle;                                         // 0x019C   (0x0004)  
	float                                              WalkableFloorZ;                                             // 0x01A0   (0x0004)  
	TEnumAsByte<EMovementMode>                         MovementMode;                                               // 0x01A4   (0x0001)  
	char                                               CustomMovementMode;                                         // 0x01A5   (0x0001)  
	ENetworkSmoothingMode                              NetworkSmoothingMode;                                       // 0x01A6   (0x0001)  
	unsigned char                                      UnknownData02_5[0x1];                                       // 0x01A7   (0x0001)  MISSED
	float                                              GroundFriction;                                             // 0x01A8   (0x0004)  
	unsigned char                                      UnknownData03_5[0x3C];                                      // 0x01AC   (0x003C)  MISSED
	float                                              MaxWalkSpeed;                                               // 0x01E8   (0x0004)  
	float                                              MaxWalkSpeedCrouched;                                       // 0x01EC   (0x0004)  
	float                                              MaxSwimSpeed;                                               // 0x01F0   (0x0004)  
	float                                              MaxFlySpeed;                                                // 0x01F4   (0x0004)  
	float                                              MaxCustomMovementSpeed;                                     // 0x01F8   (0x0004)  
	float                                              MaxAcceleration;                                            // 0x01FC   (0x0004)  
	float                                              MinAnalogWalkSpeed;                                         // 0x0200   (0x0004)  
	float                                              BrakingFrictionFactor;                                      // 0x0204   (0x0004)  
	float                                              BrakingFriction;                                            // 0x0208   (0x0004)  
	float                                              BrakingSubStepTime;                                         // 0x020C   (0x0004)  
	float                                              BrakingDecelerationWalking;                                 // 0x0210   (0x0004)  
	float                                              BrakingDecelerationFalling;                                 // 0x0214   (0x0004)  
	float                                              BrakingDecelerationSwimming;                                // 0x0218   (0x0004)  
	float                                              BrakingDecelerationFlying;                                  // 0x021C   (0x0004)  
	float                                              AirControl;                                                 // 0x0220   (0x0004)  
	float                                              AirControlBoostMultiplier;                                  // 0x0224   (0x0004)  
	float                                              AirControlBoostVelocityThreshold;                           // 0x0228   (0x0004)  
	float                                              FallingLateralFriction;                                     // 0x022C   (0x0004)  
	float                                              CrouchedHalfHeight;                                         // 0x0230   (0x0004)  
	float                                              Buoyancy;                                                   // 0x0234   (0x0004)  
	float                                              PerchRadiusThreshold;                                       // 0x0238   (0x0004)  
	float                                              PerchAdditionalHeight;                                      // 0x023C   (0x0004)  
	FRotator                                           RotationRate;                                               // 0x0240   (0x0018)  
	bool                                               bUseSeparateBrakingFriction : 1;                            // 0x0258:0 (0x0001)  
	bool                                               bApplyGravityWhileJumping : 1;                              // 0x0258:1 (0x0001)  
	bool                                               bUseControllerDesiredRotation : 1;                          // 0x0258:2 (0x0001)  
	bool                                               bOrientRotationToMovement : 1;                              // 0x0258:3 (0x0001)  
	bool                                               bSweepWhileNavWalking : 1;                                  // 0x0258:4 (0x0001)  
	unsigned char                                      UnknownBit04 : 1;                                           // 0x0258:5 (0x0001)  MISSED
	bool                                               bMovementInProgress : 1;                                    // 0x0258:6 (0x0001)  
	bool                                               bEnableScopedMovementUpdates : 1;                           // 0x0258:7 (0x0001)  
	bool                                               bEnableServerDualMoveScopedMovementUpdates : 1;             // 0x0259:0 (0x0001)  
	bool                                               bForceMaxAccel : 1;                                         // 0x0259:1 (0x0001)  
	bool                                               bRunPhysicsWithNoController : 1;                            // 0x0259:2 (0x0001)  
	bool                                               bForceNextFloorCheck : 1;                                   // 0x0259:3 (0x0001)  
	bool                                               bShrinkProxyCapsule : 1;                                    // 0x0259:4 (0x0001)  
	bool                                               bCanWalkOffLedges : 1;                                      // 0x0259:5 (0x0001)  
	bool                                               bCanWalkOffLedgesWhenCrouching : 1;                         // 0x0259:6 (0x0001)  
	unsigned char                                      UnknownBit05 : 1;                                           // 0x0259:7 (0x0001)  MISSED
	unsigned char                                      UnknownBit06 : 1;                                           // 0x025A:0 (0x0001)  MISSED
	bool                                               bNetworkSkipProxyPredictionOnNetUpdate : 1;                 // 0x025A:1 (0x0001)  
	bool                                               bNetworkAlwaysReplicateTransformUpdateTimestamp : 1;        // 0x025A:2 (0x0001)  
	bool                                               bDeferUpdateMoveComponent : 1;                              // 0x025A:3 (0x0001)  
	bool                                               bEnablePhysicsInteraction : 1;                              // 0x025A:4 (0x0001)  
	bool                                               bTouchForceScaledToMass : 1;                                // 0x025A:5 (0x0001)  
	bool                                               bPushForceScaledToMass : 1;                                 // 0x025A:6 (0x0001)  
	bool                                               bPushForceUsingZOffset : 1;                                 // 0x025A:7 (0x0001)  
	bool                                               bScalePushForceToVelocity : 1;                              // 0x025B:0 (0x0001)  
	unsigned char                                      UnknownData07_4[0x4];                                       // 0x025C   (0x0004)  MISSED
	USceneComponent*                                   DeferredUpdatedMoveComponent;                               // 0x0260   (0x0008)  
	float                                              MaxOutOfWaterStepHeight;                                    // 0x0268   (0x0004)  
	float                                              OutofWaterZ;                                                // 0x026C   (0x0004)  
	float                                              Mass;                                                       // 0x0270   (0x0004)  
	float                                              StandingDownwardForceScale;                                 // 0x0274   (0x0004)  
	float                                              InitialPushForceFactor;                                     // 0x0278   (0x0004)  
	float                                              PushForceFactor;                                            // 0x027C   (0x0004)  
	float                                              PushForcePointZOffsetFactor;                                // 0x0280   (0x0004)  
	float                                              TouchForceFactor;                                           // 0x0284   (0x0004)  
	float                                              MinTouchForce;                                              // 0x0288   (0x0004)  
	float                                              MaxTouchForce;                                              // 0x028C   (0x0004)  
	float                                              RepulsionForce;                                             // 0x0290   (0x0004)  
	unsigned char                                      UnknownData08_5[0x4];                                       // 0x0294   (0x0004)  MISSED
	FVector                                            Acceleration;                                               // 0x0298   (0x0018)  
	FQuat                                              LastUpdateRotation;                                         // 0x02B0   (0x0020)  
	FVector                                            LastUpdateLocation;                                         // 0x02D0   (0x0018)  
	FVector                                            LastUpdateVelocity;                                         // 0x02E8   (0x0018)  
	float                                              ServerLastTransformUpdateTimeStamp;                         // 0x0300   (0x0004)  
	float                                              ServerLastClientGoodMoveAckTime;                            // 0x0304   (0x0004)  
	float                                              ServerLastClientAdjustmentTime;                             // 0x0308   (0x0004)  
	unsigned char                                      UnknownData09_5[0x4];                                       // 0x030C   (0x0004)  MISSED
	FVector                                            PendingImpulseToApply;                                      // 0x0310   (0x0018)  
	FVector                                            PendingForceToApply;                                        // 0x0328   (0x0018)  
	float                                              AnalogInputModifier;                                        // 0x0340   (0x0004)  
	unsigned char                                      UnknownData10_5[0xC];                                       // 0x0344   (0x000C)  MISSED
	float                                              MaxSimulationTimeStep;                                      // 0x0350   (0x0004)  
	int32_t                                            MaxSimulationIterations;                                    // 0x0354   (0x0004)  
	int32_t                                            MaxJumpApexAttemptsPerSimulation;                           // 0x0358   (0x0004)  
	float                                              MaxDepenetrationWithGeometry;                               // 0x035C   (0x0004)  
	float                                              MaxDepenetrationWithGeometryAsProxy;                        // 0x0360   (0x0004)  
	float                                              MaxDepenetrationWithPawn;                                   // 0x0364   (0x0004)  
	float                                              MaxDepenetrationWithPawnAsProxy;                            // 0x0368   (0x0004)  
	float                                              NetworkSimulatedSmoothLocationTime;                         // 0x036C   (0x0004)  
	float                                              NetworkSimulatedSmoothRotationTime;                         // 0x0370   (0x0004)  
	float                                              ListenServerNetworkSimulatedSmoothLocationTime;             // 0x0374   (0x0004)  
	float                                              ListenServerNetworkSimulatedSmoothRotationTime;             // 0x0378   (0x0004)  
	float                                              NetProxyShrinkRadius;                                       // 0x037C   (0x0004)  
	float                                              NetProxyShrinkHalfHeight;                                   // 0x0380   (0x0004)  
	float                                              NetworkMaxSmoothUpdateDistance;                             // 0x0384   (0x0004)  
	float                                              NetworkNoSmoothUpdateDistance;                              // 0x0388   (0x0004)  
	float                                              NetworkMinTimeBetweenClientAckGoodMoves;                    // 0x038C   (0x0004)  
	float                                              NetworkMinTimeBetweenClientAdjustments;                     // 0x0390   (0x0004)  
	float                                              NetworkMinTimeBetweenClientAdjustmentsLargeCorrection;      // 0x0394   (0x0004)  
	float                                              NetworkLargeClientCorrectionDistance;                       // 0x0398   (0x0004)  
	float                                              LedgeCheckThreshold;                                        // 0x039C   (0x0004)  
	float                                              JumpOutOfWaterPitch;                                        // 0x03A0   (0x0004)  
	unsigned char                                      UnknownData11_5[0x4];                                       // 0x03A4   (0x0004)  MISSED
	FFindFloorResult                                   CurrentFloor;                                               // 0x03A8   (0x00F8)  
	TEnumAsByte<EMovementMode>                         DefaultLandMovementMode;                                    // 0x04A0   (0x0001)  
	TEnumAsByte<EMovementMode>                         DefaultWaterMovementMode;                                   // 0x04A1   (0x0001)  
	TEnumAsByte<EMovementMode>                         GroundMovementMode;                                         // 0x04A2   (0x0001)  
	unsigned char                                      UnknownData12_5[0x9];                                       // 0x04A3   (0x0009)  MISSED
	bool                                               bMaintainHorizontalGroundVelocity : 1;                      // 0x04AC:0 (0x0001)  
	bool                                               bImpartBaseVelocityX : 1;                                   // 0x04AC:1 (0x0001)  
	bool                                               bImpartBaseVelocityY : 1;                                   // 0x04AC:2 (0x0001)  
	bool                                               bImpartBaseVelocityZ : 1;                                   // 0x04AC:3 (0x0001)  
	bool                                               bImpartBaseAngularVelocity : 1;                             // 0x04AC:4 (0x0001)  
	bool                                               bJustTeleported : 1;                                        // 0x04AC:5 (0x0001)  
	bool                                               bNetworkUpdateReceived : 1;                                 // 0x04AC:6 (0x0001)  
	bool                                               bNetworkMovementModeChanged : 1;                            // 0x04AC:7 (0x0001)  
	bool                                               bIgnoreClientMovementErrorChecksAndCorrection : 1;          // 0x04AD:0 (0x0001)  
	bool                                               bServerAcceptClientAuthoritativePosition : 1;               // 0x04AD:1 (0x0001)  
	bool                                               bNotifyApex : 1;                                            // 0x04AD:2 (0x0001)  
	bool                                               bCheatFlying : 1;                                           // 0x04AD:3 (0x0001)  
	bool                                               bWantsToCrouch : 1;                                         // 0x04AD:4 (0x0001)  
	bool                                               bCrouchMaintainsBaseLocation : 1;                           // 0x04AD:5 (0x0001)  
	bool                                               bIgnoreBaseRotation : 1;                                    // 0x04AD:6 (0x0001)  
	bool                                               bFastAttachedMove : 1;                                      // 0x04AD:7 (0x0001)  
	bool                                               bAlwaysCheckFloor : 1;                                      // 0x04AE:0 (0x0001)  
	bool                                               bUseFlatBaseForFloorChecks : 1;                             // 0x04AE:1 (0x0001)  
	bool                                               bPerformingJumpOff : 1;                                     // 0x04AE:2 (0x0001)  
	bool                                               bWantsToLeaveNavWalking : 1;                                // 0x04AE:3 (0x0001)  
	bool                                               bUseRVOAvoidance : 1;                                       // 0x04AE:4 (0x0001)  
	bool                                               bRequestedMoveUseAcceleration : 1;                          // 0x04AE:5 (0x0001)  
	unsigned char                                      UnknownBit13 : 1;                                           // 0x04AE:6 (0x0001)  MISSED
	bool                                               bWasSimulatingRootMotion : 1;                               // 0x04AE:7 (0x0001)  
	bool                                               bAllowPhysicsRotationDuringAnimRootMotion : 1;              // 0x04AF:0 (0x0001)  
	float                                              FormerBaseVelocityDecayHalfLife;                            // 0x04B0   (0x0004)  
	bool                                               bHasRequestedVelocity : 1;                                  // 0x04B4:0 (0x0001)  
	bool                                               bRequestedMoveWithMaxSpeed : 1;                             // 0x04B4:1 (0x0001)  
	bool                                               bWasAvoidanceUpdated : 1;                                   // 0x04B4:2 (0x0001)  
	unsigned char                                      UnknownBit14 : 1;                                           // 0x04B4:3 (0x0001)  MISSED
	unsigned char                                      UnknownBit15 : 1;                                           // 0x04B4:4 (0x0001)  MISSED
	bool                                               bProjectNavMeshWalking : 1;                                 // 0x04B4:5 (0x0001)  
	bool                                               bProjectNavMeshOnBothWorldChannels : 1;                     // 0x04B4:6 (0x0001)  
	unsigned char                                      UnknownData16_4[0x1F];                                      // 0x04B5   (0x001F)  MISSED
	float                                              AvoidanceConsiderationRadius;                               // 0x04D4   (0x0004)  
	FVector                                            RequestedVelocity;                                          // 0x04D8   (0x0018)  
	FVector                                            LastUpdateRequestedVelocity;                                // 0x04F0   (0x0018)  
	int32_t                                            AvoidanceUID;                                               // 0x0508   (0x0004)  
	FNavAvoidanceMask                                  AvoidanceGroup;                                             // 0x050C   (0x0004)  
	FNavAvoidanceMask                                  GroupsToAvoid;                                              // 0x0510   (0x0004)  
	FNavAvoidanceMask                                  GroupsToIgnore;                                             // 0x0514   (0x0004)  
	float                                              AvoidanceWeight;                                            // 0x0518   (0x0004)  
	unsigned char                                      UnknownData17_5[0x4];                                       // 0x051C   (0x0004)  MISSED
	FVector                                            PendingLaunchVelocity;                                      // 0x0520   (0x0018)  
	unsigned char                                      UnknownData18_5[0x138];                                     // 0x0538   (0x0138)  MISSED
	float                                              NavMeshProjectionInterval;                                  // 0x0670   (0x0004)  
	float                                              NavMeshProjectionTimer;                                     // 0x0674   (0x0004)  
	float                                              NavMeshProjectionInterpSpeed;                               // 0x0678   (0x0004)  
	float                                              NavMeshProjectionHeightScaleUp;                             // 0x067C   (0x0004)  
	float                                              NavMeshProjectionHeightScaleDown;                           // 0x0680   (0x0004)  
	float                                              NavWalkingFloorDistTolerance;                               // 0x0684   (0x0004)  
	unsigned char                                      UnknownData19_5[0x30];                                      // 0x0688   (0x0030)  MISSED
	FCharacterMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction;                                    // 0x06B8   (0x0030)  
	unsigned char                                      UnknownData20_5[0x18];                                      // 0x06E8   (0x0018)  MISSED
	float                                              MinTimeBetweenTimeStampResets;                              // 0x0700   (0x0004)  
	unsigned char                                      UnknownData21_5[0x554];                                     // 0x0704   (0x0554)  MISSED
	FRootMotionSourceGroup                             CurrentRootMotion;                                          // 0x0C58   (0x0048)  
	FRootMotionSourceGroup                             ServerCorrectionRootMotion;                                 // 0x0CA0   (0x0048)  
	unsigned char                                      UnknownData22_5[0x168];                                     // 0x0CE8   (0x0168)  MISSED
	FRootMotionMovementParams                          RootMotionParams;                                           // 0x0E50   (0x0070)  
	FVector                                            AnimRootMotionVelocity;                                     // 0x0EC0   (0x0018)  
	unsigned char                                      UnknownData23_6[0x28];                                      // 0x0ED8   (0x0028)  MISSED


	/// Functions
	// Function /Script/Engine.CharacterMovementComponent.SetWalkableFloorZ
	void SetWalkableFloorZ(float InWalkableFloorZ);                                                                          // [0x48c0d90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.SetWalkableFloorAngle
	void SetWalkableFloorAngle(float InWalkableFloorAngle);                                                                  // [0x48c0cd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.SetMovementMode
	void SetMovementMode(TEnumAsByte<EMovementMode> NewMovementMode, char NewCustomMode);                                    // [0x48bfeb0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.SetGroupsToIgnoreMask
	void SetGroupsToIgnoreMask(FNavAvoidanceMask& GroupMask);                                                                // [0x48bfa20] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.SetGroupsToIgnore
	void SetGroupsToIgnore(int32_t GroupFlags);                                                                              // [0x48bf990] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.SetGroupsToAvoidMask
	void SetGroupsToAvoidMask(FNavAvoidanceMask& GroupMask);                                                                 // [0x48bf8f0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.SetGroupsToAvoid
	void SetGroupsToAvoid(int32_t GroupFlags);                                                                               // [0x48bf860] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.SetCrouchedHalfHeight
	void SetCrouchedHalfHeight(float NewValue);                                                                              // [0x48bf6e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.SetAvoidanceGroupMask
	void SetAvoidanceGroupMask(FNavAvoidanceMask& GroupMask);                                                                // [0x48beff0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.SetAvoidanceGroup
	void SetAvoidanceGroup(int32_t GroupFlags);                                                                              // [0x48bef60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.SetAvoidanceEnabled
	void SetAvoidanceEnabled(bool bEnable);                                                                                  // [0x48bee70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.K2_GetWalkableFloorZ
	float K2_GetWalkableFloorZ();                                                                                            // [0x1327ff0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.K2_GetWalkableFloorAngle
	float K2_GetWalkableFloorAngle();                                                                                        // [0x48be620] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.K2_FindFloor
	void K2_FindFloor(FVector CapsuleLocation, FFindFloorResult& FloorResult);                                               // [0x48be510] Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.K2_ComputeFloorDist
	void K2_ComputeFloorDist(FVector CapsuleLocation, float LineDistance, float SweepDistance, float SweepRadius, FFindFloorResult& FloorResult); // [0x48be250] Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.IsWalking
	bool IsWalking();                                                                                                        // [0x48be220] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.IsWalkable
	bool IsWalkable(FHitResult& Hit);                                                                                        // [0x48be110] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetValidPerchRadius
	float GetValidPerchRadius();                                                                                             // [0x48bdf40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetPerchRadiusThreshold
	float GetPerchRadiusThreshold();                                                                                         // [0x48bd7a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetMovementBase
	UPrimitiveComponent* GetMovementBase();                                                                                  // [0x48bd760] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetMinAnalogSpeed
	float GetMinAnalogSpeed();                                                                                               // [0x48bd720] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetMaxJumpHeightWithJumpTime
	float GetMaxJumpHeightWithJumpTime();                                                                                    // [0x48bd6e0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetMaxJumpHeight
	float GetMaxJumpHeight();                                                                                                // [0x48bd6a0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetMaxBrakingDeceleration
	float GetMaxBrakingDeceleration();                                                                                       // [0x48bd660] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetMaxAcceleration
	float GetMaxAcceleration();                                                                                              // [0x48bd620] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetLastUpdateVelocity
	FVector GetLastUpdateVelocity();                                                                                         // [0x48bd5f0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetLastUpdateRotation
	FRotator GetLastUpdateRotation();                                                                                        // [0x48bd5a0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetLastUpdateRequestedVelocity
	FVector GetLastUpdateRequestedVelocity();                                                                                // [0x48bd570] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetLastUpdateLocation
	FVector GetLastUpdateLocation();                                                                                         // [0x48bd540] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetImpartedMovementBaseVelocity
	FVector GetImpartedMovementBaseVelocity();                                                                               // [0x48bd4f0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetCurrentAcceleration
	FVector GetCurrentAcceleration();                                                                                        // [0x48bd4c0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetCrouchedHalfHeight
	float GetCrouchedHalfHeight();                                                                                           // [0x48bd4a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetCharacterOwner
	ACharacter* GetCharacterOwner();                                                                                         // [0x48bd100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.GetAnalogInputModifier
	float GetAnalogInputModifier();                                                                                          // [0x48bd0e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CharacterMovementComponent.DisableMovement
	void DisableMovement();                                                                                                  // [0x48bce40] Native|Public|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.ClearAccumulatedForces
	void ClearAccumulatedForces();                                                                                           // [0x48bcd50] Native|Public|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.CapsuleTouched
	void CapsuleTouched(UPrimitiveComponent* OverlappedComp, AActor* Other, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x48bcaf0] Native|Protected|HasOutParms 
	// Function /Script/Engine.CharacterMovementComponent.CalcVelocity
	void CalcVelocity(float DeltaTime, float Friction, bool bFluid, float BrakingDeceleration);                              // [0x48bc980] Native|Public|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.AddImpulse
	void AddImpulse(FVector Impulse, bool bVelocityChange);                                                                  // [0x48bc390] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.CharacterMovementComponent.AddForce
	void AddForce(FVector Force);                                                                                            // [0x48bc300] Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.EdGraph
/// Size: 0x0038 (0x000028 - 0x000060)
class UEdGraph : public UObject
{ 
public:
	UClass*                                            Schema;                                                     // 0x0028   (0x0008)  
	TArray<UEdGraphNode*>                              Nodes;                                                      // 0x0030   (0x0010)  
	bool                                               bEditable : 1;                                              // 0x0040:0 (0x0001)  
	bool                                               bAllowDeletion : 1;                                         // 0x0040:1 (0x0001)  
	bool                                               bAllowRenaming : 1;                                         // 0x0040:2 (0x0001)  
	unsigned char                                      UnknownData00_6[0x1F];                                      // 0x0041   (0x001F)  MISSED
};

/// Class /Script/Engine.SoundBase
/// Size: 0x0140 (0x000028 - 0x000168)
class USoundBase : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	USoundClass*                                       SoundClassObject;                                           // 0x0030   (0x0008)  
	bool                                               bDebug : 1;                                                 // 0x0038:0 (0x0001)  
	bool                                               bOverrideConcurrency : 1;                                   // 0x0038:1 (0x0001)  
	bool                                               bEnableBusSends : 1;                                        // 0x0038:2 (0x0001)  
	bool                                               bEnableBaseSubmix : 1;                                      // 0x0038:3 (0x0001)  
	bool                                               bEnableSubmixSends : 1;                                     // 0x0038:4 (0x0001)  
	bool                                               bHasDelayNode : 1;                                          // 0x0038:5 (0x0001)  
	bool                                               bHasConcatenatorNode : 1;                                   // 0x0038:6 (0x0001)  
	bool                                               bBypassVolumeScaleForPriority : 1;                          // 0x0038:7 (0x0001)  
	EVirtualizationMode                                VirtualizationMode;                                         // 0x0039   (0x0001)  
	unsigned char                                      UnknownData01_5[0x56];                                      // 0x003A   (0x0056)  MISSED
	TSet<USoundConcurrency*>                           ConcurrencySet;                                             // 0x0090   (0x0050)  
	FSoundConcurrencySettings                          ConcurrencyOverrides;                                       // 0x00E0   (0x0020)  
	float                                              Duration;                                                   // 0x0100   (0x0004)  
	float                                              MaxDistance;                                                // 0x0104   (0x0004)  
	float                                              TotalSamples;                                               // 0x0108   (0x0004)  
	float                                              Priority;                                                   // 0x010C   (0x0004)  
	USoundAttenuation*                                 AttenuationSettings;                                        // 0x0110   (0x0008)  
	USoundSubmixBase*                                  SoundSubmixObject;                                          // 0x0118   (0x0008)  
	TArray<FSoundSubmixSendInfo>                       SoundSubmixSends;                                           // 0x0120   (0x0010)  
	USoundEffectSourcePresetChain*                     SourceEffectChain;                                          // 0x0130   (0x0008)  
	TArray<FSoundSourceBusSendInfo>                    BusSends;                                                   // 0x0138   (0x0010)  
	TArray<FSoundSourceBusSendInfo>                    PreEffectBusSends;                                          // 0x0148   (0x0010)  
	TArray<UAssetUserData*>                            AssetUserData;                                              // 0x0158   (0x0010)  
};

/// Class /Script/Engine.SoundWave
/// Size: 0x02E8 (0x000168 - 0x000450)
class USoundWave : public USoundBase
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0168   (0x0010)  MISSED
	int32_t                                            CompressionQuality;                                         // 0x0178   (0x0004)  
	int32_t                                            StreamingPriority;                                          // 0x017C   (0x0004)  
	ESoundwaveSampleRateSettings                       SampleRateQuality;                                          // 0x0180   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0181   (0x0001)  MISSED
	TEnumAsByte<ESoundGroup>                           SoundGroup;                                                 // 0x0182   (0x0001)  
	bool                                               bLooping : 1;                                               // 0x0183:0 (0x0001)  
	bool                                               bStreaming : 1;                                             // 0x0183:1 (0x0001)  
	ESoundAssetCompressionType                         SoundAssetCompressionType;                                  // 0x0184   (0x0001)  
	bool                                               bSeekableStreaming : 1;                                     // 0x0185:0 (0x0001)  
	bool                                               bUseBinkAudio : 1;                                          // 0x0185:1 (0x0001)  
	unsigned char                                      UnknownData02_4[0x1A];                                      // 0x0186   (0x001A)  MISSED
	FSoundModulationDefaultRoutingSettings             ModulationSettings;                                         // 0x01A0   (0x0188)  
	TArray<float>                                      FrequenciesToAnalyze;                                       // 0x0328   (0x0010)  
	TArray<FSoundWaveSpectralTimeData>                 CookedSpectralTimeData;                                     // 0x0338   (0x0010)  
	TArray<FSoundWaveEnvelopeTimeData>                 CookedEnvelopeTimeData;                                     // 0x0348   (0x0010)  
	int32_t                                            InitialChunkSize;                                           // 0x0358   (0x0004)  
	unsigned char                                      UnknownData03_5[0x40];                                      // 0x035C   (0x0040)  MISSED
	unsigned char                                      UnknownBit04 : 1;                                           // 0x039C:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit05 : 1;                                           // 0x039C:1 (0x0001)  MISSED
	unsigned char                                      UnknownBit06 : 1;                                           // 0x039C:2 (0x0001)  MISSED
	unsigned char                                      UnknownBit07 : 1;                                           // 0x039C:3 (0x0001)  MISSED
	unsigned char                                      UnknownBit08 : 1;                                           // 0x039C:4 (0x0001)  MISSED
	bool                                               bMature : 1;                                                // 0x039C:5 (0x0001)  
	bool                                               bManualWordWrap : 1;                                        // 0x039C:6 (0x0001)  
	bool                                               bSingleLine : 1;                                            // 0x039C:7 (0x0001)  
	bool                                               bIsAmbisonics : 1;                                          // 0x039D:0 (0x0001)  
	ESoundWaveLoadingBehavior                          LoadingBehavior;                                            // 0x039E   (0x0001)  
	unsigned char                                      UnknownData09_5[0x1];                                       // 0x039F   (0x0001)  MISSED
	FString                                            SpokenText;                                                 // 0x03A0   (0x0010)  
	float                                              SubtitlePriority;                                           // 0x03B0   (0x0004)  
	float                                              Volume;                                                     // 0x03B4   (0x0004)  
	float                                              Pitch;                                                      // 0x03B8   (0x0004)  
	int32_t                                            NumChannels;                                                // 0x03BC   (0x0004)  
	TArray<FSoundWaveCuePoint>                         CuePoints;                                                  // 0x03C0   (0x0010)  
	int32_t                                            SampleRate;                                                 // 0x03D0   (0x0004)  
	unsigned char                                      UnknownData10_5[0xC];                                       // 0x03D4   (0x000C)  MISSED
	TArray<FSubtitleCue>                               Subtitles;                                                  // 0x03E0   (0x0010)  
	UCurveTable*                                       Curves;                                                     // 0x03F0   (0x0008)  
	UCurveTable*                                       InternalCurves;                                             // 0x03F8   (0x0008)  
	unsigned char                                      UnknownData11_6[0x50];                                      // 0x0400   (0x0050)  MISSED


	/// Functions
	// Function /Script/Engine.SoundWave.SetSoundAssetCompressionType
	void SetSoundAssetCompressionType(ESoundAssetCompressionType InSoundAssetCompressionType, bool bMarkDirty);              // [0x469c9f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SoundWave.GetSoundAssetCompressionType
	ESoundAssetCompressionType GetSoundAssetCompressionType();                                                               // [0x469c640] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.SoundWaveProcedural
/// Size: 0x0050 (0x000450 - 0x0004A0)
class USoundWaveProcedural : public USoundWave
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0450   (0x0050)  MISSED
};

/// Class /Script/Engine.SoundEffectPreset
/// Size: 0x0040 (0x000028 - 0x000068)
class USoundEffectPreset : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x0028   (0x0040)  MISSED
};

/// Class /Script/Engine.SoundEffectSubmixPreset
/// Size: 0x0000 (0x000068 - 0x000068)
class USoundEffectSubmixPreset : public USoundEffectPreset
{ 
public:
};

/// Class /Script/Engine.SoundEffectSourcePreset
/// Size: 0x0000 (0x000068 - 0x000068)
class USoundEffectSourcePreset : public USoundEffectPreset
{ 
public:
};

/// Class /Script/Engine.Controller
/// Size: 0x0098 (0x000290 - 0x000328)
class AController : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0290   (0x0008)  MISSED
	APlayerState*                                      PlayerState;                                                // 0x0298   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x02A0   (0x0008)  MISSED
	FMulticastInlineDelegate                           OnInstigatedAnyDamage;                                      // 0x02A8   (0x0010)  
	FMulticastInlineDelegate                           OnPossessedPawnChanged;                                     // 0x02B8   (0x0010)  
	FName                                              StateName;                                                  // 0x02C8   (0x0008)  
	APawn*                                             Pawn;                                                       // 0x02D0   (0x0008)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x02D8   (0x0008)  MISSED
	ACharacter*                                        Character;                                                  // 0x02E0   (0x0008)  
	USceneComponent*                                   TransformComponent;                                         // 0x02E8   (0x0008)  
	unsigned char                                      UnknownData03_5[0x18];                                      // 0x02F0   (0x0018)  MISSED
	FRotator                                           ControlRotation;                                            // 0x0308   (0x0018)  
	bool                                               bAttachToPawn : 1;                                          // 0x0320:0 (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x0321   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.Controller.UnPossess
	void UnPossess();                                                                                                        // [0x499dd60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Controller.StopMovement
	void StopMovement();                                                                                                     // [0x499dd40] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Controller.SetInitialLocationAndRotation
	void SetInitialLocationAndRotation(FVector& NewLocation, FRotator& NewRotation);                                         // [0x499d400] Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Controller.SetIgnoreMoveInput
	void SetIgnoreMoveInput(bool bNewMoveInput);                                                                             // [0x499d370] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Controller.SetIgnoreLookInput
	void SetIgnoreLookInput(bool bNewLookInput);                                                                             // [0x499d2e0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Controller.SetControlRotation
	void SetControlRotation(FRotator& NewRotation);                                                                          // [0x499d1a0] Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Controller.ResetIgnoreMoveInput
	void ResetIgnoreMoveInput();                                                                                             // [0xc46e20] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Controller.ResetIgnoreLookInput
	void ResetIgnoreLookInput();                                                                                             // [0x499d180] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Controller.ResetIgnoreInputFlags
	void ResetIgnoreInputFlags();                                                                                            // [0x499d160] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Controller.ReceiveUnPossess
	void ReceiveUnPossess(APawn* UnpossessedPawn);                                                                           // [0x2e6eb70] Event|Protected|BlueprintEvent 
	// Function /Script/Engine.Controller.ReceivePossess
	void ReceivePossess(APawn* PossessedPawn);                                                                               // [0x2e6eb70] Event|Protected|BlueprintEvent 
	// Function /Script/Engine.Controller.ReceiveInstigatedAnyDamage
	void ReceiveInstigatedAnyDamage(float Damage, UDamageType* DamageType, AActor* DamagedActor, AActor* DamageCauser);      // [0x2e6eb70] BlueprintAuthorityOnly|Event|Protected|BlueprintEvent 
	// Function /Script/Engine.Controller.Possess
	void Possess(APawn* InPawn);                                                                                             // [0x499d0d0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Controller.OnRep_PlayerState
	void OnRep_PlayerState();                                                                                                // [0x499d0b0] Native|Public        
	// Function /Script/Engine.Controller.OnRep_Pawn
	void OnRep_Pawn();                                                                                                       // [0x499d090] Native|Public        
	// Function /Script/Engine.Controller.LineOfSightTo
	bool LineOfSightTo(AActor* Other, FVector ViewPoint, bool bAlternateChecks);                                             // [0x499cf40] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Controller.K2_GetPawn
	APawn* K2_GetPawn();                                                                                                     // [0x499cf20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Controller.IsPlayerController
	bool IsPlayerController();                                                                                               // [0x499ce50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Controller.IsMoveInputIgnored
	bool IsMoveInputIgnored();                                                                                               // [0x499ce20] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Controller.IsLookInputIgnored
	bool IsLookInputIgnored();                                                                                               // [0x499cdf0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Controller.IsLocalPlayerController
	bool IsLocalPlayerController();                                                                                          // [0x499cda0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Controller.IsLocalController
	bool IsLocalController();                                                                                                // [0x499cd70] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Controller.GetViewTarget
	AActor* GetViewTarget();                                                                                                 // [0x499cd40] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Controller.GetPlayerViewPoint
	void GetPlayerViewPoint(FVector& Location, FRotator& Rotation);                                                          // [0x499c860] Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Controller.GetDesiredRotation
	FRotator GetDesiredRotation();                                                                                           // [0x499c6d0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Controller.GetControlRotation
	FRotator GetControlRotation();                                                                                           // [0x499c550] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Controller.ClientSetRotation
	void ClientSetRotation(FRotator NewRotation, bool bResetCamera);                                                         // [0x499c340] Net|NetReliableNative|Event|Public|HasDefaults|NetClient|NetValidate 
	// Function /Script/Engine.Controller.ClientSetLocation
	void ClientSetLocation(FVector NewLocation, FRotator NewRotation);                                                       // [0x499c200] Net|NetReliableNative|Event|Public|HasDefaults|NetClient|NetValidate 
};

/// Class /Script/Engine.Info
/// Size: 0x0000 (0x000290 - 0x000290)
class AInfo : public AActor
{ 
public:
};

/// Class /Script/Engine.GameModeBase
/// Size: 0x00A0 (0x000290 - 0x000330)
class AGameModeBase : public AInfo
{ 
public:
	FString                                            OptionsString;                                              // 0x0290   (0x0010)  
	UClass*                                            GameSessionClass;                                           // 0x02A0   (0x0008)  
	UClass*                                            GameStateClass;                                             // 0x02A8   (0x0008)  
	UClass*                                            PlayerControllerClass;                                      // 0x02B0   (0x0008)  
	UClass*                                            PlayerStateClass;                                           // 0x02B8   (0x0008)  
	UClass*                                            HUDClass;                                                   // 0x02C0   (0x0008)  
	UClass*                                            DefaultPawnClass;                                           // 0x02C8   (0x0008)  
	UClass*                                            SpectatorClass;                                             // 0x02D0   (0x0008)  
	UClass*                                            ReplaySpectatorPlayerControllerClass;                       // 0x02D8   (0x0008)  
	UClass*                                            ServerStatReplicatorClass;                                  // 0x02E0   (0x0008)  
	AGameSession*                                      GameSession;                                                // 0x02E8   (0x0008)  
	AGameStateBase*                                    GameState;                                                  // 0x02F0   (0x0008)  
	AServerStatReplicator*                             ServerStatReplicator;                                       // 0x02F8   (0x0008)  
	FText                                              DefaultPlayerName;                                          // 0x0300   (0x0018)  
	bool                                               bUseSeamlessTravel : 1;                                     // 0x0318:0 (0x0001)  
	bool                                               bStartPlayersAsSpectators : 1;                              // 0x0318:1 (0x0001)  
	bool                                               bPauseable : 1;                                             // 0x0318:2 (0x0001)  
	unsigned char                                      UnknownData00_6[0x17];                                      // 0x0319   (0x0017)  MISSED


	/// Functions
	// Function /Script/Engine.GameModeBase.StartPlay
	void StartPlay();                                                                                                        // [0x12661a0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameModeBase.SpawnDefaultPawnFor
	APawn* SpawnDefaultPawnFor(AController* NewPlayer, AActor* StartSpot);                                                   // [0x4a60cb0] Native|Event|Public|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.SpawnDefaultPawnAtTransform
	APawn* SpawnDefaultPawnAtTransform(AController* NewPlayer, FTransform& SpawnTransform);                                  // [0x4a60b50] Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.ShouldReset
	bool ShouldReset(AActor* ActorToReset);                                                                                  // [0x4a60330] Native|Event|Public|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.ReturnToMainMenuHost
	void ReturnToMainMenuHost();                                                                                             // [0x4a5e7c0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameModeBase.RestartPlayerAtTransform
	void RestartPlayerAtTransform(AController* NewPlayer, FTransform& SpawnTransform);                                       // [0x4a5e660] Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.GameModeBase.RestartPlayerAtPlayerStart
	void RestartPlayerAtPlayerStart(AController* NewPlayer, AActor* StartSpot);                                              // [0x4a5e590] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameModeBase.RestartPlayer
	void RestartPlayer(AController* NewPlayer);                                                                              // [0x4a5e500] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameModeBase.ResetLevel
	void ResetLevel();                                                                                                       // [0x48bcd50] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameModeBase.PlayerCanRestart
	bool PlayerCanRestart(APlayerController* Player);                                                                        // [0x4a5da00] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.MustSpectate
	bool MustSpectate(APlayerController* NewPlayerController);                                                               // [0x4a5bdd0] Native|Event|Public|BlueprintEvent|Const 
	// Function /Script/Engine.GameModeBase.K2_PostLogin
	void K2_PostLogin(APlayerController* NewPlayer);                                                                         // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.K2_OnSwapPlayerControllers
	void K2_OnSwapPlayerControllers(APlayerController* OldPC, APlayerController* NewPC);                                     // [0x2e6eb70] Event|Protected|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.K2_OnRestartPlayer
	void K2_OnRestartPlayer(AController* NewPlayer);                                                                         // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.K2_OnLogout
	void K2_OnLogout(AController* ExitingController);                                                                        // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.K2_OnChangeName
	void K2_OnChangeName(AController* Other, FString NewName, bool bNameChange);                                             // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.K2_FindPlayerStart
	AActor* K2_FindPlayerStart(AController* Player, FString IncomingName);                                                   // [0x4a5af40] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.GameModeBase.InitStartSpot
	void InitStartSpot(AActor* StartSpot, AController* NewPlayer);                                                           // [0x4a5ac30] Native|Event|Public|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.InitializeHUDForPlayer
	void InitializeHUDForPlayer(APlayerController* NewPlayer);                                                               // [0x4a5ad00] Native|Event|Protected|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.HasMatchStarted
	bool HasMatchStarted();                                                                                                  // [0x499cd70] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameModeBase.HasMatchEnded
	bool HasMatchEnded();                                                                                                    // [0x4a5aa90] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameModeBase.HandleStartingNewPlayer
	void HandleStartingNewPlayer(APlayerController* NewPlayer);                                                              // [0x4a5a920] Native|Event|Public|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.GetNumSpectators
	int32_t GetNumSpectators();                                                                                              // [0x4681720] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameModeBase.GetNumPlayers
	int32_t GetNumPlayers();                                                                                                 // [0x4a59050] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameModeBase.GetDefaultPawnClassForController
	UClass* GetDefaultPawnClassForController(AController* InController);                                                     // [0x4a58580] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.FindPlayerStart
	AActor* FindPlayerStart(AController* Player, FString IncomingName);                                                      // [0x4a569c0] Native|Event|Public|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.ChoosePlayerStart
	AActor* ChoosePlayerStart(AController* Player);                                                                          // [0x4a54f00] Native|Event|Public|BlueprintEvent 
	// Function /Script/Engine.GameModeBase.ChangeName
	void ChangeName(AController* Controller, FString NewName, bool bNameChange);                                             // [0x4a54dd0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameModeBase.CanSpectate
	bool CanSpectate(APlayerController* Viewer, APlayerState* ViewTarget);                                                   // [0x4a54ce0] Native|Event|Public|BlueprintEvent 
};

/// Class /Script/Engine.AssetManager
/// Size: 0x04C0 (0x000028 - 0x0004E8)
class UAssetManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x308];                                     // 0x0028   (0x0308)  MISSED
	TArray<UObject*>                                   ObjectReferenceList;                                        // 0x0330   (0x0010)  
	bool                                               bIsGlobalAsyncScanEnvironment;                              // 0x0340   (0x0001)  
	bool                                               bShouldGuessTypeAndName;                                    // 0x0341   (0x0001)  
	bool                                               bShouldUseSynchronousLoad;                                  // 0x0342   (0x0001)  
	bool                                               bIsLoadingFromPakFiles;                                     // 0x0343   (0x0001)  
	bool                                               bShouldAcquireMissingChunksOnLoad;                          // 0x0344   (0x0001)  
	bool                                               bOnlyCookProductionAssets;                                  // 0x0345   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x0346   (0x0002)  MISSED
	int32_t                                            NumBulkScanRequests;                                        // 0x0348   (0x0004)  
	bool                                               bIsPrimaryAssetDirectoryCurrent;                            // 0x034C   (0x0001)  
	bool                                               bIsManagementDatabaseCurrent;                               // 0x034D   (0x0001)  
	bool                                               bUpdateManagementDatabaseAfterScan;                         // 0x034E   (0x0001)  
	bool                                               bIncludeOnlyOnDiskAssets;                                   // 0x034F   (0x0001)  
	bool                                               bHasCompletedInitialScan;                                   // 0x0350   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0351   (0x0003)  MISSED
	int32_t                                            NumberOfSpawnedNotifications;                               // 0x0354   (0x0004)  
	unsigned char                                      UnknownData03_6[0x190];                                     // 0x0358   (0x0190)  MISSED
};

/// Class /Script/Engine.GameStateBase
/// Size: 0x0050 (0x000290 - 0x0002E0)
class AGameStateBase : public AInfo
{ 
public:
	UClass*                                            GameModeClass;                                              // 0x0290   (0x0008)  
	AGameModeBase*                                     AuthorityGameMode;                                          // 0x0298   (0x0008)  
	UClass*                                            SpectatorClass;                                             // 0x02A0   (0x0008)  
	TArray<APlayerState*>                              PlayerArray;                                                // 0x02A8   (0x0010)  
	bool                                               bReplicatedHasBegunPlay;                                    // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02B9   (0x0003)  MISSED
	float                                              ReplicatedWorldTimeSeconds;                                 // 0x02BC   (0x0004)  
	float                                              ServerWorldTimeSecondsDelta;                                // 0x02C0   (0x0004)  
	float                                              ServerWorldTimeSecondsUpdateFrequency;                      // 0x02C4   (0x0004)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x02C8   (0x0018)  MISSED


	/// Functions
	// Function /Script/Engine.GameStateBase.OnRep_SpectatorClass
	void OnRep_SpectatorClass();                                                                                             // [0x499d0b0] Native|Protected     
	// Function /Script/Engine.GameStateBase.OnRep_ReplicatedWorldTimeSeconds
	void OnRep_ReplicatedWorldTimeSeconds();                                                                                 // [0x12661a0] Native|Protected     
	// Function /Script/Engine.GameStateBase.OnRep_ReplicatedHasBegunPlay
	void OnRep_ReplicatedHasBegunPlay();                                                                                     // [0x4a5bfe0] Native|Protected     
	// Function /Script/Engine.GameStateBase.OnRep_GameModeClass
	void OnRep_GameModeClass();                                                                                              // [0x499d090] Native|Protected     
	// Function /Script/Engine.GameStateBase.HasMatchStarted
	bool HasMatchStarted();                                                                                                  // [0x16ab350] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameStateBase.HasMatchEnded
	bool HasMatchEnded();                                                                                                    // [0x4a5aac0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameStateBase.HasBegunPlay
	bool HasBegunPlay();                                                                                                     // [0x4a5a9b0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameStateBase.GetServerWorldTimeSeconds
	float GetServerWorldTimeSeconds();                                                                                       // [0x4a59c70] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameStateBase.GetPlayerStartTime
	float GetPlayerStartTime(AController* Controller);                                                                       // [0x4a59850] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameStateBase.GetPlayerRespawnDelay
	float GetPlayerRespawnDelay(AController* Controller);                                                                    // [0x4a597b0] Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.GameSession
/// Size: 0x0018 (0x000290 - 0x0002A8)
class AGameSession : public AInfo
{ 
public:
	int32_t                                            MaxSpectators;                                              // 0x0290   (0x0004)  
	int32_t                                            MaxPlayers;                                                 // 0x0294   (0x0004)  
	int32_t                                            MaxPartySize;                                               // 0x0298   (0x0004)  
	char                                               MaxSplitscreensPerConnection;                               // 0x029C   (0x0001)  
	bool                                               bRequiresPushToTalk;                                        // 0x029D   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x029E   (0x0002)  MISSED
	FName                                              SessionName;                                                // 0x02A0   (0x0008)  
};

/// Class /Script/Engine.GameUserSettings
/// Size: 0x0120 (0x000028 - 0x000148)
class UGameUserSettings : public UObject
{ 
public:
	bool                                               bUseVSync;                                                  // 0x0028   (0x0001)  
	bool                                               bUseDynamicResolution;                                      // 0x0029   (0x0001)  
	unsigned char                                      UnknownData00_5[0x5E];                                      // 0x002A   (0x005E)  MISSED
	uint32_t                                           ResolutionSizeX;                                            // 0x0088   (0x0004)  
	uint32_t                                           ResolutionSizeY;                                            // 0x008C   (0x0004)  
	uint32_t                                           LastUserConfirmedResolutionSizeX;                           // 0x0090   (0x0004)  
	uint32_t                                           LastUserConfirmedResolutionSizeY;                           // 0x0094   (0x0004)  
	int32_t                                            WindowPosX;                                                 // 0x0098   (0x0004)  
	int32_t                                            WindowPosY;                                                 // 0x009C   (0x0004)  
	int32_t                                            FullscreenMode;                                             // 0x00A0   (0x0004)  
	int32_t                                            LastConfirmedFullscreenMode;                                // 0x00A4   (0x0004)  
	int32_t                                            PreferredFullscreenMode;                                    // 0x00A8   (0x0004)  
	uint32_t                                           Version;                                                    // 0x00AC   (0x0004)  
	int32_t                                            AudioQualityLevel;                                          // 0x00B0   (0x0004)  
	int32_t                                            LastConfirmedAudioQualityLevel;                             // 0x00B4   (0x0004)  
	float                                              FrameRateLimit;                                             // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00BC   (0x0004)  MISSED
	int32_t                                            DesiredScreenWidth;                                         // 0x00C0   (0x0004)  
	bool                                               bUseDesiredScreenHeight;                                    // 0x00C4   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x00C5   (0x0003)  MISSED
	int32_t                                            DesiredScreenHeight;                                        // 0x00C8   (0x0004)  
	int32_t                                            LastUserConfirmedDesiredScreenWidth;                        // 0x00CC   (0x0004)  
	int32_t                                            LastUserConfirmedDesiredScreenHeight;                       // 0x00D0   (0x0004)  
	float                                              LastRecommendedScreenWidth;                                 // 0x00D4   (0x0004)  
	float                                              LastRecommendedScreenHeight;                                // 0x00D8   (0x0004)  
	float                                              LastCPUBenchmarkResult;                                     // 0x00DC   (0x0004)  
	float                                              LastGPUBenchmarkResult;                                     // 0x00E0   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x00E4   (0x0004)  MISSED
	TArray<float>                                      LastCPUBenchmarkSteps;                                      // 0x00E8   (0x0010)  
	TArray<float>                                      LastGPUBenchmarkSteps;                                      // 0x00F8   (0x0010)  
	float                                              LastGPUBenchmarkMultiplier;                                 // 0x0108   (0x0004)  
	bool                                               bUseHDRDisplayOutput;                                       // 0x010C   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x010D   (0x0003)  MISSED
	int32_t                                            HDRDisplayOutputNits;                                       // 0x0110   (0x0004)  
	unsigned char                                      UnknownData05_5[0x24];                                      // 0x0114   (0x0024)  MISSED
	FMulticastInlineDelegate                           OnGameUserSettingsUINeedsUpdate;                            // 0x0138   (0x0010)  


	/// Functions
	// Function /Script/Engine.GameUserSettings.ValidateSettings
	void ValidateSettings();                                                                                                 // [0x3d499e0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SupportsHDRDisplayOutput
	bool SupportsHDRDisplayOutput();                                                                                         // [0x4a99950] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.SetVSyncEnabled
	void SetVSyncEnabled(bool bEnable);                                                                                      // [0x4a997a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetVisualEffectQuality
	void SetVisualEffectQuality(int32_t Value);                                                                              // [0x4a998c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetViewDistanceQuality
	void SetViewDistanceQuality(int32_t Value);                                                                              // [0x4a99830] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetToDefaults
	void SetToDefaults();                                                                                                    // [0x443d5f0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetTextureQuality
	void SetTextureQuality(int32_t Value);                                                                                   // [0x4a99710] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetShadowQuality
	void SetShadowQuality(int32_t Value);                                                                                    // [0x4a99680] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetShadingQuality
	void SetShadingQuality(int32_t Value);                                                                                   // [0x4a995f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetScreenResolution
	void SetScreenResolution(FIntPoint Resolution);                                                                          // [0x4a99550] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetResolutionScaleValueEx
	void SetResolutionScaleValueEx(float NewScaleValue);                                                                     // [0x4a994d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetResolutionScaleValue
	void SetResolutionScaleValue(int32_t NewScaleValue);                                                                     // [0x4a99440] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetResolutionScaleNormalized
	void SetResolutionScaleNormalized(float NewScaleNormalized);                                                             // [0x4a993a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetReflectionQuality
	void SetReflectionQuality(int32_t Value);                                                                                // [0x4a99310] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetPostProcessingQuality
	void SetPostProcessingQuality(int32_t Value);                                                                            // [0x4a99280] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetOverallScalabilityLevel
	void SetOverallScalabilityLevel(int32_t Value);                                                                          // [0x4a991f0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetGlobalIlluminationQuality
	void SetGlobalIlluminationQuality(int32_t Value);                                                                        // [0x4a99160] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetFullscreenMode
	void SetFullscreenMode(TEnumAsByte<EWindowMode> InFullscreenMode);                                                       // [0x4a99090] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetFrameRateLimit
	void SetFrameRateLimit(float NewLimit);                                                                                  // [0x4a99010] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetFoliageQuality
	void SetFoliageQuality(int32_t Value);                                                                                   // [0x4a98f80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetDynamicResolutionEnabled
	void SetDynamicResolutionEnabled(bool bEnable);                                                                          // [0x4a98ef0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetBenchmarkFallbackValues
	void SetBenchmarkFallbackValues();                                                                                       // [0x4a98e40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetAudioQualityLevel
	void SetAudioQualityLevel(int32_t QualityLevel);                                                                         // [0x4a98db0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SetAntiAliasingQuality
	void SetAntiAliasingQuality(int32_t Value);                                                                              // [0x4a98d20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.SaveSettings
	void SaveSettings();                                                                                                     // [0xc4ef80] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.RunHardwareBenchmark
	void RunHardwareBenchmark(int32_t WorkScale, float CPUMultiplier, float GPUMultiplier);                                  // [0x4a98c20] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.RevertVideoMode
	void RevertVideoMode();                                                                                                  // [0x4a98be0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.ResetToCurrentSettings
	void ResetToCurrentSettings();                                                                                           // [0xc4efa0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.LoadSettings
	void LoadSettings(bool bForceReload);                                                                                    // [0x484faf0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.IsVSyncEnabled
	bool IsVSyncEnabled();                                                                                                   // [0x4a98bc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.IsVSyncDirty
	bool IsVSyncDirty();                                                                                                     // [0x4a98b90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.IsScreenResolutionDirty
	bool IsScreenResolutionDirty();                                                                                          // [0x4a98b30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.IsHDREnabled
	bool IsHDREnabled();                                                                                                     // [0x4a98b10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.IsFullscreenModeDirty
	bool IsFullscreenModeDirty();                                                                                            // [0x4a98ae0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.IsDynamicResolutionEnabled
	bool IsDynamicResolutionEnabled();                                                                                       // [0x4a98ac0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.IsDynamicResolutionDirty
	bool IsDynamicResolutionDirty();                                                                                         // [0x4a98a70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.IsDirty
	bool IsDirty();                                                                                                          // [0x3d709f0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetVisualEffectQuality
	int32_t GetVisualEffectQuality();                                                                                        // [0x4a98a50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetViewDistanceQuality
	int32_t GetViewDistanceQuality();                                                                                        // [0x46d0be0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetTextureQuality
	int32_t GetTextureQuality();                                                                                             // [0x3d71870] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetSyncInterval
	int32_t GetSyncInterval();                                                                                               // [0x4a98990] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.GameUserSettings.GetShadowQuality
	int32_t GetShadowQuality();                                                                                              // [0x1643850] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetShadingQuality
	int32_t GetShadingQuality();                                                                                             // [0x101e100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetScreenResolution
	FIntPoint GetScreenResolution();                                                                                         // [0x4a98960] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetResolutionScaleNormalized
	float GetResolutionScaleNormalized();                                                                                    // [0x4a98920] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetResolutionScaleInformationEx
	void GetResolutionScaleInformationEx(float& CurrentScaleNormalized, float& CurrentScaleValue, float& MinScaleValue, float& MaxScaleValue); // [0x4a98760] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetResolutionScaleInformation
	void GetResolutionScaleInformation(float& CurrentScaleNormalized, int32_t& CurrentScaleValue, int32_t& MinScaleValue, int32_t& MaxScaleValue); // [0x4a98590] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetReflectionQuality
	int32_t GetReflectionQuality();                                                                                          // [0x4a98570] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetRecommendedResolutionScale
	float GetRecommendedResolutionScale();                                                                                   // [0x1850e10] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.GetPreferredFullscreenMode
	TEnumAsByte<EWindowMode> GetPreferredFullscreenMode();                                                                   // [0x4a98540] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetPostProcessingQuality
	int32_t GetPostProcessingQuality();                                                                                      // [0x3d71890] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetOverallScalabilityLevel
	int32_t GetOverallScalabilityLevel();                                                                                    // [0x4a98510] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetLastConfirmedScreenResolution
	FIntPoint GetLastConfirmedScreenResolution();                                                                            // [0x4a984e0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetLastConfirmedFullscreenMode
	TEnumAsByte<EWindowMode> GetLastConfirmedFullscreenMode();                                                               // [0x4a984a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetGlobalIlluminationQuality
	int32_t GetGlobalIlluminationQuality();                                                                                  // [0x4a98480] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetGameUserSettings
	UGameUserSettings* GetGameUserSettings();                                                                                // [0x4a98440] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.GetFullscreenMode
	TEnumAsByte<EWindowMode> GetFullscreenMode();                                                                            // [0x4a98400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetFrameRateLimit
	float GetFrameRateLimit();                                                                                               // [0x4a983e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetFramePace
	int32_t GetFramePace();                                                                                                  // [0x4a983b0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.GameUserSettings.GetFoliageQuality
	int32_t GetFoliageQuality();                                                                                             // [0x4a98390] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetDesktopResolution
	FIntPoint GetDesktopResolution();                                                                                        // [0x4a98350] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetDefaultWindowPosition
	FIntPoint GetDefaultWindowPosition();                                                                                    // [0x4a98330] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.GetDefaultWindowMode
	TEnumAsByte<EWindowMode> GetDefaultWindowMode();                                                                         // [0x1f401d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.GetDefaultResolutionScale
	float GetDefaultResolutionScale();                                                                                       // [0x4a982f0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.GetDefaultResolution
	FIntPoint GetDefaultResolution();                                                                                        // [0x4a982c0] Final|Native|Static|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.GetCurrentHDRDisplayNits
	int32_t GetCurrentHDRDisplayNits();                                                                                      // [0x4a98290] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetAudioQualityLevel
	int32_t GetAudioQualityLevel();                                                                                          // [0x40d1a50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.GetAntiAliasingQuality
	int32_t GetAntiAliasingQuality();                                                                                        // [0x15f84d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameUserSettings.EnableHDRDisplayOutput
	void EnableHDRDisplayOutput(bool bEnable, int32_t DisplayNits);                                                          // [0x4a981c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.ConfirmVideoMode
	void ConfirmVideoMode();                                                                                                 // [0x3d49bb0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.ApplySettings
	void ApplySettings(bool bCheckForCommandLineOverrides);                                                                  // [0x4a98130] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.ApplyResolutionSettings
	void ApplyResolutionSettings(bool bCheckForCommandLineOverrides);                                                        // [0x4a980a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.ApplyNonResolutionSettings
	void ApplyNonResolutionSettings();                                                                                       // [0x3d49e80] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameUserSettings.ApplyHardwareBenchmarkResults
	void ApplyHardwareBenchmarkResults();                                                                                    // [0x487df60] Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.SaveGame
/// Size: 0x0000 (0x000028 - 0x000028)
class USaveGame : public UObject
{ 
public:
};

/// Class /Script/Engine.PlayerController
/// Size: 0x0528 (0x000328 - 0x000850)
class APlayerController : public AController
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0328   (0x0008)  MISSED
	UPlayer*                                           Player;                                                     // 0x0330   (0x0008)  
	APawn*                                             AcknowledgedPawn;                                           // 0x0338   (0x0008)  
	AHUD*                                              MyHUD;                                                      // 0x0340   (0x0008)  
	APlayerCameraManager*                              PlayerCameraManager;                                        // 0x0348   (0x0008)  
	UClass*                                            PlayerCameraManagerClass;                                   // 0x0350   (0x0008)  
	bool                                               bAutoManageActiveCameraTarget;                              // 0x0358   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0359   (0x0007)  MISSED
	FRotator                                           TargetViewRotation;                                         // 0x0360   (0x0018)  
	unsigned char                                      UnknownData02_5[0x18];                                      // 0x0378   (0x0018)  MISSED
	float                                              SmoothTargetViewRotationSpeed;                              // 0x0390   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0394   (0x0004)  MISSED
	TArray<AActor*>                                    HiddenActors;                                               // 0x0398   (0x0010)  
	TArray<TWeakObjectPtr>                             HiddenPrimitiveComponents;                                  // 0x03A8   (0x0010)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x03B8   (0x0004)  MISSED
	float                                              LastSpectatorStateSynchTime;                                // 0x03BC   (0x0004)  
	FVector                                            LastSpectatorSyncLocation;                                  // 0x03C0   (0x0018)  
	FRotator                                           LastSpectatorSyncRotation;                                  // 0x03D8   (0x0018)  
	int32_t                                            ClientCap;                                                  // 0x03F0   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x03F4   (0x0004)  MISSED
	UCheatManager*                                     CheatManager;                                               // 0x03F8   (0x0008)  
	UClass*                                            CheatClass;                                                 // 0x0400   (0x0008)  
	UPlayerInput*                                      PlayerInput;                                                // 0x0408   (0x0008)  
	TArray<FActiveForceFeedbackEffect>                 ActiveForceFeedbackEffects;                                 // 0x0410   (0x0010)  
	UClass*                                            AsyncPhysicsDataClass;                                      // 0x0420   (0x0008)  
	UAsyncPhysicsInputComponent*                       AsyncPhysicsDataComponent;                                  // 0x0428   (0x0008)  
	unsigned char                                      UnknownData06_5[0x80];                                      // 0x0430   (0x0080)  MISSED
	unsigned char                                      UnknownBit07 : 1;                                           // 0x04B0:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit08 : 1;                                           // 0x04B0:1 (0x0001)  MISSED
	unsigned char                                      UnknownBit09 : 1;                                           // 0x04B0:2 (0x0001)  MISSED
	unsigned char                                      UnknownBit10 : 1;                                           // 0x04B0:3 (0x0001)  MISSED
	bool                                               bPlayerIsWaiting : 1;                                       // 0x04B0:4 (0x0001)  
	unsigned char                                      UnknownData11_4[0x3];                                       // 0x04B1   (0x0003)  MISSED
	char                                               NetPlayerIndex;                                             // 0x04B4   (0x0001)  
	unsigned char                                      UnknownData12_5[0x5B];                                      // 0x04B5   (0x005B)  MISSED
	UNetConnection*                                    PendingSwapConnection;                                      // 0x0510   (0x0008)  
	UNetConnection*                                    NetConnection;                                              // 0x0518   (0x0008)  
	unsigned char                                      UnknownData13_5[0x18];                                      // 0x0520   (0x0018)  MISSED
	float                                              InputYawScale;                                              // 0x0538   (0x0004)  
	float                                              InputPitchScale;                                            // 0x053C   (0x0004)  
	float                                              InputRollScale;                                             // 0x0540   (0x0004)  
	bool                                               bShowMouseCursor : 1;                                       // 0x0544:0 (0x0001)  
	bool                                               bEnableClickEvents : 1;                                     // 0x0544:1 (0x0001)  
	bool                                               bEnableTouchEvents : 1;                                     // 0x0544:2 (0x0001)  
	bool                                               bEnableMouseOverEvents : 1;                                 // 0x0544:3 (0x0001)  
	bool                                               bEnableTouchOverEvents : 1;                                 // 0x0544:4 (0x0001)  
	bool                                               bForceFeedbackEnabled : 1;                                  // 0x0544:5 (0x0001)  
	bool                                               bEnableMotionControls : 1;                                  // 0x0544:6 (0x0001)  
	bool                                               bEnableStreamingSource : 1;                                 // 0x0544:7 (0x0001)  
	bool                                               bStreamingSourceShouldActivate : 1;                         // 0x0545:0 (0x0001)  
	bool                                               bStreamingSourceShouldBlockOnSlowStreaming : 1;             // 0x0545:1 (0x0001)  
	unsigned char                                      UnknownData14_4[0x2];                                       // 0x0546   (0x0002)  MISSED
	EStreamingSourcePriority                           StreamingSourcePriority;                                    // 0x0548   (0x0001)  
	unsigned char                                      UnknownData15_5[0x3];                                       // 0x0549   (0x0003)  MISSED
	FColor                                             StreamingSourceDebugColor;                                  // 0x054C   (0x0004)  
	TArray<FStreamingSourceShape>                      StreamingSourceShapes;                                      // 0x0550   (0x0010)  
	float                                              ForceFeedbackScale;                                         // 0x0560   (0x0004)  
	unsigned char                                      UnknownData16_5[0x4];                                       // 0x0564   (0x0004)  MISSED
	TArray<FKey>                                       ClickEventKeys;                                             // 0x0568   (0x0010)  
	TEnumAsByte<EMouseCursor>                          DefaultMouseCursor;                                         // 0x0578   (0x0001)  
	TEnumAsByte<EMouseCursor>                          CurrentMouseCursor;                                         // 0x0579   (0x0001)  
	TEnumAsByte<ECollisionChannel>                     DefaultClickTraceChannel;                                   // 0x057A   (0x0001)  
	TEnumAsByte<ECollisionChannel>                     CurrentClickTraceChannel;                                   // 0x057B   (0x0001)  
	float                                              HitResultTraceDistance;                                     // 0x057C   (0x0004)  
	uint16_t                                           SeamlessTravelCount;                                        // 0x0580   (0x0002)  
	uint16_t                                           LastCompletedSeamlessTravelCount;                           // 0x0582   (0x0002)  
	unsigned char                                      UnknownData17_5[0x84];                                      // 0x0584   (0x0084)  MISSED
	UInputComponent*                                   InactiveStateInputComponent;                                // 0x0608   (0x0008)  
	unsigned char                                      UnknownBit18 : 1;                                           // 0x0610:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit19 : 1;                                           // 0x0610:1 (0x0001)  MISSED
	bool                                               bShouldPerformFullTickWhenPaused : 1;                       // 0x0610:2 (0x0001)  
	unsigned char                                      UnknownData20_4[0x17];                                      // 0x0611   (0x0017)  MISSED
	UTouchInterface*                                   CurrentTouchInterface;                                      // 0x0628   (0x0008)  
	UClass*                                            OverridePlayerInputClass;                                   // 0x0630   (0x0008)  
	unsigned char                                      UnknownData21_5[0x78];                                      // 0x0638   (0x0078)  MISSED
	ASpectatorPawn*                                    SpectatorPawn;                                              // 0x06B0   (0x0008)  
	unsigned char                                      UnknownData22_5[0x4];                                       // 0x06B8   (0x0004)  MISSED
	bool                                               bIsLocalPlayerController;                                   // 0x06BC   (0x0001)  
	unsigned char                                      UnknownData23_5[0x3];                                       // 0x06BD   (0x0003)  MISSED
	FVector                                            SpawnLocation;                                              // 0x06C0   (0x0018)  
	unsigned char                                      UnknownData24_6[0x178];                                     // 0x06D8   (0x0178)  MISSED


	/// Functions
	// Function /Script/Engine.PlayerController.WasInputKeyJustReleased
	bool WasInputKeyJustReleased(FKey Key);                                                                                  // [0x4dcf870] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.WasInputKeyJustPressed
	bool WasInputKeyJustPressed(FKey Key);                                                                                   // [0x4dcf720] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.ToggleSpeaking
	void ToggleSpeaking(bool bInSpeaking);                                                                                   // [0x4dcf690] Exec|Native|Public   
	// Function /Script/Engine.PlayerController.TestServerLevelVisibilityChange
	void TestServerLevelVisibilityChange(FName PackageName, FName Filename);                                                 // [0x4dcf5e0] Final|Exec|Native|Private 
	// Function /Script/Engine.PlayerController.SwitchLevel
	void SwitchLevel(FString URL);                                                                                           // [0x4dcf540] Exec|Native|Public   
	// Function /Script/Engine.PlayerController.StreamingSourceShouldBlockOnSlowStreaming
	bool StreamingSourceShouldBlockOnSlowStreaming();                                                                        // [0x4dcf510] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.StreamingSourceShouldActivate
	bool StreamingSourceShouldActivate();                                                                                    // [0x4dcf4e0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.StopHapticEffect
	void StopHapticEffect(EControllerHand Hand);                                                                             // [0x4dcf350] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.StartFire
	void StartFire(char FireModeNum);                                                                                        // [0x4dcf2d0] Exec|Native|Public   
	// Function /Script/Engine.PlayerController.SetVirtualJoystickVisibility
	void SetVirtualJoystickVisibility(bool bVisible);                                                                        // [0x4dcf240] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.SetViewTargetWithBlend
	void SetViewTargetWithBlend(AActor* NewViewTarget, float BlendTime, TEnumAsByte<EViewTargetBlendFunction> BlendFunc, float BlendExp, bool bLockOutgoing); // [0x4dcf0a0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.SetName
	void SetName(FString S);                                                                                                 // [0x4dcf000] Exec|Native|Public   
	// Function /Script/Engine.PlayerController.SetMouseLocation
	void SetMouseLocation(int32_t X, int32_t Y);                                                                             // [0x4dceed0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.SetMouseCursorWidget
	void SetMouseCursorWidget(TEnumAsByte<EMouseCursor> Cursor, UUserWidget* CursorWidget);                                  // [0x4dcedb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.SetMotionControlsEnabled
	void SetMotionControlsEnabled(bool bEnabled);                                                                            // [0x4dcecf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.SetHapticsByValue
	void SetHapticsByValue(float Frequency, float Amplitude, EControllerHand Hand);                                          // [0x4dcea80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.SetDisableHaptics
	void SetDisableHaptics(bool bNewDisabled);                                                                               // [0x4dce9f0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.SetDeprecatedInputYawScale
	void SetDeprecatedInputYawScale(float NewValue);                                                                         // [0x4dce930] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.SetDeprecatedInputRollScale
	void SetDeprecatedInputRollScale(float NewValue);                                                                        // [0x4dce870] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.SetDeprecatedInputPitchScale
	void SetDeprecatedInputPitchScale(float NewValue);                                                                       // [0x4dce7b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.SetControllerLightColor
	void SetControllerLightColor(FColor Color);                                                                              // [0x4dce700] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PlayerController.SetCinematicMode
	void SetCinematicMode(bool bInCinematicMode, bool bHidePlayer, bool bAffectsHUD, bool bAffectsMovement, bool bAffectsTurning); // [0x4dce520] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.SetAudioListenerOverride
	void SetAudioListenerOverride(USceneComponent* AttachToComponent, FVector Location, FRotator Rotation);                  // [0x4dce3a0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PlayerController.SetAudioListenerAttenuationOverride
	void SetAudioListenerAttenuationOverride(USceneComponent* AttachToComponent, FVector AttenuationLocationOVerride);       // [0x4dce2a0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PlayerController.ServerViewSelf
	void ServerViewSelf(FViewTargetTransitionParams TransitionParams);                                                       // [0x4dce1b0] Net|Native|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerViewPrevPlayer
	void ServerViewPrevPlayer();                                                                                             // [0x4dce160] Net|Native|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerViewNextPlayer
	void ServerViewNextPlayer();                                                                                             // [0x4dce110] Net|Native|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerVerifyViewTarget
	void ServerVerifyViewTarget();                                                                                           // [0x4dce0c0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerUpdateMultipleLevelsVisibility
	void ServerUpdateMultipleLevelsVisibility(TArray<FUpdateLevelVisibilityLevelInfo> LevelVisibilities);                    // [0x4dcdfc0] Final|Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerUpdateLevelVisibility
	void ServerUpdateLevelVisibility(FUpdateLevelVisibilityLevelInfo LevelVisibility);                                       // [0x4dcdf00] Final|Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerUpdateCamera
	void ServerUpdateCamera(FVector_NetQuantize CamLoc, int32_t CamPitchAndYaw);                                             // [0x4dcddd0] Net|Native|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerUnmutePlayer
	void ServerUnmutePlayer(FUniqueNetIdRepl PlayerId);                                                                      // [0x4dcdbc0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerUnblockPlayer
	void ServerUnblockPlayer(FUniqueNetIdRepl PlayerId);                                                                     // [0x4dcd9b0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerToggleAILogging
	void ServerToggleAILogging();                                                                                            // [0x4dcd960] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerShortTimeout
	void ServerShortTimeout();                                                                                               // [0x4dcd910] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerSetSpectatorWaiting
	void ServerSetSpectatorWaiting(bool bWaiting);                                                                           // [0x4dcd850] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerSetSpectatorLocation
	void ServerSetSpectatorLocation(FVector NewLoc, FRotator NewRot);                                                        // [0x4dcd710] Net|Native|Event|Public|NetServer|HasDefaults|NetValidate 
	// Function /Script/Engine.PlayerController.ServerSendLatestAsyncPhysicsTimestamp
	void ServerSendLatestAsyncPhysicsTimestamp(FAsyncPhysicsTimestamp Timestamp);                                            // [0x4dcd680] Final|Net|Native|Event|Private|NetServer 
	// Function /Script/Engine.PlayerController.ServerRestartPlayer
	void ServerRestartPlayer();                                                                                              // [0x4dcd630] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerRecvClientInputFrame
	void ServerRecvClientInputFrame(int32_t RecvClientInputFrame, TArray<char> Data);                                        // [0x4dcd550] Net|Native|Event|Public|NetServer 
	// Function /Script/Engine.PlayerController.ServerPause
	void ServerPause();                                                                                                      // [0x4dcd500] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerNotifyLoadedWorld
	void ServerNotifyLoadedWorld(FName WorldPackageName);                                                                    // [0x4dcd310] Final|Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerMutePlayer
	void ServerMutePlayer(FUniqueNetIdRepl PlayerId);                                                                        // [0x4dcd100] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerExecRPC
	void ServerExecRPC(FString Msg);                                                                                         // [0x4dcd040] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerExec
	void ServerExec(FString Msg);                                                                                            // [0x4b60990] Final|Exec|Native|Public 
	// Function /Script/Engine.PlayerController.ServerCheckClientPossessionReliable
	void ServerCheckClientPossessionReliable();                                                                              // [0x4dccff0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerCheckClientPossession
	void ServerCheckClientPossession();                                                                                      // [0x4dccfa0] Net|Native|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerChangeName
	void ServerChangeName(FString S);                                                                                        // [0x4dccee0] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerCamera
	void ServerCamera(FName NewMode);                                                                                        // [0x4dcce20] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerBlockPlayer
	void ServerBlockPlayer(FUniqueNetIdRepl PlayerId);                                                                       // [0x4dccc10] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.ServerAcknowledgePossession
	void ServerAcknowledgePossession(APawn* P);                                                                              // [0x4dccb50] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.PlayerController.SendToConsole
	void SendToConsole(FString Command);                                                                                     // [0x4dccab0] Exec|Native|Public   
	// Function /Script/Engine.PlayerController.RestartLevel
	void RestartLevel();                                                                                                     // [0x4dcca90] Exec|Native|Public   
	// Function /Script/Engine.PlayerController.ResetControllerLightColor
	void ResetControllerLightColor();                                                                                        // [0x4dcca20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.ProjectWorldLocationToScreen
	bool ProjectWorldLocationToScreen(FVector WorldLocation, FVector2D& ScreenLocation, bool bPlayerViewportRelative);       // [0x4dcc8d0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.PlayHapticEffect
	void PlayHapticEffect(UHapticFeedbackEffect_Base* HapticEffect, EControllerHand Hand, float Scale, bool bLoop);          // [0x4dcc2e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.PlayDynamicForceFeedback
	void PlayDynamicForceFeedback(float Intensity, float Duration, bool bAffectsLeftLarge, bool bAffectsLeftSmall, bool bAffectsRightLarge, bool bAffectsRightSmall, TEnumAsByte<EDynamicForceFeedbackAction> Action, FLatentActionInfo LatentInfo); // [0x4dcc030] Final|Native|Private|BlueprintCallable 
	// Function /Script/Engine.PlayerController.Pause
	void Pause();                                                                                                            // [0x4dcbff0] Exec|Native|Public   
	// Function /Script/Engine.PlayerController.OnServerStartedVisualLogger
	void OnServerStartedVisualLogger(bool bIsLogging);                                                                       // [0x4dcbf60] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.OnRep_AsyncPhysicsDataComponent
	void OnRep_AsyncPhysicsDataComponent();                                                                                  // [0x4dcbf30] Final|Native|Private 
	// Function /Script/Engine.PlayerController.LocalTravel
	void LocalTravel(FString URL);                                                                                           // [0x4dcbd30] Exec|Native|Public   
	// Function /Script/Engine.PlayerController.K2_ClientPlayForceFeedback
	void K2_ClientPlayForceFeedback(UForceFeedbackEffect* ForceFeedbackEffect, FName Tag, bool bLooping, bool bIgnoreTimeDilation, bool bPlayWhilePaused); // [0x4dcbb60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.IsStreamingSourceEnabled
	bool IsStreamingSourceEnabled();                                                                                         // [0x4dcb9a0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.IsInputKeyDown
	bool IsInputKeyDown(FKey Key);                                                                                           // [0x4dcb7f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetViewportSize
	void GetViewportSize(int32_t& SizeX, int32_t& SizeY);                                                                    // [0x4dcb5b0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetStreamingSourceShapes
	void GetStreamingSourceShapes(TArray<FStreamingSourceShape>& OutShapes);                                                 // [0x4dcb420] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetStreamingSourcePriority
	EStreamingSourcePriority GetStreamingSourcePriority();                                                                   // [0x4dcb3f0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetStreamingSourceLocationAndRotation
	void GetStreamingSourceLocationAndRotation(FVector& OutLocation, FRotator& OutRotation);                                 // [0x4dcb300] Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetSpectatorPawn
	ASpectatorPawn* GetSpectatorPawn();                                                                                      // [0x4dcb2e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetPlatformUserId
	FPlatformUserId GetPlatformUserId();                                                                                     // [0x4dcb0a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetOverridePlayerInputClass
	UClass* GetOverridePlayerInputClass();                                                                                   // [0x443f240] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetMousePosition
	bool GetMousePosition(float& LocationX, float& LocationY);                                                               // [0x4dcaf30] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetInputVectorKeyState
	FVector GetInputVectorKeyState(FKey Key);                                                                                // [0x4dcadb0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetInputTouchState
	void GetInputTouchState(TEnumAsByte<ETouchIndex> FingerIndex, float& LocationX, float& LocationY, bool& bIsCurrentlyPressed); // [0x4dcabc0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetInputMouseDelta
	void GetInputMouseDelta(float& DeltaX, float& DeltaY);                                                                   // [0x4dcaad0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetInputMotionState
	void GetInputMotionState(FVector& Tilt, FVector& RotationRate, FVector& Gravity, FVector& Acceleration);                 // [0x4dca800] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetInputKeyTimeDown
	float GetInputKeyTimeDown(FKey Key);                                                                                     // [0x4dca6a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetInputAnalogStickState
	void GetInputAnalogStickState(TEnumAsByte<EControllerAnalogStick> WhichStick, float& StickX, float& StickY);             // [0x4dca3a0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetInputAnalogKeyState
	float GetInputAnalogKeyState(FKey Key);                                                                                  // [0x4dca240] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetHUD
	AHUD* GetHUD();                                                                                                          // [0x4dc9040] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetHitResultUnderFingerForObjects
	bool GetHitResultUnderFingerForObjects(TEnumAsByte<ETouchIndex> FingerIndex, TArray<TEnumAsByte>& ObjectTypes, bool bTraceComplex, FHitResult& HitResult); // [0x4dc9f00] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetHitResultUnderFingerByChannel
	bool GetHitResultUnderFingerByChannel(TEnumAsByte<ETouchIndex> FingerIndex, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, FHitResult& HitResult); // [0x4dc9bb0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetHitResultUnderFinger
	bool GetHitResultUnderFinger(TEnumAsByte<ETouchIndex> FingerIndex, TEnumAsByte<ECollisionChannel> TraceChannel, bool bTraceComplex, FHitResult& HitResult); // [0x4dc99d0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetHitResultUnderCursorForObjects
	bool GetHitResultUnderCursorForObjects(TArray<TEnumAsByte>& ObjectTypes, bool bTraceComplex, FHitResult& HitResult);     // [0x4dc96a0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetHitResultUnderCursorByChannel
	bool GetHitResultUnderCursorByChannel(TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, FHitResult& HitResult); // [0x4dc9370] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetHitResultUnderCursor
	bool GetHitResultUnderCursor(TEnumAsByte<ECollisionChannel> TraceChannel, bool bTraceComplex, FHitResult& HitResult);    // [0x4dc9060] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetFocalLocation
	FVector GetFocalLocation();                                                                                              // [0x4dc8ff0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetDeprecatedInputYawScale
	float GetDeprecatedInputYawScale();                                                                                      // [0x4dc8f70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetDeprecatedInputRollScale
	float GetDeprecatedInputRollScale();                                                                                     // [0x4dc8ef0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetDeprecatedInputPitchScale
	float GetDeprecatedInputPitchScale();                                                                                    // [0x4dc8e70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetAsyncPhysicsDataToWrite
	UAsyncPhysicsData* GetAsyncPhysicsDataToWrite();                                                                         // [0x4dc8dc0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.GetAsyncPhysicsDataToConsume
	UAsyncPhysicsData* GetAsyncPhysicsDataToConsume();                                                                       // [0x4dc8d70] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.FOV
	void FOV(float NewFOV);                                                                                                  // [0x4dc8960] Exec|Native|Public   
	// Function /Script/Engine.PlayerController.EnableCheats
	void EnableCheats();                                                                                                     // [0x4dc8870] Exec|Native|Public   
	// Function /Script/Engine.PlayerController.DeprojectScreenPositionToWorld
	bool DeprojectScreenPositionToWorld(float ScreenX, float ScreenY, FVector& WorldLocation, FVector& WorldDirection);      // [0x4dc86c0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.DeprojectMousePositionToWorld
	bool DeprojectMousePositionToWorld(FVector& WorldLocation, FVector& WorldDirection);                                     // [0x4dc8550] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerController.ConsoleKey
	void ConsoleKey(FKey Key);                                                                                               // [0x4dc8450] Exec|Native|Public   
	// Function /Script/Engine.PlayerController.ClientWasKicked
	void ClientWasKicked(FText KickReason);                                                                                  // [0x4dc8390] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientVoiceHandshakeComplete
	void ClientVoiceHandshakeComplete();                                                                                     // [0x4dc8370] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientUpdateMultipleLevelsStreamingStatus
	void ClientUpdateMultipleLevelsStreamingStatus(TArray<FUpdateLevelStreamingLevelStatus> LevelStatuses);                  // [0x4dc82d0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientUpdateLevelStreamingStatus
	void ClientUpdateLevelStreamingStatus(FName PackageName, bool bNewShouldBeLoaded, bool bNewShouldBeVisible, bool bNewShouldBlockOnLoad, int32_t LODIndex, FNetLevelVisibilityTransactionId TransactionId); // [0x4dc80f0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientUnmutePlayers
	void ClientUnmutePlayers(TArray<FUniqueNetIdRepl> PlayerIds);                                                            // [0x4dc7ff0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientUnmutePlayer
	void ClientUnmutePlayer(FUniqueNetIdRepl PlayerId);                                                                      // [0x4dc7e50] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientTravelInternal
	void ClientTravelInternal(FString URL, TEnumAsByte<ETravelType> TravelType, bool bSeamless, FGuid MapPackageGuid);       // [0x4dc7cd0] Net|NetReliableNative|Event|Public|HasDefaults|NetClient 
	// Function /Script/Engine.PlayerController.ClientTravel
	void ClientTravel(FString URL, TEnumAsByte<ETravelType> TravelType, bool bSeamless, FGuid MapPackageGuid);               // [0x4dc7ad0] Final|Native|Public|HasDefaults 
	// Function /Script/Engine.PlayerController.ClientTeamMessage
	void ClientTeamMessage(APlayerState* SenderPlayerState, FString S, FName Type, float MsgLifeTime);                       // [0x4dc7960] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientStopForceFeedback
	void ClientStopForceFeedback(UForceFeedbackEffect* ForceFeedbackEffect, FName Tag);                                      // [0x4dc7890] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	// Function /Script/Engine.PlayerController.ClientStopCameraShakesFromSource
	void ClientStopCameraShakesFromSource(UCameraShakeSourceComponent* SourceComponent, bool bImmediately);                  // [0x4dc77b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.ClientStopCameraShake
	void ClientStopCameraShake(UClass* Shake, bool bImmediately);                                                            // [0x4695cb0] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	// Function /Script/Engine.PlayerController.ClientStartOnlineSession
	void ClientStartOnlineSession();                                                                                         // [0x4dc7790] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientStartCameraShakeFromSource
	void ClientStartCameraShakeFromSource(UClass* Shake, UCameraShakeSourceComponent* SourceComponent);                      // [0x4dc7680] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.ClientStartCameraShake
	void ClientStartCameraShake(UClass* Shake, float Scale, ECameraShakePlaySpace PlaySpace, FRotator UserPlaySpaceRot);     // [0x4dc74f0] Net|Native|Event|Public|HasDefaults|NetClient|BlueprintCallable 
	// Function /Script/Engine.PlayerController.ClientSpawnGenericCameraLensEffect
	void ClientSpawnGenericCameraLensEffect(UClass* LensEffectEmitterClass);                                                 // [0x4dc7460] Net|Native|Event|Public|NetClient|BlueprintCallable 
	// Function /Script/Engine.PlayerController.ClientSpawnCameraLensEffect
	void ClientSpawnCameraLensEffect(UClass* LensEffectEmitterClass);                                                        // [0x4dc73d0] Net|Native|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientSetViewTarget
	void ClientSetViewTarget(AActor* A, FViewTargetTransitionParams TransitionParams);                                       // [0x4dc72d0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientSetSpectatorWaiting
	void ClientSetSpectatorWaiting(bool bWaiting);                                                                           // [0x4dc7240] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientSetHUD
	void ClientSetHUD(UClass* NewHUDClass);                                                                                  // [0x4dc71b0] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	// Function /Script/Engine.PlayerController.ClientSetForceMipLevelsToBeResident
	void ClientSetForceMipLevelsToBeResident(UMaterialInterface* Material, float ForceDuration, int32_t CinematicTextureGroups); // [0x4dc70a0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientSetCinematicMode
	void ClientSetCinematicMode(bool bInCinematicMode, bool bAffectsMovement, bool bAffectsTurning, bool bAffectsHUD);       // [0x4dc6f20] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientSetCameraMode
	void ClientSetCameraMode(FName NewCamMode);                                                                              // [0x4dc6e90] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientSetCameraFade
	void ClientSetCameraFade(bool bEnableFading, FColor FadeColor, FVector2D FadeAlpha, float FadeTime, bool bFadeAudio, bool bHoldWhenFinished); // [0x4dc6ca0] Net|NetReliableNative|Event|Public|HasDefaults|NetClient 
	// Function /Script/Engine.PlayerController.ClientSetBlockOnAsyncLoading
	void ClientSetBlockOnAsyncLoading();                                                                                     // [0x4dc6c80] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientReturnToMainMenuWithTextReason
	void ClientReturnToMainMenuWithTextReason(FText ReturnReason);                                                           // [0x4dc6bc0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientReturnToMainMenu
	void ClientReturnToMainMenu(FString ReturnReason);                                                                       // [0x4dc6b20] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientRetryClientRestart
	void ClientRetryClientRestart(APawn* NewPawn);                                                                           // [0x16ab950] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientRestart
	void ClientRestart(APawn* NewPawn);                                                                                      // [0x4dc6a90] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientReset
	void ClientReset();                                                                                                      // [0x4dc6a70] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientRepObjRef
	void ClientRepObjRef(UObject* Object);                                                                                   // [0x4dc69e0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientRecvServerAckFrameDebug
	void ClientRecvServerAckFrameDebug(char NumBuffered, float TargetNumBufferedCmds);                                       // [0x4dc6910] Net|Native|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientRecvServerAckFrame
	void ClientRecvServerAckFrame(int32_t LastProcessedInputFrame, int32_t RecvServerFrameNumber, int8_t TimeDilation);      // [0x4dc6810] Net|Native|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientReceiveLocalizedMessage
	void ClientReceiveLocalizedMessage(UClass* Message, int32_t SWITCH, APlayerState* RelatedPlayerState, APlayerState* RelatedPlayerState, UObject* OptionalObject); // [0x4dc6670] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientPrestreamTextures
	void ClientPrestreamTextures(AActor* ForcedActor, float ForceDuration, bool bEnableStreaming, int32_t CinematicTextureGroups); // [0x4dc6510] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientPrepareMapChange
	void ClientPrepareMapChange(FName LevelName, bool bFirst, bool bLast);                                                   // [0x4dc63f0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientPlaySoundAtLocation
	void ClientPlaySoundAtLocation(USoundBase* Sound, FVector Location, float VolumeMultiplier, float PitchMultiplier);      // [0x4dc6260] Net|Native|Event|Public|HasDefaults|NetClient 
	// Function /Script/Engine.PlayerController.ClientPlaySound
	void ClientPlaySound(USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier);                                  // [0x4dc6150] Net|Native|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientPlayForceFeedback_Internal
	void ClientPlayForceFeedback_Internal(UForceFeedbackEffect* ForceFeedbackEffect, FForceFeedbackParameters Params);       // [0x4dc6060] Final|Net|Native|Event|Private|NetClient 
	// Function /Script/Engine.PlayerController.ClientMutePlayer
	void ClientMutePlayer(FUniqueNetIdRepl PlayerId);                                                                        // [0x4dc5ec0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientMessage
	void ClientMessage(FString S, FName Type, float MsgLifeTime);                                                            // [0x4dc5d90] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientIgnoreMoveInput
	void ClientIgnoreMoveInput(bool bIgnore);                                                                                // [0x4dc5d00] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientIgnoreLookInput
	void ClientIgnoreLookInput(bool bIgnore);                                                                                // [0x4dc5c70] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientGotoState
	void ClientGotoState(FName NewState);                                                                                    // [0x4dc5be0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientGameEnded
	void ClientGameEnded(AActor* EndGameFocus, bool bIsWinner);                                                              // [0x4dc5b10] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientForceGarbageCollection
	void ClientForceGarbageCollection();                                                                                     // [0x4dc5af0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientFlushLevelStreaming
	void ClientFlushLevelStreaming();                                                                                        // [0x4dc5a90] Final|Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientEndOnlineSession
	void ClientEndOnlineSession();                                                                                           // [0x4dc5a70] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientEnableNetworkVoice
	void ClientEnableNetworkVoice(bool bEnable);                                                                             // [0x4dc59e0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientCorrectionAsyncPhysicsTimestamp
	void ClientCorrectionAsyncPhysicsTimestamp(FAsyncPhysicsTimestamp Timestamp);                                            // [0x4dc5950] Final|Net|Native|Event|Private|NetClient 
	// Function /Script/Engine.PlayerController.ClientCommitMapChange
	void ClientCommitMapChange();                                                                                            // [0x4dc5930] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientClearCameraLensEffects
	void ClientClearCameraLensEffects();                                                                                     // [0x4dc5910] Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable 
	// Function /Script/Engine.PlayerController.ClientCapBandwidth
	void ClientCapBandwidth(int32_t Cap);                                                                                    // [0x4dc5880] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientCancelPendingMapChange
	void ClientCancelPendingMapChange();                                                                                     // [0x46465c0] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientAddTextureStreamingLoc
	void ClientAddTextureStreamingLoc(FVector InLoc, float Duration, bool bOverrideLocation);                                // [0x4dc5710] Final|Net|NetReliableNative|Event|Public|HasDefaults|NetClient 
	// Function /Script/Engine.PlayerController.ClientAckUpdateLevelVisibility
	void ClientAckUpdateLevelVisibility(FName PackageName, FNetLevelVisibilityTransactionId TransactionId, bool bClientAckCanMakeVisible); // [0x4dc5600] Net|NetReliableNative|Event|Public|NetClient 
	// Function /Script/Engine.PlayerController.ClientAckTimeDilation
	void ClientAckTimeDilation(float TimeDilation, int32_t ServerStep);                                                      // [0x4dc5520] Final|Net|Native|Event|Private|NetClient 
	// Function /Script/Engine.PlayerController.ClearAudioListenerOverride
	void ClearAudioListenerOverride();                                                                                       // [0x4dc54d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.ClearAudioListenerAttenuationOverride
	void ClearAudioListenerAttenuationOverride();                                                                            // [0x4dc5480] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.CanRestartPlayer
	bool CanRestartPlayer();                                                                                                 // [0x4dc5450] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.Camera
	void Camera(FName NewMode);                                                                                              // [0x4dc53c0] Exec|Native|Public   
	// Function /Script/Engine.PlayerController.AddYawInput
	void AddYawInput(float Val);                                                                                             // [0x4dc5260] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.AddRollInput
	void AddRollInput(float Val);                                                                                            // [0x4dc51d0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.AddPitchInput
	void AddPitchInput(float Val);                                                                                           // [0x4dc5140] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerController.ActivateTouchInterface
	void ActivateTouchInterface(UTouchInterface* NewTouchInterface);                                                         // [0x4dc4f60] Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.NavigationSystemBase
/// Size: 0x0000 (0x000028 - 0x000028)
class UNavigationSystemBase : public UObject
{ 
public:
};

/// Class /Script/Engine.NavigationObjectBase
/// Size: 0x0028 (0x000290 - 0x0002B8)
class ANavigationObjectBase : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0290   (0x0008)  MISSED
	UCapsuleComponent*                                 CapsuleComponent;                                           // 0x0298   (0x0008)  
	UBillboardComponent*                               GoodSprite;                                                 // 0x02A0   (0x0008)  
	UBillboardComponent*                               BadSprite;                                                  // 0x02A8   (0x0008)  
	bool                                               bIsPIEPlayerStart : 1;                                      // 0x02B0:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x02B1   (0x0007)  MISSED
};

/// Class /Script/Engine.PlayerStart
/// Size: 0x0008 (0x0002B8 - 0x0002C0)
class APlayerStart : public ANavigationObjectBase
{ 
public:
	FName                                              PlayerStartTag;                                             // 0x02B8   (0x0008)  
};

/// Class /Script/Engine.SpectatorPawn
/// Size: 0x0000 (0x000340 - 0x000340)
class ASpectatorPawn : public ADefaultPawn
{ 
public:
};

/// Class /Script/Engine.PlayerState
/// Size: 0x0118 (0x000290 - 0x0003A8)
class APlayerState : public AInfo
{ 
public:
	float                                              Score;                                                      // 0x0290   (0x0004)  
	int32_t                                            PlayerId;                                                   // 0x0294   (0x0004)  
	char                                               CompressedPing;                                             // 0x0298   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0299   (0x0001)  MISSED
	bool                                               bShouldUpdateReplicatedPing : 1;                            // 0x029A:0 (0x0001)  
	bool                                               bIsSpectator : 1;                                           // 0x029A:1 (0x0001)  
	bool                                               bOnlySpectator : 1;                                         // 0x029A:2 (0x0001)  
	bool                                               bIsABot : 1;                                                // 0x029A:3 (0x0001)  
	unsigned char                                      UnknownBit01 : 1;                                           // 0x029A:4 (0x0001)  MISSED
	bool                                               bIsInactive : 1;                                            // 0x029A:5 (0x0001)  
	bool                                               bFromPreviousLevel : 1;                                     // 0x029A:6 (0x0001)  
	unsigned char                                      UnknownData02_4[0x1];                                       // 0x029B   (0x0001)  MISSED
	int32_t                                            StartTime;                                                  // 0x029C   (0x0004)  
	UClass*                                            EngineMessageClass;                                         // 0x02A0   (0x0008)  
	unsigned char                                      UnknownData03_5[0x8];                                       // 0x02A8   (0x0008)  MISSED
	FString                                            SavedNetworkAddress;                                        // 0x02B0   (0x0010)  
	FUniqueNetIdRepl                                   UniqueId;                                                   // 0x02C0   (0x0030)  
	unsigned char                                      UnknownData04_5[0x8];                                       // 0x02F0   (0x0008)  MISSED
	FMulticastInlineDelegate                           OnPawnSet;                                                  // 0x02F8   (0x0010)  
	APawn*                                             PawnPrivate;                                                // 0x0308   (0x0008)  
	unsigned char                                      UnknownData05_5[0x78];                                      // 0x0310   (0x0078)  MISSED
	FString                                            PlayerNamePrivate;                                          // 0x0388   (0x0010)  
	unsigned char                                      UnknownData06_6[0x10];                                      // 0x0398   (0x0010)  MISSED


	/// Functions
	// Function /Script/Engine.PlayerState.ReceiveOverrideWith
	void ReceiveOverrideWith(APlayerState* OldPlayerState);                                                                  // [0x2e6eb70] Event|Protected|BlueprintEvent 
	// Function /Script/Engine.PlayerState.ReceiveCopyProperties
	void ReceiveCopyProperties(APlayerState* NewPlayerState);                                                                // [0x2e6eb70] Event|Protected|BlueprintEvent 
	// Function /Script/Engine.PlayerState.OnRep_UniqueId
	void OnRep_UniqueId();                                                                                                   // [0xc00330] Native|Public        
	// Function /Script/Engine.PlayerState.OnRep_Score
	void OnRep_Score();                                                                                                      // [0x463cd10] Native|Public        
	// Function /Script/Engine.PlayerState.OnRep_PlayerName
	void OnRep_PlayerName();                                                                                                 // [0x11d0280] Native|Public        
	// Function /Script/Engine.PlayerState.OnRep_PlayerId
	void OnRep_PlayerId();                                                                                                   // [0xc003e0] Native|Public        
	// Function /Script/Engine.PlayerState.OnRep_bIsInactive
	void OnRep_bIsInactive();                                                                                                // [0x467ba70] Native|Public        
	// Function /Script/Engine.PlayerState.OnPawnPrivateDestroyed
	void OnPawnPrivateDestroyed(AActor* InActor);                                                                            // [0x4dcbea0] Final|Native|Private 
	// Function /Script/Engine.PlayerState.IsSpectator
	bool IsSpectator();                                                                                                      // [0x4dcb970] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerState.IsOnlyASpectator
	bool IsOnlyASpectator();                                                                                                 // [0x4dcb940] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerState.IsABot
	bool IsABot();                                                                                                           // [0x4dcb730] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerState.GetScore
	float GetScore();                                                                                                        // [0x4dcb2c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerState.GetPlayerName
	FString GetPlayerName();                                                                                                 // [0x4dcb1a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerState.GetPlayerId
	int32_t GetPlayerId();                                                                                                   // [0x40d18c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerState.GetPlayerController
	APlayerController* GetPlayerController();                                                                                // [0x4dcb130] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerState.GetPingInMilliseconds
	float GetPingInMilliseconds();                                                                                           // [0x4dcb050] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerState.GetPawn
	APawn* GetPawn();                                                                                                        // [0x4dcb030] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerState.GetCompressedPing
	char GetCompressedPing();                                                                                                // [0x4dc8e10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerState.BP_GetUniqueId
	FUniqueNetIdRepl BP_GetUniqueId();                                                                                       // [0x4dc52f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.SceneCaptureComponent
/// Size: 0x00C0 (0x0002A0 - 0x000360)
class USceneCaptureComponent : public USceneComponent
{ 
public:
	ESceneCapturePrimitiveRenderMode                   PrimitiveRenderMode;                                        // 0x02A0   (0x0001)  
	TEnumAsByte<ESceneCaptureSource>                   CaptureSource;                                              // 0x02A1   (0x0001)  
	bool                                               bCaptureEveryFrame : 1;                                     // 0x02A2:0 (0x0001)  
	bool                                               bCaptureOnMovement : 1;                                     // 0x02A2:1 (0x0001)  
	bool                                               bAlwaysPersistRenderingState;                               // 0x02A3   (0x0001)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x02A4   (0x0004)  MISSED
	TArray<TWeakObjectPtr>                             HiddenComponents;                                           // 0x02A8   (0x0010)  
	TArray<AActor*>                                    HiddenActors;                                               // 0x02B8   (0x0010)  
	TArray<TWeakObjectPtr>                             ShowOnlyComponents;                                         // 0x02C8   (0x0010)  
	TArray<AActor*>                                    ShowOnlyActors;                                             // 0x02D8   (0x0010)  
	float                                              LODDistanceFactor;                                          // 0x02E8   (0x0004)  
	float                                              MaxViewDistanceOverride;                                    // 0x02EC   (0x0004)  
	int32_t                                            CaptureSortPriority;                                        // 0x02F0   (0x0004)  
	bool                                               bUseRayTracingIfEnabled;                                    // 0x02F4   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x02F5   (0x0003)  MISSED
	TArray<FEngineShowFlagsSetting>                    ShowFlagSettings;                                           // 0x02F8   (0x0010)  
	unsigned char                                      UnknownData02_5[0x30];                                      // 0x0308   (0x0030)  MISSED
	FString                                            ProfilingEventName;                                         // 0x0338   (0x0010)  
	unsigned char                                      UnknownData03_6[0x18];                                      // 0x0348   (0x0018)  MISSED


	/// Functions
	// Function /Script/Engine.SceneCaptureComponent.ShowOnlyComponent
	void ShowOnlyComponent(UPrimitiveComponent* InComponent);                                                                // [0x4930a60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneCaptureComponent.ShowOnlyActorComponents
	void ShowOnlyActorComponents(AActor* InActor, bool bIncludeFromChildActors);                                             // [0x4930840] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneCaptureComponent.SetCaptureSortPriority
	void SetCaptureSortPriority(int32_t NewCaptureSortPriority);                                                             // [0x492f780] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneCaptureComponent.RemoveShowOnlyComponent
	void RemoveShowOnlyComponent(UPrimitiveComponent* InComponent);                                                          // [0x492e280] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneCaptureComponent.RemoveShowOnlyActorComponents
	void RemoveShowOnlyActorComponents(AActor* InActor, bool bIncludeFromChildActors);                                       // [0x492dfe0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneCaptureComponent.HideComponent
	void HideComponent(UPrimitiveComponent* InComponent);                                                                    // [0x492d370] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneCaptureComponent.HideActorComponents
	void HideActorComponents(AActor* InActor, bool bIncludeFromChildActors);                                                 // [0x492d110] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneCaptureComponent.ClearShowOnlyComponents
	void ClearShowOnlyComponents();                                                                                          // [0x492b010] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneCaptureComponent.ClearHiddenComponents
	void ClearHiddenComponents();                                                                                            // [0x492afc0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.SceneCaptureComponent2D
/// Size: 0x07F0 (0x000360 - 0x000B50)
class USceneCaptureComponent2D : public USceneCaptureComponent
{ 
public:
	TEnumAsByte<ECameraProjectionMode>                 ProjectionType;                                             // 0x0358   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0359   (0x0003)  MISSED
	float                                              FOVAngle;                                                   // 0x035C   (0x0004)  
	float                                              OrthoWidth;                                                 // 0x0360   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0364   (0x0004)  MISSED
	UTextureRenderTarget2D*                            TextureTarget;                                              // 0x0368   (0x0008)  
	TEnumAsByte<ESceneCaptureCompositeMode>            CompositeMode;                                              // 0x0370   (0x0001)  
	unsigned char                                      UnknownData02_5[0xF];                                       // 0x0371   (0x000F)  MISSED
	FPostProcessSettings                               PostProcessSettings;                                        // 0x0380   (0x06E0)  
	float                                              PostProcessBlendWeight;                                     // 0x0A60   (0x0004)  
	bool                                               bOverride_CustomNearClippingPlane : 1;                      // 0x0A64:0 (0x0001)  
	unsigned char                                      UnknownData03_4[0x3];                                       // 0x0A65   (0x0003)  MISSED
	float                                              CustomNearClippingPlane;                                    // 0x0A68   (0x0004)  
	bool                                               bUseCustomProjectionMatrix;                                 // 0x0A6C   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x0A6D   (0x0003)  MISSED
	FMatrix                                            CustomProjectionMatrix;                                     // 0x0A70   (0x0080)  
	bool                                               bUseFauxOrthoViewPos;                                       // 0x0AF0   (0x0001)  
	bool                                               bEnableOrthographicTiling;                                  // 0x0AF1   (0x0001)  
	unsigned char                                      UnknownData05_5[0x2];                                       // 0x0AF2   (0x0002)  MISSED
	int32_t                                            NumXTiles;                                                  // 0x0AF4   (0x0004)  
	int32_t                                            NumYTiles;                                                  // 0x0AF8   (0x0004)  
	bool                                               bEnableClipPlane;                                           // 0x0AFC   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x0AFD   (0x0003)  MISSED
	FVector                                            ClipPlaneBase;                                              // 0x0B00   (0x0018)  
	FVector                                            ClipPlaneNormal;                                            // 0x0B18   (0x0018)  
	bool                                               bCameraCutThisFrame : 1;                                    // 0x0B30:0 (0x0001)  
	bool                                               bConsiderUnrenderedOpaquePixelAsFullyTranslucent : 1;       // 0x0B30:1 (0x0001)  
	unsigned char                                      UnknownData07_6[0x1F];                                      // 0x0B31   (0x001F)  MISSED


	/// Functions
	// Function /Script/Engine.SceneCaptureComponent2D.RemoveBlendable
	void RemoveBlendable(TScriptInterface<Class> InBlendableObject);                                                         // [0x468f540] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneCaptureComponent2D.CaptureScene
	void CaptureScene();                                                                                                     // [0x468c000] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SceneCaptureComponent2D.AddOrUpdateBlendable
	void AddOrUpdateBlendable(TScriptInterface<Class> InBlendableObject, float InWeight);                                    // [0x468beb0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.SpringArmComponent
/// Size: 0x0100 (0x0002A0 - 0x0003A0)
class USpringArmComponent : public USceneComponent
{ 
public:
	float                                              TargetArmLength;                                            // 0x02A0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x02A4   (0x0004)  MISSED
	FVector                                            SocketOffset;                                               // 0x02A8   (0x0018)  
	FVector                                            TargetOffset;                                               // 0x02C0   (0x0018)  
	float                                              ProbeSize;                                                  // 0x02D8   (0x0004)  
	TEnumAsByte<ECollisionChannel>                     ProbeChannel;                                               // 0x02DC   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x02DD   (0x0003)  MISSED
	bool                                               bDoCollisionTest : 1;                                       // 0x02E0:0 (0x0001)  
	bool                                               bUsePawnControlRotation : 1;                                // 0x02E0:1 (0x0001)  
	bool                                               bInheritPitch : 1;                                          // 0x02E0:2 (0x0001)  
	bool                                               bInheritYaw : 1;                                            // 0x02E0:3 (0x0001)  
	bool                                               bInheritRoll : 1;                                           // 0x02E0:4 (0x0001)  
	bool                                               bEnableCameraLag : 1;                                       // 0x02E0:5 (0x0001)  
	bool                                               bEnableCameraRotationLag : 1;                               // 0x02E0:6 (0x0001)  
	bool                                               bUseCameraLagSubstepping : 1;                               // 0x02E0:7 (0x0001)  
	bool                                               bDrawDebugLagMarkers : 1;                                   // 0x02E1:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x2];                                       // 0x02E2   (0x0002)  MISSED
	float                                              CameraLagSpeed;                                             // 0x02E4   (0x0004)  
	float                                              CameraRotationLagSpeed;                                     // 0x02E8   (0x0004)  
	float                                              CameraLagMaxTimeStep;                                       // 0x02EC   (0x0004)  
	float                                              CameraLagMaxDistance;                                       // 0x02F0   (0x0004)  
	bool                                               bClampToMaxPhysicsDeltaTime : 1;                            // 0x02F4:0 (0x0001)  
	unsigned char                                      UnknownData03_6[0xAB];                                      // 0x02F5   (0x00AB)  MISSED


	/// Functions
	// Function /Script/Engine.SpringArmComponent.IsCollisionFixApplied
	bool IsCollisionFixApplied();                                                                                            // [0x1329930] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SpringArmComponent.GetUnfixedCameraPosition
	FVector GetUnfixedCameraPosition();                                                                                      // [0x4a5a0c0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SpringArmComponent.GetTargetRotation
	FRotator GetTargetRotation();                                                                                            // [0x4a59fd0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.WorldSettings
/// Size: 0x0228 (0x000290 - 0x0004B8)
class AWorldSettings : public AInfo
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0290   (0x0008)  MISSED
	int32_t                                            VisibilityCellSize;                                         // 0x0298   (0x0004)  
	TEnumAsByte<EVisibilityAggressiveness>             VisibilityAggressiveness;                                   // 0x029C   (0x0001)  
	bool                                               bPrecomputeVisibility : 1;                                  // 0x029D:0 (0x0001)  
	bool                                               bPlaceCellsOnlyAlongCameraTracks : 1;                       // 0x029D:1 (0x0001)  
	bool                                               bEnableWorldBoundsChecks : 1;                               // 0x029D:2 (0x0001)  
	bool                                               bEnableNavigationSystem : 1;                                // 0x029D:3 (0x0001)  
	bool                                               bEnableAISystem : 1;                                        // 0x029D:4 (0x0001)  
	bool                                               bEnableWorldComposition : 1;                                // 0x029D:5 (0x0001)  
	bool                                               bUseClientSideLevelStreamingVolumes : 1;                    // 0x029D:6 (0x0001)  
	bool                                               bEnableWorldOriginRebasing : 1;                             // 0x029D:7 (0x0001)  
	bool                                               bWorldGravitySet : 1;                                       // 0x029E:0 (0x0001)  
	bool                                               bGlobalGravitySet : 1;                                      // 0x029E:1 (0x0001)  
	bool                                               bMinimizeBSPSections : 1;                                   // 0x029E:2 (0x0001)  
	bool                                               bForceNoPrecomputedLighting : 1;                            // 0x029E:3 (0x0001)  
	bool                                               bHighPriorityLoading : 1;                                   // 0x029E:4 (0x0001)  
	bool                                               bHighPriorityLoadingLocal : 1;                              // 0x029E:5 (0x0001)  
	bool                                               bOverrideDefaultBroadphaseSettings : 1;                     // 0x029E:6 (0x0001)  
	bool                                               bGenerateSingleClusterForLevel : 1;                         // 0x029E:7 (0x0001)  
	unsigned char                                      UnknownData01_4[0x1];                                       // 0x029F   (0x0001)  MISSED
	TWeakObjectPtr<UClass*>                            AISystemClass;                                              // 0x02A0   (0x0030)  
	FVector                                            LevelInstancePivotOffset;                                   // 0x02D0   (0x0018)  
	UNavigationSystemConfig*                           NavigationSystemConfig;                                     // 0x02E8   (0x0008)  
	UNavigationSystemConfig*                           NavigationSystemConfigOverride;                             // 0x02F0   (0x0008)  
	UWorldPartition*                                   WorldPartition;                                             // 0x02F8   (0x0008)  
	TArray<UDataLayerAsset*>                           BaseNavmeshDataLayers;                                      // 0x0300   (0x0010)  
	float                                              WorldToMeters;                                              // 0x0310   (0x0004)  
	float                                              KillZ;                                                      // 0x0314   (0x0004)  
	UClass*                                            KillZDamageType;                                            // 0x0318   (0x0008)  
	float                                              WorldGravityZ;                                              // 0x0320   (0x0004)  
	float                                              GlobalGravityZ;                                             // 0x0324   (0x0004)  
	UClass*                                            DefaultPhysicsVolumeClass;                                  // 0x0328   (0x0008)  
	UClass*                                            PhysicsCollisionHandlerClass;                               // 0x0330   (0x0008)  
	UClass*                                            DefaultGameMode;                                            // 0x0338   (0x0008)  
	UClass*                                            GameNetworkManagerClass;                                    // 0x0340   (0x0008)  
	int32_t                                            PackedLightAndShadowMapTextureSize;                         // 0x0348   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x034C   (0x0004)  MISSED
	FVector                                            DefaultColorScale;                                          // 0x0350   (0x0018)  
	float                                              DefaultMaxDistanceFieldOcclusionDistance;                   // 0x0368   (0x0004)  
	float                                              GlobalDistanceFieldViewDistance;                            // 0x036C   (0x0004)  
	float                                              DynamicIndirectShadowsSelfShadowingIntensity;               // 0x0370   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x0374   (0x0004)  MISSED
	FReverbSettings                                    DefaultReverbSettings;                                      // 0x0378   (0x0020)  
	FInteriorSettings                                  DefaultAmbientZoneSettings;                                 // 0x0398   (0x0024)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x03BC   (0x0004)  MISSED
	USoundMix*                                         DefaultBaseSoundMix;                                        // 0x03C0   (0x0008)  
	float                                              TimeDilation;                                               // 0x03C8   (0x0004)  
	float                                              CinematicTimeDilation;                                      // 0x03CC   (0x0004)  
	float                                              DemoPlayTimeDilation;                                       // 0x03D0   (0x0004)  
	float                                              MinGlobalTimeDilation;                                      // 0x03D4   (0x0004)  
	float                                              MaxGlobalTimeDilation;                                      // 0x03D8   (0x0004)  
	float                                              MinUndilatedFrameTime;                                      // 0x03DC   (0x0004)  
	float                                              MaxUndilatedFrameTime;                                      // 0x03E0   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x03E4   (0x0004)  MISSED
	FBroadphaseSettings                                BroadphaseSettings;                                         // 0x03E8   (0x0080)  
	TArray<FNetViewer>                                 ReplicationViewers;                                         // 0x0468   (0x0010)  
	TArray<UAssetUserData*>                            AssetUserData;                                              // 0x0478   (0x0010)  
	APlayerState*                                      PauserPlayerState;                                          // 0x0488   (0x0008)  
	int32_t                                            MaxNumberOfBookmarks;                                       // 0x0490   (0x0004)  
	unsigned char                                      UnknownData06_5[0x4];                                       // 0x0494   (0x0004)  MISSED
	UClass*                                            DefaultBookmarkClass;                                       // 0x0498   (0x0008)  
	TArray<UBookmarkBase*>                             BookmarkArray;                                              // 0x04A0   (0x0010)  
	UClass*                                            LastBookmarkClass;                                          // 0x04B0   (0x0008)  


	/// Functions
	// Function /Script/Engine.WorldSettings.OnRep_WorldGravityZ
	void OnRep_WorldGravityZ();                                                                                              // [0x463cd10] Native|Public        
};

/// Class /Script/Engine.GameMode
/// Size: 0x0048 (0x000330 - 0x000378)
class AGameMode : public AGameModeBase
{ 
public:
	FName                                              MatchState;                                                 // 0x0330   (0x0008)  
	bool                                               bDelayedStart : 1;                                          // 0x0338:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0339   (0x0003)  MISSED
	int32_t                                            NumSpectators;                                              // 0x033C   (0x0004)  
	int32_t                                            NumPlayers;                                                 // 0x0340   (0x0004)  
	int32_t                                            NumBots;                                                    // 0x0344   (0x0004)  
	float                                              MinRespawnDelay;                                            // 0x0348   (0x0004)  
	int32_t                                            NumTravellingPlayers;                                       // 0x034C   (0x0004)  
	UClass*                                            EngineMessageClass;                                         // 0x0350   (0x0008)  
	TArray<APlayerState*>                              InactivePlayerArray;                                        // 0x0358   (0x0010)  
	float                                              InactivePlayerStateLifeSpan;                                // 0x0368   (0x0004)  
	int32_t                                            MaxInactivePlayers;                                         // 0x036C   (0x0004)  
	bool                                               bHandleDedicatedServerReplays;                              // 0x0370   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0371   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.GameMode.StartMatch
	void StartMatch();                                                                                                       // [0x4a63ba0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameMode.Say
	void Say(FString Msg);                                                                                                   // [0x4a5ec50] Exec|Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameMode.RestartGame
	void RestartGame();                                                                                                      // [0x4a5e4e0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameMode.ReadyToStartMatch
	bool ReadyToStartMatch();                                                                                                // [0x4a5e0f0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/Engine.GameMode.ReadyToEndMatch
	bool ReadyToEndMatch();                                                                                                  // [0x484e830] Native|Event|Protected|BlueprintEvent 
	// Function /Script/Engine.GameMode.K2_OnSetMatchState
	void K2_OnSetMatchState(FName NewState);                                                                                 // [0x2e6eb70] Event|Protected|BlueprintEvent 
	// Function /Script/Engine.GameMode.IsMatchInProgress
	bool IsMatchInProgress();                                                                                                // [0x4a5ae50] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameMode.GetMatchState
	FName GetMatchState();                                                                                                   // [0xc01660] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.GameMode.EndMatch
	void EndMatch();                                                                                                         // [0x4a56540] Native|Public|BlueprintCallable 
	// Function /Script/Engine.GameMode.AbortMatch
	void AbortMatch();                                                                                                       // [0x4a51cc0] Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.GameState
/// Size: 0x0020 (0x0002E0 - 0x000300)
class AGameState : public AGameStateBase
{ 
public:
	FName                                              MatchState;                                                 // 0x02E0   (0x0008)  
	FName                                              PreviousMatchState;                                         // 0x02E8   (0x0008)  
	int32_t                                            ElapsedTime;                                                // 0x02F0   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x02F4   (0x000C)  MISSED


	/// Functions
	// Function /Script/Engine.GameState.OnRep_MatchState
	void OnRep_MatchState();                                                                                                 // [0x4a5bfc0] Native|Public        
	// Function /Script/Engine.GameState.OnRep_ElapsedTime
	void OnRep_ElapsedTime();                                                                                                // [0x48bcd50] Native|Public        
};

/// Class /Script/Engine.SkyLight
/// Size: 0x0010 (0x000290 - 0x0002A0)
class ASkyLight : public AInfo
{ 
public:
	USkyLightComponent*                                LightComponent;                                             // 0x0290   (0x0008)  
	bool                                               bEnabled : 1;                                               // 0x0298:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0299   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.SkyLight.OnRep_bEnabled
	void OnRep_bEnabled();                                                                                                   // [0x463cd10] Native|Public        
};

/// Class /Script/Engine.StreamableRenderAsset
/// Size: 0x00A8 (0x000028 - 0x0000D0)
class UStreamableRenderAsset : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0028   (0x0018)  MISSED
	double                                             ForceMipLevelsToBeResidentTimestamp;                        // 0x0040   (0x0008)  
	int32_t                                            NumCinematicMipLevels;                                      // 0x0048   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x004C   (0x0004)  MISSED
	FPerQualityLevelInt                                NoRefStreamingLODBias;                                      // 0x0050   (0x0068)  
	int32_t                                            StreamingIndex;                                             // 0x00B8   (0x0004)  
	int32_t                                            CachedCombinedLODBias;                                      // 0x00BC   (0x0004)  
	bool                                               NeverStream : 1;                                            // 0x00C0:0 (0x0001)  
	bool                                               bGlobalForceMipLevelsToBeResident : 1;                      // 0x00C0:1 (0x0001)  
	bool                                               bHasStreamingUpdatePending : 1;                             // 0x00C0:2 (0x0001)  
	bool                                               bForceMiplevelsToBeResident : 1;                            // 0x00C0:3 (0x0001)  
	bool                                               bIgnoreStreamingMipBias : 1;                                // 0x00C0:4 (0x0001)  
	bool                                               bUseCinematicMipLevels : 1;                                 // 0x00C0:5 (0x0001)  
	unsigned char                                      UnknownData02_6[0xF];                                       // 0x00C1   (0x000F)  MISSED


	/// Functions
	// Function /Script/Engine.StreamableRenderAsset.SetForceMipLevelsToBeResident
	void SetForceMipLevelsToBeResident(float Seconds, int32_t CinematicLODGroupMask);                                        // [0x4f6f150] Final|RequiredAPI|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.Texture
/// Size: 0x0120 (0x0000D0 - 0x0001F0)
class UTexture : public UStreamableRenderAsset
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x00D0   (0x0010)  MISSED
	FGuid                                              LightingGuid;                                               // 0x00E0   (0x0010)  
	int32_t                                            LevelIndex;                                                 // 0x00F0   (0x0004)  
	int32_t                                            LODBias;                                                    // 0x00F4   (0x0004)  
	TEnumAsByte<TextureCompressionSettings>            CompressionSettings;                                        // 0x00F8   (0x0001)  
	TEnumAsByte<TextureFilter>                         Filter;                                                     // 0x00F9   (0x0001)  
	ETextureMipLoadOptions                             MipLoadOptions;                                             // 0x00FA   (0x0001)  
	TEnumAsByte<TextureGroup>                          LODGroup;                                                   // 0x00FB   (0x0001)  
	FPerPlatformFloat                                  Downscale;                                                  // 0x00FC   (0x0004)  
	ETextureDownscaleOptions                           DownscaleOptions;                                           // 0x0100   (0x0001)  
	bool                                               SRGB : 1;                                                   // 0x0101:0 (0x0001)  
	bool                                               bNoTiling : 1;                                              // 0x0101:1 (0x0001)  
	bool                                               VirtualTextureStreaming : 1;                                // 0x0101:2 (0x0001)  
	bool                                               CompressionYCoCg : 1;                                       // 0x0101:3 (0x0001)  
	bool                                               bNotOfflineProcessed : 1;                                   // 0x0101:4 (0x0001)  
	bool                                               bAsyncResourceReleaseHasBeenStarted : 1;                    // 0x0101:5 (0x0001)  
	unsigned char                                      UnknownData01_4[0x6];                                       // 0x0102   (0x0006)  MISSED
	TArray<UAssetUserData*>                            AssetUserData;                                              // 0x0108   (0x0010)  
	unsigned char                                      UnknownData02_6[0xD8];                                      // 0x0118   (0x00D8)  MISSED


	/// Functions
	// Function /Script/Engine.Texture.Blueprint_GetMemorySize
	int64_t Blueprint_GetMemorySize();                                                                                       // [0x469fe00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.TextureCube
/// Size: 0x00A0 (0x0001F0 - 0x000290)
class UTextureCube : public UTexture
{ 
public:
	unsigned char                                      UnknownData00_1[0xA0];                                      // 0x01F0   (0x00A0)  MISSED
};

/// Class /Script/Engine.StaticMeshComponent
/// Size: 0x0080 (0x000570 - 0x0005F0)
class UStaticMeshComponent : public UMeshComponent
{ 
public:
	int32_t                                            ForcedLodModel;                                             // 0x0570   (0x0004)  
	int32_t                                            PreviousLODLevel;                                           // 0x0574   (0x0004)  
	int32_t                                            MinLOD;                                                     // 0x0578   (0x0004)  
	int32_t                                            SubDivisionStepSize;                                        // 0x057C   (0x0004)  
	UStaticMesh*                                       StaticMesh;                                                 // 0x0580   (0x0008)  
	FColor                                             WireframeColorOverride;                                     // 0x0588   (0x0004)  
	bool                                               bDisallowNanite : 1;                                        // 0x058C:0 (0x0001)  
	bool                                               bEvaluateWorldPositionOffset : 1;                           // 0x058C:1 (0x0001)  
	bool                                               bEvaluateWorldPositionOffsetInRayTracing : 1;               // 0x058C:2 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x058D   (0x0003)  MISSED
	int32_t                                            WorldPositionOffsetDisableDistance;                         // 0x0590   (0x0004)  
	unsigned char                                      UnknownBit01 : 1;                                           // 0x0594:0 (0x0001)  MISSED
	bool                                               bOverrideWireframeColor : 1;                                // 0x0594:1 (0x0001)  
	bool                                               bOverrideMinLod : 1;                                        // 0x0594:2 (0x0001)  
	bool                                               bOverrideNavigationExport : 1;                              // 0x0594:3 (0x0001)  
	bool                                               bForceNavigationObstacle : 1;                               // 0x0594:4 (0x0001)  
	bool                                               bDisallowMeshPaintPerInstance : 1;                          // 0x0594:5 (0x0001)  
	bool                                               bIgnoreInstanceForTextureStreaming : 1;                     // 0x0594:6 (0x0001)  
	bool                                               bOverrideLightMapRes : 1;                                   // 0x0594:7 (0x0001)  
	bool                                               bCastDistanceFieldIndirectShadow : 1;                       // 0x0595:0 (0x0001)  
	bool                                               bOverrideDistanceFieldSelfShadowBias : 1;                   // 0x0595:1 (0x0001)  
	bool                                               bUseSubDivisions : 1;                                       // 0x0595:2 (0x0001)  
	bool                                               bUseDefaultCollision : 1;                                   // 0x0595:3 (0x0001)  
	bool                                               bSortTriangles : 1;                                         // 0x0595:4 (0x0001)  
	bool                                               bReverseCulling : 1;                                        // 0x0595:5 (0x0001)  
	unsigned char                                      UnknownData02_4[0x2];                                       // 0x0596   (0x0002)  MISSED
	int32_t                                            OverriddenLightMapRes;                                      // 0x0598   (0x0004)  
	float                                              DistanceFieldIndirectShadowMinVisibility;                   // 0x059C   (0x0004)  
	float                                              DistanceFieldSelfShadowBias;                                // 0x05A0   (0x0004)  
	float                                              StreamingDistanceMultiplier;                                // 0x05A4   (0x0004)  
	TArray<FStaticMeshComponentLODInfo>                LODData;                                                    // 0x05A8   (0x0010)  
	TArray<FStreamingTextureBuildInfo>                 StreamingTextureData;                                       // 0x05B8   (0x0010)  
	FLightmassPrimitiveSettings                        LightmassSettings;                                          // 0x05C8   (0x0018)  
	unsigned char                                      UnknownData03_6[0x10];                                      // 0x05E0   (0x0010)  MISSED


	/// Functions
	// Function /Script/Engine.StaticMeshComponent.SetStaticMesh
	bool SetStaticMesh(UStaticMesh* NewMesh);                                                                                // [0x15f9da0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.StaticMeshComponent.SetReverseCulling
	void SetReverseCulling(bool ReverseCulling);                                                                             // [0x49727d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StaticMeshComponent.SetForcedLodModel
	void SetForcedLodModel(int32_t NewForcedLodModel);                                                                       // [0x4971530] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StaticMeshComponent.SetEvaluateWorldPositionOffsetInRayTracing
	void SetEvaluateWorldPositionOffsetInRayTracing(bool NewValue);                                                          // [0x4971380] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StaticMeshComponent.SetEvaluateWorldPositionOffset
	void SetEvaluateWorldPositionOffset(bool NewValue);                                                                      // [0x49712a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StaticMeshComponent.SetDistanceFieldSelfShadowBias
	void SetDistanceFieldSelfShadowBias(float NewValue);                                                                     // [0x4970b50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StaticMeshComponent.OnRep_StaticMesh
	void OnRep_StaticMesh(UStaticMesh* OldStaticMesh);                                                                       // [0x496ffe0] Final|Native|Public  
	// Function /Script/Engine.StaticMeshComponent.GetLocalBounds
	void GetLocalBounds(FVector& Min, FVector& Max);                                                                         // [0x496a770] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMeshComponent.GetInitialEvaluateWorldPositionOffset
	bool GetInitialEvaluateWorldPositionOffset();                                                                            // [0x496a330] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.InstancedStaticMeshComponent
/// Size: 0x0150 (0x0005F0 - 0x000740)
class UInstancedStaticMeshComponent : public UStaticMeshComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x05F0   (0x0008)  MISSED
	TArray<FInstancedStaticMeshInstanceData>           PerInstanceSMData;                                          // 0x05F8   (0x0010)  
	TArray<FMatrix>                                    PerInstancePrevTransform;                                   // 0x0608   (0x0010)  
	int32_t                                            NumCustomDataFloats;                                        // 0x0618   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x061C   (0x0004)  MISSED
	TArray<float>                                      PerInstanceSMCustomData;                                    // 0x0620   (0x0010)  
	int32_t                                            InstancingRandomSeed;                                       // 0x0630   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0634   (0x0004)  MISSED
	TArray<FInstancedStaticMeshRandomSeed>             AdditionalRandomSeeds;                                      // 0x0638   (0x0010)  
	int32_t                                            InstanceStartCullDistance;                                  // 0x0648   (0x0004)  
	int32_t                                            InstanceEndCullDistance;                                    // 0x064C   (0x0004)  
	TArray<int32_t>                                    InstanceReorderTable;                                       // 0x0650   (0x0010)  
	unsigned char                                      UnknownData03_5[0xC0];                                      // 0x0660   (0x00C0)  MISSED
	int32_t                                            NumPendingLightmaps;                                        // 0x0720   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0724   (0x0004)  MISSED
	TArray<FInstancedStaticMeshMappingInfo>            CachedMappings;                                             // 0x0728   (0x0010)  
	unsigned char                                      UnknownData05_6[0x8];                                       // 0x0738   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.InstancedStaticMeshComponent.UpdateInstanceTransform
	bool UpdateInstanceTransform(int32_t InstanceIndex, FTransform& NewInstanceTransform, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport); // [0x4649b80] Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.InstancedStaticMeshComponent.SetCustomDataValue
	bool SetCustomDataValue(int32_t InstanceIndex, int32_t CustomDataIndex, float CustomDataValue, bool bMarkRenderStateDirty); // [0x4648e00] Native|Public|BlueprintCallable 
	// Function /Script/Engine.InstancedStaticMeshComponent.SetCullDistances
	void SetCullDistances(int32_t StartCullDistance, int32_t EndCullDistance);                                               // [0x4648d30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.InstancedStaticMeshComponent.RemoveInstances
	bool RemoveInstances(TArray<int32_t>& InstancesToRemove);                                                                // [0x4648c70] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.InstancedStaticMeshComponent.RemoveInstance
	bool RemoveInstance(int32_t InstanceIndex);                                                                              // [0x4648bd0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.InstancedStaticMeshComponent.IsValidInstance
	bool IsValidInstance(int32_t InstanceIndex);                                                                             // [0x4648640] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InstancedStaticMeshComponent.GetInstanceTransform
	bool GetInstanceTransform(int32_t InstanceIndex, FTransform& OutInstanceTransform, bool bWorldSpace);                    // [0x4647f40] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InstancedStaticMeshComponent.GetInstancesOverlappingSphere
	TArray<int32_t> GetInstancesOverlappingSphere(FVector& Center, float Radius, bool bSphereInWorldSpace);                  // [0x4648210] Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InstancedStaticMeshComponent.GetInstancesOverlappingBox
	TArray<int32_t> GetInstancesOverlappingBox(FBox& Box, bool bBoxInWorldSpace);                                            // [0x46480d0] Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InstancedStaticMeshComponent.GetInstanceCount
	int32_t GetInstanceCount();                                                                                              // [0x4647f10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InstancedStaticMeshComponent.ClearInstances
	void ClearInstances();                                                                                                   // [0x46465c0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.InstancedStaticMeshComponent.BatchUpdateInstancesTransforms
	bool BatchUpdateInstancesTransforms(int32_t StartInstanceIndex, TArray<FTransform>& NewInstancesTransforms, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport); // [0x46463b0] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.InstancedStaticMeshComponent.BatchUpdateInstancesTransform
	bool BatchUpdateInstancesTransform(int32_t StartInstanceIndex, int32_t NumInstances, FTransform& NewInstancesTransform, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport); // [0x4646140] Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.InstancedStaticMeshComponent.AddInstanceWorldSpace
	int32_t AddInstanceWorldSpace(FTransform& WorldTransform);                                                               // [0x4644c50] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.InstancedStaticMeshComponent.AddInstances
	TArray<int32_t> AddInstances(TArray<FTransform>& InstanceTransforms, bool bShouldReturnIndices, bool bWorldSpace);       // [0x4644d60] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.InstancedStaticMeshComponent.AddInstance
	int32_t AddInstance(FTransform& InstanceTransform, bool bWorldSpace);                                                    // [0x4644af0] Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.HierarchicalInstancedStaticMeshComponent
/// Size: 0x0190 (0x000740 - 0x0008D0)
class UHierarchicalInstancedStaticMeshComponent : public UInstancedStaticMeshComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0740   (0x0008)  MISSED
	bool                                               bUseTranslatedInstanceSpace : 1;                            // 0x0748:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x7];                                       // 0x0749   (0x0007)  MISSED
	FVector                                            TranslatedInstanceSpaceOrigin;                              // 0x0750   (0x0018)  
	TArray<int32_t>                                    SortedInstances;                                            // 0x0768   (0x0010)  
	int32_t                                            NumBuiltInstances;                                          // 0x0778   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x077C   (0x0004)  MISSED
	FBox                                               BuiltInstanceBounds;                                        // 0x0780   (0x0038)  
	FBox                                               UnbuiltInstanceBounds;                                      // 0x07B8   (0x0038)  
	TArray<FBox>                                       UnbuiltInstanceBoundsList;                                  // 0x07F0   (0x0010)  
	bool                                               bEnableDensityScaling : 1;                                  // 0x0800:0 (0x0001)  
	unsigned char                                      UnknownData03_4[0x7];                                       // 0x0801   (0x0007)  MISSED
	int32_t                                            OcclusionLayerNumNodes;                                     // 0x0808   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x080C   (0x0004)  MISSED
	FBoxSphereBounds                                   CacheMeshExtendedBounds;                                    // 0x0810   (0x0038)  
	bool                                               bDisableCollision;                                          // 0x0848   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x0849   (0x0003)  MISSED
	int32_t                                            InstanceCountToRender;                                      // 0x084C   (0x0004)  
	unsigned char                                      UnknownData06_6[0x80];                                      // 0x0850   (0x0080)  MISSED
};

/// Class /Script/Engine.PartitionActor
/// Size: 0x0000 (0x000290 - 0x000290)
class APartitionActor : public AActor
{ 
public:
};

/// Class /Script/Engine.ISMPartitionActor
/// Size: 0x0010 (0x000290 - 0x0002A0)
class AISMPartitionActor : public APartitionActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0290   (0x0010)  MISSED
};

/// Class /Script/Engine.StaticMeshActor
/// Size: 0x0010 (0x000290 - 0x0002A0)
class AStaticMeshActor : public AActor
{ 
public:
	UStaticMeshComponent*                              StaticMeshComponent;                                        // 0x0290   (0x0008)  
	bool                                               bStaticMeshReplicateMovement;                               // 0x0298   (0x0001)  
	ENavDataGatheringMode                              NavigationGeometryGatheringMode;                            // 0x0299   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x029A   (0x0006)  MISSED


	/// Functions
	// Function /Script/Engine.StaticMeshActor.SetMobility
	void SetMobility(TEnumAsByte<EComponentMobility> InMobility);                                                            // [0x4f6f280] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.MaterialInterface
/// Size: 0x0070 (0x000028 - 0x000098)
class UMaterialInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0028   (0x0010)  MISSED
	USubsurfaceProfile*                                SubsurfaceProfile;                                          // 0x0038   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x0040   (0x0010)  MISSED
	FLightmassMaterialInterfaceSettings                LightmassSettings;                                          // 0x0050   (0x0010)  
	TArray<FMaterialTextureInfo>                       TextureStreamingData;                                       // 0x0060   (0x0010)  
	TArray<UAssetUserData*>                            AssetUserData;                                              // 0x0070   (0x0010)  
	unsigned char                                      UnknownData02_6[0x18];                                      // 0x0080   (0x0018)  MISSED


	/// Functions
	// Function /Script/Engine.MaterialInterface.SetForceMipLevelsToBeResident
	void SetForceMipLevelsToBeResident(bool OverrideForceMiplevelsToBeResident, bool bForceMiplevelsToBeResidentValue, float ForceDuration, int32_t CinematicTextureGroups, bool bFastResponse); // [0x4664500] RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.MaterialInterface.GetPhysicalMaterialMask
	UPhysicalMaterialMask* GetPhysicalMaterialMask();                                                                        // [0x4664210] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MaterialInterface.GetPhysicalMaterialFromMap
	UPhysicalMaterial* GetPhysicalMaterialFromMap(int32_t Index);                                                            // [0x4664170] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MaterialInterface.GetPhysicalMaterial
	UPhysicalMaterial* GetPhysicalMaterial();                                                                                // [0x4664140] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MaterialInterface.GetParameterInfo
	FMaterialParameterInfo GetParameterInfo(TEnumAsByte<EMaterialParameterAssociation> Association, FName ParameterName, UMaterialFunctionInterface* LayerFunction); // [0x4664020] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MaterialInterface.GetBlendMode
	TEnumAsByte<EBlendMode> GetBlendMode();                                                                                  // [0x4663ff0] RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.MaterialInterface.GetBaseMaterial
	UMaterial* GetBaseMaterial();                                                                                            // [0x4663fc0] Final|RequiredAPI|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.MaterialInstance
/// Size: 0x0160 (0x000098 - 0x0001F8)
class UMaterialInstance : public UMaterialInterface
{ 
public:
	UPhysicalMaterial*                                 PhysMaterial;                                               // 0x0098   (0x0008)  
	UPhysicalMaterial*                                 PhysicalMaterialMap;                                        // 0x00A0   (0x0040)  
	UMaterialInterface*                                Parent;                                                     // 0x00E0   (0x0008)  
	FMaterialOverrideNanite                            NaniteOverrideMaterial;                                     // 0x00E8   (0x0040)  
	bool                                               bHasStaticPermutationResource : 1;                          // 0x0128:0 (0x0001)  
	bool                                               bOverrideSubsurfaceProfile : 1;                             // 0x0128:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0129   (0x0007)  MISSED
	TArray<FScalarParameterValue>                      ScalarParameterValues;                                      // 0x0130   (0x0010)  
	TArray<FVectorParameterValue>                      VectorParameterValues;                                      // 0x0140   (0x0010)  
	TArray<FDoubleVectorParameterValue>                DoubleVectorParameterValues;                                // 0x0150   (0x0010)  
	TArray<FTextureParameterValue>                     TextureParameterValues;                                     // 0x0160   (0x0010)  
	TArray<FRuntimeVirtualTextureParameterValue>       RuntimeVirtualTextureParameterValues;                       // 0x0170   (0x0010)  
	TArray<FFontParameterValue>                        FontParameterValues;                                        // 0x0180   (0x0010)  
	FMaterialInstanceBasePropertyOverrides             BasePropertyOverrides;                                      // 0x0190   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0198   (0x0008)  MISSED
	FStaticParameterSetRuntimeData                     StaticParametersRuntime;                                    // 0x01A0   (0x0028)  
	unsigned char                                      UnknownData02_6[0x30];                                      // 0x01C8   (0x0030)  MISSED
};

/// Class /Script/Engine.MaterialInstanceConstant
/// Size: 0x0008 (0x0001F8 - 0x000200)
class UMaterialInstanceConstant : public UMaterialInstance
{ 
public:
	UPhysicalMaterialMask*                             PhysMaterialMask;                                           // 0x01F8   (0x0008)  


	/// Functions
	// Function /Script/Engine.MaterialInstanceConstant.K2_GetVectorParameterValue
	FLinearColor K2_GetVectorParameterValue(FName ParameterName);                                                            // [0x4bf7090] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.MaterialInstanceConstant.K2_GetTextureParameterValue
	UTexture* K2_GetTextureParameterValue(FName ParameterName);                                                              // [0x4bf6e80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.MaterialInstanceConstant.K2_GetScalarParameterValue
	float K2_GetScalarParameterValue(FName ParameterName);                                                                   // [0x4bf6c50] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.MaterialExpressionCustomOutput
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionCustomOutput : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.EngineCustomTimeStep
/// Size: 0x0000 (0x000028 - 0x000028)
class UEngineCustomTimeStep : public UObject
{ 
public:
};

/// Class /Script/Engine.TimecodeProvider
/// Size: 0x0008 (0x000028 - 0x000030)
class UTimecodeProvider : public UObject
{ 
public:
	float                                              FrameDelay;                                                 // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x002C   (0x0004)  MISSED


	/// Functions
	// Function /Script/Engine.TimecodeProvider.GetTimecode
	FTimecode GetTimecode();                                                                                                 // [0x4a29400] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.TimecodeProvider.GetSynchronizationState
	ETimecodeProviderSynchronizationState GetSynchronizationState();                                                         // [0x4a293d0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.TimecodeProvider.GetQualifiedFrameTime
	FQualifiedFrameTime GetQualifiedFrameTime();                                                                             // [0x4a29210] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.TimecodeProvider.GetFrameRate
	FFrameRate GetFrameRate();                                                                                               // [0x4a28f10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.TimecodeProvider.GetDelayedTimecode
	FTimecode GetDelayedTimecode();                                                                                          // [0x4a28e50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.TimecodeProvider.GetDelayedQualifiedFrameTime
	FQualifiedFrameTime GetDelayedQualifiedFrameTime();                                                                      // [0x4a28e10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.TimecodeProvider.FetchTimecode
	bool FetchTimecode(FQualifiedFrameTime& OutFrameTime);                                                                   // [0x4a28c20] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.TimecodeProvider.FetchAndUpdate
	void FetchAndUpdate();                                                                                                   // [0x3d49e80] Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.EdGraphNode
/// Size: 0x0070 (0x000028 - 0x000098)
class UEdGraphNode : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0028   (0x0010)  MISSED
	TArray<UEdGraphPin_Deprecated*>                    DeprecatedPins;                                             // 0x0038   (0x0010)  
	int32_t                                            NodePosX;                                                   // 0x0048   (0x0004)  
	int32_t                                            NodePosY;                                                   // 0x004C   (0x0004)  
	int32_t                                            NodeWidth;                                                  // 0x0050   (0x0004)  
	int32_t                                            NodeHeight;                                                 // 0x0054   (0x0004)  
	TEnumAsByte<ENodeAdvancedPins>                     AdvancedPinDisplay;                                         // 0x0058   (0x0001)  
	ENodeEnabledState                                  EnabledState;                                               // 0x0059   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x005A   (0x0001)  MISSED
	unsigned char                                      UnknownBit02 : 1;                                           // 0x005B:0 (0x0001)  MISSED
	bool                                               bDisplayAsDisabled : 1;                                     // 0x005B:1 (0x0001)  
	bool                                               bUserSetEnabledState : 1;                                   // 0x005B:2 (0x0001)  
	bool                                               bIsIntermediateNode : 1;                                    // 0x005B:3 (0x0001)  
	bool                                               bHasCompilerMessage : 1;                                    // 0x005B:4 (0x0001)  
	unsigned char                                      UnknownData03_4[0x4];                                       // 0x005C   (0x0004)  MISSED
	FString                                            NodeComment;                                                // 0x0060   (0x0010)  
	int32_t                                            ErrorType;                                                  // 0x0070   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0074   (0x0004)  MISSED
	FString                                            ErrorMsg;                                                   // 0x0078   (0x0010)  
	FGuid                                              NodeGuid;                                                   // 0x0088   (0x0010)  
};

/// Class /Script/Engine.CameraActor
/// Size: 0x0710 (0x000290 - 0x0009A0)
class ACameraActor : public AActor
{ 
public:
	TEnumAsByte<EAutoReceiveInput>                     AutoActivateForPlayer;                                      // 0x0290   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0291   (0x0007)  MISSED
	UCameraComponent*                                  CameraComponent;                                            // 0x0298   (0x0008)  
	USceneComponent*                                   SceneComponent;                                             // 0x02A0   (0x0008)  
	bool                                               bConstrainAspectRatio : 1;                                  // 0x02A8:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x02A9   (0x0003)  MISSED
	float                                              AspectRatio;                                                // 0x02AC   (0x0004)  
	float                                              FOVAngle;                                                   // 0x02B0   (0x0004)  
	float                                              PostProcessBlendWeight;                                     // 0x02B4   (0x0004)  
	unsigned char                                      UnknownData02_5[0x8];                                       // 0x02B8   (0x0008)  MISSED
	FPostProcessSettings                               PostProcessSettings;                                        // 0x02C0   (0x06E0)  


	/// Functions
	// Function /Script/Engine.CameraActor.GetAutoActivatePlayerIndex
	int32_t GetAutoActivatePlayerIndex();                                                                                    // [0x484fc40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.CameraComponent
/// Size: 0x0790 (0x0002A0 - 0x000A30)
class UCameraComponent : public USceneComponent
{ 
public:
	float                                              FieldOfView;                                                // 0x02A0   (0x0004)  
	float                                              OrthoWidth;                                                 // 0x02A4   (0x0004)  
	float                                              OrthoNearClipPlane;                                         // 0x02A8   (0x0004)  
	float                                              OrthoFarClipPlane;                                          // 0x02AC   (0x0004)  
	float                                              AspectRatio;                                                // 0x02B0   (0x0004)  
	bool                                               bConstrainAspectRatio : 1;                                  // 0x02B4:0 (0x0001)  
	bool                                               bUseFieldOfViewForLOD : 1;                                  // 0x02B4:1 (0x0001)  
	bool                                               bLockToHmd : 1;                                             // 0x02B4:2 (0x0001)  
	bool                                               bUsePawnControlRotation : 1;                                // 0x02B4:3 (0x0001)  
	TEnumAsByte<ECameraProjectionMode>                 ProjectionMode;                                             // 0x02B5   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6A];                                      // 0x02B6   (0x006A)  MISSED
	float                                              PostProcessBlendWeight;                                     // 0x0320   (0x0004)  
	unsigned char                                      UnknownData01_5[0x2C];                                      // 0x0324   (0x002C)  MISSED
	FPostProcessSettings                               PostProcessSettings;                                        // 0x0350   (0x06E0)  


	/// Functions
	// Function /Script/Engine.CameraComponent.SetUseFieldOfViewForLOD
	void SetUseFieldOfViewForLOD(bool bInUseFieldOfViewForLOD);                                                              // [0x4854340] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraComponent.SetProjectionMode
	void SetProjectionMode(TEnumAsByte<ECameraProjectionMode> InProjectionMode);                                             // [0x4854090] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraComponent.SetPostProcessBlendWeight
	void SetPostProcessBlendWeight(float InPostProcessBlendWeight);                                                          // [0x4854010] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraComponent.SetOrthoWidth
	void SetOrthoWidth(float InOrthoWidth);                                                                                  // [0x4853f90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraComponent.SetOrthoNearClipPlane
	void SetOrthoNearClipPlane(float InOrthoNearClipPlane);                                                                  // [0x4853f10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraComponent.SetOrthoFarClipPlane
	void SetOrthoFarClipPlane(float InOrthoFarClipPlane);                                                                    // [0x4853e90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraComponent.SetFieldOfView
	void SetFieldOfView(float InFieldOfView);                                                                                // [0x44dc2c0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraComponent.SetConstraintAspectRatio
	void SetConstraintAspectRatio(bool bInConstrainAspectRatio);                                                             // [0x4853700] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraComponent.SetAspectRatio
	void SetAspectRatio(float InAspectRatio);                                                                                // [0x4853680] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraComponent.RemoveBlendable
	void RemoveBlendable(TScriptInterface<Class> InBlendableObject);                                                         // [0x4851e20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraComponent.OnCameraMeshHiddenChanged
	void OnCameraMeshHiddenChanged();                                                                                        // [0xc479d0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/Engine.CameraComponent.GetCameraView
	void GetCameraView(float DeltaTime, FMinimalViewInfo& DesiredView);                                                      // [0x484fd00] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.CameraComponent.AddOrUpdateBlendable
	void AddOrUpdateBlendable(TScriptInterface<Class> InBlendableObject, float InWeight);                                    // [0x484e5e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.ActiveSoundUpdateInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UActiveSoundUpdateInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.Channel
/// Size: 0x0040 (0x000028 - 0x000068)
class UChannel : public UObject
{ 
public:
	UNetConnection*                                    Connection;                                                 // 0x0028   (0x0008)  
	unsigned char                                      UnknownData00_6[0x38];                                      // 0x0030   (0x0038)  MISSED
};

/// Class /Script/Engine.ActorChannel
/// Size: 0x0228 (0x000068 - 0x000290)
class UActorChannel : public UChannel
{ 
public:
	AActor*                                            Actor;                                                      // 0x0068   (0x0008)  
	unsigned char                                      UnknownData00_5[0xE8];                                      // 0x0070   (0x00E8)  MISSED
	TArray<UObject*>                                   CreateSubObjects;                                           // 0x0158   (0x0010)  
	unsigned char                                      UnknownData01_6[0x128];                                     // 0x0168   (0x0128)  MISSED
};

/// Class /Script/Engine.ActorReplicationBridge
/// Size: 0x0000 (0x000028 - 0x000028)
class UActorReplicationBridge : public UObjectReplicationBridge
{ 
public:
};

/// Class /Script/Engine.AnimationAssetExtensions
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimationAssetExtensions : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.AnimBlueprintClassSubsystem_PropertyAccess
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimBlueprintClassSubsystem_PropertyAccess : public UObject
{ 
public:
};

/// Class /Script/Engine.AnimationDataModelNotifiesExtensions
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimationDataModelNotifiesExtensions : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.AnimLayerInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimLayerInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.AnimationAsset
/// Size: 0x0058 (0x000028 - 0x000080)
class UAnimationAsset : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0028   (0x0010)  MISSED
	USkeleton*                                         Skeleton;                                                   // 0x0038   (0x0008)  
	unsigned char                                      UnknownData01_5[0x20];                                      // 0x0040   (0x0020)  MISSED
	TArray<UAnimMetaData*>                             MetaData;                                                   // 0x0060   (0x0010)  
	TArray<UAssetUserData*>                            AssetUserData;                                              // 0x0070   (0x0010)  


	/// Functions
	// Function /Script/Engine.AnimationAsset.GetPlayLength
	float GetPlayLength();                                                                                                   // [0x1853e10] Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.AnimSequenceBase
/// Size: 0x0030 (0x000080 - 0x0000B0)
class UAnimSequenceBase : public UAnimationAsset
{ 
public:
	TArray<FAnimNotifyEvent>                           Notifies;                                                   // 0x0080   (0x0010)  
	float                                              SequenceLength;                                             // 0x0090   (0x0004)  
	float                                              RateScale;                                                  // 0x0094   (0x0004)  
	bool                                               bLoop;                                                      // 0x0098   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0099   (0x0007)  MISSED
	FRawCurveTracks                                    RawCurveData;                                               // 0x00A0   (0x0010)  
};

/// Class /Script/Engine.RawAnimSequenceTrackExtensions
/// Size: 0x0000 (0x000028 - 0x000028)
class URawAnimSequenceTrackExtensions : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.AssetExportTask
/// Size: 0x0050 (0x000028 - 0x000078)
class UAssetExportTask : public UObject
{ 
public:
	UObject*                                           Object;                                                     // 0x0028   (0x0008)  
	UExporter*                                         Exporter;                                                   // 0x0030   (0x0008)  
	FString                                            Filename;                                                   // 0x0038   (0x0010)  
	bool                                               bSelected;                                                  // 0x0048   (0x0001)  
	bool                                               bReplaceIdentical;                                          // 0x0049   (0x0001)  
	bool                                               bPrompt;                                                    // 0x004A   (0x0001)  
	bool                                               bAutomated;                                                 // 0x004B   (0x0001)  
	bool                                               bUseFileArchive;                                            // 0x004C   (0x0001)  
	bool                                               bWriteEmptyFiles;                                           // 0x004D   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x004E   (0x0002)  MISSED
	TArray<UObject*>                                   IgnoreObjectList;                                           // 0x0050   (0x0010)  
	UObject*                                           Options;                                                    // 0x0060   (0x0008)  
	TArray<FString>                                    Errors;                                                     // 0x0068   (0x0010)  
};

/// Class /Script/Engine.AssetManagerSettings
/// Size: 0x00C8 (0x000038 - 0x000100)
class UAssetManagerSettings : public UDeveloperSettings
{ 
public:
	TArray<FPrimaryAssetTypeInfo>                      PrimaryAssetTypesToScan;                                    // 0x0038   (0x0010)  
	TArray<FDirectoryPath>                             DirectoriesToExclude;                                       // 0x0048   (0x0010)  
	TArray<FPrimaryAssetRulesOverride>                 PrimaryAssetRules;                                          // 0x0058   (0x0010)  
	TArray<FPrimaryAssetRulesCustomOverride>           CustomPrimaryAssetRules;                                    // 0x0068   (0x0010)  
	bool                                               bOnlyCookProductionAssets;                                  // 0x0078   (0x0001)  
	bool                                               bShouldManagerDetermineTypeAndName;                         // 0x0079   (0x0001)  
	bool                                               bShouldGuessTypeAndNameInEditor;                            // 0x007A   (0x0001)  
	bool                                               bShouldAcquireMissingChunksOnLoad;                          // 0x007B   (0x0001)  
	bool                                               bShouldWarnAboutInvalidAssets;                              // 0x007C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x007D   (0x0003)  MISSED
	TArray<FAssetManagerRedirect>                      PrimaryAssetIdRedirects;                                    // 0x0080   (0x0010)  
	TArray<FAssetManagerRedirect>                      PrimaryAssetTypeRedirects;                                  // 0x0090   (0x0010)  
	TArray<FAssetManagerRedirect>                      AssetPathRedirects;                                         // 0x00A0   (0x0010)  
	TSet<FName>                                        MetaDataTagsForAssetRegistry;                               // 0x00B0   (0x0050)  
};

/// Class /Script/Engine.AsyncPhysicsData
/// Size: 0x0008 (0x000028 - 0x000030)
class UAsyncPhysicsData : public UObject
{ 
public:
	int32_t                                            ServerFrame;                                                // 0x0028   (0x0004)  
	int32_t                                            ReplicationRedundancy;                                      // 0x002C   (0x0004)  
};

/// Class /Script/Engine.AudioPanelWidgetInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UAudioPanelWidgetInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.BlendableInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UBlendableInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.AnalysisProperties
/// Size: 0x0010 (0x000028 - 0x000038)
class UAnalysisProperties : public UObject
{ 
public:
	FString                                            Function;                                                   // 0x0028   (0x0010)  
};

/// Class /Script/Engine.BlendSpace
/// Size: 0x0120 (0x000080 - 0x0001A0)
class UBlendSpace : public UAnimationAsset
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0080   (0x0008)  MISSED
	bool                                               bContainsRotationOffsetMeshSpaceSamples;                    // 0x0088   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0089   (0x0003)  MISSED
	FInterpolationParameter                            InterpolationParam;                                         // 0x008C   (0x0030)  
	float                                              TargetWeightInterpolationSpeedPerSec;                       // 0x00BC   (0x0004)  
	bool                                               bTargetWeightInterpolationEaseInOut;                        // 0x00C0   (0x0001)  
	bool                                               bAllowMeshSpaceBlending;                                    // 0x00C1   (0x0001)  
	bool                                               bLoop;                                                      // 0x00C2   (0x0001)  
	unsigned char                                      UnknownData02_5[0x1];                                       // 0x00C3   (0x0001)  MISSED
	float                                              AnimLength;                                                 // 0x00C4   (0x0004)  
	TEnumAsByte<ENotifyTriggerMode>                    NotifyTriggerMode;                                          // 0x00C8   (0x0001)  
	bool                                               bInterpolateUsingGrid;                                      // 0x00C9   (0x0001)  
	EPreferredTriangulationDirection                   PreferredTriangulationDirection;                            // 0x00CA   (0x0001)  
	unsigned char                                      UnknownData03_5[0x5];                                       // 0x00CB   (0x0005)  MISSED
	TArray<FPerBoneInterpolation>                      PerBoneBlend;                                               // 0x00D0   (0x0010)  
	int32_t                                            SampleIndexWithMarkers;                                     // 0x00E0   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x00E4   (0x0004)  MISSED
	TArray<FBlendSample>                               SampleData;                                                 // 0x00E8   (0x0010)  
	TArray<FEditorElement>                             GridSamples;                                                // 0x00F8   (0x0010)  
	FBlendSpaceData                                    BlendSpaceData;                                             // 0x0108   (0x0020)  
	FBlendParameter                                    BlendParameters;                                            // 0x0128   (0x0060)  
	TEnumAsByte<EBlendSpaceAxis>                       AxisToScaleAnimation;                                       // 0x0188   (0x0001)  
	unsigned char                                      UnknownData05_5[0x7];                                       // 0x0189   (0x0007)  MISSED
	TArray<int32_t>                                    DimensionIndices;                                           // 0x0190   (0x0010)  
};

/// Class /Script/Engine.Breakpoint
/// Size: 0x0000 (0x000028 - 0x000028)
class UBreakpoint : public UObject
{ 
public:
};

/// Class /Script/Engine.BlueprintExtension
/// Size: 0x0000 (0x000028 - 0x000028)
class UBlueprintExtension : public UObject
{ 
public:
};

/// Class /Script/Engine.BookmarkBase
/// Size: 0x0000 (0x000028 - 0x000028)
class UBookmarkBase : public UObject
{ 
public:
};

/// Class /Script/Engine.BookMark2D
/// Size: 0x0010 (0x000028 - 0x000038)
class UBookMark2D : public UBookmarkBase
{ 
public:
	float                                              Zoom2D;                                                     // 0x0028   (0x0004)  
	FIntPoint                                          Location;                                                   // 0x002C   (0x0008)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Class /Script/Engine.ReflectionCapture
/// Size: 0x0008 (0x000290 - 0x000298)
class AReflectionCapture : public AActor
{ 
public:
	UReflectionCaptureComponent*                       CaptureComponent;                                           // 0x0290   (0x0008)  
};

/// Class /Script/Engine.BoxReflectionCapture
/// Size: 0x0000 (0x000298 - 0x000298)
class ABoxReflectionCapture : public AReflectionCapture
{ 
public:
};

/// Class /Script/Engine.ReflectionCaptureComponent
/// Size: 0x0070 (0x0002A0 - 0x000310)
class UReflectionCaptureComponent : public USceneComponent
{ 
public:
	UBillboardComponent*                               CaptureOffsetComponent;                                     // 0x02A0   (0x0008)  
	EReflectionSourceType                              ReflectionSourceType;                                       // 0x02A8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x02A9   (0x0007)  MISSED
	UTextureCube*                                      Cubemap;                                                    // 0x02B0   (0x0008)  
	float                                              SourceCubemapAngle;                                         // 0x02B8   (0x0004)  
	float                                              Brightness;                                                 // 0x02BC   (0x0004)  
	FVector                                            CaptureOffset;                                              // 0x02C0   (0x0018)  
	FGuid                                              MapBuildDataId;                                             // 0x02D8   (0x0010)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x02E8   (0x0028)  MISSED
};

/// Class /Script/Engine.BoxReflectionCaptureComponent
/// Size: 0x0020 (0x000310 - 0x000330)
class UBoxReflectionCaptureComponent : public UReflectionCaptureComponent
{ 
public:
	float                                              BoxTransitionDistance;                                      // 0x0310   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0314   (0x0004)  MISSED
	UBoxComponent*                                     PreviewInfluenceBox;                                        // 0x0318   (0x0008)  
	UBoxComponent*                                     PreviewCaptureBox;                                          // 0x0320   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0328   (0x0008)  MISSED
};

/// Class /Script/Engine.BuiltInAttributesExtensions
/// Size: 0x0000 (0x000028 - 0x000028)
class UBuiltInAttributesExtensions : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.ChildConnection
/// Size: 0x0000 (0x003310 - 0x003310)
class UChildConnection : public UNetConnection
{ 
public:
};

/// Class /Script/Engine.PlatformInterfaceBase
/// Size: 0x0010 (0x000028 - 0x000038)
class UPlatformInterfaceBase : public UObject
{ 
public:
	TArray<FDelegateArray>                             AllDelegates;                                               // 0x0028   (0x0010)  
};

/// Class /Script/Engine.CloudStorageBase
/// Size: 0x0018 (0x000038 - 0x000050)
class UCloudStorageBase : public UPlatformInterfaceBase
{ 
public:
	TArray<FString>                                    LocalCloudFiles;                                            // 0x0038   (0x0010)  
	bool                                               bSuppressDelegateCalls : 1;                                 // 0x0048:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0049   (0x0007)  MISSED
};

/// Class /Script/Engine.ControlChannel
/// Size: 0x0018 (0x000068 - 0x000080)
class UControlChannel : public UChannel
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0068   (0x0018)  MISSED
};

/// Class /Script/Engine.DataStreamChannel
/// Size: 0x2030 (0x000068 - 0x002098)
class UDataStreamChannel : public UChannel
{ 
public:
	unsigned char                                      UnknownData00_1[0x2030];                                    // 0x0068   (0x2030)  MISSED
};

/// Class /Script/Engine.DemoNetConnection
/// Size: 0x0050 (0x003310 - 0x003360)
class UDemoNetConnection : public UNetConnection
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x3310   (0x0050)  MISSED
};

/// Class /Script/Engine.PendingNetGame
/// Size: 0x0098 (0x000028 - 0x0000C0)
class UPendingNetGame : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	UNetDriver*                                        NetDriver;                                                  // 0x0030   (0x0008)  
	UDemoNetDriver*                                    DemoNetDriver;                                              // 0x0038   (0x0008)  
	unsigned char                                      UnknownData01_6[0x80];                                      // 0x0040   (0x0080)  MISSED
};

/// Class /Script/Engine.DemoPendingNetGame
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UDemoPendingNetGame : public UPendingNetGame
{ 
public:
};

/// Class /Script/Engine.DeviceProfileFragment
/// Size: 0x0010 (0x000028 - 0x000038)
class UDeviceProfileFragment : public UObject
{ 
public:
	TArray<FString>                                    CVars;                                                      // 0x0028   (0x0010)  
};

/// Class /Script/Engine.DialogueSoundWaveProxy
/// Size: 0x0018 (0x000168 - 0x000180)
class UDialogueSoundWaveProxy : public USoundBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0168   (0x0018)  MISSED
};

/// Class /Script/Engine.Light
/// Size: 0x0010 (0x000290 - 0x0002A0)
class ALight : public AActor
{ 
public:
	ULightComponent*                                   LightComponent;                                             // 0x0290   (0x0008)  
	bool                                               bEnabled : 1;                                               // 0x0298:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0299   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.Light.ToggleEnabled
	void ToggleEnabled();                                                                                                    // [0x4bb4f40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Light.SetLightFunctionScale
	void SetLightFunctionScale(FVector NewLightFunctionScale);                                                               // [0x4bb4d30] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Light.SetLightFunctionMaterial
	void SetLightFunctionMaterial(UMaterialInterface* NewLightFunctionMaterial);                                             // [0x4bb4ca0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Light.SetLightFunctionFadeDistance
	void SetLightFunctionFadeDistance(float NewLightFunctionFadeDistance);                                                   // [0x4bb4c10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Light.SetLightColor
	void SetLightColor(FLinearColor NewLightColor);                                                                          // [0x4bb4b80] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Light.SetEnabled
	void SetEnabled(bool bSetEnabled);                                                                                       // [0x4bb4960] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Light.SetCastShadows
	void SetCastShadows(bool bNewValue);                                                                                     // [0x4bb46f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Light.SetBrightness
	void SetBrightness(float NewBrightness);                                                                                 // [0x4bb4660] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Light.SetAffectTranslucentLighting
	void SetAffectTranslucentLighting(bool bNewValue);                                                                       // [0x4bb45d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Light.OnRep_bEnabled
	void OnRep_bEnabled();                                                                                                   // [0x463cd10] Native|Public        
	// Function /Script/Engine.Light.IsEnabled
	bool IsEnabled();                                                                                                        // [0x4bb4310] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Light.GetLightColor
	FLinearColor GetLightColor();                                                                                            // [0x4bb4220] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Light.GetBrightness
	float GetBrightness();                                                                                                   // [0x4bb4160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.DirectionalLight
/// Size: 0x0000 (0x0002A0 - 0x0002A0)
class ADirectionalLight : public ALight
{ 
public:
};

/// Class /Script/Engine.Distribution
/// Size: 0x0008 (0x000028 - 0x000030)
class UDistribution : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.DistributionFloat
/// Size: 0x0008 (0x000030 - 0x000038)
class UDistributionFloat : public UDistribution
{ 
public:
	bool                                               bCanBeBaked : 1;                                            // 0x0030:0 (0x0001)  
	unsigned char                                      UnknownBit00 : 1;                                           // 0x0030:1 (0x0001)  MISSED
	bool                                               bBakedDataSuccesfully : 1;                                  // 0x0030:2 (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/Engine.DistributionFloatConstant
/// Size: 0x0008 (0x000038 - 0x000040)
class UDistributionFloatConstant : public UDistributionFloat
{ 
public:
	float                                              Constant;                                                   // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Class /Script/Engine.DistributionFloatConstantCurve
/// Size: 0x0018 (0x000038 - 0x000050)
class UDistributionFloatConstantCurve : public UDistributionFloat
{ 
public:
	FInterpCurveFloat                                  ConstantCurve;                                              // 0x0038   (0x0018)  
};

/// Class /Script/Engine.DistributionFloatParameterBase
/// Size: 0x0020 (0x000040 - 0x000060)
class UDistributionFloatParameterBase : public UDistributionFloatConstant
{ 
public:
	FName                                              ParameterName;                                              // 0x0040   (0x0008)  
	float                                              MinInput;                                                   // 0x0048   (0x0004)  
	float                                              MaxInput;                                                   // 0x004C   (0x0004)  
	float                                              MinOutput;                                                  // 0x0050   (0x0004)  
	float                                              MaxOutput;                                                  // 0x0054   (0x0004)  
	TEnumAsByte<DistributionParamMode>                 ParamMode;                                                  // 0x0058   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0059   (0x0007)  MISSED
};

/// Class /Script/Engine.DistributionFloatParticleParameter
/// Size: 0x0000 (0x000060 - 0x000060)
class UDistributionFloatParticleParameter : public UDistributionFloatParameterBase
{ 
public:
};

/// Class /Script/Engine.DistributionFloatUniform
/// Size: 0x0008 (0x000038 - 0x000040)
class UDistributionFloatUniform : public UDistributionFloat
{ 
public:
	float                                              Min;                                                        // 0x0038   (0x0004)  
	float                                              Max;                                                        // 0x003C   (0x0004)  
};

/// Class /Script/Engine.DistributionFloatUniformCurve
/// Size: 0x0018 (0x000038 - 0x000050)
class UDistributionFloatUniformCurve : public UDistributionFloat
{ 
public:
	FInterpCurveVector2D                               ConstantCurve;                                              // 0x0038   (0x0018)  
};

/// Class /Script/Engine.DistributionVector
/// Size: 0x0008 (0x000030 - 0x000038)
class UDistributionVector : public UDistribution
{ 
public:
	bool                                               bCanBeBaked : 1;                                            // 0x0030:0 (0x0001)  
	bool                                               bIsDirty : 1;                                               // 0x0030:1 (0x0001)  
	bool                                               bBakedDataSuccesfully : 1;                                  // 0x0030:2 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/Engine.DistributionVectorConstant
/// Size: 0x0020 (0x000038 - 0x000058)
class UDistributionVectorConstant : public UDistributionVector
{ 
public:
	FVector                                            Constant;                                                   // 0x0038   (0x0018)  
	bool                                               bLockAxes : 1;                                              // 0x0050:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0051   (0x0003)  MISSED
	TEnumAsByte<EDistributionVectorLockFlags>          LockedAxes;                                                 // 0x0054   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0055   (0x0003)  MISSED
};

/// Class /Script/Engine.DistributionVectorConstantCurve
/// Size: 0x0020 (0x000038 - 0x000058)
class UDistributionVectorConstantCurve : public UDistributionVector
{ 
public:
	FInterpCurveVector                                 ConstantCurve;                                              // 0x0038   (0x0018)  
	bool                                               bLockAxes : 1;                                              // 0x0050:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0051   (0x0003)  MISSED
	TEnumAsByte<EDistributionVectorLockFlags>          LockedAxes;                                                 // 0x0054   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0055   (0x0003)  MISSED
};

/// Class /Script/Engine.DistributionVectorParameterBase
/// Size: 0x0070 (0x000058 - 0x0000C8)
class UDistributionVectorParameterBase : public UDistributionVectorConstant
{ 
public:
	FName                                              ParameterName;                                              // 0x0058   (0x0008)  
	FVector                                            MinInput;                                                   // 0x0060   (0x0018)  
	FVector                                            MaxInput;                                                   // 0x0078   (0x0018)  
	FVector                                            MinOutput;                                                  // 0x0090   (0x0018)  
	FVector                                            MaxOutput;                                                  // 0x00A8   (0x0018)  
	TEnumAsByte<DistributionParamMode>                 ParamModes;                                                 // 0x00C0   (0x0003)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x00C3   (0x0005)  MISSED
};

/// Class /Script/Engine.DistributionVectorParticleParameter
/// Size: 0x0000 (0x0000C8 - 0x0000C8)
class UDistributionVectorParticleParameter : public UDistributionVectorParameterBase
{ 
public:
};

/// Class /Script/Engine.DistributionVectorUniform
/// Size: 0x0040 (0x000038 - 0x000078)
class UDistributionVectorUniform : public UDistributionVector
{ 
public:
	FVector                                            Max;                                                        // 0x0038   (0x0018)  
	FVector                                            Min;                                                        // 0x0050   (0x0018)  
	bool                                               bLockAxes : 1;                                              // 0x0068:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0069   (0x0003)  MISSED
	TEnumAsByte<EDistributionVectorLockFlags>          LockedAxes;                                                 // 0x006C   (0x0001)  
	TEnumAsByte<EDistributionVectorMirrorFlags>        MirrorFlags;                                                // 0x006D   (0x0003)  
	bool                                               bUseExtremes : 1;                                           // 0x0070:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0071   (0x0007)  MISSED
};

/// Class /Script/Engine.DistributionVectorUniformCurve
/// Size: 0x0028 (0x000038 - 0x000060)
class UDistributionVectorUniformCurve : public UDistributionVector
{ 
public:
	FInterpCurveTwoVectors                             ConstantCurve;                                              // 0x0038   (0x0018)  
	bool                                               bLockAxes1 : 1;                                             // 0x0050:0 (0x0001)  
	bool                                               bLockAxes2 : 1;                                             // 0x0050:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0051   (0x0003)  MISSED
	TEnumAsByte<EDistributionVectorLockFlags>          LockedAxes;                                                 // 0x0054   (0x0002)  
	TEnumAsByte<EDistributionVectorMirrorFlags>        MirrorFlags;                                                // 0x0056   (0x0003)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0059   (0x0003)  MISSED
	bool                                               bUseExtremes : 1;                                           // 0x005C:0 (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x005D   (0x0003)  MISSED
};

/// Class /Script/Engine.GraphNodeContextMenuContext
/// Size: 0x0028 (0x000028 - 0x000050)
class UGraphNodeContextMenuContext : public UObject
{ 
public:
	UBlueprint*                                        Blueprint;                                                  // 0x0028   (0x0008)  
	UEdGraph*                                          Graph;                                                      // 0x0030   (0x0008)  
	UEdGraphNode*                                      Node;                                                       // 0x0038   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0040   (0x0008)  MISSED
	bool                                               bIsDebugging;                                               // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0049   (0x0007)  MISSED
};

/// Class /Script/Engine.EdGraphPin_Deprecated
/// Size: 0x00F0 (0x000028 - 0x000118)
class UEdGraphPin_Deprecated : public UObject
{ 
public:
	FString                                            PinName;                                                    // 0x0028   (0x0010)  
	FString                                            PinToolTip;                                                 // 0x0038   (0x0010)  
	TEnumAsByte<EEdGraphPinDirection>                  Direction;                                                  // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0049   (0x0007)  MISSED
	FEdGraphPinType                                    PinType;                                                    // 0x0050   (0x0058)  
	FString                                            DefaultValue;                                               // 0x00A8   (0x0010)  
	FString                                            AutogeneratedDefaultValue;                                  // 0x00B8   (0x0010)  
	UObject*                                           DefaultObject;                                              // 0x00C8   (0x0008)  
	FText                                              DefaultTextValue;                                           // 0x00D0   (0x0018)  
	TArray<UEdGraphPin_Deprecated*>                    LinkedTo;                                                   // 0x00E8   (0x0010)  
	TArray<UEdGraphPin_Deprecated*>                    SubPins;                                                    // 0x00F8   (0x0010)  
	UEdGraphPin_Deprecated*                            ParentPin;                                                  // 0x0108   (0x0008)  
	UEdGraphPin_Deprecated*                            ReferencePassThroughConnection;                             // 0x0110   (0x0008)  
};

/// Class /Script/Engine.EdGraphSchema
/// Size: 0x0000 (0x000028 - 0x000028)
class UEdGraphSchema : public UObject
{ 
public:
};

/// Class /Script/Engine.Emitter
/// Size: 0x0050 (0x000290 - 0x0002E0)
class AEmitter : public AActor
{ 
public:
	UParticleSystemComponent*                          ParticleSystemComponent;                                    // 0x0290   (0x0008)  
	bool                                               bDestroyOnSystemFinish : 1;                                 // 0x0298:0 (0x0001)  
	bool                                               bPostUpdateTickGroup : 1;                                   // 0x0298:1 (0x0001)  
	bool                                               bCurrentlyActive : 1;                                       // 0x0298:2 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0299   (0x0007)  MISSED
	FMulticastInlineDelegate                           OnParticleSpawn;                                            // 0x02A0   (0x0010)  
	FMulticastInlineDelegate                           OnParticleBurst;                                            // 0x02B0   (0x0010)  
	FMulticastInlineDelegate                           OnParticleDeath;                                            // 0x02C0   (0x0010)  
	FMulticastInlineDelegate                           OnParticleCollide;                                          // 0x02D0   (0x0010)  


	/// Functions
	// Function /Script/Engine.Emitter.ToggleActive
	void ToggleActive();                                                                                                     // [0x4c9b1a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Emitter.SetVectorParameter
	void SetVectorParameter(FName ParameterName, FVector Param);                                                             // [0x4c9b0b0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Emitter.SetTemplate
	void SetTemplate(UParticleSystem* NewTemplate);                                                                          // [0x11d02a0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.Emitter.SetMaterialParameter
	void SetMaterialParameter(FName ParameterName, UMaterialInterface* Param);                                               // [0x4c9aed0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Emitter.SetFloatParameter
	void SetFloatParameter(FName ParameterName, float Param);                                                                // [0x4c9adf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Emitter.SetColorParameter
	void SetColorParameter(FName ParameterName, FLinearColor Param);                                                         // [0x4c9ad10] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Emitter.SetActorParameter
	void SetActorParameter(FName ParameterName, AActor* Param);                                                              // [0x4c9ac30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Emitter.OnRep_bCurrentlyActive
	void OnRep_bCurrentlyActive();                                                                                           // [0x11d0280] Native|Public        
	// Function /Script/Engine.Emitter.OnParticleSystemFinished
	void OnParticleSystemFinished(UParticleSystemComponent* FinishedComponent);                                              // [0x4a5ad00] Native|Public        
	// Function /Script/Engine.Emitter.IsActive
	bool IsActive();                                                                                                         // [0x4c9abf0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Emitter.Deactivate
	void Deactivate();                                                                                                       // [0x4c9abb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Emitter.Activate
	void Activate();                                                                                                         // [0x4c9ab60] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.EmitterCameraLensEffectBase
/// Size: 0x00A0 (0x0002E0 - 0x000380)
class AEmitterCameraLensEffectBase : public AEmitter
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x02E0   (0x0008)  MISSED
	UParticleSystem*                                   PS_CameraEffect;                                            // 0x02E8   (0x0008)  
	APlayerCameraManager*                              BaseCamera;                                                 // 0x02F0   (0x0008)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x02F8   (0x0008)  MISSED
	FTransform                                         RelativeTransform;                                          // 0x0300   (0x0060)  
	float                                              BaseFOV;                                                    // 0x0360   (0x0004)  
	bool                                               bAllowMultipleInstances : 1;                                // 0x0364:0 (0x0001)  
	bool                                               bResetWhenRetriggered : 1;                                  // 0x0364:1 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x0365   (0x0003)  MISSED
	TArray<UClass*>                                    EmittersToTreatAsSame;                                      // 0x0368   (0x0010)  
	float                                              DistFromCamera;                                             // 0x0378   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x037C   (0x0004)  MISSED
};

/// Class /Script/Engine.ViewModeUtils
/// Size: 0x0000 (0x000028 - 0x000028)
class UViewModeUtils : public UObject
{ 
public:
};

/// Class /Script/Engine.EngineBaseTypes
/// Size: 0x0000 (0x000028 - 0x000028)
class UEngineBaseTypes : public UObject
{ 
public:
};

/// Class /Script/Engine.EngineTypes
/// Size: 0x0000 (0x000028 - 0x000028)
class UEngineTypes : public UObject
{ 
public:
};

/// Class /Script/Engine.ExponentialHeightFog
/// Size: 0x0010 (0x000290 - 0x0002A0)
class AExponentialHeightFog : public AInfo
{ 
public:
	UExponentialHeightFogComponent*                    Component;                                                  // 0x0290   (0x0008)  
	bool                                               bEnabled : 1;                                               // 0x0298:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0299   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.ExponentialHeightFog.OnRep_bEnabled
	void OnRep_bEnabled();                                                                                                   // [0x463cd10] Native|Public        
};

/// Class /Script/Engine.ExponentialHeightFogComponent
/// Size: 0x00E0 (0x0002A0 - 0x000380)
class UExponentialHeightFogComponent : public USceneComponent
{ 
public:
	float                                              FogDensity;                                                 // 0x02A0   (0x0004)  
	float                                              FogHeightFalloff;                                           // 0x02A4   (0x0004)  
	FExponentialHeightFogData                          SecondFogData;                                              // 0x02A8   (0x000C)  
	FLinearColor                                       FogInscatteringColor;                                       // 0x02B4   (0x0010)  
	FLinearColor                                       FogInscatteringLuminance;                                   // 0x02C4   (0x0010)  
	FLinearColor                                       SkyAtmosphereAmbientContributionColorScale;                 // 0x02D4   (0x0010)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x02E4   (0x0004)  MISSED
	UTextureCube*                                      InscatteringColorCubemap;                                   // 0x02E8   (0x0008)  
	float                                              InscatteringColorCubemapAngle;                              // 0x02F0   (0x0004)  
	FLinearColor                                       InscatteringTextureTint;                                    // 0x02F4   (0x0010)  
	float                                              FullyDirectionalInscatteringColorDistance;                  // 0x0304   (0x0004)  
	float                                              NonDirectionalInscatteringColorDistance;                    // 0x0308   (0x0004)  
	float                                              DirectionalInscatteringExponent;                            // 0x030C   (0x0004)  
	float                                              DirectionalInscatteringStartDistance;                       // 0x0310   (0x0004)  
	FLinearColor                                       DirectionalInscatteringColor;                               // 0x0314   (0x0010)  
	FLinearColor                                       DirectionalInscatteringLuminance;                           // 0x0324   (0x0010)  
	float                                              FogMaxOpacity;                                              // 0x0334   (0x0004)  
	float                                              StartDistance;                                              // 0x0338   (0x0004)  
	float                                              FogCutoffDistance;                                          // 0x033C   (0x0004)  
	bool                                               bEnableVolumetricFog;                                       // 0x0340   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0341   (0x0003)  MISSED
	float                                              VolumetricFogScatteringDistribution;                        // 0x0344   (0x0004)  
	FColor                                             VolumetricFogAlbedo;                                        // 0x0348   (0x0004)  
	FLinearColor                                       VolumetricFogEmissive;                                      // 0x034C   (0x0010)  
	float                                              VolumetricFogExtinctionScale;                               // 0x035C   (0x0004)  
	float                                              VolumetricFogDistance;                                      // 0x0360   (0x0004)  
	float                                              VolumetricFogStartDistance;                                 // 0x0364   (0x0004)  
	float                                              VolumetricFogNearFadeInDistance;                            // 0x0368   (0x0004)  
	float                                              VolumetricFogStaticLightingScatteringIntensity;             // 0x036C   (0x0004)  
	bool                                               bOverrideLightColorsWithFogInscatteringColors;              // 0x0370   (0x0001)  
	unsigned char                                      UnknownData02_6[0xF];                                       // 0x0371   (0x000F)  MISSED


	/// Functions
	// Function /Script/Engine.ExponentialHeightFogComponent.SetVolumetricFogScatteringDistribution
	void SetVolumetricFogScatteringDistribution(float NewValue);                                                             // [0x463da80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetVolumetricFogExtinctionScale
	void SetVolumetricFogExtinctionScale(float NewValue);                                                                    // [0x463da00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetVolumetricFogEmissive
	void SetVolumetricFogEmissive(FLinearColor NewValue);                                                                    // [0x463d970] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetVolumetricFogDistance
	void SetVolumetricFogDistance(float NewValue);                                                                           // [0x463d8f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetVolumetricFogAlbedo
	void SetVolumetricFogAlbedo(FColor NewValue);                                                                            // [0x463d870] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetVolumetricFog
	void SetVolumetricFog(bool bNewValue);                                                                                   // [0x463d7e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetStartDistance
	void SetStartDistance(float Value);                                                                                      // [0x463d760] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetSecondFogHeightOffset
	void SetSecondFogHeightOffset(float Value);                                                                              // [0x463d6e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetSecondFogHeightFalloff
	void SetSecondFogHeightFalloff(float Value);                                                                             // [0x463d660] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetSecondFogDensity
	void SetSecondFogDensity(float Value);                                                                                   // [0x463d5e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetSecondFogData
	void SetSecondFogData(FExponentialHeightFogData NewValue);                                                               // [0x463d530] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetNonDirectionalInscatteringColorDistance
	void SetNonDirectionalInscatteringColorDistance(float Value);                                                            // [0x463d4b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetInscatteringTextureTint
	void SetInscatteringTextureTint(FLinearColor Value);                                                                     // [0x463d420] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetInscatteringColorCubemapAngle
	void SetInscatteringColorCubemapAngle(float Value);                                                                      // [0x463d3a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetInscatteringColorCubemap
	void SetInscatteringColorCubemap(UTextureCube* Value);                                                                   // [0x463d310] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetFullyDirectionalInscatteringColorDistance
	void SetFullyDirectionalInscatteringColorDistance(float Value);                                                          // [0x463d290] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetFogMaxOpacity
	void SetFogMaxOpacity(float Value);                                                                                      // [0x463d210] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetFogInscatteringColor
	void SetFogInscatteringColor(FLinearColor Value);                                                                        // [0x463d180] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetFogHeightFalloff
	void SetFogHeightFalloff(float Value);                                                                                   // [0x463d100] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetFogDensity
	void SetFogDensity(float Value);                                                                                         // [0x463d080] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetFogCutoffDistance
	void SetFogCutoffDistance(float Value);                                                                                  // [0x463d000] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringStartDistance
	void SetDirectionalInscatteringStartDistance(float Value);                                                               // [0x463cf80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringExponent
	void SetDirectionalInscatteringExponent(float Value);                                                                    // [0x463cf00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringColor
	void SetDirectionalInscatteringColor(FLinearColor Value);                                                                // [0x463ce70] Final|Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.FontImportOptions
/// Size: 0x00B0 (0x000028 - 0x0000D8)
class UFontImportOptions : public UObject
{ 
public:
	FFontImportOptionsData                             Data;                                                       // 0x0028   (0x00B0)  
};

/// Class /Script/Engine.ForceFeedbackAttenuation
/// Size: 0x00C0 (0x000028 - 0x0000E8)
class UForceFeedbackAttenuation : public UObject
{ 
public:
	FForceFeedbackAttenuationSettings                  Attenuation;                                                // 0x0028   (0x00C0)  
};

/// Class /Script/Engine.GameNetworkManager
/// Size: 0x00A8 (0x000290 - 0x000338)
class AGameNetworkManager : public AInfo
{ 
public:
	float                                              BadPacketLossThreshold;                                     // 0x0290   (0x0004)  
	float                                              SeverePacketLossThreshold;                                  // 0x0294   (0x0004)  
	int32_t                                            BadPingThreshold;                                           // 0x0298   (0x0004)  
	int32_t                                            SeverePingThreshold;                                        // 0x029C   (0x0004)  
	int32_t                                            AdjustedNetSpeed;                                           // 0x02A0   (0x0004)  
	float                                              LastNetSpeedUpdateTime;                                     // 0x02A4   (0x0004)  
	int32_t                                            TotalNetBandwidth;                                          // 0x02A8   (0x0004)  
	int32_t                                            MinDynamicBandwidth;                                        // 0x02AC   (0x0004)  
	int32_t                                            MaxDynamicBandwidth;                                        // 0x02B0   (0x0004)  
	bool                                               bIsStandbyCheckingEnabled : 1;                              // 0x02B4:0 (0x0001)  
	bool                                               bHasStandbyCheatTriggered : 1;                              // 0x02B4:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x02B5   (0x0003)  MISSED
	float                                              StandbyRxCheatTime;                                         // 0x02B8   (0x0004)  
	float                                              StandbyTxCheatTime;                                         // 0x02BC   (0x0004)  
	float                                              PercentMissingForRxStandby;                                 // 0x02C0   (0x0004)  
	float                                              PercentMissingForTxStandby;                                 // 0x02C4   (0x0004)  
	float                                              PercentForBadPing;                                          // 0x02C8   (0x0004)  
	float                                              JoinInProgressStandbyWaitTime;                              // 0x02CC   (0x0004)  
	float                                              MoveRepSize;                                                // 0x02D0   (0x0004)  
	float                                              MAXPOSITIONERRORSQUARED;                                    // 0x02D4   (0x0004)  
	float                                              MAXNEARZEROVELOCITYSQUARED;                                 // 0x02D8   (0x0004)  
	float                                              CLIENTADJUSTUPDATECOST;                                     // 0x02DC   (0x0004)  
	float                                              MAXCLIENTUPDATEINTERVAL;                                    // 0x02E0   (0x0004)  
	float                                              MaxClientForcedUpdateDuration;                              // 0x02E4   (0x0004)  
	float                                              ServerForcedUpdateHitchThreshold;                           // 0x02E8   (0x0004)  
	float                                              ServerForcedUpdateHitchCooldown;                            // 0x02EC   (0x0004)  
	float                                              MaxMoveDeltaTime;                                           // 0x02F0   (0x0004)  
	float                                              MaxClientSmoothingDeltaTime;                                // 0x02F4   (0x0004)  
	float                                              ClientNetSendMoveDeltaTime;                                 // 0x02F8   (0x0004)  
	float                                              ClientNetSendMoveDeltaTimeThrottled;                        // 0x02FC   (0x0004)  
	float                                              ClientNetSendMoveDeltaTimeStationary;                       // 0x0300   (0x0004)  
	int32_t                                            ClientNetSendMoveThrottleAtNetSpeed;                        // 0x0304   (0x0004)  
	int32_t                                            ClientNetSendMoveThrottleOverPlayerCount;                   // 0x0308   (0x0004)  
	float                                              ClientErrorUpdateRateLimit;                                 // 0x030C   (0x0004)  
	float                                              ClientNetCamUpdateDeltaTime;                                // 0x0310   (0x0004)  
	float                                              ClientNetCamUpdatePositionLimit;                            // 0x0314   (0x0004)  
	bool                                               ClientAuthorativePosition;                                  // 0x0318   (0x0001)  
	bool                                               bMovementTimeDiscrepancyDetection;                          // 0x0319   (0x0001)  
	bool                                               bMovementTimeDiscrepancyResolution;                         // 0x031A   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x031B   (0x0001)  MISSED
	float                                              MovementTimeDiscrepancyMaxTimeMargin;                       // 0x031C   (0x0004)  
	float                                              MovementTimeDiscrepancyMinTimeMargin;                       // 0x0320   (0x0004)  
	float                                              MovementTimeDiscrepancyResolutionRate;                      // 0x0324   (0x0004)  
	float                                              MovementTimeDiscrepancyDriftAllowance;                      // 0x0328   (0x0004)  
	bool                                               bMovementTimeDiscrepancyForceCorrectionsDuringResolution;   // 0x032C   (0x0001)  
	bool                                               bUseDistanceBasedRelevancy;                                 // 0x032D   (0x0001)  
	unsigned char                                      UnknownData02_6[0xA];                                       // 0x032E   (0x000A)  MISSED
};

/// Class /Script/Engine.SpotLight
/// Size: 0x0008 (0x0002A0 - 0x0002A8)
class ASpotLight : public ALight
{ 
public:
	USpotLightComponent*                               SpotLightComponent;                                         // 0x02A0   (0x0008)  


	/// Functions
	// Function /Script/Engine.SpotLight.SetOuterConeAngle
	void SetOuterConeAngle(float NewOuterConeAngle);                                                                         // [0x4f51690] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SpotLight.SetInnerConeAngle
	void SetInnerConeAngle(float NewInnerConeAngle);                                                                         // [0x4f51600] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.GeneratedMeshAreaLight
/// Size: 0x0000 (0x0002A8 - 0x0002A8)
class AGeneratedMeshAreaLight : public ASpotLight
{ 
public:
};

/// Class /Script/Engine.HapticFeedbackEffect_Base
/// Size: 0x0000 (0x000028 - 0x000028)
class UHapticFeedbackEffect_Base : public UObject
{ 
public:
};

/// Class /Script/Engine.HapticFeedbackEffect_Buffer
/// Size: 0x0018 (0x000028 - 0x000040)
class UHapticFeedbackEffect_Buffer : public UHapticFeedbackEffect_Base
{ 
public:
	TArray<char>                                       Amplitudes;                                                 // 0x0028   (0x0010)  
	int32_t                                            SampleRate;                                                 // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Class /Script/Engine.HapticFeedbackEffect_Curve
/// Size: 0x0110 (0x000028 - 0x000138)
class UHapticFeedbackEffect_Curve : public UHapticFeedbackEffect_Base
{ 
public:
	FHapticFeedbackDetails_Curve                       HapticDetails;                                              // 0x0028   (0x0110)  
};

/// Class /Script/Engine.HapticFeedbackEffect_SoundWave
/// Size: 0x0020 (0x000028 - 0x000048)
class UHapticFeedbackEffect_SoundWave : public UHapticFeedbackEffect_Base
{ 
public:
	USoundWave*                                        SoundWave;                                                  // 0x0028   (0x0008)  
	bool                                               bUseStereo;                                                 // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x17];                                      // 0x0031   (0x0017)  MISSED
};

/// Class /Script/Engine.AnimationDataController
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimationDataController : public UInterface
{ 
public:
};

/// Class /Script/Engine.InGameAdManager
/// Size: 0x0028 (0x000038 - 0x000060)
class UInGameAdManager : public UPlatformInterfaceBase
{ 
public:
	bool                                               bShouldPauseWhileAdOpen : 1;                                // 0x0038:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0039   (0x0007)  MISSED
	TArray<FDelegateProperty>                          ClickedBannerDelegates;                                     // 0x0040   (0x0010)  
	TArray<FDelegateProperty>                          ClosedAdDelegates;                                          // 0x0050   (0x0010)  
};

/// Class /Script/Engine.Interface_ActorSubobject
/// Size: 0x0000 (0x000028 - 0x000028)
class UInterface_ActorSubobject : public UInterface
{ 
public:
};

/// Class /Script/Engine.Interface_AssetUserData
/// Size: 0x0000 (0x000028 - 0x000028)
class UInterface_AssetUserData : public UInterface
{ 
public:
};

/// Class /Script/Engine.Interface_AsyncCompilation
/// Size: 0x0000 (0x000028 - 0x000028)
class UInterface_AsyncCompilation : public UInterface
{ 
public:
};

/// Class /Script/Engine.BoneReferenceSkeletonProvider
/// Size: 0x0000 (0x000028 - 0x000028)
class UBoneReferenceSkeletonProvider : public UInterface
{ 
public:
};

/// Class /Script/Engine.Interface_CollisionDataProvider
/// Size: 0x0000 (0x000028 - 0x000028)
class UInterface_CollisionDataProvider : public UInterface
{ 
public:
};

/// Class /Script/Engine.Interface_PostProcessVolume
/// Size: 0x0000 (0x000028 - 0x000028)
class UInterface_PostProcessVolume : public UInterface
{ 
public:
};

/// Class /Script/Engine.Interface_PreviewMeshProvider
/// Size: 0x0000 (0x000028 - 0x000028)
class UInterface_PreviewMeshProvider : public UInterface
{ 
public:
};

/// Class /Script/Engine.ISMPartitionInstanceManager
/// Size: 0x0000 (0x000028 - 0x000028)
class UISMPartitionInstanceManager : public UInterface
{ 
public:
};

/// Class /Script/Engine.ISMPartitionInstanceManagerProvider
/// Size: 0x0000 (0x000028 - 0x000028)
class UISMPartitionInstanceManagerProvider : public UInterface
{ 
public:
};

/// Class /Script/Engine.KismetTextLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UKismetTextLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.LevelInstanceEditorPivotInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class ULevelInstanceEditorPivotInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.LevelStreaming
/// Size: 0x0188 (0x000028 - 0x0001B0)
class ULevelStreaming : public UObject
{ 
public:
	TWeakObjectPtr<UWorld*>                            WorldAsset;                                                 // 0x0028   (0x0030)  
	int32_t                                            StreamingPriority;                                          // 0x0058   (0x0004)  
	FName                                              PackageNameToLoad;                                          // 0x005C   (0x0008)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0064   (0x0004)  MISSED
	TArray<FName>                                      LODPackageNames;                                            // 0x0068   (0x0010)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x0078   (0x0018)  MISSED
	FTransform                                         LevelTransform;                                             // 0x0090   (0x0060)  
	bool                                               bClientOnlyVisible;                                         // 0x00F0   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x00F1   (0x0003)  MISSED
	int32_t                                            LevelLODIndex;                                              // 0x00F4   (0x0004)  
	unsigned char                                      UnknownBit03 : 1;                                           // 0x00F8:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit04 : 1;                                           // 0x00F8:1 (0x0001)  MISSED
	unsigned char                                      UnknownBit05 : 1;                                           // 0x00F8:2 (0x0001)  MISSED
	bool                                               bShouldBeVisible : 1;                                       // 0x00F8:3 (0x0001)  
	bool                                               bShouldBeLoaded : 1;                                        // 0x00F8:4 (0x0001)  
	unsigned char                                      UnknownData06_3[0x2];                                       // 0x00F9   (0x0002)  MISSED
	bool                                               bLocked : 1;                                                // 0x00FB:0 (0x0001)  
	bool                                               bIsStatic : 1;                                              // 0x00FB:1 (0x0001)  
	bool                                               bShouldBlockOnLoad : 1;                                     // 0x00FB:2 (0x0001)  
	bool                                               bShouldBlockOnUnload : 1;                                   // 0x00FB:3 (0x0001)  
	bool                                               bDisableDistanceStreaming : 1;                              // 0x00FB:4 (0x0001)  
	bool                                               bDrawOnLevelStatusMap : 1;                                  // 0x00FB:5 (0x0001)  
	FLinearColor                                       LevelColor;                                                 // 0x00FC   (0x0010)  
	unsigned char                                      UnknownData07_5[0x4];                                       // 0x010C   (0x0004)  MISSED
	TArray<ALevelStreamingVolume*>                     EditorStreamingVolumes;                                     // 0x0110   (0x0010)  
	float                                              MinTimeBetweenVolumeUnloadRequests;                         // 0x0120   (0x0004)  
	unsigned char                                      UnknownData08_5[0x4];                                       // 0x0124   (0x0004)  MISSED
	FMulticastInlineDelegate                           OnLevelLoaded;                                              // 0x0128   (0x0010)  
	FMulticastInlineDelegate                           OnLevelUnloaded;                                            // 0x0138   (0x0010)  
	FMulticastInlineDelegate                           OnLevelShown;                                               // 0x0148   (0x0010)  
	FMulticastInlineDelegate                           OnLevelHidden;                                              // 0x0158   (0x0010)  
	ULevel*                                            LoadedLevel;                                                // 0x0168   (0x0008)  
	ULevel*                                            PendingUnloadLevel;                                         // 0x0170   (0x0008)  
	unsigned char                                      UnknownData09_6[0x38];                                      // 0x0178   (0x0038)  MISSED


	/// Functions
	// Function /Script/Engine.LevelStreaming.ShouldBeLoaded
	bool ShouldBeLoaded();                                                                                                   // [0x18529e0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.LevelStreaming.SetShouldBeVisible
	void SetShouldBeVisible(bool bInShouldBeVisible);                                                                        // [0x4bb4e70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LevelStreaming.SetShouldBeLoaded
	void SetShouldBeLoaded(bool bInShouldBeLoaded);                                                                          // [0x1344ae0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.LevelStreaming.SetPriority
	void SetPriority(int32_t NewPriority);                                                                                   // [0x4bb4dc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LevelStreaming.SetLevelLODIndex
	void SetLevelLODIndex(int32_t LODIndex);                                                                                 // [0x4bb4ac0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LevelStreaming.SetIsRequestingUnloadAndRemoval
	void SetIsRequestingUnloadAndRemoval(bool bInIsRequestingUnloadAndRemoval);                                              // [0x4bb4a00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LevelStreaming.IsStreamingStatePending
	bool IsStreamingStatePending();                                                                                          // [0x4bb43c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.LevelStreaming.IsLevelVisible
	bool IsLevelVisible();                                                                                                   // [0x4bb4380] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.LevelStreaming.IsLevelLoaded
	bool IsLevelLoaded();                                                                                                    // [0x4bb4350] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.LevelStreaming.GetWorldAssetPackageFName
	FName GetWorldAssetPackageFName();                                                                                       // [0x4bb42d0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.LevelStreaming.GetLoadedLevel
	ULevel* GetLoadedLevel();                                                                                                // [0x48bd100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.LevelStreaming.GetLevelScriptActor
	ALevelScriptActor* GetLevelScriptActor();                                                                                // [0x4bb41d0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.LevelStreaming.GetIsRequestingUnloadAndRemoval
	bool GetIsRequestingUnloadAndRemoval();                                                                                  // [0x4bb41a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.LevelStreaming.CreateInstance
	ULevelStreaming* CreateInstance(FString UniqueInstanceName);                                                             // [0x4bb3d40] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.LevelStreamingAlwaysLoaded
/// Size: 0x0000 (0x0001B0 - 0x0001B0)
class ULevelStreamingAlwaysLoaded : public ULevelStreaming
{ 
public:
};

/// Class /Script/Engine.LevelStreamingDynamic
/// Size: 0x0000 (0x0001B0 - 0x0001B0)
class ULevelStreamingDynamic : public ULevelStreaming
{ 
public:


	/// Functions
	// Function /Script/Engine.LevelStreamingDynamic.LoadLevelInstanceBySoftObjectPtr
	ULevelStreamingDynamic* LoadLevelInstanceBySoftObjectPtr(UObject* WorldContextObject, TWeakObjectPtr<UWorld*> Level, FVector Location, FRotator Rotation, bool& bOutSuccess, FString OptionalLevelNameOverride, UClass* OptionalLevelStreamingClass, bool bLoadAsTempPackage); // [0x464cc40] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.LevelStreamingDynamic.LoadLevelInstance
	ULevelStreamingDynamic* LoadLevelInstance(UObject* WorldContextObject, FString LevelName, FVector Location, FRotator Rotation, bool& bOutSuccess, FString OptionalLevelNameOverride, UClass* OptionalLevelStreamingClass, bool bLoadAsTempPackage); // [0x464c910] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.LevelStreamingPersistent
/// Size: 0x0000 (0x0001B0 - 0x0001B0)
class ULevelStreamingPersistent : public ULevelStreaming
{ 
public:
};

/// Class /Script/Engine.LevelStreamingVolume
/// Size: 0x0018 (0x0002C8 - 0x0002E0)
class ALevelStreamingVolume : public AVolume
{ 
public:
	TArray<FName>                                      StreamingLevelNames;                                        // 0x02C8   (0x0010)  
	bool                                               bEditorPreVisOnly : 1;                                      // 0x02D8:0 (0x0001)  
	bool                                               bDisabled : 1;                                              // 0x02D8:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x02D9   (0x0003)  MISSED
	TEnumAsByte<EStreamingVolumeUsage>                 StreamingUsage;                                             // 0x02DC   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x02DD   (0x0003)  MISSED
};

/// Class /Script/Engine.LightComponentBase
/// Size: 0x0040 (0x0002A0 - 0x0002E0)
class ULightComponentBase : public USceneComponent
{ 
public:
	FGuid                                              LightGuid;                                                  // 0x02A0   (0x0010)  
	float                                              Brightness;                                                 // 0x02B0   (0x0004)  
	float                                              Intensity;                                                  // 0x02B4   (0x0004)  
	FColor                                             LightColor;                                                 // 0x02B8   (0x0004)  
	bool                                               bAffectsWorld : 1;                                          // 0x02BC:0 (0x0001)  
	bool                                               CastShadows : 1;                                            // 0x02BC:1 (0x0001)  
	bool                                               CastStaticShadows : 1;                                      // 0x02BC:2 (0x0001)  
	bool                                               CastDynamicShadows : 1;                                     // 0x02BC:3 (0x0001)  
	bool                                               bAffectTranslucentLighting : 1;                             // 0x02BC:4 (0x0001)  
	bool                                               bTransmission : 1;                                          // 0x02BC:5 (0x0001)  
	bool                                               bCastVolumetricShadow : 1;                                  // 0x02BC:6 (0x0001)  
	bool                                               bCastDeepShadow : 1;                                        // 0x02BC:7 (0x0001)  
	bool                                               bCastRaytracedShadow : 1;                                   // 0x02BD:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x2];                                       // 0x02BE   (0x0002)  MISSED
	TEnumAsByte<ECastRayTracedShadow>                  CastRaytracedShadow;                                        // 0x02C0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x02C1   (0x0003)  MISSED
	bool                                               bAffectReflection : 1;                                      // 0x02C4:0 (0x0001)  
	bool                                               bAffectGlobalIllumination : 1;                              // 0x02C4:1 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x02C5   (0x0003)  MISSED
	float                                              DeepShadowLayerDistribution;                                // 0x02C8   (0x0004)  
	float                                              IndirectLightingIntensity;                                  // 0x02CC   (0x0004)  
	float                                              VolumetricScatteringIntensity;                              // 0x02D0   (0x0004)  
	int32_t                                            SamplesPerPixel;                                            // 0x02D4   (0x0004)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x02D8   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.LightComponentBase.SetSamplesPerPixel
	void SetSamplesPerPixel(int32_t NewValue);                                                                               // [0x464d3d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponentBase.SetCastVolumetricShadow
	void SetCastVolumetricShadow(bool bNewValue);                                                                            // [0x464d340] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponentBase.SetCastShadows
	void SetCastShadows(bool bNewValue);                                                                                     // [0x464d2b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponentBase.SetCastRaytracedShadows
	void SetCastRaytracedShadows(TEnumAsByte<ECastRayTracedShadow> bNewValue);                                               // [0x464d230] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponentBase.SetCastRaytracedShadow
	void SetCastRaytracedShadow(bool bNewValue);                                                                             // [0x464d1a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponentBase.SetCastDeepShadow
	void SetCastDeepShadow(bool bNewValue);                                                                                  // [0x464d110] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponentBase.SetAffectReflection
	void SetAffectReflection(bool bNewValue);                                                                                // [0x464d080] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponentBase.SetAffectGlobalIllumination
	void SetAffectGlobalIllumination(bool bNewValue);                                                                        // [0x464cff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponentBase.GetLightColor
	FLinearColor GetLightColor();                                                                                            // [0x464c8d0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.Texture2D
/// Size: 0x00C0 (0x0001F0 - 0x0002B0)
class UTexture2D : public UTexture
{ 
public:
	int32_t                                            FirstResourceMemMip;                                        // 0x01F0   (0x0004)  
	bool                                               bTemporarilyDisableStreaming : 1;                           // 0x01F4:0 (0x0001)  
	TEnumAsByte<TextureAddress>                        AddressX;                                                   // 0x01F5   (0x0001)  
	TEnumAsByte<TextureAddress>                        AddressY;                                                   // 0x01F6   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x01F7   (0x0001)  MISSED
	FIntPoint                                          ImportedSize;                                               // 0x01F8   (0x0008)  
	unsigned char                                      UnknownData01_6[0xB0];                                      // 0x0200   (0x00B0)  MISSED


	/// Functions
	// Function /Script/Engine.Texture2D.Blueprint_GetSizeY
	int32_t Blueprint_GetSizeY();                                                                                            // [0x4fa86e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.Texture2D.Blueprint_GetSizeX
	int32_t Blueprint_GetSizeX();                                                                                            // [0x4fa86b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.LightMapTexture2D
/// Size: 0x0000 (0x0002B0 - 0x0002B0)
class ULightMapTexture2D : public UTexture2D
{ 
public:
};

/// Class /Script/Engine.LightmassPortal
/// Size: 0x0008 (0x000290 - 0x000298)
class ALightmassPortal : public AActor
{ 
public:
	ULightmassPortalComponent*                         PortalComponent;                                            // 0x0290   (0x0008)  
};

/// Class /Script/Engine.LightmassPortalComponent
/// Size: 0x0010 (0x0002A0 - 0x0002B0)
class ULightmassPortalComponent : public USceneComponent
{ 
public:
	UBoxComponent*                                     PreviewBox;                                                 // 0x02A0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02A8   (0x0008)  MISSED
};

/// Class /Script/Engine.MapBuildDataRegistry
/// Size: 0x0210 (0x000028 - 0x000238)
class UMapBuildDataRegistry : public UObject
{ 
public:
	TEnumAsByte<ELightingBuildQuality>                 LevelLightingQuality;                                       // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_6[0x20F];                                     // 0x0029   (0x020F)  MISSED
};

/// Class /Script/Engine.MaterialInterfaceEditorOnlyData
/// Size: 0x0018 (0x000028 - 0x000040)
class UMaterialInterfaceEditorOnlyData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0028   (0x0018)  MISSED
};

/// Class /Script/Engine.MaterialEditorOnlyData
/// Size: 0x05D8 (0x000040 - 0x000618)
class UMaterialEditorOnlyData : public UMaterialInterfaceEditorOnlyData
{ 
public:
	FColorMaterialInput                                BaseColor;                                                  // 0x0040   (0x0030)  
	FScalarMaterialInput                               Metallic;                                                   // 0x0070   (0x0030)  
	FScalarMaterialInput                               Specular;                                                   // 0x00A0   (0x0030)  
	FScalarMaterialInput                               Roughness;                                                  // 0x00D0   (0x0030)  
	FScalarMaterialInput                               Anisotropy;                                                 // 0x0100   (0x0030)  
	FVectorMaterialInput                               Normal;                                                     // 0x0130   (0x0038)  
	FVectorMaterialInput                               Tangent;                                                    // 0x0168   (0x0038)  
	FColorMaterialInput                                EmissiveColor;                                              // 0x01A0   (0x0030)  
	FScalarMaterialInput                               Opacity;                                                    // 0x01D0   (0x0030)  
	FScalarMaterialInput                               OpacityMask;                                                // 0x0200   (0x0030)  
	FVectorMaterialInput                               WorldPositionOffset;                                        // 0x0230   (0x0038)  
	FColorMaterialInput                                SubsurfaceColor;                                            // 0x0268   (0x0030)  
	FScalarMaterialInput                               ClearCoat;                                                  // 0x0298   (0x0030)  
	FScalarMaterialInput                               ClearCoatRoughness;                                         // 0x02C8   (0x0030)  
	FScalarMaterialInput                               AmbientOcclusion;                                           // 0x02F8   (0x0030)  
	FScalarMaterialInput                               Refraction;                                                 // 0x0328   (0x0030)  
	FVector2MaterialInput                              CustomizedUVs;                                              // 0x0358   (0x01C0)  
	FMaterialAttributesInput                           MaterialAttributes;                                         // 0x0518   (0x0030)  
	FScalarMaterialInput                               PixelDepthOffset;                                           // 0x0548   (0x0030)  
	FShadingModelMaterialInput                         ShadingModelFromMaterialExpression;                         // 0x0578   (0x0028)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x05A0   (0x0008)  MISSED
	FStrataMaterialInput                               FrontMaterial;                                              // 0x05A8   (0x0028)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x05D0   (0x0008)  MISSED
	FMaterialExpressionCollection                      ExpressionCollection;                                       // 0x05D8   (0x0030)  
	TArray<FParameterGroupData>                        ParameterGroupData;                                         // 0x0608   (0x0010)  
};

/// Class /Script/Engine.Material
/// Size: 0x0158 (0x000098 - 0x0001F0)
class UMaterial : public UMaterialInterface
{ 
public:
	UPhysicalMaterial*                                 PhysMaterial;                                               // 0x0098   (0x0008)  
	UPhysicalMaterialMask*                             PhysMaterialMask;                                           // 0x00A0   (0x0008)  
	UPhysicalMaterial*                                 PhysicalMaterialMap;                                        // 0x00A8   (0x0040)  
	TArray<UPhysicalMaterial*>                         RenderTracePhysicalMaterialOutputs;                         // 0x00E8   (0x0010)  
	TEnumAsByte<EMaterialDomain>                       MaterialDomain;                                             // 0x00F8   (0x0001)  
	TEnumAsByte<EBlendMode>                            BlendMode;                                                  // 0x00F9   (0x0001)  
	TEnumAsByte<EStrataBlendMode>                      StrataBlendMode;                                            // 0x00FA   (0x0001)  
	TEnumAsByte<EDecalBlendMode>                       DecalBlendMode;                                             // 0x00FB   (0x0001)  
	TEnumAsByte<EMaterialDecalResponse>                MaterialDecalResponse;                                      // 0x00FC   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00FD   (0x0003)  MISSED
	FMaterialOverrideNanite                            NaniteOverrideMaterial;                                     // 0x0100   (0x0040)  
	uint32_t                                           CachedConnectedInputs;                                      // 0x0140   (0x0004)  
	TEnumAsByte<EMaterialShadingModel>                 ShadingModel;                                               // 0x0144   (0x0001)  
	bool                                               bCastDynamicShadowAsMasked : 1;                             // 0x0145:0 (0x0001)  
	FMaterialShadingModelField                         ShadingModels;                                              // 0x0146   (0x0002)  
	float                                              OpacityMaskClipValue;                                       // 0x0148   (0x0004)  
	bool                                               bEnableSeparateTranslucency : 1;                            // 0x014C:0 (0x0001)  
	bool                                               bEnableResponsiveAA : 1;                                    // 0x014C:1 (0x0001)  
	bool                                               bScreenSpaceReflections : 1;                                // 0x014C:2 (0x0001)  
	bool                                               bContactShadows : 1;                                        // 0x014C:3 (0x0001)  
	bool                                               TwoSided : 1;                                               // 0x014C:4 (0x0001)  
	bool                                               DitheredLODTransition : 1;                                  // 0x014C:5 (0x0001)  
	bool                                               DitherOpacityMask : 1;                                      // 0x014C:6 (0x0001)  
	bool                                               bAllowNegativeEmissiveColor : 1;                            // 0x014C:7 (0x0001)  
	TEnumAsByte<EMaterialTranslucencyPass>             TranslucencyPass;                                           // 0x014D   (0x0001)  
	TEnumAsByte<ETranslucencyLightingMode>             TranslucencyLightingMode;                                   // 0x014E   (0x0001)  
	bool                                               bEnableMobileSeparateTranslucency : 1;                      // 0x014F:0 (0x0001)  
	int32_t                                            NumCustomizedUVs;                                           // 0x0150   (0x0004)  
	float                                              TranslucencyDirectionalLightingIntensity;                   // 0x0154   (0x0004)  
	float                                              TranslucentShadowDensityScale;                              // 0x0158   (0x0004)  
	float                                              TranslucentSelfShadowDensityScale;                          // 0x015C   (0x0004)  
	float                                              TranslucentSelfShadowSecondDensityScale;                    // 0x0160   (0x0004)  
	float                                              TranslucentSelfShadowSecondOpacity;                         // 0x0164   (0x0004)  
	float                                              TranslucentBackscatteringExponent;                          // 0x0168   (0x0004)  
	FLinearColor                                       TranslucentMultipleScatteringExtinction;                    // 0x016C   (0x0010)  
	float                                              TranslucentShadowStartOffset;                               // 0x017C   (0x0004)  
	bool                                               bDisableDepthTest : 1;                                      // 0x0180:0 (0x0001)  
	bool                                               bWriteOnlyAlpha : 1;                                        // 0x0180:1 (0x0001)  
	bool                                               bGenerateSphericalParticleNormals : 1;                      // 0x0180:2 (0x0001)  
	bool                                               bTangentSpaceNormal : 1;                                    // 0x0180:3 (0x0001)  
	bool                                               bUseEmissiveForDynamicAreaLighting : 1;                     // 0x0180:4 (0x0001)  
	bool                                               bUsedAsSpecialEngineMaterial : 1;                           // 0x0180:5 (0x0001)  
	bool                                               bUsedWithSkeletalMesh : 1;                                  // 0x0180:6 (0x0001)  
	bool                                               bUsedWithEditorCompositing : 1;                             // 0x0180:7 (0x0001)  
	bool                                               bUsedWithParticleSprites : 1;                               // 0x0181:0 (0x0001)  
	bool                                               bUsedWithBeamTrails : 1;                                    // 0x0181:1 (0x0001)  
	bool                                               bUsedWithMeshParticles : 1;                                 // 0x0181:2 (0x0001)  
	bool                                               bUsedWithNiagaraSprites : 1;                                // 0x0181:3 (0x0001)  
	bool                                               bUsedWithNiagaraRibbons : 1;                                // 0x0181:4 (0x0001)  
	bool                                               bUsedWithNiagaraMeshParticles : 1;                          // 0x0181:5 (0x0001)  
	bool                                               bUsedWithGeometryCache : 1;                                 // 0x0181:6 (0x0001)  
	bool                                               bUsedWithStaticLighting : 1;                                // 0x0181:7 (0x0001)  
	bool                                               bUsedWithMorphTargets : 1;                                  // 0x0182:0 (0x0001)  
	bool                                               bUsedWithSplineMeshes : 1;                                  // 0x0182:1 (0x0001)  
	bool                                               bUsedWithInstancedStaticMeshes : 1;                         // 0x0182:2 (0x0001)  
	bool                                               bUsedWithGeometryCollections : 1;                           // 0x0182:3 (0x0001)  
	bool                                               bUsesDistortion : 1;                                        // 0x0182:4 (0x0001)  
	bool                                               bUsedWithClothing : 1;                                      // 0x0182:5 (0x0001)  
	unsigned char                                      UnknownData01_3[0x1];                                       // 0x0183   (0x0001)  MISSED
	bool                                               bUsedWithWater : 1;                                         // 0x0184:0 (0x0001)  
	bool                                               bUsedWithHairStrands : 1;                                   // 0x0184:1 (0x0001)  
	bool                                               bUsedWithLidarPointCloud : 1;                               // 0x0184:2 (0x0001)  
	bool                                               bUsedWithVirtualHeightfieldMesh : 1;                        // 0x0184:3 (0x0001)  
	bool                                               bUsedWithNanite : 1;                                        // 0x0184:4 (0x0001)  
	unsigned char                                      UnknownData02_3[0x3];                                       // 0x0185   (0x0003)  MISSED
	bool                                               bUsedWithUI : 1;                                            // 0x0188:0 (0x0001)  
	bool                                               bAutomaticallySetUsageInEditor : 1;                         // 0x0188:1 (0x0001)  
	bool                                               bFullyRough : 1;                                            // 0x0188:2 (0x0001)  
	bool                                               bUseFullPrecision : 1;                                      // 0x0188:3 (0x0001)  
	TEnumAsByte<EMaterialFloatPrecisionMode>           FloatPrecisionMode;                                         // 0x0189   (0x0001)  
	bool                                               bUseLightmapDirectionality : 1;                             // 0x018A:0 (0x0001)  
	bool                                               bMobileEnableHighQualityBRDF : 1;                           // 0x018A:1 (0x0001)  
	bool                                               bUseAlphaToCoverage : 1;                                    // 0x018A:2 (0x0001)  
	unsigned char                                      UnknownData03_3[0x1];                                       // 0x018B   (0x0001)  MISSED
	bool                                               bForwardRenderUsePreintegratedGFForSimpleIBL : 1;           // 0x018C:0 (0x0001)  
	unsigned char                                      UnknownData04_3[0x3];                                       // 0x018D   (0x0003)  MISSED
	bool                                               bUseHQForwardReflections : 1;                               // 0x0190:0 (0x0001)  
	bool                                               bForwardBlendsSkyLightCubemaps : 1;                         // 0x0190:1 (0x0001)  
	bool                                               bUsePlanarForwardReflections : 1;                           // 0x0190:2 (0x0001)  
	bool                                               bNormalCurvatureToRoughness : 1;                            // 0x0190:3 (0x0001)  
	bool                                               AllowTranslucentCustomDepthWrites : 1;                      // 0x0190:4 (0x0001)  
	bool                                               Wireframe : 1;                                              // 0x0190:5 (0x0001)  
	TEnumAsByte<EMaterialShadingRate>                  ShadingRate;                                                // 0x0191   (0x0001)  
	bool                                               bCanMaskedBeAssumedOpaque : 1;                              // 0x0192:0 (0x0001)  
	bool                                               bIsMasked : 1;                                              // 0x0192:1 (0x0001)  
	bool                                               bIsPreviewMaterial : 1;                                     // 0x0192:2 (0x0001)  
	bool                                               bIsFunctionPreviewMaterial : 1;                             // 0x0192:3 (0x0001)  
	bool                                               bUseMaterialAttributes : 1;                                 // 0x0192:4 (0x0001)  
	bool                                               bEnableExecWire : 1;                                        // 0x0192:5 (0x0001)  
	bool                                               bEnableNewHLSLGenerator : 1;                                // 0x0192:6 (0x0001)  
	bool                                               bCastRayTracedShadows : 1;                                  // 0x0192:7 (0x0001)  
	bool                                               bUseTranslucencyVertexFog : 1;                              // 0x0193:0 (0x0001)  
	bool                                               bApplyCloudFogging : 1;                                     // 0x0193:1 (0x0001)  
	bool                                               bIsSky : 1;                                                 // 0x0193:2 (0x0001)  
	bool                                               bComputeFogPerPixel : 1;                                    // 0x0193:3 (0x0001)  
	bool                                               bOutputTranslucentVelocity : 1;                             // 0x0193:4 (0x0001)  
	bool                                               bAllowDevelopmentShaderCompile : 1;                         // 0x0193:5 (0x0001)  
	bool                                               bIsMaterialEditorStatsMaterial : 1;                         // 0x0193:6 (0x0001)  
	TEnumAsByte<EBlendableLocation>                    BlendableLocation;                                          // 0x0194   (0x0001)  
	bool                                               BlendableOutputAlpha : 1;                                   // 0x0195:0 (0x0001)  
	bool                                               bEnableStencilTest : 1;                                     // 0x0195:1 (0x0001)  
	TEnumAsByte<EMaterialStencilCompare>               StencilCompare;                                             // 0x0196   (0x0001)  
	char                                               StencilRefValue;                                            // 0x0197   (0x0001)  
	TEnumAsByte<ERefractionMode>                       RefractionMode;                                             // 0x0198   (0x0001)  
	unsigned char                                      UnknownData05_5[0x3];                                       // 0x0199   (0x0003)  MISSED
	int32_t                                            BlendablePriority;                                          // 0x019C   (0x0004)  
	bool                                               bIsBlendable : 1;                                           // 0x01A0:0 (0x0001)  
	unsigned char                                      UnknownData06_4[0x3];                                       // 0x01A1   (0x0003)  MISSED
	uint32_t                                           UsageFlagWarnings;                                          // 0x01A4   (0x0004)  
	float                                              RefractionDepthBias;                                        // 0x01A8   (0x0004)  
	FGuid                                              StateId;                                                    // 0x01AC   (0x0010)  
	unsigned char                                      UnknownData07_6[0x34];                                      // 0x01BC   (0x0034)  MISSED
};

/// Class /Script/Engine.MaterialExpressionAbs
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionAbs : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionAbsorptionMediumMaterialOutput
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionAbsorptionMediumMaterialOutput : public UMaterialExpressionCustomOutput
{ 
public:
	FExpressionInput                                   TransmittanceColor;                                         // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionActorPositionWS
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionActorPositionWS : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionAdd
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UMaterialExpressionAdd : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
	float                                              ConstA;                                                     // 0x0100   (0x0004)  
	float                                              ConstB;                                                     // 0x0104   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionAntialiasedTextureMask
/// Size: 0x0008 (0x000240 - 0x000248)
class UMaterialExpressionAntialiasedTextureMask : public UMaterialExpressionTextureSampleParameter2D
{ 
public:
	float                                              Threshold;                                                  // 0x0240   (0x0004)  
	TEnumAsByte<ETextureColorChannel>                  Channel;                                                    // 0x0244   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0245   (0x0003)  MISSED
};

/// Class /Script/Engine.MaterialExpressionAppendVector
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionAppendVector : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionArccosine
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionArccosine : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionArccosineFast
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionArccosineFast : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionArcsine
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionArcsine : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionArcsineFast
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionArcsineFast : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionArctangent
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionArctangent : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionArctangent2
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionArctangent2 : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Y;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   X;                                                          // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionArctangent2Fast
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionArctangent2Fast : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Y;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   X;                                                          // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionArctangentFast
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionArctangentFast : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionAtmosphericFogColor
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionAtmosphericFogColor : public UMaterialExpression
{ 
public:
	FExpressionInput                                   WorldPosition;                                              // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionAtmosphericLightColor
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionAtmosphericLightColor : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionAtmosphericLightVector
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionAtmosphericLightVector : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionBentNormalCustomOutput
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionBentNormalCustomOutput : public UMaterialExpressionCustomOutput
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionBinaryOp
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UMaterialExpressionBinaryOp : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
	float                                              ConstA;                                                     // 0x0100   (0x0004)  
	float                                              ConstB;                                                     // 0x0104   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionLess
/// Size: 0x0000 (0x000108 - 0x000108)
class UMaterialExpressionLess : public UMaterialExpressionBinaryOp
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionBlackBody
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionBlackBody : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Temp;                                                       // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionBlendMaterialAttributes
/// Size: 0x0090 (0x0000B0 - 0x000140)
class UMaterialExpressionBlendMaterialAttributes : public UMaterialExpression
{ 
public:
	FMaterialAttributesInput                           A;                                                          // 0x00B0   (0x0030)  
	FMaterialAttributesInput                           B;                                                          // 0x00E0   (0x0030)  
	FExpressionInput                                   Alpha;                                                      // 0x0110   (0x0028)  
	TEnumAsByte<EMaterialAttributeBlend>               PixelAttributeBlendType;                                    // 0x0138   (0x0001)  
	TEnumAsByte<EMaterialAttributeBlend>               VertexAttributeBlendType;                                   // 0x0139   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x013A   (0x0006)  MISSED
};

/// Class /Script/Engine.MaterialExpressionBreakMaterialAttributes
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionBreakMaterialAttributes : public UMaterialExpression
{ 
public:
	FMaterialAttributesInput                           MaterialAttributes;                                         // 0x00B0   (0x0030)  
};

/// Class /Script/Engine.MaterialExpressionBumpOffset
/// Size: 0x0088 (0x0000B0 - 0x000138)
class UMaterialExpressionBumpOffset : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Coordinate;                                                 // 0x00B0   (0x0028)  
	FExpressionInput                                   Height;                                                     // 0x00D8   (0x0028)  
	FExpressionInput                                   HeightRatioInput;                                           // 0x0100   (0x0028)  
	float                                              HeightRatio;                                                // 0x0128   (0x0004)  
	float                                              ReferencePlane;                                             // 0x012C   (0x0004)  
	uint32_t                                           ConstCoordinate;                                            // 0x0130   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0134   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionCameraPositionWS
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionCameraPositionWS : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionCameraVectorWS
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionCameraVectorWS : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionCeil
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionCeil : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionParameter
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionParameter : public UMaterialExpression
{ 
public:
	FName                                              ParameterName;                                              // 0x00B0   (0x0008)  
	FGuid                                              ExpressionGUID;                                             // 0x00B8   (0x0010)  
	FName                                              Group;                                                      // 0x00C8   (0x0008)  
	int32_t                                            SortPriority;                                               // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00D4   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionVectorParameter
/// Size: 0x0078 (0x0000D8 - 0x000150)
class UMaterialExpressionVectorParameter : public UMaterialExpressionParameter
{ 
public:
	FLinearColor                                       DefaultValue;                                               // 0x00D8   (0x0010)  
	bool                                               bUseCustomPrimitiveData;                                    // 0x00E8   (0x0001)  
	char                                               PrimitiveDataIndex;                                         // 0x00E9   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x00EA   (0x0006)  MISSED
	FParameterChannelNames                             ChannelNames;                                               // 0x00F0   (0x0060)  
};

/// Class /Script/Engine.MaterialExpressionChannelMaskParameter
/// Size: 0x0030 (0x000150 - 0x000180)
class UMaterialExpressionChannelMaskParameter : public UMaterialExpressionVectorParameter
{ 
public:
	TEnumAsByte<EChannelMaskParameterColor>            MaskChannel;                                                // 0x0150   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0151   (0x0007)  MISSED
	FExpressionInput                                   Input;                                                      // 0x0158   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionClamp
/// Size: 0x0088 (0x0000B0 - 0x000138)
class UMaterialExpressionClamp : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
	FExpressionInput                                   Min;                                                        // 0x00D8   (0x0028)  
	FExpressionInput                                   Max;                                                        // 0x0100   (0x0028)  
	TEnumAsByte<EClampMode>                            ClampMode;                                                  // 0x0128   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0129   (0x0003)  MISSED
	float                                              MinDefault;                                                 // 0x012C   (0x0004)  
	float                                              MaxDefault;                                                 // 0x0130   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0134   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionClearCoatNormalCustomOutput
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionClearCoatNormalCustomOutput : public UMaterialExpressionCustomOutput
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionCloudSampleAttribute
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionCloudSampleAttribute : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionCollectionParameter
/// Size: 0x0020 (0x0000B0 - 0x0000D0)
class UMaterialExpressionCollectionParameter : public UMaterialExpression
{ 
public:
	UMaterialParameterCollection*                      Collection;                                                 // 0x00B0   (0x0008)  
	FName                                              ParameterName;                                              // 0x00B8   (0x0008)  
	FGuid                                              ParameterId;                                                // 0x00C0   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionComment
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionComment : public UMaterialExpression
{ 
public:
	int32_t                                            SizeX;                                                      // 0x00B0   (0x0004)  
	int32_t                                            SizeY;                                                      // 0x00B4   (0x0004)  
	FString                                            Text;                                                       // 0x00B8   (0x0010)  
	FLinearColor                                       CommentColor;                                               // 0x00C8   (0x0010)  
	int32_t                                            FontSize;                                                   // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00DC   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionComponentMask
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionComponentMask : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
	bool                                               R : 1;                                                      // 0x00D8:0 (0x0001)  
	bool                                               G : 1;                                                      // 0x00D8:1 (0x0001)  
	bool                                               B : 1;                                                      // 0x00D8:2 (0x0001)  
	bool                                               A : 1;                                                      // 0x00D8:3 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00D9   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionComposite
/// Size: 0x0020 (0x0000B0 - 0x0000D0)
class UMaterialExpressionComposite : public UMaterialExpression
{ 
public:
	FString                                            SubgraphName;                                               // 0x00B0   (0x0010)  
	UMaterialExpressionPinBase*                        InputExpressions;                                           // 0x00C0   (0x0008)  
	UMaterialExpressionPinBase*                        OutputExpressions;                                          // 0x00C8   (0x0008)  
};

/// Class /Script/Engine.MaterialExpressionConstant
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UMaterialExpressionConstant : public UMaterialExpression
{ 
public:
	float                                              R;                                                          // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00B4   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionConstant2Vector
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UMaterialExpressionConstant2Vector : public UMaterialExpression
{ 
public:
	float                                              R;                                                          // 0x00B0   (0x0004)  
	float                                              G;                                                          // 0x00B4   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionConstant3Vector
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UMaterialExpressionConstant3Vector : public UMaterialExpression
{ 
public:
	FLinearColor                                       Constant;                                                   // 0x00B0   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionConstant4Vector
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UMaterialExpressionConstant4Vector : public UMaterialExpression
{ 
public:
	FLinearColor                                       Constant;                                                   // 0x00B0   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionConstantBiasScale
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionConstantBiasScale : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
	float                                              Bias;                                                       // 0x00D8   (0x0004)  
	float                                              Scale;                                                      // 0x00DC   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionCosine
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionCosine : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
	float                                              Period;                                                     // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00DC   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionCrossProduct
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionCrossProduct : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionScalarParameter
/// Size: 0x0010 (0x0000D8 - 0x0000E8)
class UMaterialExpressionScalarParameter : public UMaterialExpressionParameter
{ 
public:
	float                                              DefaultValue;                                               // 0x00D8   (0x0004)  
	bool                                               bUseCustomPrimitiveData;                                    // 0x00DC   (0x0001)  
	char                                               PrimitiveDataIndex;                                         // 0x00DD   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x00DE   (0x0002)  MISSED
	float                                              SliderMin;                                                  // 0x00E0   (0x0004)  
	float                                              SliderMax;                                                  // 0x00E4   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionCurveAtlasRowParameter
/// Size: 0x0038 (0x0000E8 - 0x000120)
class UMaterialExpressionCurveAtlasRowParameter : public UMaterialExpressionScalarParameter
{ 
public:
	UCurveLinearColor*                                 Curve;                                                      // 0x00E8   (0x0008)  
	UCurveLinearColorAtlas*                            Atlas;                                                      // 0x00F0   (0x0008)  
	FExpressionInput                                   InputTime;                                                  // 0x00F8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionCustom
/// Size: 0x0068 (0x0000B0 - 0x000118)
class UMaterialExpressionCustom : public UMaterialExpression
{ 
public:
	FString                                            code;                                                       // 0x00B0   (0x0010)  
	TEnumAsByte<ECustomMaterialOutputType>             OutputType;                                                 // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00C1   (0x0007)  MISSED
	FString                                            Description;                                                // 0x00C8   (0x0010)  
	TArray<FCustomInput>                               Inputs;                                                     // 0x00D8   (0x0010)  
	TArray<FCustomOutput>                              AdditionalOutputs;                                          // 0x00E8   (0x0010)  
	TArray<FCustomDefine>                              AdditionalDefines;                                          // 0x00F8   (0x0010)  
	TArray<FString>                                    IncludeFilePaths;                                           // 0x0108   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionDBufferTexture
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionDBufferTexture : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Coordinates;                                                // 0x00B0   (0x0028)  
	TEnumAsByte<EDBufferTextureId>                     DBufferTextureId;                                           // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00D9   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionDDX
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionDDX : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Value;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionDDY
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionDDY : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Value;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionDecalDerivative
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionDecalDerivative : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionDecalLifetimeOpacity
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionDecalLifetimeOpacity : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionDecalMipmapLevel
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionDecalMipmapLevel : public UMaterialExpression
{ 
public:
	FExpressionInput                                   TextureSize;                                                // 0x00B0   (0x0028)  
	float                                              ConstWidth;                                                 // 0x00D8   (0x0004)  
	float                                              ConstHeight;                                                // 0x00DC   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionDeltaTime
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionDeltaTime : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionDepthFade
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UMaterialExpressionDepthFade : public UMaterialExpression
{ 
public:
	FExpressionInput                                   InOpacity;                                                  // 0x00B0   (0x0028)  
	FExpressionInput                                   FadeDistance;                                               // 0x00D8   (0x0028)  
	float                                              OpacityDefault;                                             // 0x0100   (0x0004)  
	float                                              FadeDistanceDefault;                                        // 0x0104   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionDepthOfFieldFunction
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionDepthOfFieldFunction : public UMaterialExpression
{ 
public:
	TEnumAsByte<EDepthOfFieldFunctionValue>            FunctionValue;                                              // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00B1   (0x0007)  MISSED
	FExpressionInput                                   Depth;                                                      // 0x00B8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionDeriveNormalZ
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionDeriveNormalZ : public UMaterialExpression
{ 
public:
	FExpressionInput                                   InXY;                                                       // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionDesaturation
/// Size: 0x0060 (0x0000B0 - 0x000110)
class UMaterialExpressionDesaturation : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
	FExpressionInput                                   Fraction;                                                   // 0x00D8   (0x0028)  
	FLinearColor                                       LuminanceFactors;                                           // 0x0100   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionDistance
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionDistance : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionDistanceCullFade
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionDistanceCullFade : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionDistanceFieldApproxAO
/// Size: 0x00B8 (0x0000B0 - 0x000168)
class UMaterialExpressionDistanceFieldApproxAO : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Position;                                                   // 0x00B0   (0x0028)  
	FExpressionInput                                   Normal;                                                     // 0x00D8   (0x0028)  
	FExpressionInput                                   BaseDistance;                                               // 0x0100   (0x0028)  
	float                                              BaseDistanceDefault;                                        // 0x0128   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x012C   (0x0004)  MISSED
	FExpressionInput                                   Radius;                                                     // 0x0130   (0x0028)  
	float                                              RadiusDefault;                                              // 0x0158   (0x0004)  
	uint32_t                                           NumSteps;                                                   // 0x015C   (0x0004)  
	float                                              StepScaleDefault;                                           // 0x0160   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0164   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionDistanceFieldGradient
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionDistanceFieldGradient : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Position;                                                   // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionDistanceFieldsRenderingSwitch
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionDistanceFieldsRenderingSwitch : public UMaterialExpression
{ 
public:
	FExpressionInput                                   No;                                                         // 0x00B0   (0x0028)  
	FExpressionInput                                   Yes;                                                        // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionDistanceToNearestSurface
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionDistanceToNearestSurface : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Position;                                                   // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionDivide
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UMaterialExpressionDivide : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
	float                                              ConstA;                                                     // 0x0100   (0x0004)  
	float                                              ConstB;                                                     // 0x0104   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionDotProduct
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionDotProduct : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionDoubleVectorParameter
/// Size: 0x0028 (0x0000D8 - 0x000100)
class UMaterialExpressionDoubleVectorParameter : public UMaterialExpressionParameter
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00D8   (0x0008)  MISSED
	FVector4d                                          DefaultValue;                                               // 0x00E0   (0x0020)  
};

/// Class /Script/Engine.MaterialExpressionDynamicParameter
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionDynamicParameter : public UMaterialExpression
{ 
public:
	TArray<FString>                                    ParamNames;                                                 // 0x00B0   (0x0010)  
	FLinearColor                                       DefaultValue;                                               // 0x00C0   (0x0010)  
	uint32_t                                           ParameterIndex;                                             // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00D4   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionExecBegin
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UMaterialExpressionExecBegin : public UMaterialExpression
{ 
public:
	FExpressionExecOutput                              Exec;                                                       // 0x00B0   (0x0008)  
};

/// Class /Script/Engine.MaterialExpressionExecEnd
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionExecEnd : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionEyeAdaptation
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionEyeAdaptation : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionEyeAdaptationInverse
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionEyeAdaptationInverse : public UMaterialExpression
{ 
public:
	FExpressionInput                                   LightValueInput;                                            // 0x00B0   (0x0028)  
	FExpressionInput                                   AlphaInput;                                                 // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionFeatureLevelSwitch
/// Size: 0x00F0 (0x0000B0 - 0x0001A0)
class UMaterialExpressionFeatureLevelSwitch : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Default;                                                    // 0x00B0   (0x0028)  
	FExpressionInput                                   Inputs;                                                     // 0x00D8   (0x00C8)  
};

/// Class /Script/Engine.MaterialExpressionFloor
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionFloor : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionFmod
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionFmod : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionFontSample
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UMaterialExpressionFontSample : public UMaterialExpression
{ 
public:
	UFont*                                             Font;                                                       // 0x00B0   (0x0008)  
	int32_t                                            FontTexturePage;                                            // 0x00B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionFontSampleParameter
/// Size: 0x0028 (0x0000C0 - 0x0000E8)
class UMaterialExpressionFontSampleParameter : public UMaterialExpressionFontSample
{ 
public:
	FName                                              ParameterName;                                              // 0x00C0   (0x0008)  
	FGuid                                              ExpressionGUID;                                             // 0x00C8   (0x0010)  
	FName                                              Group;                                                      // 0x00D8   (0x0008)  
	int32_t                                            SortPriority;                                               // 0x00E0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00E4   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionForLoop
/// Size: 0x0088 (0x0000B0 - 0x000138)
class UMaterialExpressionForLoop : public UMaterialExpression
{ 
public:
	FExpressionExecOutput                              LoopBody;                                                   // 0x00B0   (0x0008)  
	FExpressionExecOutput                              Completed;                                                  // 0x00B8   (0x0008)  
	FExpressionInput                                   StartIndex;                                                 // 0x00C0   (0x0028)  
	FExpressionInput                                   EndIndex;                                                   // 0x00E8   (0x0028)  
	FExpressionInput                                   IndexStep;                                                  // 0x0110   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionFrac
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionFrac : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionFresnel
/// Size: 0x0088 (0x0000B0 - 0x000138)
class UMaterialExpressionFresnel : public UMaterialExpression
{ 
public:
	FExpressionInput                                   ExponentIn;                                                 // 0x00B0   (0x0028)  
	float                                              Exponent;                                                   // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00DC   (0x0004)  MISSED
	FExpressionInput                                   BaseReflectFractionIn;                                      // 0x00E0   (0x0028)  
	float                                              BaseReflectFraction;                                        // 0x0108   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x010C   (0x0004)  MISSED
	FExpressionInput                                   Normal;                                                     // 0x0110   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionFunctionInput
/// Size: 0x00B0 (0x0000B0 - 0x000160)
class UMaterialExpressionFunctionInput : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Preview;                                                    // 0x00B0   (0x0028)  
	FName                                              InputName;                                                  // 0x00D8   (0x0008)  
	FString                                            Description;                                                // 0x00E0   (0x0010)  
	FGuid                                              ID;                                                         // 0x00F0   (0x0010)  
	TEnumAsByte<EFunctionInputType>                    InputType;                                                  // 0x0100   (0x0001)  
	unsigned char                                      UnknownData00_5[0xF];                                       // 0x0101   (0x000F)  MISSED
	FVector4f                                          PreviewValue;                                               // 0x0110   (0x0010)  
	bool                                               bUsePreviewValueAsDefault : 1;                              // 0x0120:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0121   (0x0003)  MISSED
	int32_t                                            SortPriority;                                               // 0x0124   (0x0004)  
	bool                                               bCompilingFunctionPreview : 1;                              // 0x0128:0 (0x0001)  
	unsigned char                                      UnknownData02_6[0x37];                                      // 0x0129   (0x0037)  MISSED
};

/// Class /Script/Engine.MaterialExpressionFunctionOutput
/// Size: 0x0060 (0x0000B0 - 0x000110)
class UMaterialExpressionFunctionOutput : public UMaterialExpression
{ 
public:
	FName                                              OutputName;                                                 // 0x00B0   (0x0008)  
	FString                                            Description;                                                // 0x00B8   (0x0010)  
	int32_t                                            SortPriority;                                               // 0x00C8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00CC   (0x0004)  MISSED
	FExpressionInput                                   A;                                                          // 0x00D0   (0x0028)  
	bool                                               bLastPreviewed : 1;                                         // 0x00F8:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x00F9   (0x0003)  MISSED
	FGuid                                              ID;                                                         // 0x00FC   (0x0010)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x010C   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionGenericConstant
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionGenericConstant : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionConstantDouble
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UMaterialExpressionConstantDouble : public UMaterialExpressionGenericConstant
{ 
public:
	double                                             Value;                                                      // 0x00B0   (0x0008)  
};

/// Class /Script/Engine.MaterialExpressionGetLocal
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UMaterialExpressionGetLocal : public UMaterialExpression
{ 
public:
	FName                                              LocalName;                                                  // 0x00B0   (0x0008)  
};

/// Class /Script/Engine.MaterialExpressionGetMaterialAttributes
/// Size: 0x0040 (0x0000B0 - 0x0000F0)
class UMaterialExpressionGetMaterialAttributes : public UMaterialExpression
{ 
public:
	FMaterialAttributesInput                           MaterialAttributes;                                         // 0x00B0   (0x0030)  
	TArray<FGuid>                                      AttributeGetTypes;                                          // 0x00E0   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionGIReplace
/// Size: 0x0078 (0x0000B0 - 0x000128)
class UMaterialExpressionGIReplace : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Default;                                                    // 0x00B0   (0x0028)  
	FExpressionInput                                   StaticIndirect;                                             // 0x00D8   (0x0028)  
	FExpressionInput                                   DynamicIndirect;                                            // 0x0100   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionHairAttributes
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UMaterialExpressionHairAttributes : public UMaterialExpression
{ 
public:
	bool                                               bUseTangentSpace : 1;                                       // 0x00B0:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00B1   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionHairColor
/// Size: 0x0078 (0x0000B0 - 0x000128)
class UMaterialExpressionHairColor : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Melanin;                                                    // 0x00B0   (0x0028)  
	FExpressionInput                                   Redness;                                                    // 0x00D8   (0x0028)  
	FExpressionInput                                   DyeColor;                                                   // 0x0100   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionIf
/// Size: 0x00D8 (0x0000B0 - 0x000188)
class UMaterialExpressionIf : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
	FExpressionInput                                   AGreaterThanB;                                              // 0x0100   (0x0028)  
	FExpressionInput                                   AEqualsB;                                                   // 0x0128   (0x0028)  
	FExpressionInput                                   ALessThanB;                                                 // 0x0150   (0x0028)  
	float                                              EqualsThreshold;                                            // 0x0178   (0x0004)  
	float                                              ConstB;                                                     // 0x017C   (0x0004)  
	float                                              ConstAEqualsB;                                              // 0x0180   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0184   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionIfThenElse
/// Size: 0x0038 (0x0000B0 - 0x0000E8)
class UMaterialExpressionIfThenElse : public UMaterialExpression
{ 
public:
	FExpressionExecOutput                              Then;                                                       // 0x00B0   (0x0008)  
	FExpressionExecOutput                              Else;                                                       // 0x00B8   (0x0008)  
	FExpressionInput                                   Condition;                                                  // 0x00C0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionInverseLinearInterpolate
/// Size: 0x0088 (0x0000B0 - 0x000138)
class UMaterialExpressionInverseLinearInterpolate : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
	FExpressionInput                                   Value;                                                      // 0x0100   (0x0028)  
	float                                              ConstA;                                                     // 0x0128   (0x0004)  
	float                                              ConstB;                                                     // 0x012C   (0x0004)  
	float                                              ConstValue;                                                 // 0x0130   (0x0004)  
	bool                                               bClampResult;                                               // 0x0134   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0135   (0x0003)  MISSED
};

/// Class /Script/Engine.MaterialExpressionIsOrthographic
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionIsOrthographic : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionLightmapUVs
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionLightmapUVs : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionLightmassReplace
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionLightmassReplace : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Realtime;                                                   // 0x00B0   (0x0028)  
	FExpressionInput                                   Lightmass;                                                  // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionLightVector
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionLightVector : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionLinearInterpolate
/// Size: 0x0088 (0x0000B0 - 0x000138)
class UMaterialExpressionLinearInterpolate : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
	FExpressionInput                                   Alpha;                                                      // 0x0100   (0x0028)  
	float                                              ConstA;                                                     // 0x0128   (0x0004)  
	float                                              ConstB;                                                     // 0x012C   (0x0004)  
	float                                              ConstAlpha;                                                 // 0x0130   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0134   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionLogarithm10
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionLogarithm10 : public UMaterialExpression
{ 
public:
	FExpressionInput                                   X;                                                          // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionLogarithm2
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionLogarithm2 : public UMaterialExpression
{ 
public:
	FExpressionInput                                   X;                                                          // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionMakeMaterialAttributes
/// Size: 0x0410 (0x0000B0 - 0x0004C0)
class UMaterialExpressionMakeMaterialAttributes : public UMaterialExpression
{ 
public:
	FExpressionInput                                   BaseColor;                                                  // 0x00B0   (0x0028)  
	FExpressionInput                                   Metallic;                                                   // 0x00D8   (0x0028)  
	FExpressionInput                                   Specular;                                                   // 0x0100   (0x0028)  
	FExpressionInput                                   Roughness;                                                  // 0x0128   (0x0028)  
	FExpressionInput                                   Anisotropy;                                                 // 0x0150   (0x0028)  
	FExpressionInput                                   EmissiveColor;                                              // 0x0178   (0x0028)  
	FExpressionInput                                   Opacity;                                                    // 0x01A0   (0x0028)  
	FExpressionInput                                   OpacityMask;                                                // 0x01C8   (0x0028)  
	FExpressionInput                                   Normal;                                                     // 0x01F0   (0x0028)  
	FExpressionInput                                   Tangent;                                                    // 0x0218   (0x0028)  
	FExpressionInput                                   WorldPositionOffset;                                        // 0x0240   (0x0028)  
	FExpressionInput                                   SubsurfaceColor;                                            // 0x0268   (0x0028)  
	FExpressionInput                                   ClearCoat;                                                  // 0x0290   (0x0028)  
	FExpressionInput                                   ClearCoatRoughness;                                         // 0x02B8   (0x0028)  
	FExpressionInput                                   AmbientOcclusion;                                           // 0x02E0   (0x0028)  
	FExpressionInput                                   Refraction;                                                 // 0x0308   (0x0028)  
	FExpressionInput                                   CustomizedUVs;                                              // 0x0330   (0x0140)  
	FExpressionInput                                   PixelDepthOffset;                                           // 0x0470   (0x0028)  
	FExpressionInput                                   ShadingModel;                                               // 0x0498   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionMapARPassthroughCameraUV
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionMapARPassthroughCameraUV : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Coordinates;                                                // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionMaterialAttributeLayers
/// Size: 0x0168 (0x0000B0 - 0x000218)
class UMaterialExpressionMaterialAttributeLayers : public UMaterialExpression
{ 
public:
	FMaterialAttributesInput                           Input;                                                      // 0x00B0   (0x0030)  
	FMaterialLayersFunctions                           DefaultLayers;                                              // 0x00E0   (0x0100)  
	TArray<UMaterialExpressionMaterialFunctionCall*>   LayerCallers;                                               // 0x01E0   (0x0010)  
	int32_t                                            NumActiveLayerCallers;                                      // 0x01F0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x01F4   (0x0004)  MISSED
	TArray<UMaterialExpressionMaterialFunctionCall*>   BlendCallers;                                               // 0x01F8   (0x0010)  
	int32_t                                            NumActiveBlendCallers;                                      // 0x0208   (0x0004)  
	bool                                               bIsLayerGraphBuilt;                                         // 0x020C   (0x0001)  
	unsigned char                                      UnknownData01_6[0xB];                                       // 0x020D   (0x000B)  MISSED
};

/// Class /Script/Engine.MaterialExpressionMaterialFunctionCall
/// Size: 0x0038 (0x0000B0 - 0x0000E8)
class UMaterialExpressionMaterialFunctionCall : public UMaterialExpression
{ 
public:
	UMaterialFunctionInterface*                        MaterialFunction;                                           // 0x00B0   (0x0008)  
	TArray<FFunctionExpressionInput>                   FunctionInputs;                                             // 0x00B8   (0x0010)  
	TArray<FFunctionExpressionOutput>                  FunctionOutputs;                                            // 0x00C8   (0x0010)  
	FMaterialParameterInfo                             FunctionParameterInfo;                                      // 0x00D8   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionMaterialLayerOutput
/// Size: 0x0000 (0x000110 - 0x000110)
class UMaterialExpressionMaterialLayerOutput : public UMaterialExpressionFunctionOutput
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionMaterialProxyReplace
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionMaterialProxyReplace : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Realtime;                                                   // 0x00B0   (0x0028)  
	FExpressionInput                                   MaterialProxy;                                              // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionMax
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UMaterialExpressionMax : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
	float                                              ConstA;                                                     // 0x0100   (0x0004)  
	float                                              ConstB;                                                     // 0x0104   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionMin
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UMaterialExpressionMin : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
	float                                              ConstA;                                                     // 0x0100   (0x0004)  
	float                                              ConstB;                                                     // 0x0104   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionMultiply
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UMaterialExpressionMultiply : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
	float                                              ConstA;                                                     // 0x0100   (0x0004)  
	float                                              ConstB;                                                     // 0x0104   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionRerouteBase
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionRerouteBase : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionNamedRerouteBase
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionNamedRerouteBase : public UMaterialExpressionRerouteBase
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionNamedRerouteDeclaration
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionNamedRerouteDeclaration : public UMaterialExpressionNamedRerouteBase
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
	FName                                              Name;                                                       // 0x00D8   (0x0008)  
	FLinearColor                                       NodeColor;                                                  // 0x00E0   (0x0010)  
	FGuid                                              VariableGuid;                                               // 0x00F0   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionNamedRerouteUsage
/// Size: 0x0018 (0x0000B0 - 0x0000C8)
class UMaterialExpressionNamedRerouteUsage : public UMaterialExpressionNamedRerouteBase
{ 
public:
	UMaterialExpressionNamedRerouteDeclaration*        Declaration;                                                // 0x00B0   (0x0008)  
	FGuid                                              DeclarationGuid;                                            // 0x00B8   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionNaniteReplace
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionNaniteReplace : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Default;                                                    // 0x00B0   (0x0028)  
	FExpressionInput                                   Nanite;                                                     // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionNoise
/// Size: 0x0078 (0x0000B0 - 0x000128)
class UMaterialExpressionNoise : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Position;                                                   // 0x00B0   (0x0028)  
	FExpressionInput                                   FilterWidth;                                                // 0x00D8   (0x0028)  
	float                                              Scale;                                                      // 0x0100   (0x0004)  
	int32_t                                            Quality;                                                    // 0x0104   (0x0004)  
	TEnumAsByte<ENoiseFunction>                        NoiseFunction;                                              // 0x0108   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0109   (0x0003)  MISSED
	bool                                               bTurbulence : 1;                                            // 0x010C:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x010D   (0x0003)  MISSED
	int32_t                                            Levels;                                                     // 0x0110   (0x0004)  
	float                                              OutputMin;                                                  // 0x0114   (0x0004)  
	float                                              OutputMax;                                                  // 0x0118   (0x0004)  
	float                                              LevelScale;                                                 // 0x011C   (0x0004)  
	bool                                               bTiling : 1;                                                // 0x0120:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x0121   (0x0003)  MISSED
	uint32_t                                           RepeatSize;                                                 // 0x0124   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionNormalize
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionNormalize : public UMaterialExpression
{ 
public:
	FExpressionInput                                   VectorInput;                                                // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionObjectBounds
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionObjectBounds : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionObjectOrientation
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionObjectOrientation : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionObjectPositionWS
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionObjectPositionWS : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionObjectRadius
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionObjectRadius : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionOneMinus
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionOneMinus : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionPanner
/// Size: 0x0088 (0x0000B0 - 0x000138)
class UMaterialExpressionPanner : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Coordinate;                                                 // 0x00B0   (0x0028)  
	FExpressionInput                                   Time;                                                       // 0x00D8   (0x0028)  
	FExpressionInput                                   Speed;                                                      // 0x0100   (0x0028)  
	float                                              SpeedX;                                                     // 0x0128   (0x0004)  
	float                                              SpeedY;                                                     // 0x012C   (0x0004)  
	uint32_t                                           ConstCoordinate;                                            // 0x0130   (0x0004)  
	bool                                               bFractionalPart;                                            // 0x0134   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0135   (0x0003)  MISSED
};

/// Class /Script/Engine.MaterialExpressionParticleColor
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionParticleColor : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionParticleDirection
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionParticleDirection : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionParticleMacroUV
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionParticleMacroUV : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionParticleMotionBlurFade
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionParticleMotionBlurFade : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionParticlePositionWS
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionParticlePositionWS : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionParticleRadius
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionParticleRadius : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionParticleRandom
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionParticleRandom : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionParticleRelativeTime
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionParticleRelativeTime : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionParticleSize
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionParticleSize : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionParticleSpeed
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionParticleSpeed : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionParticleSubUV
/// Size: 0x0008 (0x0001B8 - 0x0001C0)
class UMaterialExpressionParticleSubUV : public UMaterialExpressionTextureSample
{ 
public:
	bool                                               bBlend : 1;                                                 // 0x01B8:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x01B9   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionParticleSubUVProperties
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionParticleSubUVProperties : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionPathTracingQualitySwitch
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionPathTracingQualitySwitch : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Normal;                                                     // 0x00B0   (0x0028)  
	FExpressionInput                                   PathTraced;                                                 // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionPerInstanceCustomData
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionPerInstanceCustomData : public UMaterialExpression
{ 
public:
	FExpressionInput                                   DefaultValue;                                               // 0x00B0   (0x0028)  
	float                                              ConstDefaultValue;                                          // 0x00D8   (0x0004)  
	uint32_t                                           DataIndex;                                                  // 0x00DC   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionPerInstanceCustomData3Vector
/// Size: 0x0040 (0x0000B0 - 0x0000F0)
class UMaterialExpressionPerInstanceCustomData3Vector : public UMaterialExpression
{ 
public:
	FExpressionInput                                   DefaultValue;                                               // 0x00B0   (0x0028)  
	FLinearColor                                       ConstDefaultValue;                                          // 0x00D8   (0x0010)  
	uint32_t                                           DataIndex;                                                  // 0x00E8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00EC   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionPerInstanceFadeAmount
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionPerInstanceFadeAmount : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionPerInstanceRandom
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionPerInstanceRandom : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionPinBase
/// Size: 0x0018 (0x0000B0 - 0x0000C8)
class UMaterialExpressionPinBase : public UMaterialExpression
{ 
public:
	TArray<FCompositeReroute>                          ReroutePins;                                                // 0x00B0   (0x0010)  
	TEnumAsByte<EEdGraphPinDirection>                  PinDirection;                                               // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00C1   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionPixelDepth
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionPixelDepth : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionPixelNormalWS
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionPixelNormalWS : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionPower
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UMaterialExpressionPower : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Base;                                                       // 0x00B0   (0x0028)  
	FExpressionInput                                   Exponent;                                                   // 0x00D8   (0x0028)  
	float                                              ConstExponent;                                              // 0x0100   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0104   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionPrecomputedAOMask
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionPrecomputedAOMask : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionPreSkinnedLocalBounds
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionPreSkinnedLocalBounds : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionPreSkinnedNormal
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionPreSkinnedNormal : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionPreSkinnedPosition
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionPreSkinnedPosition : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionPreviousFrameSwitch
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionPreviousFrameSwitch : public UMaterialExpression
{ 
public:
	FExpressionInput                                   CurrentFrame;                                               // 0x00B0   (0x0028)  
	FExpressionInput                                   PreviousFrame;                                              // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionQualitySwitch
/// Size: 0x00C8 (0x0000B0 - 0x000178)
class UMaterialExpressionQualitySwitch : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Default;                                                    // 0x00B0   (0x0028)  
	FExpressionInput                                   Inputs;                                                     // 0x00D8   (0x00A0)  
};

/// Class /Script/Engine.MaterialExpressionRayTracingQualitySwitch
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionRayTracingQualitySwitch : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Normal;                                                     // 0x00B0   (0x0028)  
	FExpressionInput                                   RayTraced;                                                  // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionReflectionCapturePassSwitch
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionReflectionCapturePassSwitch : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Default;                                                    // 0x00B0   (0x0028)  
	FExpressionInput                                   Reflection;                                                 // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionReflectionVectorWS
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionReflectionVectorWS : public UMaterialExpression
{ 
public:
	FExpressionInput                                   CustomWorldNormal;                                          // 0x00B0   (0x0028)  
	bool                                               bNormalizeCustomWorldNormal : 1;                            // 0x00D8:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00D9   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionReroute
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionReroute : public UMaterialExpressionRerouteBase
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionRotateAboutAxis
/// Size: 0x00A8 (0x0000B0 - 0x000158)
class UMaterialExpressionRotateAboutAxis : public UMaterialExpression
{ 
public:
	FExpressionInput                                   NormalizedRotationAxis;                                     // 0x00B0   (0x0028)  
	FExpressionInput                                   RotationAngle;                                              // 0x00D8   (0x0028)  
	FExpressionInput                                   PivotPoint;                                                 // 0x0100   (0x0028)  
	FExpressionInput                                   Position;                                                   // 0x0128   (0x0028)  
	float                                              Period;                                                     // 0x0150   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0154   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionRotator
/// Size: 0x0060 (0x0000B0 - 0x000110)
class UMaterialExpressionRotator : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Coordinate;                                                 // 0x00B0   (0x0028)  
	FExpressionInput                                   Time;                                                       // 0x00D8   (0x0028)  
	float                                              CenterX;                                                    // 0x0100   (0x0004)  
	float                                              CenterY;                                                    // 0x0104   (0x0004)  
	float                                              Speed;                                                      // 0x0108   (0x0004)  
	uint32_t                                           ConstCoordinate;                                            // 0x010C   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionRound
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionRound : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionRuntimeVirtualTextureOutput
/// Size: 0x0118 (0x0000B0 - 0x0001C8)
class UMaterialExpressionRuntimeVirtualTextureOutput : public UMaterialExpressionCustomOutput
{ 
public:
	FExpressionInput                                   BaseColor;                                                  // 0x00B0   (0x0028)  
	FExpressionInput                                   Specular;                                                   // 0x00D8   (0x0028)  
	FExpressionInput                                   Roughness;                                                  // 0x0100   (0x0028)  
	FExpressionInput                                   Normal;                                                     // 0x0128   (0x0028)  
	FExpressionInput                                   WorldHeight;                                                // 0x0150   (0x0028)  
	FExpressionInput                                   Opacity;                                                    // 0x0178   (0x0028)  
	FExpressionInput                                   Mask;                                                       // 0x01A0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionRuntimeVirtualTextureReplace
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionRuntimeVirtualTextureReplace : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Default;                                                    // 0x00B0   (0x0028)  
	FExpressionInput                                   VirtualTextureOutput;                                       // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionRuntimeVirtualTextureSample
/// Size: 0x0088 (0x0000B0 - 0x000138)
class UMaterialExpressionRuntimeVirtualTextureSample : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Coordinates;                                                // 0x00B0   (0x0028)  
	FExpressionInput                                   WorldPosition;                                              // 0x00D8   (0x0028)  
	FExpressionInput                                   MipValue;                                                   // 0x0100   (0x0028)  
	URuntimeVirtualTexture*                            VirtualTexture;                                             // 0x0128   (0x0008)  
	ERuntimeVirtualTextureMaterialType                 MaterialType;                                               // 0x0130   (0x0001)  
	bool                                               bSinglePhysicalSpace;                                       // 0x0131   (0x0001)  
	bool                                               bAdaptive;                                                  // 0x0132   (0x0001)  
	TEnumAsByte<ERuntimeVirtualTextureMipValueMode>    MipValueMode;                                               // 0x0133   (0x0001)  
	TEnumAsByte<ERuntimeVirtualTextureTextureAddressMode> TextureAddressMode;                                      // 0x0134   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0135   (0x0003)  MISSED
};

/// Class /Script/Engine.MaterialExpressionRuntimeVirtualTextureSampleParameter
/// Size: 0x0028 (0x000138 - 0x000160)
class UMaterialExpressionRuntimeVirtualTextureSampleParameter : public UMaterialExpressionRuntimeVirtualTextureSample
{ 
public:
	FName                                              ParameterName;                                              // 0x0138   (0x0008)  
	FGuid                                              ExpressionGUID;                                             // 0x0140   (0x0010)  
	FName                                              Group;                                                      // 0x0150   (0x0008)  
	int32_t                                            SortPriority;                                               // 0x0158   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x015C   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionSamplePhysicsVectorField
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionSamplePhysicsVectorField : public UMaterialExpression
{ 
public:
	FExpressionInput                                   WorldPosition;                                              // 0x00B0   (0x0028)  
	TEnumAsByte<EFieldVectorType>                      FieldTarget;                                                // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00D9   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionSamplePhysicsScalarField
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionSamplePhysicsScalarField : public UMaterialExpression
{ 
public:
	FExpressionInput                                   WorldPosition;                                              // 0x00B0   (0x0028)  
	TEnumAsByte<EFieldScalarType>                      FieldTarget;                                                // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00D9   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionSamplePhysicsIntegerField
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionSamplePhysicsIntegerField : public UMaterialExpression
{ 
public:
	FExpressionInput                                   WorldPosition;                                              // 0x00B0   (0x0028)  
	TEnumAsByte<EFieldIntegerType>                     FieldTarget;                                                // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00D9   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionSaturate
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionSaturate : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionSceneColor
/// Size: 0x0068 (0x0000B0 - 0x000118)
class UMaterialExpressionSceneColor : public UMaterialExpression
{ 
public:
	TEnumAsByte<EMaterialSceneAttributeInputMode>      InputMode;                                                  // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00B1   (0x0007)  MISSED
	FExpressionInput                                   Input;                                                      // 0x00B8   (0x0028)  
	FExpressionInput                                   OffsetFraction;                                             // 0x00E0   (0x0028)  
	FVector2D                                          ConstInput;                                                 // 0x0108   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionSceneDepth
/// Size: 0x0068 (0x0000B0 - 0x000118)
class UMaterialExpressionSceneDepth : public UMaterialExpression
{ 
public:
	TEnumAsByte<EMaterialSceneAttributeInputMode>      InputMode;                                                  // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00B1   (0x0007)  MISSED
	FExpressionInput                                   Input;                                                      // 0x00B8   (0x0028)  
	FExpressionInput                                   Coordinates;                                                // 0x00E0   (0x0028)  
	FVector2D                                          ConstInput;                                                 // 0x0108   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionSceneDepthWithoutWater
/// Size: 0x0048 (0x0000B0 - 0x0000F8)
class UMaterialExpressionSceneDepthWithoutWater : public UMaterialExpression
{ 
public:
	TEnumAsByte<EMaterialSceneAttributeInputMode>      InputMode;                                                  // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00B1   (0x0007)  MISSED
	FExpressionInput                                   Input;                                                      // 0x00B8   (0x0028)  
	FVector2D                                          ConstInput;                                                 // 0x00E0   (0x0010)  
	float                                              FallbackDepth;                                              // 0x00F0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00F4   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionSceneTexelSize
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionSceneTexelSize : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionSceneTexture
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionSceneTexture : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Coordinates;                                                // 0x00B0   (0x0028)  
	TEnumAsByte<ESceneTextureId>                       SceneTextureId;                                             // 0x00D8   (0x0001)  
	bool                                               bFiltered;                                                  // 0x00D9   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x00DA   (0x0006)  MISSED
};

/// Class /Script/Engine.MaterialExpressionScreenPosition
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionScreenPosition : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionSetLocal
/// Size: 0x0038 (0x0000B0 - 0x0000E8)
class UMaterialExpressionSetLocal : public UMaterialExpression
{ 
public:
	FExpressionExecOutput                              Exec;                                                       // 0x00B0   (0x0008)  
	FExpressionInput                                   Value;                                                      // 0x00B8   (0x0028)  
	FName                                              LocalName;                                                  // 0x00E0   (0x0008)  
};

/// Class /Script/Engine.MaterialExpressionSetMaterialAttributes
/// Size: 0x0020 (0x0000B0 - 0x0000D0)
class UMaterialExpressionSetMaterialAttributes : public UMaterialExpression
{ 
public:
	TArray<FExpressionInput>                           Inputs;                                                     // 0x00B0   (0x0010)  
	TArray<FGuid>                                      AttributeSetTypes;                                          // 0x00C0   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionShaderStageSwitch
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionShaderStageSwitch : public UMaterialExpression
{ 
public:
	FExpressionInput                                   PixelShader;                                                // 0x00B0   (0x0028)  
	FExpressionInput                                   VertexShader;                                               // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionShadingModel
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UMaterialExpressionShadingModel : public UMaterialExpression
{ 
public:
	TEnumAsByte<EMaterialShadingModel>                 ShadingModel;                                               // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00B1   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionShadingPathSwitch
/// Size: 0x00A0 (0x0000B0 - 0x000150)
class UMaterialExpressionShadingPathSwitch : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Default;                                                    // 0x00B0   (0x0028)  
	FExpressionInput                                   Inputs;                                                     // 0x00D8   (0x0078)  
};

/// Class /Script/Engine.MaterialExpressionShadowReplace
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionShadowReplace : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Default;                                                    // 0x00B0   (0x0028)  
	FExpressionInput                                   Shadow;                                                     // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionSign
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionSign : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionSine
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionSine : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
	float                                              Period;                                                     // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00DC   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionSingleLayerWaterMaterialOutput
/// Size: 0x00A0 (0x0000B0 - 0x000150)
class UMaterialExpressionSingleLayerWaterMaterialOutput : public UMaterialExpressionCustomOutput
{ 
public:
	FExpressionInput                                   ScatteringCoefficients;                                     // 0x00B0   (0x0028)  
	FExpressionInput                                   AbsorptionCoefficients;                                     // 0x00D8   (0x0028)  
	FExpressionInput                                   PhaseG;                                                     // 0x0100   (0x0028)  
	FExpressionInput                                   ColorScaleBehindWater;                                      // 0x0128   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionSkyAtmosphereLightDirection
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UMaterialExpressionSkyAtmosphereLightDirection : public UMaterialExpression
{ 
public:
	int32_t                                            LightIndex;                                                 // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00B4   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionSkyAtmosphereLightIlluminance
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionSkyAtmosphereLightIlluminance : public UMaterialExpression
{ 
public:
	int32_t                                            LightIndex;                                                 // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00B4   (0x0004)  MISSED
	FExpressionInput                                   WorldPosition;                                              // 0x00B8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionSkyAtmosphereLightDiskLuminance
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionSkyAtmosphereLightDiskLuminance : public UMaterialExpression
{ 
public:
	int32_t                                            LightIndex;                                                 // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00B4   (0x0004)  MISSED
	FExpressionInput                                   DiskAngularDiameterOverride;                                // 0x00B8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionSkyAtmosphereAerialPerspective
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionSkyAtmosphereAerialPerspective : public UMaterialExpression
{ 
public:
	FExpressionInput                                   WorldPosition;                                              // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionSkyAtmosphereDistantLightScatteredLuminance
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionSkyAtmosphereDistantLightScatteredLuminance : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionSkyAtmosphereViewLuminance
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionSkyAtmosphereViewLuminance : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionSkyLightEnvMapSample
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionSkyLightEnvMapSample : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Direction;                                                  // 0x00B0   (0x0028)  
	FExpressionInput                                   Roughness;                                                  // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionSmoothStep
/// Size: 0x0088 (0x0000B0 - 0x000138)
class UMaterialExpressionSmoothStep : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Min;                                                        // 0x00B0   (0x0028)  
	FExpressionInput                                   Max;                                                        // 0x00D8   (0x0028)  
	FExpressionInput                                   Value;                                                      // 0x0100   (0x0028)  
	float                                              ConstMin;                                                   // 0x0128   (0x0004)  
	float                                              ConstMax;                                                   // 0x012C   (0x0004)  
	float                                              ConstValue;                                                 // 0x0130   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0134   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionSobol
/// Size: 0x0090 (0x0000B0 - 0x000140)
class UMaterialExpressionSobol : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Cell;                                                       // 0x00B0   (0x0028)  
	FExpressionInput                                   Index;                                                      // 0x00D8   (0x0028)  
	FExpressionInput                                   Seed;                                                       // 0x0100   (0x0028)  
	uint32_t                                           ConstIndex;                                                 // 0x0128   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x012C   (0x0004)  MISSED
	FVector2D                                          ConstSeed;                                                  // 0x0130   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionSpeedTree
/// Size: 0x00B0 (0x0000B0 - 0x000160)
class UMaterialExpressionSpeedTree : public UMaterialExpression
{ 
public:
	FExpressionInput                                   GeometryInput;                                              // 0x00B0   (0x0028)  
	FExpressionInput                                   WindInput;                                                  // 0x00D8   (0x0028)  
	FExpressionInput                                   LODInput;                                                   // 0x0100   (0x0028)  
	FExpressionInput                                   ExtraBendWS;                                                // 0x0128   (0x0028)  
	TEnumAsByte<ESpeedTreeGeometryType>                GeometryType;                                               // 0x0150   (0x0001)  
	TEnumAsByte<ESpeedTreeWindType>                    WindType;                                                   // 0x0151   (0x0001)  
	TEnumAsByte<ESpeedTreeLODType>                     LODType;                                                    // 0x0152   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0153   (0x0001)  MISSED
	float                                              BillboardThreshold;                                         // 0x0154   (0x0004)  
	bool                                               bAccurateWindVelocities;                                    // 0x0158   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0159   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionSphereMask
/// Size: 0x00A8 (0x0000B0 - 0x000158)
class UMaterialExpressionSphereMask : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
	FExpressionInput                                   Radius;                                                     // 0x0100   (0x0028)  
	FExpressionInput                                   Hardness;                                                   // 0x0128   (0x0028)  
	float                                              AttenuationRadius;                                          // 0x0150   (0x0004)  
	float                                              HardnessPercent;                                            // 0x0154   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionSphericalParticleOpacity
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionSphericalParticleOpacity : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Density;                                                    // 0x00B0   (0x0028)  
	float                                              ConstantDensity;                                            // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00DC   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionSquareRoot
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionSquareRoot : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStaticBool
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UMaterialExpressionStaticBool : public UMaterialExpression
{ 
public:
	bool                                               Value : 1;                                                  // 0x00B0:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00B1   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionStaticBoolParameter
/// Size: 0x0008 (0x0000D8 - 0x0000E0)
class UMaterialExpressionStaticBoolParameter : public UMaterialExpressionParameter
{ 
public:
	bool                                               DefaultValue : 1;                                           // 0x00D8:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00D9   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionStaticComponentMaskParameter
/// Size: 0x0030 (0x0000D8 - 0x000108)
class UMaterialExpressionStaticComponentMaskParameter : public UMaterialExpressionParameter
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00D8   (0x0028)  
	bool                                               DefaultR : 1;                                               // 0x0100:0 (0x0001)  
	bool                                               DefaultG : 1;                                               // 0x0100:1 (0x0001)  
	bool                                               DefaultB : 1;                                               // 0x0100:2 (0x0001)  
	bool                                               DefaultA : 1;                                               // 0x0100:3 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0101   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionStaticSwitch
/// Size: 0x0080 (0x0000B0 - 0x000130)
class UMaterialExpressionStaticSwitch : public UMaterialExpression
{ 
public:
	bool                                               DefaultValue : 1;                                           // 0x00B0:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x00B1   (0x0007)  MISSED
	FExpressionInput                                   A;                                                          // 0x00B8   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00E0   (0x0028)  
	FExpressionInput                                   Value;                                                      // 0x0108   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStaticSwitchParameter
/// Size: 0x0050 (0x0000E0 - 0x000130)
class UMaterialExpressionStaticSwitchParameter : public UMaterialExpressionStaticBoolParameter
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00E0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x0108   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStep
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UMaterialExpressionStep : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Y;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   X;                                                          // 0x00D8   (0x0028)  
	float                                              ConstY;                                                     // 0x0100   (0x0004)  
	float                                              ConstX;                                                     // 0x0104   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionStrataBSDF
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionStrataBSDF : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionStrataLegacyConversion
/// Size: 0x0348 (0x0000B0 - 0x0003F8)
class UMaterialExpressionStrataLegacyConversion : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   BaseColor;                                                  // 0x00B0   (0x0028)  
	FExpressionInput                                   Metallic;                                                   // 0x00D8   (0x0028)  
	FExpressionInput                                   Specular;                                                   // 0x0100   (0x0028)  
	FExpressionInput                                   Roughness;                                                  // 0x0128   (0x0028)  
	FExpressionInput                                   Anisotropy;                                                 // 0x0150   (0x0028)  
	FExpressionInput                                   EmissiveColor;                                              // 0x0178   (0x0028)  
	FExpressionInput                                   Normal;                                                     // 0x01A0   (0x0028)  
	FExpressionInput                                   Tangent;                                                    // 0x01C8   (0x0028)  
	FExpressionInput                                   SubsurfaceColor;                                            // 0x01F0   (0x0028)  
	FExpressionInput                                   ClearCoat;                                                  // 0x0218   (0x0028)  
	FExpressionInput                                   ClearCoatRoughness;                                         // 0x0240   (0x0028)  
	FExpressionInput                                   Opacity;                                                    // 0x0268   (0x0028)  
	FExpressionInput                                   TransmittanceColor;                                         // 0x0290   (0x0028)  
	FExpressionInput                                   WaterScatteringCoefficients;                                // 0x02B8   (0x0028)  
	FExpressionInput                                   WaterAbsorptionCoefficients;                                // 0x02E0   (0x0028)  
	FExpressionInput                                   WaterPhaseG;                                                // 0x0308   (0x0028)  
	FExpressionInput                                   ColorScaleBehindWater;                                      // 0x0330   (0x0028)  
	FExpressionInput                                   ClearCoatNormal;                                            // 0x0358   (0x0028)  
	FExpressionInput                                   CustomTangent;                                              // 0x0380   (0x0028)  
	FShadingModelMaterialInput                         ShadingModel;                                               // 0x03A8   (0x0028)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x03D0   (0x0008)  MISSED
	USubsurfaceProfile*                                SubsurfaceProfile;                                          // 0x03D8   (0x0008)  
	FStrataMaterialInfo                                ConvertedStrataMaterialInfo;                                // 0x03E0   (0x0018)  
};

/// Class /Script/Engine.MaterialExpressionStrataSlabBSDF
/// Size: 0x0330 (0x0000B0 - 0x0003E0)
class UMaterialExpressionStrataSlabBSDF : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   BaseColor;                                                  // 0x00B0   (0x0028)  
	FExpressionInput                                   EdgeColor;                                                  // 0x00D8   (0x0028)  
	FExpressionInput                                   Metallic;                                                   // 0x0100   (0x0028)  
	FExpressionInput                                   Specular;                                                   // 0x0128   (0x0028)  
	FExpressionInput                                   DiffuseAlbedo;                                              // 0x0150   (0x0028)  
	FExpressionInput                                   F0;                                                         // 0x0178   (0x0028)  
	FExpressionInput                                   F90;                                                        // 0x01A0   (0x0028)  
	FExpressionInput                                   Roughness;                                                  // 0x01C8   (0x0028)  
	FExpressionInput                                   Anisotropy;                                                 // 0x01F0   (0x0028)  
	FExpressionInput                                   Normal;                                                     // 0x0218   (0x0028)  
	FExpressionInput                                   Tangent;                                                    // 0x0240   (0x0028)  
	FExpressionInput                                   SSSMFP;                                                     // 0x0268   (0x0028)  
	FExpressionInput                                   SSSMFPScale;                                                // 0x0290   (0x0028)  
	FExpressionInput                                   SSSPhaseAnisotropy;                                         // 0x02B8   (0x0028)  
	FExpressionInput                                   EmissiveColor;                                              // 0x02E0   (0x0028)  
	FExpressionInput                                   SecondRoughness;                                            // 0x0308   (0x0028)  
	FExpressionInput                                   SecondRoughnessWeight;                                      // 0x0330   (0x0028)  
	FExpressionInput                                   Thickness;                                                  // 0x0358   (0x0028)  
	FExpressionInput                                   FuzzAmount;                                                 // 0x0380   (0x0028)  
	FExpressionInput                                   FuzzColor;                                                  // 0x03A8   (0x0028)  
	USubsurfaceProfile*                                SubsurfaceProfile;                                          // 0x03D0   (0x0008)  
	bool                                               bUseMetalness : 1;                                          // 0x03D8:0 (0x0001)  
	bool                                               bUseSSSDiffusion : 1;                                       // 0x03D8:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x03D9   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionStrataSimpleClearCoatBSDF
/// Size: 0x0140 (0x0000B0 - 0x0001F0)
class UMaterialExpressionStrataSimpleClearCoatBSDF : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   BaseColor;                                                  // 0x00B0   (0x0028)  
	FExpressionInput                                   Metallic;                                                   // 0x00D8   (0x0028)  
	FExpressionInput                                   Specular;                                                   // 0x0100   (0x0028)  
	FExpressionInput                                   Roughness;                                                  // 0x0128   (0x0028)  
	FExpressionInput                                   ClearCoatCoverage;                                          // 0x0150   (0x0028)  
	FExpressionInput                                   ClearCoatRoughness;                                         // 0x0178   (0x0028)  
	FExpressionInput                                   Normal;                                                     // 0x01A0   (0x0028)  
	FExpressionInput                                   EmissiveColor;                                              // 0x01C8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStrataVolumetricFogCloudBSDF
/// Size: 0x00A0 (0x0000B0 - 0x000150)
class UMaterialExpressionStrataVolumetricFogCloudBSDF : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   Albedo;                                                     // 0x00B0   (0x0028)  
	FExpressionInput                                   Extinction;                                                 // 0x00D8   (0x0028)  
	FExpressionInput                                   EmissiveColor;                                              // 0x0100   (0x0028)  
	FExpressionInput                                   AmbientOcclusion;                                           // 0x0128   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStrataUnlitBSDF
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionStrataUnlitBSDF : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   EmissiveColor;                                              // 0x00B0   (0x0028)  
	FExpressionInput                                   TransmittanceColor;                                         // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStrataHairBSDF
/// Size: 0x0118 (0x0000B0 - 0x0001C8)
class UMaterialExpressionStrataHairBSDF : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   BaseColor;                                                  // 0x00B0   (0x0028)  
	FExpressionInput                                   Scatter;                                                    // 0x00D8   (0x0028)  
	FExpressionInput                                   Specular;                                                   // 0x0100   (0x0028)  
	FExpressionInput                                   Roughness;                                                  // 0x0128   (0x0028)  
	FExpressionInput                                   Backlit;                                                    // 0x0150   (0x0028)  
	FExpressionInput                                   Tangent;                                                    // 0x0178   (0x0028)  
	FExpressionInput                                   EmissiveColor;                                              // 0x01A0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStrataEyeBSDF
/// Size: 0x0148 (0x0000B0 - 0x0001F8)
class UMaterialExpressionStrataEyeBSDF : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   DiffuseColor;                                               // 0x00B0   (0x0028)  
	FExpressionInput                                   Roughness;                                                  // 0x00D8   (0x0028)  
	FExpressionInput                                   CorneaNormal;                                               // 0x0100   (0x0028)  
	FExpressionInput                                   IrisNormal;                                                 // 0x0128   (0x0028)  
	FExpressionInput                                   IrisPlaneNormal;                                            // 0x0150   (0x0028)  
	FExpressionInput                                   IrisMask;                                                   // 0x0178   (0x0028)  
	FExpressionInput                                   IrisDistance;                                               // 0x01A0   (0x0028)  
	FExpressionInput                                   EmissiveColor;                                              // 0x01C8   (0x0028)  
	USubsurfaceProfile*                                SubsurfaceProfile;                                          // 0x01F0   (0x0008)  
};

/// Class /Script/Engine.MaterialExpressionStrataSingleLayerWaterBSDF
/// Size: 0x01B8 (0x0000B0 - 0x000268)
class UMaterialExpressionStrataSingleLayerWaterBSDF : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   BaseColor;                                                  // 0x00B0   (0x0028)  
	FExpressionInput                                   Metallic;                                                   // 0x00D8   (0x0028)  
	FExpressionInput                                   Specular;                                                   // 0x0100   (0x0028)  
	FExpressionInput                                   Roughness;                                                  // 0x0128   (0x0028)  
	FExpressionInput                                   Normal;                                                     // 0x0150   (0x0028)  
	FExpressionInput                                   EmissiveColor;                                              // 0x0178   (0x0028)  
	FExpressionInput                                   TopMaterialOpacity;                                         // 0x01A0   (0x0028)  
	FExpressionInput                                   WaterAlbedo;                                                // 0x01C8   (0x0028)  
	FExpressionInput                                   WaterExtinction;                                            // 0x01F0   (0x0028)  
	FExpressionInput                                   WaterPhaseG;                                                // 0x0218   (0x0028)  
	FExpressionInput                                   ColorScaleBehindWater;                                      // 0x0240   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStrataLightFunction
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionStrataLightFunction : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   Color;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStrataPostProcess
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionStrataPostProcess : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   Color;                                                      // 0x00B0   (0x0028)  
	FExpressionInput                                   Opacity;                                                    // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStrataConvertToDecal
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionStrataConvertToDecal : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   DecalMaterial;                                              // 0x00B0   (0x0028)  
	FExpressionInput                                   Coverage;                                                   // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStrataHorizontalMixing
/// Size: 0x0080 (0x0000B0 - 0x000130)
class UMaterialExpressionStrataHorizontalMixing : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   Background;                                                 // 0x00B0   (0x0028)  
	FExpressionInput                                   Foreground;                                                 // 0x00D8   (0x0028)  
	FExpressionInput                                   Mix;                                                        // 0x0100   (0x0028)  
	bool                                               bUseParameterBlending : 1;                                  // 0x0128:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0129   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionStrataVerticalLayering
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UMaterialExpressionStrataVerticalLayering : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   Top;                                                        // 0x00B0   (0x0028)  
	FExpressionInput                                   Base;                                                       // 0x00D8   (0x0028)  
	bool                                               bUseParameterBlending : 1;                                  // 0x0100:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0101   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionStrataAdd
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UMaterialExpressionStrataAdd : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
	bool                                               bUseParameterBlending : 1;                                  // 0x0100:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0101   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionStrataWeight
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionStrataWeight : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   Weight;                                                     // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStrataThinFilm
/// Size: 0x0078 (0x0000B0 - 0x000128)
class UMaterialExpressionStrataThinFilm : public UMaterialExpressionStrataBSDF
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   Thickness;                                                  // 0x00D8   (0x0028)  
	FExpressionInput                                   IOR;                                                        // 0x0100   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStrataUtilityBase
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionStrataUtilityBase : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionStrataTransmittanceToMFP
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionStrataTransmittanceToMFP : public UMaterialExpressionStrataUtilityBase
{ 
public:
	FExpressionInput                                   TransmittanceColor;                                         // 0x00B0   (0x0028)  
	FExpressionInput                                   Thickness;                                                  // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStrataMetalnessToDiffuseAlbedoF0
/// Size: 0x0078 (0x0000B0 - 0x000128)
class UMaterialExpressionStrataMetalnessToDiffuseAlbedoF0 : public UMaterialExpressionStrataUtilityBase
{ 
public:
	FExpressionInput                                   BaseColor;                                                  // 0x00B0   (0x0028)  
	FExpressionInput                                   Metallic;                                                   // 0x00D8   (0x0028)  
	FExpressionInput                                   Specular;                                                   // 0x0100   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionStrataHazinessToSecondaryRoughness
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionStrataHazinessToSecondaryRoughness : public UMaterialExpressionStrataUtilityBase
{ 
public:
	FExpressionInput                                   BaseRoughness;                                              // 0x00B0   (0x0028)  
	FExpressionInput                                   Haziness;                                                   // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionSubtract
/// Size: 0x0058 (0x0000B0 - 0x000108)
class UMaterialExpressionSubtract : public UMaterialExpression
{ 
public:
	FExpressionInput                                   A;                                                          // 0x00B0   (0x0028)  
	FExpressionInput                                   B;                                                          // 0x00D8   (0x0028)  
	float                                              ConstA;                                                     // 0x0100   (0x0004)  
	float                                              ConstB;                                                     // 0x0104   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionTangent
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionTangent : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
	float                                              Period;                                                     // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00DC   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionTangentOutput
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionTangentOutput : public UMaterialExpressionCustomOutput
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionTemporalSobol
/// Size: 0x0068 (0x0000B0 - 0x000118)
class UMaterialExpressionTemporalSobol : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Index;                                                      // 0x00B0   (0x0028)  
	FExpressionInput                                   Seed;                                                       // 0x00D8   (0x0028)  
	uint32_t                                           ConstIndex;                                                 // 0x0100   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0104   (0x0004)  MISSED
	FVector2D                                          ConstSeed;                                                  // 0x0108   (0x0010)  
};

/// Class /Script/Engine.MaterialExpressionTextureCoordinate
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UMaterialExpressionTextureCoordinate : public UMaterialExpression
{ 
public:
	int32_t                                            CoordinateIndex;                                            // 0x00B0   (0x0004)  
	float                                              UTiling;                                                    // 0x00B4   (0x0004)  
	float                                              VTiling;                                                    // 0x00B8   (0x0004)  
	bool                                               UnMirrorU : 1;                                              // 0x00BC:0 (0x0001)  
	bool                                               UnMirrorV : 1;                                              // 0x00BC:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x00BD   (0x0003)  MISSED
};

/// Class /Script/Engine.MaterialExpressionTextureObject
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UMaterialExpressionTextureObject : public UMaterialExpressionTextureBase
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionTextureObjectParameter
/// Size: 0x0000 (0x000240 - 0x000240)
class UMaterialExpressionTextureObjectParameter : public UMaterialExpressionTextureSampleParameter
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionTextureProperty
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionTextureProperty : public UMaterialExpression
{ 
public:
	FExpressionInput                                   TextureObject;                                              // 0x00B0   (0x0028)  
	TEnumAsByte<EMaterialExposedTextureProperty>       Property;                                                   // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00D9   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionTextureSampleParameter2DArray
/// Size: 0x0000 (0x000240 - 0x000240)
class UMaterialExpressionTextureSampleParameter2DArray : public UMaterialExpressionTextureSampleParameter
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionTextureSampleParameterCube
/// Size: 0x0000 (0x000240 - 0x000240)
class UMaterialExpressionTextureSampleParameterCube : public UMaterialExpressionTextureSampleParameter
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionTextureSampleParameterCubeArray
/// Size: 0x0000 (0x000240 - 0x000240)
class UMaterialExpressionTextureSampleParameterCubeArray : public UMaterialExpressionTextureSampleParameter
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionTextureSampleParameterSubUV
/// Size: 0x0008 (0x000240 - 0x000248)
class UMaterialExpressionTextureSampleParameterSubUV : public UMaterialExpressionTextureSampleParameter2D
{ 
public:
	bool                                               bBlend : 1;                                                 // 0x0240:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0241   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionTextureSampleParameterVolume
/// Size: 0x0000 (0x000240 - 0x000240)
class UMaterialExpressionTextureSampleParameterVolume : public UMaterialExpressionTextureSampleParameter
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionThinTranslucentMaterialOutput
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionThinTranslucentMaterialOutput : public UMaterialExpressionCustomOutput
{ 
public:
	FExpressionInput                                   TransmittanceColor;                                         // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionTime
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UMaterialExpressionTime : public UMaterialExpression
{ 
public:
	bool                                               bIgnorePause : 1;                                           // 0x00B0:0 (0x0001)  
	bool                                               bOverride_Period : 1;                                       // 0x00B0:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x00B1   (0x0003)  MISSED
	float                                              Period;                                                     // 0x00B4   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionTransform
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionTransform : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
	TEnumAsByte<EMaterialVectorCoordTransformSource>   TransformSourceType;                                        // 0x00D8   (0x0001)  
	TEnumAsByte<EMaterialVectorCoordTransform>         TransformType;                                              // 0x00D9   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x00DA   (0x0006)  MISSED
};

/// Class /Script/Engine.MaterialExpressionTransformPosition
/// Size: 0x0030 (0x0000B0 - 0x0000E0)
class UMaterialExpressionTransformPosition : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
	TEnumAsByte<EMaterialPositionTransformSource>      TransformSourceType;                                        // 0x00D8   (0x0001)  
	TEnumAsByte<EMaterialPositionTransformSource>      TransformType;                                              // 0x00D9   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x00DA   (0x0006)  MISSED
};

/// Class /Script/Engine.MaterialExpressionTruncate
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionTruncate : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionTwoSidedSign
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionTwoSidedSign : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionVectorNoise
/// Size: 0x0038 (0x0000B0 - 0x0000E8)
class UMaterialExpressionVectorNoise : public UMaterialExpression
{ 
public:
	FExpressionInput                                   Position;                                                   // 0x00B0   (0x0028)  
	TEnumAsByte<EVectorNoiseFunction>                  NoiseFunction;                                              // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00D9   (0x0003)  MISSED
	int32_t                                            Quality;                                                    // 0x00DC   (0x0004)  
	bool                                               bTiling : 1;                                                // 0x00E0:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x00E1   (0x0003)  MISSED
	uint32_t                                           TileSize;                                                   // 0x00E4   (0x0004)  
};

/// Class /Script/Engine.MaterialExpressionVertexColor
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionVertexColor : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionVertexInterpolator
/// Size: 0x0038 (0x0000B0 - 0x0000E8)
class UMaterialExpressionVertexInterpolator : public UMaterialExpressionCustomOutput
{ 
public:
	FExpressionInput                                   Input;                                                      // 0x00B0   (0x0028)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x00D8   (0x0010)  MISSED
};

/// Class /Script/Engine.MaterialExpressionVertexNormalWS
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionVertexNormalWS : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionVertexTangentWS
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionVertexTangentWS : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionViewProperty
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UMaterialExpressionViewProperty : public UMaterialExpression
{ 
public:
	TEnumAsByte<EMaterialExposedViewProperty>          Property;                                                   // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00B1   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialExpressionViewSize
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionViewSize : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionVirtualTextureFeatureSwitch
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UMaterialExpressionVirtualTextureFeatureSwitch : public UMaterialExpression
{ 
public:
	FExpressionInput                                   No;                                                         // 0x00B0   (0x0028)  
	FExpressionInput                                   Yes;                                                        // 0x00D8   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionVolumetricAdvancedMaterialInput
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionVolumetricAdvancedMaterialInput : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionVolumetricCloudEmptySpaceSkippingInput
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UMaterialExpressionVolumetricCloudEmptySpaceSkippingInput : public UMaterialExpression
{ 
public:
};

/// Class /Script/Engine.MaterialExpressionVolumetricAdvancedMaterialOutput
/// Size: 0x0140 (0x0000B0 - 0x0001F0)
class UMaterialExpressionVolumetricAdvancedMaterialOutput : public UMaterialExpressionCustomOutput
{ 
public:
	FExpressionInput                                   PhaseG;                                                     // 0x00B0   (0x0028)  
	FExpressionInput                                   PhaseG2;                                                    // 0x00D8   (0x0028)  
	FExpressionInput                                   PhaseBlend;                                                 // 0x0100   (0x0028)  
	FExpressionInput                                   MultiScatteringContribution;                                // 0x0128   (0x0028)  
	FExpressionInput                                   MultiScatteringOcclusion;                                   // 0x0150   (0x0028)  
	FExpressionInput                                   MultiScatteringEccentricity;                                // 0x0178   (0x0028)  
	FExpressionInput                                   ConservativeDensity;                                        // 0x01A0   (0x0028)  
	float                                              ConstPhaseG;                                                // 0x01C8   (0x0004)  
	float                                              ConstPhaseG2;                                               // 0x01CC   (0x0004)  
	float                                              ConstPhaseBlend;                                            // 0x01D0   (0x0004)  
	bool                                               PerSamplePhaseEvaluation;                                   // 0x01D4   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x01D5   (0x0003)  MISSED
	uint32_t                                           MultiScatteringApproximationOctaveCount;                    // 0x01D8   (0x0004)  
	float                                              ConstMultiScatteringContribution;                           // 0x01DC   (0x0004)  
	float                                              ConstMultiScatteringOcclusion;                              // 0x01E0   (0x0004)  
	float                                              ConstMultiScatteringEccentricity;                           // 0x01E4   (0x0004)  
	bool                                               bGroundContribution;                                        // 0x01E8   (0x0001)  
	bool                                               bGrayScaleMaterial;                                         // 0x01E9   (0x0001)  
	bool                                               bRayMarchVolumeShadow;                                      // 0x01EA   (0x0001)  
	bool                                               bClampMultiScatteringContribution;                          // 0x01EB   (0x0001)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x01EC   (0x0004)  MISSED
};

/// Class /Script/Engine.MaterialExpressionVolumetricCloudEmptySpaceSkippingOutput
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UMaterialExpressionVolumetricCloudEmptySpaceSkippingOutput : public UMaterialExpressionCustomOutput
{ 
public:
	FExpressionInput                                   ContainsMatter;                                             // 0x00B0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionWhileLoop
/// Size: 0x0038 (0x0000B0 - 0x0000E8)
class UMaterialExpressionWhileLoop : public UMaterialExpression
{ 
public:
	FExpressionExecOutput                              LoopBody;                                                   // 0x00B0   (0x0008)  
	FExpressionExecOutput                              Completed;                                                  // 0x00B8   (0x0008)  
	FExpressionInput                                   Condition;                                                  // 0x00C0   (0x0028)  
};

/// Class /Script/Engine.MaterialExpressionWorldPosition
/// Size: 0x0008 (0x0000B0 - 0x0000B8)
class UMaterialExpressionWorldPosition : public UMaterialExpression
{ 
public:
	TEnumAsByte<EWorldPositionIncludedOffsets>         WorldPositionShaderOffset;                                  // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00B1   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialFunctionInterfaceEditorOnlyData
/// Size: 0x0000 (0x000028 - 0x000028)
class UMaterialFunctionInterfaceEditorOnlyData : public UObject
{ 
public:
};

/// Class /Script/Engine.MaterialFunctionEditorOnlyData
/// Size: 0x0030 (0x000028 - 0x000058)
class UMaterialFunctionEditorOnlyData : public UMaterialFunctionInterfaceEditorOnlyData
{ 
public:
	FMaterialExpressionCollection                      ExpressionCollection;                                       // 0x0028   (0x0030)  
};

/// Class /Script/Engine.MaterialFunctionInterface
/// Size: 0x0018 (0x000028 - 0x000040)
class UMaterialFunctionInterface : public UObject
{ 
public:
	FGuid                                              StateId;                                                    // 0x0028   (0x0010)  
	EMaterialFunctionUsage                             MaterialFunctionUsage;                                      // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialFunction
/// Size: 0x0018 (0x000040 - 0x000058)
class UMaterialFunction : public UMaterialFunctionInterface
{ 
public:
	FString                                            Description;                                                // 0x0040   (0x0010)  
	bool                                               bExposeToLibrary : 1;                                       // 0x0050:0 (0x0001)  
	bool                                               bPrefixParameterNames : 1;                                  // 0x0050:1 (0x0001)  
	bool                                               bEnableExecWire : 1;                                        // 0x0050:2 (0x0001)  
	bool                                               bEnableNewHLSLGenerator : 1;                                // 0x0050:3 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0051   (0x0007)  MISSED
};

/// Class /Script/Engine.MaterialFunctionInstance
/// Size: 0x0090 (0x000040 - 0x0000D0)
class UMaterialFunctionInstance : public UMaterialFunctionInterface
{ 
public:
	UMaterialFunctionInterface*                        Parent;                                                     // 0x0040   (0x0008)  
	UMaterialFunctionInterface*                        Base;                                                       // 0x0048   (0x0008)  
	TArray<FScalarParameterValue>                      ScalarParameterValues;                                      // 0x0050   (0x0010)  
	TArray<FVectorParameterValue>                      VectorParameterValues;                                      // 0x0060   (0x0010)  
	TArray<FDoubleVectorParameterValue>                DoubleVectorParameterValues;                                // 0x0070   (0x0010)  
	TArray<FTextureParameterValue>                     TextureParameterValues;                                     // 0x0080   (0x0010)  
	TArray<FFontParameterValue>                        FontParameterValues;                                        // 0x0090   (0x0010)  
	TArray<FStaticSwitchParameter>                     StaticSwitchParameterValues;                                // 0x00A0   (0x0010)  
	TArray<FStaticComponentMaskParameter>              StaticComponentMaskParameterValues;                         // 0x00B0   (0x0010)  
	TArray<FRuntimeVirtualTextureParameterValue>       RuntimeVirtualTextureParameterValues;                       // 0x00C0   (0x0010)  
};

/// Class /Script/Engine.MaterialFunctionMaterialLayer
/// Size: 0x0000 (0x000058 - 0x000058)
class UMaterialFunctionMaterialLayer : public UMaterialFunction
{ 
public:
};

/// Class /Script/Engine.MaterialFunctionMaterialLayerInstance
/// Size: 0x0000 (0x0000D0 - 0x0000D0)
class UMaterialFunctionMaterialLayerInstance : public UMaterialFunctionInstance
{ 
public:
};

/// Class /Script/Engine.MaterialFunctionMaterialLayerBlend
/// Size: 0x0000 (0x000058 - 0x000058)
class UMaterialFunctionMaterialLayerBlend : public UMaterialFunction
{ 
public:
};

/// Class /Script/Engine.MaterialFunctionMaterialLayerBlendInstance
/// Size: 0x0000 (0x0000D0 - 0x0000D0)
class UMaterialFunctionMaterialLayerBlendInstance : public UMaterialFunctionInstance
{ 
public:
};

/// Class /Script/Engine.MaterialParameterCollection
/// Size: 0x0048 (0x000028 - 0x000070)
class UMaterialParameterCollection : public UObject
{ 
public:
	FGuid                                              StateId;                                                    // 0x0028   (0x0010)  
	TArray<FCollectionScalarParameter>                 ScalarParameters;                                           // 0x0038   (0x0010)  
	TArray<FCollectionVectorParameter>                 VectorParameters;                                           // 0x0048   (0x0010)  
	unsigned char                                      UnknownData00_6[0x18];                                      // 0x0058   (0x0018)  MISSED


	/// Functions
	// Function /Script/Engine.MaterialParameterCollection.GetVectorParameterNames
	TArray<FName> GetVectorParameterNames();                                                                                 // [0x4664480] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.MaterialParameterCollection.GetVectorParameterDefaultValue
	FLinearColor GetVectorParameterDefaultValue(FName ParameterName, bool& bParameterFound);                                 // [0x46643a0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.MaterialParameterCollection.GetScalarParameterNames
	TArray<FName> GetScalarParameterNames();                                                                                 // [0x4664320] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.MaterialParameterCollection.GetScalarParameterDefaultValue
	float GetScalarParameterDefaultValue(FName ParameterName, bool& bParameterFound);                                        // [0x4664240] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Engine.MaterialParameterCollectionInstance
/// Size: 0x00F8 (0x000028 - 0x000120)
class UMaterialParameterCollectionInstance : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	UMaterialParameterCollection*                      Collection;                                                 // 0x0030   (0x0008)  
	unsigned char                                      UnknownData01_6[0xE8];                                      // 0x0038   (0x00E8)  MISSED
};

/// Class /Script/Engine.MeshDeformer
/// Size: 0x0000 (0x000028 - 0x000028)
class UMeshDeformer : public UObject
{ 
public:
};

/// Class /Script/Engine.MeshDeformerInstanceSettings
/// Size: 0x0000 (0x000028 - 0x000028)
class UMeshDeformerInstanceSettings : public UObject
{ 
public:
};

/// Class /Script/Engine.MeshDeformerInstance
/// Size: 0x0000 (0x000028 - 0x000028)
class UMeshDeformerInstance : public UObject
{ 
public:
};

/// Class /Script/Engine.MicroTransactionBase
/// Size: 0x0030 (0x000038 - 0x000068)
class UMicroTransactionBase : public UPlatformInterfaceBase
{ 
public:
	TArray<FPurchaseInfo>                              AvailableProducts;                                          // 0x0038   (0x0010)  
	FString                                            LastError;                                                  // 0x0048   (0x0010)  
	FString                                            LastErrorSolution;                                          // 0x0058   (0x0010)  
};

/// Class /Script/Engine.MorphTarget
/// Size: 0x0018 (0x000028 - 0x000040)
class UMorphTarget : public UObject
{ 
public:
	USkeletalMesh*                                     BaseSkelMesh;                                               // 0x0028   (0x0008)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/Engine.NavAgentInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UNavAgentInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.NavAreaBase
/// Size: 0x0008 (0x000028 - 0x000030)
class UNavAreaBase : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.NavEdgeProviderInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UNavEdgeProviderInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.NavigationDataInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UNavigationDataInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.NavLinkDefinition
/// Size: 0x0028 (0x000028 - 0x000050)
class UNavLinkDefinition : public UObject
{ 
public:
	TArray<FNavigationLink>                            Links;                                                      // 0x0028   (0x0010)  
	TArray<FNavigationSegmentLink>                     SegmentLinks;                                               // 0x0038   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0048   (0x0008)  MISSED
};

/// Class /Script/Engine.NavPathObserverInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UNavPathObserverInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.NavRelevantInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UNavRelevantInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.NetworkPredictionInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UNetworkPredictionInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.ParticleEmitter
/// Size: 0x0198 (0x000028 - 0x0001C0)
class UParticleEmitter : public UObject
{ 
public:
	FName                                              EmitterName;                                                // 0x0028   (0x0008)  
	int32_t                                            SubUVDataOffset;                                            // 0x0030   (0x0004)  
	TEnumAsByte<EEmitterRenderMode>                    EmitterRenderMode;                                          // 0x0034   (0x0001)  
	EParticleSignificanceLevel                         SignificanceLevel;                                          // 0x0035   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0036   (0x0001)  MISSED
	bool                                               bUseLegacySpawningBehavior : 1;                             // 0x0037:0 (0x0001)  
	unsigned char                                      UnknownBit01 : 1;                                           // 0x0037:1 (0x0001)  MISSED
	unsigned char                                      UnknownBit02 : 1;                                           // 0x0037:2 (0x0001)  MISSED
	unsigned char                                      UnknownBit03 : 1;                                           // 0x0037:3 (0x0001)  MISSED
	bool                                               ConvertedModules : 1;                                       // 0x0037:4 (0x0001)  
	bool                                               bIsSoloing : 1;                                             // 0x0037:5 (0x0001)  
	bool                                               bCookedOut : 1;                                             // 0x0037:6 (0x0001)  
	bool                                               bDisabledLODsKeepEmitterAlive : 1;                          // 0x0037:7 (0x0001)  
	bool                                               bDisableWhenInsignficant : 1;                               // 0x0038:0 (0x0001)  
	unsigned char                                      UnknownData04_4[0x7];                                       // 0x0039   (0x0007)  MISSED
	TArray<UParticleLODLevel*>                         LODLevels;                                                  // 0x0040   (0x0010)  
	int32_t                                            PeakActiveParticles;                                        // 0x0050   (0x0004)  
	int32_t                                            InitialAllocationCount;                                     // 0x0054   (0x0004)  
	float                                              QualityLevelSpawnRateScale;                                 // 0x0058   (0x0004)  
	uint32_t                                           DetailModeBitmask;                                          // 0x005C   (0x0004)  
	unsigned char                                      UnknownData05_6[0x160];                                     // 0x0060   (0x0160)  MISSED
};

/// Class /Script/Engine.ParticleLODLevel
/// Size: 0x0090 (0x000028 - 0x0000B8)
class UParticleLODLevel : public UObject
{ 
public:
	int32_t                                            Level;                                                      // 0x0028   (0x0004)  
	bool                                               bEnabled : 1;                                               // 0x002C:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x002D   (0x0003)  MISSED
	UParticleModuleRequired*                           RequiredModule;                                             // 0x0030   (0x0008)  
	TArray<UParticleModule*>                           Modules;                                                    // 0x0038   (0x0010)  
	UParticleModuleTypeDataBase*                       TypeDataModule;                                             // 0x0048   (0x0008)  
	UParticleModuleSpawn*                              SpawnModule;                                                // 0x0050   (0x0008)  
	UParticleModuleEventGenerator*                     EventGenerator;                                             // 0x0058   (0x0008)  
	TArray<UParticleModuleSpawnBase*>                  SpawningModules;                                            // 0x0060   (0x0010)  
	TArray<UParticleModule*>                           SpawnModules;                                               // 0x0070   (0x0010)  
	TArray<UParticleModule*>                           UpdateModules;                                              // 0x0080   (0x0010)  
	TArray<UParticleModuleOrbit*>                      OrbitModules;                                               // 0x0090   (0x0010)  
	TArray<UParticleModuleEventReceiverBase*>          EventReceiverModules;                                       // 0x00A0   (0x0010)  
	bool                                               ConvertedModules : 1;                                       // 0x00B0:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x00B1   (0x0003)  MISSED
	int32_t                                            PeakActiveParticles;                                        // 0x00B4   (0x0004)  
};

/// Class /Script/Engine.ParticleSystem
/// Size: 0x0128 (0x000030 - 0x000158)
class UParticleSystem : public UFXSystemAsset
{ 
public:
	float                                              UpdateTime_FPS;                                             // 0x0030   (0x0004)  
	float                                              UpdateTime_Delta;                                           // 0x0034   (0x0004)  
	float                                              WarmupTime;                                                 // 0x0038   (0x0004)  
	float                                              WarmupTickRate;                                             // 0x003C   (0x0004)  
	TArray<UParticleEmitter*>                          Emitters;                                                   // 0x0040   (0x0010)  
	UParticleSystemComponent*                          PreviewComponent;                                           // 0x0050   (0x0008)  
	UInterpCurveEdSetup*                               CurveEdSetup;                                               // 0x0058   (0x0008)  
	float                                              LODDistanceCheckTime;                                       // 0x0060   (0x0004)  
	float                                              MacroUVRadius;                                              // 0x0064   (0x0004)  
	TArray<float>                                      LODDistances;                                               // 0x0068   (0x0010)  
	TArray<FParticleSystemLOD>                         LODSettings;                                                // 0x0078   (0x0010)  
	FBox                                               FixedRelativeBoundingBox;                                   // 0x0088   (0x0038)  
	float                                              SecondsBeforeInactive;                                      // 0x00C0   (0x0004)  
	float                                              Delay;                                                      // 0x00C4   (0x0004)  
	float                                              DelayLow;                                                   // 0x00C8   (0x0004)  
	bool                                               bOrientZAxisTowardCamera : 1;                               // 0x00CC:0 (0x0001)  
	bool                                               bUseFixedRelativeBoundingBox : 1;                           // 0x00CC:1 (0x0001)  
	bool                                               bShouldResetPeakCounts : 1;                                 // 0x00CC:2 (0x0001)  
	bool                                               bHasPhysics : 1;                                            // 0x00CC:3 (0x0001)  
	bool                                               bUseRealtimeThumbnail : 1;                                  // 0x00CC:4 (0x0001)  
	bool                                               ThumbnailImageOutOfDate : 1;                                // 0x00CC:5 (0x0001)  
	unsigned char                                      UnknownBit00 : 1;                                           // 0x00CC:6 (0x0001)  MISSED
	unsigned char                                      UnknownBit01 : 1;                                           // 0x00CC:7 (0x0001)  MISSED
	bool                                               bUseDelayRange : 1;                                         // 0x00CD:0 (0x0001)  
	bool                                               bAllowManagedTicking : 1;                                   // 0x00CD:1 (0x0001)  
	bool                                               bAutoDeactivate : 1;                                        // 0x00CD:2 (0x0001)  
	bool                                               bRegenerateLODDuplicate : 1;                                // 0x00CD:3 (0x0001)  
	TEnumAsByte<EParticleSystemUpdateMode>             SystemUpdateMode;                                           // 0x00CE   (0x0001)  
	TEnumAsByte<ParticleSystemLODMethod>               LODMethod;                                                  // 0x00CF   (0x0001)  
	EParticleSystemInsignificanceReaction              InsignificantReaction;                                      // 0x00D0   (0x0001)  
	TEnumAsByte<EParticleSystemOcclusionBoundsMethod>  OcclusionBoundsMethod;                                      // 0x00D1   (0x0001)  
	unsigned char                                      UnknownData02_5[0x1];                                       // 0x00D2   (0x0001)  MISSED
	EParticleSignificanceLevel                         MaxSignificanceLevel;                                       // 0x00D3   (0x0001)  
	uint32_t                                           MinTimeBetweenTicks;                                        // 0x00D4   (0x0004)  
	float                                              InsignificanceDelay;                                        // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x00DC   (0x0004)  MISSED
	FVector                                            MacroUVPosition;                                            // 0x00E0   (0x0018)  
	FBox                                               CustomOcclusionBounds;                                      // 0x00F8   (0x0038)  
	TArray<FLODSoloTrack>                              SoloTracking;                                               // 0x0130   (0x0010)  
	TArray<FNamedEmitterMaterial>                      NamedMaterialSlots;                                         // 0x0140   (0x0010)  
	unsigned char                                      UnknownData04_6[0x8];                                       // 0x0150   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.ParticleSystem.ContainsEmitterType
	bool ContainsEmitterType(UClass* TypeData);                                                                              // [0x4676ad0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.ParticleModule
/// Size: 0x0008 (0x000028 - 0x000030)
class UParticleModule : public UObject
{ 
public:
	bool                                               bSpawnModule : 1;                                           // 0x0028:0 (0x0001)  
	bool                                               bUpdateModule : 1;                                          // 0x0028:1 (0x0001)  
	bool                                               bFinalUpdateModule : 1;                                     // 0x0028:2 (0x0001)  
	bool                                               bUpdateForGPUEmitter : 1;                                   // 0x0028:3 (0x0001)  
	bool                                               bCurvesAsColor : 1;                                         // 0x0028:4 (0x0001)  
	bool                                               b3DDrawMode : 1;                                            // 0x0028:5 (0x0001)  
	bool                                               bSupported3DDrawMode : 1;                                   // 0x0028:6 (0x0001)  
	bool                                               bEnabled : 1;                                               // 0x0028:7 (0x0001)  
	bool                                               bEditable : 1;                                              // 0x0029:0 (0x0001)  
	bool                                               LODDuplicate : 1;                                           // 0x0029:1 (0x0001)  
	bool                                               bSupportsRandomSeed : 1;                                    // 0x0029:2 (0x0001)  
	bool                                               bRequiresLoopingNotification : 1;                           // 0x0029:3 (0x0001)  
	char                                               LODValidity;                                                // 0x002A   (0x0001)  
	unsigned char                                      UnknownData00_6[0x5];                                       // 0x002B   (0x0005)  MISSED
};

/// Class /Script/Engine.ParticleModuleAccelerationBase
/// Size: 0x0008 (0x000030 - 0x000038)
class UParticleModuleAccelerationBase : public UParticleModule
{ 
public:
	bool                                               bAlwaysInWorldSpace : 1;                                    // 0x0030:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleAcceleration
/// Size: 0x0068 (0x000038 - 0x0000A0)
class UParticleModuleAcceleration : public UParticleModuleAccelerationBase
{ 
public:
	FRawDistributionVector                             Acceleration;                                               // 0x0038   (0x0060)  
	bool                                               bApplyOwnerScale : 1;                                       // 0x0098:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0099   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleAccelerationConstant
/// Size: 0x0018 (0x000038 - 0x000050)
class UParticleModuleAccelerationConstant : public UParticleModuleAccelerationBase
{ 
public:
	FVector                                            Acceleration;                                               // 0x0038   (0x0018)  
};

/// Class /Script/Engine.ParticleModuleAccelerationDrag
/// Size: 0x0038 (0x000038 - 0x000070)
class UParticleModuleAccelerationDrag : public UParticleModuleAccelerationBase
{ 
public:
	UDistributionFloat*                                DragCoefficient;                                            // 0x0038   (0x0008)  
	FRawDistributionFloat                              DragCoefficientRaw;                                         // 0x0040   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleAccelerationDragScaleOverLife
/// Size: 0x0038 (0x000038 - 0x000070)
class UParticleModuleAccelerationDragScaleOverLife : public UParticleModuleAccelerationBase
{ 
public:
	UDistributionFloat*                                DragScale;                                                  // 0x0038   (0x0008)  
	FRawDistributionFloat                              DragScaleRaw;                                               // 0x0040   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleAccelerationOverLifetime
/// Size: 0x0060 (0x000038 - 0x000098)
class UParticleModuleAccelerationOverLifetime : public UParticleModuleAccelerationBase
{ 
public:
	FRawDistributionVector                             AccelOverLife;                                              // 0x0038   (0x0060)  
};

/// Class /Script/Engine.ParticleModuleAttractorBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleAttractorBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleAttractorLine
/// Size: 0x0090 (0x000030 - 0x0000C0)
class UParticleModuleAttractorLine : public UParticleModuleAttractorBase
{ 
public:
	FVector                                            EndPoint0;                                                  // 0x0030   (0x0018)  
	FVector                                            EndPoint1;                                                  // 0x0048   (0x0018)  
	FRawDistributionFloat                              Range;                                                      // 0x0060   (0x0030)  
	FRawDistributionFloat                              Strength;                                                   // 0x0090   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleAttractorParticle
/// Size: 0x0080 (0x000030 - 0x0000B0)
class UParticleModuleAttractorParticle : public UParticleModuleAttractorBase
{ 
public:
	FName                                              EmitterName;                                                // 0x0030   (0x0008)  
	FRawDistributionFloat                              Range;                                                      // 0x0038   (0x0030)  
	bool                                               bStrengthByDistance : 1;                                    // 0x0068:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0069   (0x0007)  MISSED
	FRawDistributionFloat                              Strength;                                                   // 0x0070   (0x0030)  
	bool                                               bAffectBaseVelocity : 1;                                    // 0x00A0:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x00A1   (0x0003)  MISSED
	TEnumAsByte<EAttractorParticleSelectionMethod>     SelectionMethod;                                            // 0x00A4   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x00A5   (0x0003)  MISSED
	bool                                               bRenewSource : 1;                                           // 0x00A8:0 (0x0001)  
	bool                                               bInheritSourceVel : 1;                                      // 0x00A8:1 (0x0001)  
	unsigned char                                      UnknownData03_4[0x3];                                       // 0x00A9   (0x0003)  MISSED
	int32_t                                            LastSelIndex;                                               // 0x00AC   (0x0004)  
};

/// Class /Script/Engine.ParticleModuleAttractorPoint
/// Size: 0x00C8 (0x000030 - 0x0000F8)
class UParticleModuleAttractorPoint : public UParticleModuleAttractorBase
{ 
public:
	FRawDistributionVector                             Position;                                                   // 0x0030   (0x0060)  
	FRawDistributionFloat                              Range;                                                      // 0x0090   (0x0030)  
	FRawDistributionFloat                              Strength;                                                   // 0x00C0   (0x0030)  
	bool                                               StrengthByDistance : 1;                                     // 0x00F0:0 (0x0001)  
	bool                                               bAffectBaseVelocity : 1;                                    // 0x00F0:1 (0x0001)  
	bool                                               bOverrideVelocity : 1;                                      // 0x00F0:2 (0x0001)  
	bool                                               bUseWorldSpacePosition : 1;                                 // 0x00F0:3 (0x0001)  
	bool                                               Positive_X : 1;                                             // 0x00F0:4 (0x0001)  
	bool                                               Positive_Y : 1;                                             // 0x00F0:5 (0x0001)  
	bool                                               Positive_Z : 1;                                             // 0x00F0:6 (0x0001)  
	bool                                               Negative_X : 1;                                             // 0x00F0:7 (0x0001)  
	bool                                               Negative_Y : 1;                                             // 0x00F1:0 (0x0001)  
	bool                                               Negative_Z : 1;                                             // 0x00F1:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x00F2   (0x0006)  MISSED
};

/// Class /Script/Engine.ParticleModuleAttractorPointGravity
/// Size: 0x0058 (0x000030 - 0x000088)
class UParticleModuleAttractorPointGravity : public UParticleModuleAttractorBase
{ 
public:
	FVector                                            Position;                                                   // 0x0030   (0x0018)  
	float                                              Radius;                                                     // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x004C   (0x0004)  MISSED
	UDistributionFloat*                                Strength;                                                   // 0x0050   (0x0008)  
	FRawDistributionFloat                              StrengthRaw;                                                // 0x0058   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleBeamBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleBeamBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleBeamModifier
/// Size: 0x0108 (0x000030 - 0x000138)
class UParticleModuleBeamModifier : public UParticleModuleBeamBase
{ 
public:
	TEnumAsByte<BeamModifierType>                      ModifierType;                                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	FBeamModifierOptions                               PositionOptions;                                            // 0x0034   (0x0004)  
	FRawDistributionVector                             Position;                                                   // 0x0038   (0x0060)  
	FBeamModifierOptions                               TangentOptions;                                             // 0x0098   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x009C   (0x0004)  MISSED
	FRawDistributionVector                             Tangent;                                                    // 0x00A0   (0x0060)  
	bool                                               bAbsoluteTangent : 1;                                       // 0x0100:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x0101   (0x0003)  MISSED
	FBeamModifierOptions                               StrengthOptions;                                            // 0x0104   (0x0004)  
	FRawDistributionFloat                              Strength;                                                   // 0x0108   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleBeamNoise
/// Size: 0x0190 (0x000030 - 0x0001C0)
class UParticleModuleBeamNoise : public UParticleModuleBeamBase
{ 
public:
	bool                                               bLowFreq_Enabled : 1;                                       // 0x0030:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0031   (0x0003)  MISSED
	int32_t                                            Frequency;                                                  // 0x0034   (0x0004)  
	int32_t                                            Frequency_LowRange;                                         // 0x0038   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	FRawDistributionVector                             NoiseRange;                                                 // 0x0040   (0x0060)  
	FRawDistributionFloat                              NoiseRangeScale;                                            // 0x00A0   (0x0030)  
	bool                                               bNRScaleEmitterTime : 1;                                    // 0x00D0:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x7];                                       // 0x00D1   (0x0007)  MISSED
	FRawDistributionVector                             NoiseSpeed;                                                 // 0x00D8   (0x0060)  
	bool                                               bSmooth : 1;                                                // 0x0138:0 (0x0001)  
	unsigned char                                      UnknownData03_4[0x3];                                       // 0x0139   (0x0003)  MISSED
	float                                              NoiseLockRadius;                                            // 0x013C   (0x0004)  
	bool                                               bNoiseLock : 1;                                             // 0x0140:0 (0x0001)  
	bool                                               bOscillate : 1;                                             // 0x0140:1 (0x0001)  
	unsigned char                                      UnknownData04_4[0x3];                                       // 0x0141   (0x0003)  MISSED
	float                                              NoiseLockTime;                                              // 0x0144   (0x0004)  
	float                                              NoiseTension;                                               // 0x0148   (0x0004)  
	bool                                               bUseNoiseTangents : 1;                                      // 0x014C:0 (0x0001)  
	unsigned char                                      UnknownData05_4[0x3];                                       // 0x014D   (0x0003)  MISSED
	FRawDistributionFloat                              NoiseTangentStrength;                                       // 0x0150   (0x0030)  
	int32_t                                            NoiseTessellation;                                          // 0x0180   (0x0004)  
	bool                                               bTargetNoise : 1;                                           // 0x0184:0 (0x0001)  
	unsigned char                                      UnknownData06_4[0x3];                                       // 0x0185   (0x0003)  MISSED
	float                                              FrequencyDistance;                                          // 0x0188   (0x0004)  
	bool                                               bApplyNoiseScale : 1;                                       // 0x018C:0 (0x0001)  
	unsigned char                                      UnknownData07_4[0x3];                                       // 0x018D   (0x0003)  MISSED
	FRawDistributionFloat                              NoiseScale;                                                 // 0x0190   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleBeamSource
/// Size: 0x0118 (0x000030 - 0x000148)
class UParticleModuleBeamSource : public UParticleModuleBeamBase
{ 
public:
	TEnumAsByte<Beam2SourceTargetMethod>               SourceMethod;                                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	FName                                              SourceName;                                                 // 0x0034   (0x0008)  
	bool                                               bSourceAbsolute : 1;                                        // 0x003C:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x003D   (0x0003)  MISSED
	FRawDistributionVector                             Source;                                                     // 0x0040   (0x0060)  
	bool                                               bLockSource : 1;                                            // 0x00A0:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x00A1   (0x0003)  MISSED
	TEnumAsByte<Beam2SourceTargetTangentMethod>        SourceTangentMethod;                                        // 0x00A4   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x00A5   (0x0003)  MISSED
	FRawDistributionVector                             SourceTangent;                                              // 0x00A8   (0x0060)  
	bool                                               bLockSourceTangent : 1;                                     // 0x0108:0 (0x0001)  
	unsigned char                                      UnknownData04_4[0x7];                                       // 0x0109   (0x0007)  MISSED
	FRawDistributionFloat                              SourceStrength;                                             // 0x0110   (0x0030)  
	bool                                               bLockSourceStength : 1;                                     // 0x0140:0 (0x0001)  
	unsigned char                                      UnknownData05_6[0x7];                                       // 0x0141   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleBeamTarget
/// Size: 0x0120 (0x000030 - 0x000150)
class UParticleModuleBeamTarget : public UParticleModuleBeamBase
{ 
public:
	TEnumAsByte<Beam2SourceTargetMethod>               TargetMethod;                                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	FName                                              TargetName;                                                 // 0x0034   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	FRawDistributionVector                             Target;                                                     // 0x0040   (0x0060)  
	bool                                               bTargetAbsolute : 1;                                        // 0x00A0:0 (0x0001)  
	bool                                               bLockTarget : 1;                                            // 0x00A0:1 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x00A1   (0x0003)  MISSED
	TEnumAsByte<Beam2SourceTargetTangentMethod>        TargetTangentMethod;                                        // 0x00A4   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x00A5   (0x0003)  MISSED
	FRawDistributionVector                             TargetTangent;                                              // 0x00A8   (0x0060)  
	bool                                               bLockTargetTangent : 1;                                     // 0x0108:0 (0x0001)  
	unsigned char                                      UnknownData04_4[0x7];                                       // 0x0109   (0x0007)  MISSED
	FRawDistributionFloat                              TargetStrength;                                             // 0x0110   (0x0030)  
	bool                                               bLockTargetStength : 1;                                     // 0x0140:0 (0x0001)  
	unsigned char                                      UnknownData05_4[0x3];                                       // 0x0141   (0x0003)  MISSED
	float                                              LockRadius;                                                 // 0x0144   (0x0004)  
	unsigned char                                      UnknownData06_6[0x8];                                       // 0x0148   (0x0008)  MISSED
};

/// Class /Script/Engine.ParticleModuleCameraBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleCameraBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleCameraOffset
/// Size: 0x0038 (0x000030 - 0x000068)
class UParticleModuleCameraOffset : public UParticleModuleCameraBase
{ 
public:
	FRawDistributionFloat                              CameraOffset;                                               // 0x0030   (0x0030)  
	bool                                               bSpawnTimeOnly : 1;                                         // 0x0060:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0061   (0x0003)  MISSED
	TEnumAsByte<EParticleCameraOffsetUpdateMethod>     UpdateMethod;                                               // 0x0064   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0065   (0x0003)  MISSED
};

/// Class /Script/Engine.ParticleModuleCollisionBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleCollisionBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleCollision
/// Size: 0x0190 (0x000030 - 0x0001C0)
class UParticleModuleCollision : public UParticleModuleCollisionBase
{ 
public:
	FRawDistributionVector                             DampingFactor;                                              // 0x0030   (0x0060)  
	FRawDistributionVector                             DampingFactorRotation;                                      // 0x0090   (0x0060)  
	FRawDistributionFloat                              MaxCollisions;                                              // 0x00F0   (0x0030)  
	TEnumAsByte<EParticleCollisionComplete>            CollisionCompletionOption;                                  // 0x0120   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0121   (0x0007)  MISSED
	TArray<TEnumAsByte>                                CollisionTypes;                                             // 0x0128   (0x0010)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0138   (0x0008)  MISSED
	bool                                               bApplyPhysics : 1;                                          // 0x0140:0 (0x0001)  
	bool                                               bIgnoreTriggerVolumes : 1;                                  // 0x0140:1 (0x0001)  
	unsigned char                                      UnknownData02_4[0x7];                                       // 0x0141   (0x0007)  MISSED
	FRawDistributionFloat                              ParticleMass;                                               // 0x0148   (0x0030)  
	float                                              DirScalar;                                                  // 0x0178   (0x0004)  
	bool                                               bPawnsDoNotDecrementCount : 1;                              // 0x017C:0 (0x0001)  
	bool                                               bOnlyVerticalNormalsDecrementCount : 1;                     // 0x017C:1 (0x0001)  
	unsigned char                                      UnknownData03_4[0x3];                                       // 0x017D   (0x0003)  MISSED
	float                                              VerticalFudgeFactor;                                        // 0x0180   (0x0004)  
	unsigned char                                      UnknownData04_5[0x4];                                       // 0x0184   (0x0004)  MISSED
	FRawDistributionFloat                              DelayAmount;                                                // 0x0188   (0x0030)  
	bool                                               bDropDetail : 1;                                            // 0x01B8:0 (0x0001)  
	bool                                               bCollideOnlyIfVisible : 1;                                  // 0x01B8:1 (0x0001)  
	bool                                               bIgnoreSourceActor : 1;                                     // 0x01B8:2 (0x0001)  
	unsigned char                                      UnknownData05_4[0x3];                                       // 0x01B9   (0x0003)  MISSED
	float                                              MaxCollisionDistance;                                       // 0x01BC   (0x0004)  
};

/// Class /Script/Engine.ParticleModuleCollisionGPU
/// Size: 0x0078 (0x000030 - 0x0000A8)
class UParticleModuleCollisionGPU : public UParticleModuleCollisionBase
{ 
public:
	FRawDistributionFloat                              Resilience;                                                 // 0x0030   (0x0030)  
	FRawDistributionFloat                              ResilienceScaleOverLife;                                    // 0x0060   (0x0030)  
	float                                              Friction;                                                   // 0x0090   (0x0004)  
	float                                              RandomSpread;                                               // 0x0094   (0x0004)  
	float                                              RandomDistribution;                                         // 0x0098   (0x0004)  
	float                                              RadiusScale;                                                // 0x009C   (0x0004)  
	float                                              RadiusBias;                                                 // 0x00A0   (0x0004)  
	TEnumAsByte<EParticleCollisionResponse>            Response;                                                   // 0x00A4   (0x0001)  
	TEnumAsByte<EParticleCollisionMode>                CollisionMode;                                              // 0x00A5   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x00A6   (0x0002)  MISSED
};

/// Class /Script/Engine.ParticleModuleColorBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleColorBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleColor
/// Size: 0x0098 (0x000030 - 0x0000C8)
class UParticleModuleColor : public UParticleModuleColorBase
{ 
public:
	FRawDistributionVector                             StartColor;                                                 // 0x0030   (0x0060)  
	FRawDistributionFloat                              StartAlpha;                                                 // 0x0090   (0x0030)  
	bool                                               bClampAlpha : 1;                                            // 0x00C0:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00C1   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleColorOverLife
/// Size: 0x0098 (0x000030 - 0x0000C8)
class UParticleModuleColorOverLife : public UParticleModuleColorBase
{ 
public:
	FRawDistributionVector                             ColorOverLife;                                              // 0x0030   (0x0060)  
	FRawDistributionFloat                              AlphaOverLife;                                              // 0x0090   (0x0030)  
	bool                                               bClampAlpha : 1;                                            // 0x00C0:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00C1   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleColorScaleOverLife
/// Size: 0x0098 (0x000030 - 0x0000C8)
class UParticleModuleColorScaleOverLife : public UParticleModuleColorBase
{ 
public:
	FRawDistributionVector                             ColorScaleOverLife;                                         // 0x0030   (0x0060)  
	FRawDistributionFloat                              AlphaScaleOverLife;                                         // 0x0090   (0x0030)  
	bool                                               bEmitterTime : 1;                                           // 0x00C0:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00C1   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleColor_Seeded
/// Size: 0x0020 (0x0000C8 - 0x0000E8)
class UParticleModuleColor_Seeded : public UParticleModuleColor
{ 
public:
	FParticleRandomSeedInfo                            RandomSeedInfo;                                             // 0x00C8   (0x0020)  
};

/// Class /Script/Engine.ParticleModuleEventBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleEventBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleEventGenerator
/// Size: 0x0010 (0x000030 - 0x000040)
class UParticleModuleEventGenerator : public UParticleModuleEventBase
{ 
public:
	TArray<FParticleEvent_GenerateInfo>                Events;                                                     // 0x0030   (0x0010)  
};

/// Class /Script/Engine.ParticleModuleEventReceiverBase
/// Size: 0x0010 (0x000030 - 0x000040)
class UParticleModuleEventReceiverBase : public UParticleModuleEventBase
{ 
public:
	TEnumAsByte<EParticleEventType>                    EventGeneratorType;                                         // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	FName                                              EventName;                                                  // 0x0034   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Class /Script/Engine.ParticleModuleEventReceiverKillParticles
/// Size: 0x0008 (0x000040 - 0x000048)
class UParticleModuleEventReceiverKillParticles : public UParticleModuleEventReceiverBase
{ 
public:
	bool                                               bStopSpawning : 1;                                          // 0x0040:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0041   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleEventReceiverSpawn
/// Size: 0x00B0 (0x000040 - 0x0000F0)
class UParticleModuleEventReceiverSpawn : public UParticleModuleEventReceiverBase
{ 
public:
	FRawDistributionFloat                              SpawnCount;                                                 // 0x0040   (0x0030)  
	bool                                               bUseParticleTime : 1;                                       // 0x0070:0 (0x0001)  
	bool                                               bUsePSysLocation : 1;                                       // 0x0070:1 (0x0001)  
	bool                                               bInheritVelocity : 1;                                       // 0x0070:2 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0071   (0x0007)  MISSED
	FRawDistributionVector                             InheritVelocityScale;                                       // 0x0078   (0x0060)  
	TArray<UPhysicalMaterial*>                         PhysicalMaterials;                                          // 0x00D8   (0x0010)  
	bool                                               bBanPhysicalMaterials : 1;                                  // 0x00E8:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x00E9   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleEventSendToGame
/// Size: 0x0000 (0x000028 - 0x000028)
class UParticleModuleEventSendToGame : public UObject
{ 
public:
};

/// Class /Script/Engine.ParticleModuleKillBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleKillBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleKillBox
/// Size: 0x00C8 (0x000030 - 0x0000F8)
class UParticleModuleKillBox : public UParticleModuleKillBase
{ 
public:
	FRawDistributionVector                             LowerLeftCorner;                                            // 0x0030   (0x0060)  
	FRawDistributionVector                             UpperRightCorner;                                           // 0x0090   (0x0060)  
	bool                                               bAbsolute : 1;                                              // 0x00F0:0 (0x0001)  
	bool                                               bKillInside : 1;                                            // 0x00F0:1 (0x0001)  
	bool                                               bAxisAlignedAndFixedSize : 1;                               // 0x00F0:2 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00F1   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleKillHeight
/// Size: 0x0038 (0x000030 - 0x000068)
class UParticleModuleKillHeight : public UParticleModuleKillBase
{ 
public:
	FRawDistributionFloat                              Height;                                                     // 0x0030   (0x0030)  
	bool                                               bAbsolute : 1;                                              // 0x0060:0 (0x0001)  
	bool                                               bFloor : 1;                                                 // 0x0060:1 (0x0001)  
	bool                                               bApplyPSysScale : 1;                                        // 0x0060:2 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0061   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleLifetimeBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleLifetimeBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleLifetime
/// Size: 0x0030 (0x000030 - 0x000060)
class UParticleModuleLifetime : public UParticleModuleLifetimeBase
{ 
public:
	FRawDistributionFloat                              LifeTime;                                                   // 0x0030   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleLifetime_Seeded
/// Size: 0x0020 (0x000060 - 0x000080)
class UParticleModuleLifetime_Seeded : public UParticleModuleLifetime
{ 
public:
	FParticleRandomSeedInfo                            RandomSeedInfo;                                             // 0x0060   (0x0020)  
};

/// Class /Script/Engine.ParticleModuleLightBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleLightBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleLight
/// Size: 0x0110 (0x000030 - 0x000140)
class UParticleModuleLight : public UParticleModuleLightBase
{ 
public:
	bool                                               bUseInverseSquaredFalloff;                                  // 0x0030   (0x0001)  
	bool                                               bAffectsTranslucency;                                       // 0x0031   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0032   (0x0002)  MISSED
	bool                                               bOverrideInverseExposureBlend : 1;                          // 0x0034:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0035   (0x0003)  MISSED
	bool                                               bPreviewLightRadius;                                        // 0x0038   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0039   (0x0003)  MISSED
	float                                              SpawnFraction;                                              // 0x003C   (0x0004)  
	FRawDistributionVector                             ColorScaleOverLife;                                         // 0x0040   (0x0060)  
	FRawDistributionFloat                              BrightnessOverLife;                                         // 0x00A0   (0x0030)  
	FRawDistributionFloat                              RadiusScale;                                                // 0x00D0   (0x0030)  
	FRawDistributionFloat                              LightExponent;                                              // 0x0100   (0x0030)  
	float                                              InverseExposureBlend;                                       // 0x0130   (0x0004)  
	FLightingChannels                                  LightingChannels;                                           // 0x0134   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x0135   (0x0003)  MISSED
	float                                              VolumetricScatteringIntensity;                              // 0x0138   (0x0004)  
	bool                                               bHighQualityLights;                                         // 0x013C   (0x0001)  
	bool                                               bShadowCastingLights;                                       // 0x013D   (0x0001)  
	unsigned char                                      UnknownData04_6[0x2];                                       // 0x013E   (0x0002)  MISSED
};

/// Class /Script/Engine.ParticleModuleLight_Seeded
/// Size: 0x0020 (0x000140 - 0x000160)
class UParticleModuleLight_Seeded : public UParticleModuleLight
{ 
public:
	FParticleRandomSeedInfo                            RandomSeedInfo;                                             // 0x0140   (0x0020)  
};

/// Class /Script/Engine.ParticleModuleLocationBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleLocationBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleLocation
/// Size: 0x0068 (0x000030 - 0x000098)
class UParticleModuleLocation : public UParticleModuleLocationBase
{ 
public:
	FRawDistributionVector                             StartLocation;                                              // 0x0030   (0x0060)  
	float                                              DistributeOverNPoints;                                      // 0x0090   (0x0004)  
	float                                              DistributeThreshold;                                        // 0x0094   (0x0004)  
};

/// Class /Script/Engine.ParticleModuleLocationBoneSocket
/// Size: 0x0050 (0x000030 - 0x000080)
class UParticleModuleLocationBoneSocket : public UParticleModuleLocationBase
{ 
public:
	TEnumAsByte<ELocationBoneSocketSource>             SourceType;                                                 // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	FVector                                            UniversalOffset;                                            // 0x0038   (0x0018)  
	TArray<FLocationBoneSocketInfo>                    SourceLocations;                                            // 0x0050   (0x0010)  
	TEnumAsByte<ELocationBoneSocketSelectionMethod>    SelectionMethod;                                            // 0x0060   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0061   (0x0003)  MISSED
	bool                                               bUpdatePositionEachFrame : 1;                               // 0x0064:0 (0x0001)  
	bool                                               bOrientMeshEmitters : 1;                                    // 0x0064:1 (0x0001)  
	bool                                               bInheritBoneVelocity : 1;                                   // 0x0064:2 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x0065   (0x0003)  MISSED
	float                                              InheritVelocityScale;                                       // 0x0068   (0x0004)  
	FName                                              SkelMeshActorParamName;                                     // 0x006C   (0x0008)  
	int32_t                                            NumPreSelectedIndices;                                      // 0x0074   (0x0004)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x0078   (0x0008)  MISSED
};

/// Class /Script/Engine.ParticleModuleLocationDirect
/// Size: 0x0180 (0x000030 - 0x0001B0)
class UParticleModuleLocationDirect : public UParticleModuleLocationBase
{ 
public:
	FRawDistributionVector                             Location;                                                   // 0x0030   (0x0060)  
	FRawDistributionVector                             LocationOffset;                                             // 0x0090   (0x0060)  
	FRawDistributionVector                             ScaleFactor;                                                // 0x00F0   (0x0060)  
	FRawDistributionVector                             Direction;                                                  // 0x0150   (0x0060)  
};

/// Class /Script/Engine.ParticleModuleLocationEmitter
/// Size: 0x0020 (0x000030 - 0x000050)
class UParticleModuleLocationEmitter : public UParticleModuleLocationBase
{ 
public:
	FName                                              EmitterName;                                                // 0x0030   (0x0008)  
	TEnumAsByte<ELocationEmitterSelectionMethod>       SelectionMethod;                                            // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0039   (0x0003)  MISSED
	bool                                               InheritSourceVelocity : 1;                                  // 0x003C:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x003D   (0x0003)  MISSED
	float                                              InheritSourceVelocityScale;                                 // 0x0040   (0x0004)  
	bool                                               bInheritSourceRotation : 1;                                 // 0x0044:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x0045   (0x0003)  MISSED
	float                                              InheritSourceRotationScale;                                 // 0x0048   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Class /Script/Engine.ParticleModuleLocationEmitterDirect
/// Size: 0x0008 (0x000030 - 0x000038)
class UParticleModuleLocationEmitterDirect : public UParticleModuleLocationBase
{ 
public:
	FName                                              EmitterName;                                                // 0x0030   (0x0008)  
};

/// Class /Script/Engine.ParticleModuleLocationPrimitiveBase
/// Size: 0x0098 (0x000030 - 0x0000C8)
class UParticleModuleLocationPrimitiveBase : public UParticleModuleLocationBase
{ 
public:
	bool                                               Positive_X : 1;                                             // 0x0030:0 (0x0001)  
	bool                                               Positive_Y : 1;                                             // 0x0030:1 (0x0001)  
	bool                                               Positive_Z : 1;                                             // 0x0030:2 (0x0001)  
	bool                                               Negative_X : 1;                                             // 0x0030:3 (0x0001)  
	bool                                               Negative_Y : 1;                                             // 0x0030:4 (0x0001)  
	bool                                               Negative_Z : 1;                                             // 0x0030:5 (0x0001)  
	bool                                               SurfaceOnly : 1;                                            // 0x0030:6 (0x0001)  
	bool                                               Velocity : 1;                                               // 0x0030:7 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0031   (0x0007)  MISSED
	FRawDistributionFloat                              VelocityScale;                                              // 0x0038   (0x0030)  
	FRawDistributionVector                             StartLocation;                                              // 0x0068   (0x0060)  
};

/// Class /Script/Engine.ParticleModuleLocationPrimitiveCylinder
/// Size: 0x0070 (0x0000C8 - 0x000138)
class UParticleModuleLocationPrimitiveCylinder : public UParticleModuleLocationPrimitiveBase
{ 
public:
	bool                                               RadialVelocity : 1;                                         // 0x00C8:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x00C9   (0x0007)  MISSED
	FRawDistributionFloat                              StartRadius;                                                // 0x00D0   (0x0030)  
	FRawDistributionFloat                              StartHeight;                                                // 0x0100   (0x0030)  
	TEnumAsByte<CylinderHeightAxis>                    HeightAxis;                                                 // 0x0130   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0131   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleLocationPrimitiveCylinder_Seeded
/// Size: 0x0020 (0x000138 - 0x000158)
class UParticleModuleLocationPrimitiveCylinder_Seeded : public UParticleModuleLocationPrimitiveCylinder
{ 
public:
	FParticleRandomSeedInfo                            RandomSeedInfo;                                             // 0x0138   (0x0020)  
};

/// Class /Script/Engine.ParticleModuleLocationPrimitiveSphere
/// Size: 0x0030 (0x0000C8 - 0x0000F8)
class UParticleModuleLocationPrimitiveSphere : public UParticleModuleLocationPrimitiveBase
{ 
public:
	FRawDistributionFloat                              StartRadius;                                                // 0x00C8   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleLocationPrimitiveSphere_Seeded
/// Size: 0x0020 (0x0000F8 - 0x000118)
class UParticleModuleLocationPrimitiveSphere_Seeded : public UParticleModuleLocationPrimitiveSphere
{ 
public:
	FParticleRandomSeedInfo                            RandomSeedInfo;                                             // 0x00F8   (0x0020)  
};

/// Class /Script/Engine.ParticleModuleLocationPrimitiveTriangle
/// Size: 0x00F0 (0x000030 - 0x000120)
class UParticleModuleLocationPrimitiveTriangle : public UParticleModuleLocationBase
{ 
public:
	FRawDistributionVector                             StartOffset;                                                // 0x0030   (0x0060)  
	FRawDistributionFloat                              Height;                                                     // 0x0090   (0x0030)  
	FRawDistributionFloat                              Angle;                                                      // 0x00C0   (0x0030)  
	FRawDistributionFloat                              Thickness;                                                  // 0x00F0   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleLocationSkelVertSurface
/// Size: 0x0080 (0x000030 - 0x0000B0)
class UParticleModuleLocationSkelVertSurface : public UParticleModuleLocationBase
{ 
public:
	TEnumAsByte<ELocationSkelVertSurfaceSource>        SourceType;                                                 // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	FVector                                            UniversalOffset;                                            // 0x0038   (0x0018)  
	bool                                               bUpdatePositionEachFrame : 1;                               // 0x0050:0 (0x0001)  
	bool                                               bOrientMeshEmitters : 1;                                    // 0x0050:1 (0x0001)  
	bool                                               bInheritBoneVelocity : 1;                                   // 0x0050:2 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0051   (0x0003)  MISSED
	float                                              InheritVelocityScale;                                       // 0x0054   (0x0004)  
	FName                                              SkelMeshActorParamName;                                     // 0x0058   (0x0008)  
	TArray<FName>                                      ValidAssociatedBones;                                       // 0x0060   (0x0010)  
	bool                                               bEnforceNormalCheck : 1;                                    // 0x0070:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x7];                                       // 0x0071   (0x0007)  MISSED
	FVector                                            NormalToCompare;                                            // 0x0078   (0x0018)  
	float                                              NormalCheckToleranceDegrees;                                // 0x0090   (0x0004)  
	float                                              NormalCheckTolerance;                                       // 0x0094   (0x0004)  
	TArray<int32_t>                                    ValidMaterialIndices;                                       // 0x0098   (0x0010)  
	bool                                               bInheritVertexColor : 1;                                    // 0x00A8:0 (0x0001)  
	bool                                               bInheritUV : 1;                                             // 0x00A8:1 (0x0001)  
	unsigned char                                      UnknownData03_4[0x3];                                       // 0x00A9   (0x0003)  MISSED
	uint32_t                                           InheritUVChannel;                                           // 0x00AC   (0x0004)  
};

/// Class /Script/Engine.ParticleModuleLocationWorldOffset
/// Size: 0x0000 (0x000098 - 0x000098)
class UParticleModuleLocationWorldOffset : public UParticleModuleLocation
{ 
public:
};

/// Class /Script/Engine.ParticleModuleLocationWorldOffset_Seeded
/// Size: 0x0020 (0x000098 - 0x0000B8)
class UParticleModuleLocationWorldOffset_Seeded : public UParticleModuleLocationWorldOffset
{ 
public:
	FParticleRandomSeedInfo                            RandomSeedInfo;                                             // 0x0098   (0x0020)  
};

/// Class /Script/Engine.ParticleModuleLocation_Seeded
/// Size: 0x0020 (0x000098 - 0x0000B8)
class UParticleModuleLocation_Seeded : public UParticleModuleLocation
{ 
public:
	FParticleRandomSeedInfo                            RandomSeedInfo;                                             // 0x0098   (0x0020)  
};

/// Class /Script/Engine.ParticleModuleMaterialBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleMaterialBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleMeshMaterial
/// Size: 0x0010 (0x000030 - 0x000040)
class UParticleModuleMeshMaterial : public UParticleModuleMaterialBase
{ 
public:
	TArray<UMaterialInterface*>                        MeshMaterials;                                              // 0x0030   (0x0010)  
};

/// Class /Script/Engine.ParticleModuleRotationBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleRotationBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleMeshRotation
/// Size: 0x0068 (0x000030 - 0x000098)
class UParticleModuleMeshRotation : public UParticleModuleRotationBase
{ 
public:
	FRawDistributionVector                             StartRotation;                                              // 0x0030   (0x0060)  
	bool                                               bInheritParent : 1;                                         // 0x0090:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0091   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleRotationRateBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleRotationRateBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleMeshRotationRate
/// Size: 0x0060 (0x000030 - 0x000090)
class UParticleModuleMeshRotationRate : public UParticleModuleRotationRateBase
{ 
public:
	FRawDistributionVector                             StartRotationRate;                                          // 0x0030   (0x0060)  
};

/// Class /Script/Engine.ParticleModuleMeshRotationRateMultiplyLife
/// Size: 0x0060 (0x000030 - 0x000090)
class UParticleModuleMeshRotationRateMultiplyLife : public UParticleModuleRotationRateBase
{ 
public:
	FRawDistributionVector                             LifeMultiplier;                                             // 0x0030   (0x0060)  
};

/// Class /Script/Engine.ParticleModuleMeshRotationRateOverLife
/// Size: 0x0068 (0x000030 - 0x000098)
class UParticleModuleMeshRotationRateOverLife : public UParticleModuleRotationRateBase
{ 
public:
	FRawDistributionVector                             RotRate;                                                    // 0x0030   (0x0060)  
	bool                                               bScaleRotRate : 1;                                          // 0x0090:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0091   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleMeshRotationRate_Seeded
/// Size: 0x0020 (0x000090 - 0x0000B0)
class UParticleModuleMeshRotationRate_Seeded : public UParticleModuleMeshRotationRate
{ 
public:
	FParticleRandomSeedInfo                            RandomSeedInfo;                                             // 0x0090   (0x0020)  
};

/// Class /Script/Engine.ParticleModuleMeshRotation_Seeded
/// Size: 0x0020 (0x000098 - 0x0000B8)
class UParticleModuleMeshRotation_Seeded : public UParticleModuleMeshRotation
{ 
public:
	FParticleRandomSeedInfo                            RandomSeedInfo;                                             // 0x0098   (0x0020)  
};

/// Class /Script/Engine.ParticleModuleOrbitBase
/// Size: 0x0008 (0x000030 - 0x000038)
class UParticleModuleOrbitBase : public UParticleModule
{ 
public:
	bool                                               bUseEmitterTime : 1;                                        // 0x0030:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleOrbit
/// Size: 0x0140 (0x000038 - 0x000178)
class UParticleModuleOrbit : public UParticleModuleOrbitBase
{ 
public:
	TEnumAsByte<EOrbitChainMode>                       ChainMode;                                                  // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	FRawDistributionVector                             OffsetAmount;                                               // 0x0040   (0x0060)  
	FOrbitOptions                                      OffsetOptions;                                              // 0x00A0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00A4   (0x0004)  MISSED
	FRawDistributionVector                             RotationAmount;                                             // 0x00A8   (0x0060)  
	FOrbitOptions                                      RotationOptions;                                            // 0x0108   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x010C   (0x0004)  MISSED
	FRawDistributionVector                             RotationRateAmount;                                         // 0x0110   (0x0060)  
	FOrbitOptions                                      RotationRateOptions;                                        // 0x0170   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0174   (0x0004)  MISSED
};

/// Class /Script/Engine.ParticleModuleOrientationBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleOrientationBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleOrientationAxisLock
/// Size: 0x0008 (0x000030 - 0x000038)
class UParticleModuleOrientationAxisLock : public UParticleModuleOrientationBase
{ 
public:
	TEnumAsByte<EParticleAxisLock>                     LockAxisFlags;                                              // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleParameterBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleParameterBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleParameterDynamic
/// Size: 0x0018 (0x000030 - 0x000048)
class UParticleModuleParameterDynamic : public UParticleModuleParameterBase
{ 
public:
	TArray<FEmitterDynamicParameter>                   DynamicParams;                                              // 0x0030   (0x0010)  
	int32_t                                            UpdateFlags;                                                // 0x0040   (0x0004)  
	bool                                               bUsesVelocity : 1;                                          // 0x0044:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0045   (0x0003)  MISSED
};

/// Class /Script/Engine.ParticleModuleParameterDynamic_Seeded
/// Size: 0x0020 (0x000048 - 0x000068)
class UParticleModuleParameterDynamic_Seeded : public UParticleModuleParameterDynamic
{ 
public:
	FParticleRandomSeedInfo                            RandomSeedInfo;                                             // 0x0048   (0x0020)  
};

/// Class /Script/Engine.ParticleModulePivotOffset
/// Size: 0x0010 (0x000030 - 0x000040)
class UParticleModulePivotOffset : public UParticleModuleLocationBase
{ 
public:
	FVector2D                                          PivotOffset;                                                // 0x0030   (0x0010)  
};

/// Class /Script/Engine.ParticleModuleRequired
/// Size: 0x0148 (0x000030 - 0x000178)
class UParticleModuleRequired : public UParticleModule
{ 
public:
	UMaterialInterface*                                Material;                                                   // 0x0030   (0x0008)  
	float                                              MinFacingCameraBlendDistance;                               // 0x0038   (0x0004)  
	float                                              MaxFacingCameraBlendDistance;                               // 0x003C   (0x0004)  
	FVector                                            EmitterOrigin;                                              // 0x0040   (0x0018)  
	FRotator                                           EmitterRotation;                                            // 0x0058   (0x0018)  
	TEnumAsByte<EParticleScreenAlignment>              ScreenAlignment;                                            // 0x0070   (0x0001)  
	bool                                               bUseLocalSpace : 1;                                         // 0x0071:0 (0x0001)  
	bool                                               bKillOnDeactivate : 1;                                      // 0x0071:1 (0x0001)  
	bool                                               bKillOnCompleted : 1;                                       // 0x0071:2 (0x0001)  
	TEnumAsByte<EParticleSortMode>                     SortMode;                                                   // 0x0072   (0x0001)  
	bool                                               bUseLegacyEmitterTime : 1;                                  // 0x0073:0 (0x0001)  
	bool                                               bRemoveHMDRoll : 1;                                         // 0x0073:1 (0x0001)  
	bool                                               bSupportLargeWorldCoordinates : 1;                          // 0x0073:2 (0x0001)  
	bool                                               bEmitterDurationUseRange : 1;                               // 0x0073:3 (0x0001)  
	float                                              EmitterDuration;                                            // 0x0074   (0x0004)  
	FRawDistributionFloat                              SpawnRate;                                                  // 0x0078   (0x0030)  
	TArray<FParticleBurst>                             BurstList;                                                  // 0x00A8   (0x0010)  
	float                                              EmitterDelay;                                               // 0x00B8   (0x0004)  
	float                                              EmitterDelayLow;                                            // 0x00BC   (0x0004)  
	bool                                               bDelayFirstLoopOnly : 1;                                    // 0x00C0:0 (0x0001)  
	TEnumAsByte<EParticleSubUVInterpMethod>            InterpolationMethod;                                        // 0x00C1   (0x0001)  
	bool                                               bScaleUV : 1;                                               // 0x00C2:0 (0x0001)  
	bool                                               bEmitterDelayUseRange : 1;                                  // 0x00C2:1 (0x0001)  
	TEnumAsByte<EParticleBurstMethod>                  ParticleBurstMethod;                                        // 0x00C3   (0x0001)  
	bool                                               bOverrideSystemMacroUV : 1;                                 // 0x00C4:0 (0x0001)  
	bool                                               bUseMaxDrawCount : 1;                                       // 0x00C4:1 (0x0001)  
	TEnumAsByte<EOpacitySourceMode>                    OpacitySourceMode;                                          // 0x00C5   (0x0001)  
	TEnumAsByte<EEmitterNormalsMode>                   EmitterNormalsMode;                                         // 0x00C6   (0x0001)  
	bool                                               bOrbitModuleAffectsVelocityAlignment : 1;                   // 0x00C7:0 (0x0001)  
	int32_t                                            SubImages_Horizontal;                                       // 0x00C8   (0x0004)  
	int32_t                                            SubImages_Vertical;                                         // 0x00CC   (0x0004)  
	float                                              RandomImageTime;                                            // 0x00D0   (0x0004)  
	int32_t                                            RandomImageChanges;                                         // 0x00D4   (0x0004)  
	FVector                                            MacroUVPosition;                                            // 0x00D8   (0x0018)  
	float                                              MacroUVRadius;                                              // 0x00F0   (0x0004)  
	EParticleUVFlipMode                                UVFlippingMode;                                             // 0x00F4   (0x0001)  
	TEnumAsByte<ESubUVBoundingVertexCount>             BoundingMode;                                               // 0x00F5   (0x0001)  
	bool                                               bDurationRecalcEachLoop : 1;                                // 0x00F6:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x1];                                       // 0x00F7   (0x0001)  MISSED
	FVector                                            NormalsSphereCenter;                                        // 0x00F8   (0x0018)  
	float                                              AlphaThreshold;                                             // 0x0110   (0x0004)  
	int32_t                                            EmitterLoops;                                               // 0x0114   (0x0004)  
	UTexture2D*                                        CutoutTexture;                                              // 0x0118   (0x0008)  
	int32_t                                            MaxDrawCount;                                               // 0x0120   (0x0004)  
	float                                              EmitterDurationLow;                                         // 0x0124   (0x0004)  
	FVector                                            NormalsCylinderDirection;                                   // 0x0128   (0x0018)  
	TArray<FName>                                      NamedMaterialOverrides;                                     // 0x0140   (0x0010)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x0150   (0x0028)  MISSED
};

/// Class /Script/Engine.ParticleModuleRotation
/// Size: 0x0030 (0x000030 - 0x000060)
class UParticleModuleRotation : public UParticleModuleRotationBase
{ 
public:
	FRawDistributionFloat                              StartRotation;                                              // 0x0030   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleRotationOverLifetime
/// Size: 0x0038 (0x000030 - 0x000068)
class UParticleModuleRotationOverLifetime : public UParticleModuleRotationBase
{ 
public:
	FRawDistributionFloat                              RotationOverLife;                                           // 0x0030   (0x0030)  
	bool                                               Scale : 1;                                                  // 0x0060:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0061   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleRotationRate
/// Size: 0x0030 (0x000030 - 0x000060)
class UParticleModuleRotationRate : public UParticleModuleRotationRateBase
{ 
public:
	FRawDistributionFloat                              StartRotationRate;                                          // 0x0030   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleRotationRateMultiplyLife
/// Size: 0x0030 (0x000030 - 0x000060)
class UParticleModuleRotationRateMultiplyLife : public UParticleModuleRotationRateBase
{ 
public:
	FRawDistributionFloat                              LifeMultiplier;                                             // 0x0030   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleRotationRate_Seeded
/// Size: 0x0020 (0x000060 - 0x000080)
class UParticleModuleRotationRate_Seeded : public UParticleModuleRotationRate
{ 
public:
	FParticleRandomSeedInfo                            RandomSeedInfo;                                             // 0x0060   (0x0020)  
};

/// Class /Script/Engine.ParticleModuleRotation_Seeded
/// Size: 0x0020 (0x000060 - 0x000080)
class UParticleModuleRotation_Seeded : public UParticleModuleRotation
{ 
public:
	FParticleRandomSeedInfo                            RandomSeedInfo;                                             // 0x0060   (0x0020)  
};

/// Class /Script/Engine.ParticleModuleSizeBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleSizeBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleSize
/// Size: 0x0060 (0x000030 - 0x000090)
class UParticleModuleSize : public UParticleModuleSizeBase
{ 
public:
	FRawDistributionVector                             StartSize;                                                  // 0x0030   (0x0060)  
};

/// Class /Script/Engine.ParticleModuleSizeMultiplyLife
/// Size: 0x0068 (0x000030 - 0x000098)
class UParticleModuleSizeMultiplyLife : public UParticleModuleSizeBase
{ 
public:
	FRawDistributionVector                             LifeMultiplier;                                             // 0x0030   (0x0060)  
	bool                                               MultiplyX : 1;                                              // 0x0090:0 (0x0001)  
	bool                                               MultiplyY : 1;                                              // 0x0090:1 (0x0001)  
	bool                                               MultiplyZ : 1;                                              // 0x0090:2 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0091   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleSizeScale
/// Size: 0x0068 (0x000030 - 0x000098)
class UParticleModuleSizeScale : public UParticleModuleSizeBase
{ 
public:
	FRawDistributionVector                             SizeScale;                                                  // 0x0030   (0x0060)  
	bool                                               EnableX : 1;                                                // 0x0090:0 (0x0001)  
	bool                                               EnableY : 1;                                                // 0x0090:1 (0x0001)  
	bool                                               EnableZ : 1;                                                // 0x0090:2 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0091   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleSizeScaleBySpeed
/// Size: 0x0020 (0x000030 - 0x000050)
class UParticleModuleSizeScaleBySpeed : public UParticleModuleSizeBase
{ 
public:
	FVector2D                                          SpeedScale;                                                 // 0x0030   (0x0010)  
	FVector2D                                          MaxScale;                                                   // 0x0040   (0x0010)  
};

/// Class /Script/Engine.ParticleModuleSize_Seeded
/// Size: 0x0020 (0x000090 - 0x0000B0)
class UParticleModuleSize_Seeded : public UParticleModuleSize
{ 
public:
	FParticleRandomSeedInfo                            RandomSeedInfo;                                             // 0x0090   (0x0020)  
};

/// Class /Script/Engine.ParticleModuleSourceMovement
/// Size: 0x0060 (0x000030 - 0x000090)
class UParticleModuleSourceMovement : public UParticleModuleLocationBase
{ 
public:
	FRawDistributionVector                             SourceMovementScale;                                        // 0x0030   (0x0060)  
};

/// Class /Script/Engine.ParticleModuleSpawnBase
/// Size: 0x0008 (0x000030 - 0x000038)
class UParticleModuleSpawnBase : public UParticleModule
{ 
public:
	bool                                               bProcessSpawnRate : 1;                                      // 0x0030:0 (0x0001)  
	bool                                               bProcessBurstList : 1;                                      // 0x0030:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleSpawn
/// Size: 0x00A8 (0x000038 - 0x0000E0)
class UParticleModuleSpawn : public UParticleModuleSpawnBase
{ 
public:
	FRawDistributionFloat                              Rate;                                                       // 0x0038   (0x0030)  
	FRawDistributionFloat                              RateScale;                                                  // 0x0068   (0x0030)  
	TArray<FParticleBurst>                             BurstList;                                                  // 0x0098   (0x0010)  
	FRawDistributionFloat                              BurstScale;                                                 // 0x00A8   (0x0030)  
	TEnumAsByte<EParticleBurstMethod>                  ParticleBurstMethod;                                        // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00D9   (0x0003)  MISSED
	bool                                               bApplyGlobalSpawnRateScale : 1;                             // 0x00DC:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x00DD   (0x0003)  MISSED
};

/// Class /Script/Engine.ParticleModuleSpawnPerUnit
/// Size: 0x0040 (0x000038 - 0x000078)
class UParticleModuleSpawnPerUnit : public UParticleModuleSpawnBase
{ 
public:
	float                                              UnitScalar;                                                 // 0x0038   (0x0004)  
	float                                              MovementTolerance;                                          // 0x003C   (0x0004)  
	FRawDistributionFloat                              SpawnPerUnit;                                               // 0x0040   (0x0030)  
	float                                              MaxFrameDistance;                                           // 0x0070   (0x0004)  
	bool                                               bIgnoreSpawnRateWhenMoving : 1;                             // 0x0074:0 (0x0001)  
	bool                                               bIgnoreMovementAlongX : 1;                                  // 0x0074:1 (0x0001)  
	bool                                               bIgnoreMovementAlongY : 1;                                  // 0x0074:2 (0x0001)  
	bool                                               bIgnoreMovementAlongZ : 1;                                  // 0x0074:3 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0075   (0x0003)  MISSED
};

/// Class /Script/Engine.ParticleModuleSubUVBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleSubUVBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleSubUV
/// Size: 0x0040 (0x000030 - 0x000070)
class UParticleModuleSubUV : public UParticleModuleSubUVBase
{ 
public:
	USubUVAnimation*                                   Animation;                                                  // 0x0030   (0x0008)  
	FRawDistributionFloat                              SubImageIndex;                                              // 0x0038   (0x0030)  
	bool                                               bUseRealTime : 1;                                           // 0x0068:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0069   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleSubUVMovie
/// Size: 0x0040 (0x000070 - 0x0000B0)
class UParticleModuleSubUVMovie : public UParticleModuleSubUV
{ 
public:
	bool                                               bUseEmitterTime : 1;                                        // 0x0070:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0071   (0x0007)  MISSED
	FRawDistributionFloat                              FrameRate;                                                  // 0x0078   (0x0030)  
	int32_t                                            StartingFrame;                                              // 0x00A8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00AC   (0x0004)  MISSED
};

/// Class /Script/Engine.ParticleModuleTrailBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleTrailBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleTrailSource
/// Size: 0x0060 (0x000030 - 0x000090)
class UParticleModuleTrailSource : public UParticleModuleTrailBase
{ 
public:
	TEnumAsByte<ETrail2SourceMethod>                   SourceMethod;                                               // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	FName                                              SourceName;                                                 // 0x0034   (0x0008)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	FRawDistributionFloat                              SourceStrength;                                             // 0x0040   (0x0030)  
	bool                                               bLockSourceStength : 1;                                     // 0x0070:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x0071   (0x0003)  MISSED
	int32_t                                            SourceOffsetCount;                                          // 0x0074   (0x0004)  
	TArray<FVector>                                    SourceOffsetDefaults;                                       // 0x0078   (0x0010)  
	TEnumAsByte<EParticleSourceSelectionMethod>        SelectionMethod;                                            // 0x0088   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x0089   (0x0003)  MISSED
	bool                                               bInheritRotation : 1;                                       // 0x008C:0 (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x008D   (0x0003)  MISSED
};

/// Class /Script/Engine.ParticleModuleTypeDataBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleTypeDataBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleTypeDataAnimTrail
/// Size: 0x0018 (0x000030 - 0x000048)
class UParticleModuleTypeDataAnimTrail : public UParticleModuleTypeDataBase
{ 
public:
	bool                                               bDeadTrailsOnDeactivate : 1;                                // 0x0030:0 (0x0001)  
	bool                                               bEnablePreviousTangentRecalculation : 1;                    // 0x0030:1 (0x0001)  
	bool                                               bTangentRecalculationEveryFrame : 1;                        // 0x0030:2 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0031   (0x0003)  MISSED
	float                                              TilingDistance;                                             // 0x0034   (0x0004)  
	float                                              DistanceTessellationStepSize;                               // 0x0038   (0x0004)  
	float                                              TangentTessellationStepSize;                                // 0x003C   (0x0004)  
	float                                              WidthTessellationStepSize;                                  // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
};

/// Class /Script/Engine.ParticleModuleTypeDataBeam2
/// Size: 0x0120 (0x000030 - 0x000150)
class UParticleModuleTypeDataBeam2 : public UParticleModuleTypeDataBase
{ 
public:
	TEnumAsByte<EBeam2Method>                          BeamMethod;                                                 // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0031   (0x0003)  MISSED
	int32_t                                            TextureTile;                                                // 0x0034   (0x0004)  
	float                                              TextureTileDistance;                                        // 0x0038   (0x0004)  
	int32_t                                            Sheets;                                                     // 0x003C   (0x0004)  
	int32_t                                            MaxBeamCount;                                               // 0x0040   (0x0004)  
	float                                              Speed;                                                      // 0x0044   (0x0004)  
	int32_t                                            InterpolationPoints;                                        // 0x0048   (0x0004)  
	bool                                               bAlwaysOn : 1;                                              // 0x004C:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x004D   (0x0003)  MISSED
	int32_t                                            UpVectorStepSize;                                           // 0x0050   (0x0004)  
	FName                                              BranchParentName;                                           // 0x0054   (0x0008)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x005C   (0x0004)  MISSED
	FRawDistributionFloat                              Distance;                                                   // 0x0060   (0x0030)  
	TEnumAsByte<EBeamTaperMethod>                      TaperMethod;                                                // 0x0090   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0091   (0x0007)  MISSED
	FRawDistributionFloat                              TaperFactor;                                                // 0x0098   (0x0030)  
	FRawDistributionFloat                              TaperScale;                                                 // 0x00C8   (0x0030)  
	bool                                               RenderGeometry : 1;                                         // 0x00F8:0 (0x0001)  
	bool                                               RenderDirectLine : 1;                                       // 0x00F8:1 (0x0001)  
	bool                                               RenderLines : 1;                                            // 0x00F8:2 (0x0001)  
	bool                                               RenderTessellation : 1;                                     // 0x00F8:3 (0x0001)  
	unsigned char                                      UnknownData04_6[0x57];                                      // 0x00F9   (0x0057)  MISSED
};

/// Class /Script/Engine.ParticleModuleTypeDataGpu
/// Size: 0x05A0 (0x000030 - 0x0005D0)
class UParticleModuleTypeDataGpu : public UParticleModuleTypeDataBase
{ 
public:
	FGPUSpriteEmitterInfo                              EmitterInfo;                                                // 0x0030   (0x0350)  
	FGPUSpriteResourceData                             ResourceData;                                               // 0x0380   (0x0240)  
	float                                              CameraMotionBlurAmount;                                     // 0x05C0   (0x0004)  
	bool                                               bClearExistingParticlesOnInit : 1;                          // 0x05C4:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0xB];                                       // 0x05C5   (0x000B)  MISSED
};

/// Class /Script/Engine.ParticleModuleTypeDataMesh
/// Size: 0x0080 (0x000030 - 0x0000B0)
class UParticleModuleTypeDataMesh : public UParticleModuleTypeDataBase
{ 
public:
	UStaticMesh*                                       Mesh;                                                       // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0038   (0x0008)  MISSED
	float                                              LODSizeScale;                                               // 0x0040   (0x0004)  
	bool                                               bUseStaticMeshLODs : 1;                                     // 0x0044:0 (0x0001)  
	bool                                               CastShadows : 1;                                            // 0x0044:1 (0x0001)  
	bool                                               DoCollisions : 1;                                           // 0x0044:2 (0x0001)  
	TEnumAsByte<EMeshScreenAlignment>                  MeshAlignment;                                              // 0x0045   (0x0001)  
	bool                                               bOverrideMaterial : 1;                                      // 0x0046:0 (0x0001)  
	bool                                               bOverrideDefaultMotionBlurSettings : 1;                     // 0x0046:1 (0x0001)  
	bool                                               bEnableMotionBlur : 1;                                      // 0x0046:2 (0x0001)  
	unsigned char                                      UnknownData01_4[0x1];                                       // 0x0047   (0x0001)  MISSED
	FRawDistributionVector                             RollPitchYawRange;                                          // 0x0048   (0x0060)  
	TEnumAsByte<EParticleAxisLock>                     AxisLockOption;                                             // 0x00A8   (0x0001)  
	bool                                               bCameraFacing : 1;                                          // 0x00A9:0 (0x0001)  
	TEnumAsByte<EMeshCameraFacingUpAxis>               CameraFacingUpAxisOption;                                   // 0x00AA   (0x0001)  
	TEnumAsByte<EMeshCameraFacingOptions>              CameraFacingOption;                                         // 0x00AB   (0x0001)  
	bool                                               bApplyParticleRotationAsSpin : 1;                           // 0x00AC:0 (0x0001)  
	bool                                               bFaceCameraDirectionRatherThanPosition : 1;                 // 0x00AC:1 (0x0001)  
	bool                                               bCollisionsConsiderPartilceSize : 1;                        // 0x00AC:2 (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x00AD   (0x0003)  MISSED
};

/// Class /Script/Engine.ParticleModuleTypeDataRibbon
/// Size: 0x0030 (0x000030 - 0x000060)
class UParticleModuleTypeDataRibbon : public UParticleModuleTypeDataBase
{ 
public:
	int32_t                                            MaxTessellationBetweenParticles;                            // 0x0030   (0x0004)  
	int32_t                                            SheetsPerTrail;                                             // 0x0034   (0x0004)  
	int32_t                                            MaxTrailCount;                                              // 0x0038   (0x0004)  
	int32_t                                            MaxParticleInTrailCount;                                    // 0x003C   (0x0004)  
	bool                                               bDeadTrailsOnDeactivate : 1;                                // 0x0040:0 (0x0001)  
	bool                                               bDeadTrailsOnSourceLoss : 1;                                // 0x0040:1 (0x0001)  
	bool                                               bClipSourceSegement : 1;                                    // 0x0040:2 (0x0001)  
	bool                                               bEnablePreviousTangentRecalculation : 1;                    // 0x0040:3 (0x0001)  
	bool                                               bTangentRecalculationEveryFrame : 1;                        // 0x0040:4 (0x0001)  
	bool                                               bSpawnInitialParticle : 1;                                  // 0x0040:5 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0041   (0x0003)  MISSED
	TEnumAsByte<ETrailsRenderAxisOption>               RenderAxis;                                                 // 0x0044   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0045   (0x0003)  MISSED
	float                                              TangentSpawningScalar;                                      // 0x0048   (0x0004)  
	bool                                               bRenderGeometry : 1;                                        // 0x004C:0 (0x0001)  
	bool                                               bRenderSpawnPoints : 1;                                     // 0x004C:1 (0x0001)  
	bool                                               bRenderTangents : 1;                                        // 0x004C:2 (0x0001)  
	bool                                               bRenderTessellation : 1;                                    // 0x004C:3 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x004D   (0x0003)  MISSED
	float                                              TilingDistance;                                             // 0x0050   (0x0004)  
	float                                              DistanceTessellationStepSize;                               // 0x0054   (0x0004)  
	bool                                               bEnableTangentDiffInterpScale : 1;                          // 0x0058:0 (0x0001)  
	unsigned char                                      UnknownData03_4[0x3];                                       // 0x0059   (0x0003)  MISSED
	float                                              TangentTessellationScalar;                                  // 0x005C   (0x0004)  
};

/// Class /Script/Engine.ParticleModuleVectorFieldBase
/// Size: 0x0000 (0x000030 - 0x000030)
class UParticleModuleVectorFieldBase : public UParticleModule
{ 
public:
};

/// Class /Script/Engine.ParticleModuleVectorFieldGlobal
/// Size: 0x0010 (0x000030 - 0x000040)
class UParticleModuleVectorFieldGlobal : public UParticleModuleVectorFieldBase
{ 
public:
	bool                                               bOverrideGlobalVectorFieldTightness : 1;                    // 0x0030:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0031   (0x0003)  MISSED
	float                                              GlobalVectorFieldScale;                                     // 0x0034   (0x0004)  
	float                                              GlobalVectorFieldTightness;                                 // 0x0038   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Class /Script/Engine.ParticleModuleVectorFieldLocal
/// Size: 0x0060 (0x000030 - 0x000090)
class UParticleModuleVectorFieldLocal : public UParticleModuleVectorFieldBase
{ 
public:
	UVectorField*                                      VectorField;                                                // 0x0030   (0x0008)  
	FVector                                            RelativeTranslation;                                        // 0x0038   (0x0018)  
	FRotator                                           RelativeRotation;                                           // 0x0050   (0x0018)  
	FVector                                            RelativeScale3D;                                            // 0x0068   (0x0018)  
	float                                              Intensity;                                                  // 0x0080   (0x0004)  
	float                                              Tightness;                                                  // 0x0084   (0x0004)  
	bool                                               bIgnoreComponentTransform : 1;                              // 0x0088:0 (0x0001)  
	bool                                               bTileX : 1;                                                 // 0x0088:1 (0x0001)  
	bool                                               bTileY : 1;                                                 // 0x0088:2 (0x0001)  
	bool                                               bTileZ : 1;                                                 // 0x0088:3 (0x0001)  
	bool                                               bUseFixDT : 1;                                              // 0x0088:4 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0089   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleVectorFieldRotation
/// Size: 0x0030 (0x000030 - 0x000060)
class UParticleModuleVectorFieldRotation : public UParticleModuleVectorFieldBase
{ 
public:
	FVector                                            MinInitialRotation;                                         // 0x0030   (0x0018)  
	FVector                                            MaxInitialRotation;                                         // 0x0048   (0x0018)  
};

/// Class /Script/Engine.ParticleModuleVectorFieldRotationRate
/// Size: 0x0018 (0x000030 - 0x000048)
class UParticleModuleVectorFieldRotationRate : public UParticleModuleVectorFieldBase
{ 
public:
	FVector                                            RotationRate;                                               // 0x0030   (0x0018)  
};

/// Class /Script/Engine.ParticleModuleVectorFieldScale
/// Size: 0x0038 (0x000030 - 0x000068)
class UParticleModuleVectorFieldScale : public UParticleModuleVectorFieldBase
{ 
public:
	UDistributionFloat*                                VectorFieldScale;                                           // 0x0030   (0x0008)  
	FRawDistributionFloat                              VectorFieldScaleRaw;                                        // 0x0038   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleVectorFieldScaleOverLife
/// Size: 0x0038 (0x000030 - 0x000068)
class UParticleModuleVectorFieldScaleOverLife : public UParticleModuleVectorFieldBase
{ 
public:
	UDistributionFloat*                                VectorFieldScaleOverLife;                                   // 0x0030   (0x0008)  
	FRawDistributionFloat                              VectorFieldScaleOverLifeRaw;                                // 0x0038   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleVelocityBase
/// Size: 0x0008 (0x000030 - 0x000038)
class UParticleModuleVelocityBase : public UParticleModule
{ 
public:
	bool                                               bInWorldSpace : 1;                                          // 0x0030:0 (0x0001)  
	bool                                               bApplyOwnerScale : 1;                                       // 0x0030:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleVelocity
/// Size: 0x0090 (0x000038 - 0x0000C8)
class UParticleModuleVelocity : public UParticleModuleVelocityBase
{ 
public:
	FRawDistributionVector                             StartVelocity;                                              // 0x0038   (0x0060)  
	FRawDistributionFloat                              StartVelocityRadial;                                        // 0x0098   (0x0030)  
};

/// Class /Script/Engine.ParticleModuleVelocityCone
/// Size: 0x0078 (0x000038 - 0x0000B0)
class UParticleModuleVelocityCone : public UParticleModuleVelocityBase
{ 
public:
	FRawDistributionFloat                              Angle;                                                      // 0x0038   (0x0030)  
	FRawDistributionFloat                              Velocity;                                                   // 0x0068   (0x0030)  
	FVector                                            Direction;                                                  // 0x0098   (0x0018)  
};

/// Class /Script/Engine.ParticleModuleVelocityInheritParent
/// Size: 0x0060 (0x000038 - 0x000098)
class UParticleModuleVelocityInheritParent : public UParticleModuleVelocityBase
{ 
public:
	FRawDistributionVector                             Scale;                                                      // 0x0038   (0x0060)  
};

/// Class /Script/Engine.ParticleModuleVelocityOverLifetime
/// Size: 0x0068 (0x000038 - 0x0000A0)
class UParticleModuleVelocityOverLifetime : public UParticleModuleVelocityBase
{ 
public:
	FRawDistributionVector                             VelOverLife;                                                // 0x0038   (0x0060)  
	bool                                               Absolute : 1;                                               // 0x0098:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0099   (0x0007)  MISSED
};

/// Class /Script/Engine.ParticleModuleVelocity_Seeded
/// Size: 0x0020 (0x0000C8 - 0x0000E8)
class UParticleModuleVelocity_Seeded : public UParticleModuleVelocity
{ 
public:
	FParticleRandomSeedInfo                            RandomSeedInfo;                                             // 0x00C8   (0x0020)  
};

/// Class /Script/Engine.ParticleSpriteEmitter
/// Size: 0x0000 (0x0001C0 - 0x0001C0)
class UParticleSpriteEmitter : public UParticleEmitter
{ 
public:
};

/// Class /Script/Engine.ParticleSystemComponent
/// Size: 0x0310 (0x000540 - 0x000850)
class UParticleSystemComponent : public UFXSystemComponent
{ 
public:
	UParticleSystem*                                   Template;                                                   // 0x0538   (0x0008)  
	TArray<UMaterialInterface*>                        EmitterMaterials;                                           // 0x0540   (0x0010)  
	TArray<USkeletalMeshComponent*>                    SkelMeshComponents;                                         // 0x0550   (0x0010)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x0560   (0x0001)  MISSED
	bool                                               bResetOnDetach : 1;                                         // 0x0561:0 (0x0001)  
	bool                                               bUpdateOnDedicatedServer : 1;                               // 0x0561:1 (0x0001)  
	unsigned char                                      UnknownBit01 : 1;                                           // 0x0561:2 (0x0001)  MISSED
	unsigned char                                      UnknownBit02 : 1;                                           // 0x0561:3 (0x0001)  MISSED
	bool                                               bAllowRecycling : 1;                                        // 0x0561:4 (0x0001)  
	bool                                               bAutoManageAttachment : 1;                                  // 0x0561:5 (0x0001)  
	bool                                               bAutoAttachWeldSimulatedBodies : 1;                         // 0x0561:6 (0x0001)  
	unsigned char                                      UnknownBit03 : 1;                                           // 0x0561:7 (0x0001)  MISSED
	unsigned char                                      UnknownBit04 : 1;                                           // 0x0562:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit05 : 1;                                           // 0x0562:1 (0x0001)  MISSED
	bool                                               bWarmingUp : 1;                                             // 0x0562:2 (0x0001)  
	bool                                               bOverrideLODMethod : 1;                                     // 0x0562:3 (0x0001)  
	bool                                               bSkipUpdateDynamicDataDuringTick : 1;                       // 0x0562:4 (0x0001)  
	unsigned char                                      UnknownData06_4[0xA];                                       // 0x0563   (0x000A)  MISSED
	TEnumAsByte<ParticleSystemLODMethod>               LODMethod;                                                  // 0x056D   (0x0001)  
	EParticleSignificanceLevel                         RequiredSignificance;                                       // 0x056E   (0x0001)  
	unsigned char                                      UnknownData07_5[0x1];                                       // 0x056F   (0x0001)  MISSED
	TArray<FParticleSysParam>                          InstanceParameters;                                         // 0x0570   (0x0010)  
	FMulticastInlineDelegate                           OnParticleSpawn;                                            // 0x0580   (0x0010)  
	FMulticastInlineDelegate                           OnParticleBurst;                                            // 0x0590   (0x0010)  
	FMulticastInlineDelegate                           OnParticleDeath;                                            // 0x05A0   (0x0010)  
	FMulticastInlineDelegate                           OnParticleCollide;                                          // 0x05B0   (0x0010)  
	bool                                               bOldPositionValid;                                          // 0x05C0   (0x0001)  
	unsigned char                                      UnknownData08_5[0x7];                                       // 0x05C1   (0x0007)  MISSED
	FVector                                            OldPosition;                                                // 0x05C8   (0x0018)  
	FVector                                            PartSysVelocity;                                            // 0x05E0   (0x0018)  
	float                                              WarmupTime;                                                 // 0x05F8   (0x0004)  
	float                                              WarmupTickRate;                                             // 0x05FC   (0x0004)  
	unsigned char                                      UnknownData09_5[0x4];                                       // 0x0600   (0x0004)  MISSED
	float                                              SecondsBeforeInactive;                                      // 0x0604   (0x0004)  
	unsigned char                                      UnknownData10_5[0x4];                                       // 0x0608   (0x0004)  MISSED
	float                                              MaxTimeBeforeForceUpdateTransform;                          // 0x060C   (0x0004)  
	unsigned char                                      UnknownData11_5[0x20];                                      // 0x0610   (0x0020)  MISSED
	TArray<UParticleSystemReplay*>                     ReplayClips;                                                // 0x0630   (0x0010)  
	unsigned char                                      UnknownData12_5[0x8];                                       // 0x0640   (0x0008)  MISSED
	float                                              CustomTimeDilation;                                         // 0x0648   (0x0004)  
	unsigned char                                      UnknownData13_5[0x54];                                      // 0x064C   (0x0054)  MISSED
	TWeakObjectPtr<USceneComponent*>                   AutoAttachParent;                                           // 0x06A0   (0x0008)  
	FName                                              AutoAttachSocketName;                                       // 0x06A8   (0x0008)  
	EAttachmentRule                                    AutoAttachLocationRule;                                     // 0x06B0   (0x0001)  
	EAttachmentRule                                    AutoAttachRotationRule;                                     // 0x06B1   (0x0001)  
	EAttachmentRule                                    AutoAttachScaleRule;                                        // 0x06B2   (0x0001)  
	unsigned char                                      UnknownData14_5[0x55];                                      // 0x06B3   (0x0055)  MISSED
	FMulticastInlineDelegate                           OnSystemFinished;                                           // 0x0708   (0x0010)  
	unsigned char                                      UnknownData15_6[0x138];                                     // 0x0718   (0x0138)  MISSED


	/// Functions
	// Function /Script/Engine.ParticleSystemComponent.SetTrailSourceData
	void SetTrailSourceData(FName InFirstSocketName, FName InSecondSocketName, TEnumAsByte<ETrailWidthMode> InWidthMode, float InWidth); // [0x4678810] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ParticleSystemComponent.SetTemplate
	void SetTemplate(UParticleSystem* NewTemplate);                                                                          // [0x4678780] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ParticleSystemComponent.SetMaterialParameter
	void SetMaterialParameter(FName ParameterName, UMaterialInterface* Param);                                               // [0x46786b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ParticleSystemComponent.SetBeamTargetTangent
	void SetBeamTargetTangent(int32_t EmitterIndex, FVector NewTangentPoint, int32_t TargetIndex);                           // [0x4678150] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.ParticleSystemComponent.SetBeamTargetStrength
	void SetBeamTargetStrength(int32_t EmitterIndex, float NewTargetStrength, int32_t TargetIndex);                          // [0x4678040] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ParticleSystemComponent.SetBeamTargetPoint
	void SetBeamTargetPoint(int32_t EmitterIndex, FVector NewTargetPoint, int32_t TargetIndex);                              // [0x4677f10] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.ParticleSystemComponent.SetBeamSourceTangent
	void SetBeamSourceTangent(int32_t EmitterIndex, FVector NewTangentPoint, int32_t SourceIndex);                           // [0x4677de0] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.ParticleSystemComponent.SetBeamSourceStrength
	void SetBeamSourceStrength(int32_t EmitterIndex, float NewSourceStrength, int32_t SourceIndex);                          // [0x4677cd0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ParticleSystemComponent.SetBeamSourcePoint
	void SetBeamSourcePoint(int32_t EmitterIndex, FVector NewSourcePoint, int32_t SourceIndex);                              // [0x4677ba0] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.ParticleSystemComponent.SetBeamEndPoint
	void SetBeamEndPoint(int32_t EmitterIndex, FVector NewEndPoint);                                                         // [0x4677ac0] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.ParticleSystemComponent.SetAutoAttachParams
	void SetAutoAttachParams(USceneComponent* Parent, FName SocketName, TEnumAsByte<EAttachLocation> LocationType);          // [0x46777f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ParticleSystemComponent.GetNumActiveParticles
	int32_t GetNumActiveParticles();                                                                                         // [0x46776d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ParticleSystemComponent.GetNamedMaterial
	UMaterialInterface* GetNamedMaterial(FName InName);                                                                      // [0x4677630] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ParticleSystemComponent.GetBeamTargetTangent
	bool GetBeamTargetTangent(int32_t EmitterIndex, int32_t TargetIndex, FVector& OutTangentPoint);                          // [0x46774e0] Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ParticleSystemComponent.GetBeamTargetStrength
	bool GetBeamTargetStrength(int32_t EmitterIndex, int32_t TargetIndex, float& OutTargetStrength);                         // [0x46773b0] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ParticleSystemComponent.GetBeamTargetPoint
	bool GetBeamTargetPoint(int32_t EmitterIndex, int32_t TargetIndex, FVector& OutTargetPoint);                             // [0x4677290] Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ParticleSystemComponent.GetBeamSourceTangent
	bool GetBeamSourceTangent(int32_t EmitterIndex, int32_t SourceIndex, FVector& OutTangentPoint);                          // [0x4677170] Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ParticleSystemComponent.GetBeamSourceStrength
	bool GetBeamSourceStrength(int32_t EmitterIndex, int32_t SourceIndex, float& OutSourceStrength);                         // [0x4677040] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ParticleSystemComponent.GetBeamSourcePoint
	bool GetBeamSourcePoint(int32_t EmitterIndex, int32_t SourceIndex, FVector& OutSourcePoint);                             // [0x4676f20] Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ParticleSystemComponent.GetBeamEndPoint
	bool GetBeamEndPoint(int32_t EmitterIndex, FVector& OutEndPoint);                                                        // [0x4676e30] Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ParticleSystemComponent.GenerateParticleEvent
	void GenerateParticleEvent(FName InEventName, float InEmitterTime, FVector InLocation, FVector InDirection, FVector InVelocity); // [0x4676c60] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.ParticleSystemComponent.EndTrails
	void EndTrails();                                                                                                        // [0x4676c40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ParticleSystemComponent.CreateNamedDynamicMaterialInstance
	UMaterialInstanceDynamic* CreateNamedDynamicMaterialInstance(FName InName, UMaterialInterface* SourceMaterial);          // [0x4676b70] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ParticleSystemComponent.BeginTrails
	void BeginTrails(FName InFirstSocketName, FName InSecondSocketName, TEnumAsByte<ETrailWidthMode> InWidthMode, float InWidth); // [0x4676970] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.ParticleSystemReplay
/// Size: 0x0018 (0x000028 - 0x000040)
class UParticleSystemReplay : public UObject
{ 
public:
	int32_t                                            ClipIDNumber;                                               // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_6[0x14];                                      // 0x002C   (0x0014)  MISSED
};

/// Class /Script/Engine.PathFollowingAgentInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPathFollowingAgentInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.PhysicsSpringComponent
/// Size: 0x0030 (0x0002A0 - 0x0002D0)
class UPhysicsSpringComponent : public USceneComponent
{ 
public:
	float                                              SpringStiffness;                                            // 0x02A0   (0x0004)  
	float                                              SpringDamping;                                              // 0x02A4   (0x0004)  
	float                                              SpringLengthAtRest;                                         // 0x02A8   (0x0004)  
	float                                              SpringRadius;                                               // 0x02AC   (0x0004)  
	TEnumAsByte<ECollisionChannel>                     SpringChannel;                                              // 0x02B0   (0x0001)  
	bool                                               bIgnoreSelf;                                                // 0x02B1   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x02B2   (0x0002)  MISSED
	float                                              SpringCompression;                                          // 0x02B4   (0x0004)  
	unsigned char                                      UnknownData01_6[0x18];                                      // 0x02B8   (0x0018)  MISSED


	/// Functions
	// Function /Script/Engine.PhysicsSpringComponent.GetSpringRestingPoint
	FVector GetSpringRestingPoint();                                                                                         // [0x467b9a0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PhysicsSpringComponent.GetSpringDirection
	FVector GetSpringDirection();                                                                                            // [0x467b960] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PhysicsSpringComponent.GetSpringCurrentEndPoint
	FVector GetSpringCurrentEndPoint();                                                                                      // [0x467b920] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PhysicsSpringComponent.GetNormalizedCompressionScalar
	float GetNormalizedCompressionScalar();                                                                                  // [0x467b8c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.PhysicsThreadLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UPhysicsThreadLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.PhysicsThrusterComponent
/// Size: 0x0010 (0x0002A0 - 0x0002B0)
class UPhysicsThrusterComponent : public USceneComponent
{ 
public:
	float                                              ThrustStrength;                                             // 0x02A0   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x02A4   (0x000C)  MISSED
};

/// Class /Script/Engine.SceneCapture
/// Size: 0x0010 (0x000290 - 0x0002A0)
class ASceneCapture : public AActor
{ 
public:
	UStaticMeshComponent*                              MeshComp;                                                   // 0x0290   (0x0008)  
	USceneComponent*                                   SceneComponent;                                             // 0x0298   (0x0008)  
};

/// Class /Script/Engine.PlanarReflection
/// Size: 0x0010 (0x0002A0 - 0x0002B0)
class APlanarReflection : public ASceneCapture
{ 
public:
	UPlanarReflectionComponent*                        PlanarReflectionComponent;                                  // 0x02A0   (0x0008)  
	bool                                               bShowPreviewPlane;                                          // 0x02A8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02A9   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.PlanarReflection.OnInterpToggle
	void OnInterpToggle(bool bEnable);                                                                                       // [0x467b9e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.PlanarReflectionComponent
/// Size: 0x0160 (0x000360 - 0x0004C0)
class UPlanarReflectionComponent : public USceneCaptureComponent
{ 
public:
	UBoxComponent*                                     PreviewBox;                                                 // 0x0358   (0x0008)  
	float                                              NormalDistortionStrength;                                   // 0x0360   (0x0004)  
	float                                              PrefilterRoughness;                                         // 0x0364   (0x0004)  
	float                                              PrefilterRoughnessDistance;                                 // 0x0368   (0x0004)  
	int32_t                                            ScreenPercentage;                                           // 0x036C   (0x0004)  
	float                                              ExtraFOV;                                                   // 0x0370   (0x0004)  
	float                                              DistanceFromPlaneFadeStart;                                 // 0x0374   (0x0004)  
	float                                              DistanceFromPlaneFadeEnd;                                   // 0x0378   (0x0004)  
	float                                              DistanceFromPlaneFadeoutStart;                              // 0x037C   (0x0004)  
	float                                              DistanceFromPlaneFadeoutEnd;                                // 0x0380   (0x0004)  
	float                                              AngleFromPlaneFadeStart;                                    // 0x0384   (0x0004)  
	float                                              AngleFromPlaneFadeEnd;                                      // 0x0388   (0x0004)  
	bool                                               bShowPreviewPlane;                                          // 0x038C   (0x0001)  
	bool                                               bRenderSceneTwoSided;                                       // 0x038D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x132];                                     // 0x038E   (0x0132)  MISSED
};

/// Class /Script/Engine.PlaneReflectionCapture
/// Size: 0x0000 (0x000298 - 0x000298)
class APlaneReflectionCapture : public AReflectionCapture
{ 
public:
};

/// Class /Script/Engine.PlaneReflectionCaptureComponent
/// Size: 0x0020 (0x000310 - 0x000330)
class UPlaneReflectionCaptureComponent : public UReflectionCaptureComponent
{ 
public:
	float                                              InfluenceRadiusScale;                                       // 0x0310   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0314   (0x0004)  MISSED
	UDrawSphereComponent*                              PreviewInfluenceRadius;                                     // 0x0318   (0x0008)  
	UBoxComponent*                                     PreviewCaptureBox;                                          // 0x0320   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0328   (0x0008)  MISSED
};

/// Class /Script/Engine.PlatformInterfaceWebResponse
/// Size: 0x0088 (0x000028 - 0x0000B0)
class UPlatformInterfaceWebResponse : public UObject
{ 
public:
	FString                                            OriginalURL;                                                // 0x0028   (0x0010)  
	int32_t                                            ResponseCode;                                               // 0x0038   (0x0004)  
	int32_t                                            Tag;                                                        // 0x003C   (0x0004)  
	FString                                            StringResponse;                                             // 0x0040   (0x0010)  
	TArray<char>                                       BinaryResponse;                                             // 0x0050   (0x0010)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x0060   (0x0050)  MISSED


	/// Functions
	// Function /Script/Engine.PlatformInterfaceWebResponse.GetNumHeaders
	int32_t GetNumHeaders();                                                                                                 // [0xfa2e70] Native|Public        
	// Function /Script/Engine.PlatformInterfaceWebResponse.GetHeaderValue
	FString GetHeaderValue(FString HeaderName);                                                                              // [0x467b7d0] Native|Public        
	// Function /Script/Engine.PlatformInterfaceWebResponse.GetHeader
	void GetHeader(int32_t HeaderIndex, FString& Header, FString& Value);                                                    // [0x467b660] Native|Public|HasOutParms 
};

/// Class /Script/Engine.PlayerCameraManager
/// Size: 0x30B0 (0x000290 - 0x003340)
class APlayerCameraManager : public AActor
{ 
public:
	APlayerController*                                 PCOwner;                                                    // 0x0290   (0x0008)  
	USceneComponent*                                   TransformComponent;                                         // 0x0298   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x02A0   (0x0008)  MISSED
	float                                              DefaultFOV;                                                 // 0x02A8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02AC   (0x0004)  MISSED
	float                                              DefaultOrthoWidth;                                          // 0x02B0   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x02B4   (0x0004)  MISSED
	float                                              DefaultAspectRatio;                                         // 0x02B8   (0x0004)  
	unsigned char                                      UnknownData03_5[0x64];                                      // 0x02BC   (0x0064)  MISSED
	FCameraCacheEntry                                  CameraCache;                                                // 0x0320   (0x07D0)  
	FCameraCacheEntry                                  LastFrameCameraCache;                                       // 0x0AF0   (0x07D0)  
	FTViewTarget                                       ViewTarget;                                                 // 0x12C0   (0x07E0)  
	FTViewTarget                                       PendingViewTarget;                                          // 0x1AA0   (0x07E0)  
	unsigned char                                      UnknownData04_5[0x30];                                      // 0x2280   (0x0030)  MISSED
	FCameraCacheEntry                                  CameraCachePrivate;                                         // 0x22B0   (0x07D0)  
	FCameraCacheEntry                                  LastFrameCameraCachePrivate;                                // 0x2A80   (0x07D0)  
	TArray<UCameraModifier*>                           ModifierList;                                               // 0x3250   (0x0010)  
	TArray<UClass*>                                    DefaultModifiers;                                           // 0x3260   (0x0010)  
	float                                              FreeCamDistance;                                            // 0x3270   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x3274   (0x0004)  MISSED
	FVector                                            FreeCamOffset;                                              // 0x3278   (0x0018)  
	FVector                                            ViewTargetOffset;                                           // 0x3290   (0x0018)  
	FMulticastInlineDelegate                           OnAudioFadeChangeEvent;                                     // 0x32A8   (0x0010)  
	unsigned char                                      UnknownData06_5[0x18];                                      // 0x32B8   (0x0018)  MISSED
	TArray<TScriptInterface>                           CameraLensEffects;                                          // 0x32D0   (0x0010)  
	UCameraModifier_CameraShake*                       CachedCameraShakeMod;                                       // 0x32E0   (0x0008)  
	TArray<FPostProcessSettings>                       PostProcessBlendCache;                                      // 0x32E8   (0x0010)  
	unsigned char                                      UnknownData07_5[0x10];                                      // 0x32F8   (0x0010)  MISSED
	ACameraActor*                                      AnimCameraActor;                                            // 0x3308   (0x0008)  
	bool                                               bIsOrthographic : 1;                                        // 0x3310:0 (0x0001)  
	bool                                               bDefaultConstrainAspectRatio : 1;                           // 0x3310:1 (0x0001)  
	unsigned char                                      UnknownBit08 : 1;                                           // 0x3310:2 (0x0001)  MISSED
	unsigned char                                      UnknownBit09 : 1;                                           // 0x3310:3 (0x0001)  MISSED
	unsigned char                                      UnknownBit10 : 1;                                           // 0x3310:4 (0x0001)  MISSED
	unsigned char                                      UnknownBit11 : 1;                                           // 0x3310:5 (0x0001)  MISSED
	bool                                               bClientSimulatingViewTarget : 1;                            // 0x3310:6 (0x0001)  
	bool                                               bUseClientSideCameraUpdates : 1;                            // 0x3310:7 (0x0001)  
	unsigned char                                      UnknownBit12 : 1;                                           // 0x3311:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit13 : 1;                                           // 0x3311:1 (0x0001)  MISSED
	bool                                               bGameCameraCutThisFrame : 1;                                // 0x3311:2 (0x0001)  
	unsigned char                                      UnknownData14_4[0x2];                                       // 0x3312   (0x0002)  MISSED
	float                                              ViewPitchMin;                                               // 0x3314   (0x0004)  
	float                                              ViewPitchMax;                                               // 0x3318   (0x0004)  
	float                                              ViewYawMin;                                                 // 0x331C   (0x0004)  
	float                                              ViewYawMax;                                                 // 0x3320   (0x0004)  
	float                                              ViewRollMin;                                                // 0x3324   (0x0004)  
	float                                              ViewRollMax;                                                // 0x3328   (0x0004)  
	unsigned char                                      UnknownData15_5[0x4];                                       // 0x332C   (0x0004)  MISSED
	float                                              ServerUpdateCameraTimeout;                                  // 0x3330   (0x0004)  
	unsigned char                                      UnknownData16_6[0xC];                                       // 0x3334   (0x000C)  MISSED


	/// Functions
	// Function /Script/Engine.PlayerCameraManager.SwapPendingViewTargetWhenUsingClientSideCameraUpdates
	void SwapPendingViewTargetWhenUsingClientSideCameraUpdates();                                                            // [0x467c8f0] Final|Native|Protected 
	// Function /Script/Engine.PlayerCameraManager.StopCameraShake
	void StopCameraShake(UCameraShakeBase* ShakeInstance, bool bImmediately);                                                // [0x467c820] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.StopCameraFade
	void StopCameraFade();                                                                                                   // [0x467c800] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.StopAllInstancesOfCameraShakeFromSource
	void StopAllInstancesOfCameraShakeFromSource(UClass* Shake, UCameraShakeSourceComponent* SourceComponent, bool bImmediately); // [0x467c6f0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.StopAllInstancesOfCameraShake
	void StopAllInstancesOfCameraShake(UClass* Shake, bool bImmediately);                                                    // [0x467c620] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.StopAllCameraShakesFromSource
	void StopAllCameraShakesFromSource(UCameraShakeSourceComponent* SourceComponent, bool bImmediately);                     // [0x467c550] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.StopAllCameraShakes
	void StopAllCameraShakes(bool bImmediately);                                                                             // [0x467c4c0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.StartCameraShakeFromSource
	UCameraShakeBase* StartCameraShakeFromSource(UClass* ShakeClass, UCameraShakeSourceComponent* SourceComponent, float Scale, ECameraShakePlaySpace PlaySpace, FRotator UserPlaySpaceRot); // [0x467c2d0] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.StartCameraShake
	UCameraShakeBase* StartCameraShake(UClass* ShakeClass, float Scale, ECameraShakePlaySpace PlaySpace, FRotator UserPlaySpaceRot); // [0x467c130] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.StartCameraFade
	void StartCameraFade(float FromAlpha, float ToAlpha, float Duration, FLinearColor Color, bool bShouldFadeAudio, bool bHoldWhenFinished); // [0x467bf40] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.SetManualCameraFade
	void SetManualCameraFade(float InFadeAmount, FLinearColor Color, bool bInFadeAudio);                                     // [0x467be10] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.SetGameCameraCutThisFrame
	void SetGameCameraCutThisFrame();                                                                                        // [0x467bdf0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.RemoveGenericCameraLensEffect
	void RemoveGenericCameraLensEffect(TScriptInterface<Class> Emitter);                                                     // [0x467bd60] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.RemoveCameraModifier
	bool RemoveCameraModifier(UCameraModifier* ModifierToRemove);                                                            // [0x467bcc0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.RemoveCameraLensEffect
	void RemoveCameraLensEffect(AEmitterCameraLensEffectBase* Emitter);                                                      // [0x467bc30] Native|Public        
	// Function /Script/Engine.PlayerCameraManager.PhotographyCameraModify
	void PhotographyCameraModify(FVector NewCameraLocation, FVector PreviousCameraLocation, FVector OriginalCameraLocation, FVector& ResultCameraLocation); // [0x467ba90] BlueprintCosmetic|Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/Engine.PlayerCameraManager.OnPhotographySessionStart
	void OnPhotographySessionStart();                                                                                        // [0xc003e0] BlueprintCosmetic|Native|Event|Public|BlueprintEvent 
	// Function /Script/Engine.PlayerCameraManager.OnPhotographySessionEnd
	void OnPhotographySessionEnd();                                                                                          // [0x467ba70] BlueprintCosmetic|Native|Event|Public|BlueprintEvent 
	// Function /Script/Engine.PlayerCameraManager.OnPhotographyMultiPartCaptureStart
	void OnPhotographyMultiPartCaptureStart();                                                                               // [0x11d0280] BlueprintCosmetic|Native|Event|Public|BlueprintEvent 
	// Function /Script/Engine.PlayerCameraManager.OnPhotographyMultiPartCaptureEnd
	void OnPhotographyMultiPartCaptureEnd();                                                                                 // [0x463cd10] BlueprintCosmetic|Native|Event|Public|BlueprintEvent 
	// Function /Script/Engine.PlayerCameraManager.GetOwningPlayerController
	APlayerController* GetOwningPlayerController();                                                                          // [0x467b8f0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerCameraManager.GetFOVAngle
	float GetFOVAngle();                                                                                                     // [0x467b620] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerCameraManager.GetCameraRotation
	FRotator GetCameraRotation();                                                                                            // [0x467b5d0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerCameraManager.GetCameraLocation
	FVector GetCameraLocation();                                                                                             // [0x467b580] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PlayerCameraManager.FindCameraModifierByClass
	UCameraModifier* FindCameraModifierByClass(UClass* ModifierClass);                                                       // [0x467b4e0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.ClearCameraLensEffects
	void ClearCameraLensEffects();                                                                                           // [0x467b4c0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.BlueprintUpdateCamera
	bool BlueprintUpdateCamera(AActor* CameraTarget, FVector& NewCameraLocation, FRotator& NewCameraRotation, float& NewCameraFOV); // [0x2e6eb70] BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/Engine.PlayerCameraManager.AddNewCameraModifier
	UCameraModifier* AddNewCameraModifier(UClass* ModifierClass);                                                            // [0x467b420] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.AddGenericCameraLensEffect
	TScriptInterface<Class> AddGenericCameraLensEffect(UClass* LensEffectEmitterClass);                                      // [0x467b370] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlayerCameraManager.AddCameraLensEffect
	AEmitterCameraLensEffectBase* AddCameraLensEffect(UClass* LensEffectEmitterClass);                                       // [0x467b120] Native|Public        
};

/// Class /Script/Engine.PlayerStateCountLimiterConfig
/// Size: 0x0000 (0x000028 - 0x000028)
class UPlayerStateCountLimiterConfig : public UNetObjectCountLimiterConfig
{ 
public:
};

/// Class /Script/Engine.PointLight
/// Size: 0x0008 (0x0002A0 - 0x0002A8)
class APointLight : public ALight
{ 
public:
	UPointLightComponent*                              PointLightComponent;                                        // 0x02A0   (0x0008)  


	/// Functions
	// Function /Script/Engine.PointLight.SetRadius
	void SetRadius(float NewRadius);                                                                                         // [0x46856e0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PointLight.SetLightFalloffExponent
	void SetLightFalloffExponent(float NewLightFalloffExponent);                                                             // [0x46848c0] Final|RequiredAPI|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.Polys
/// Size: 0x0010 (0x000028 - 0x000038)
class UPolys : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/Engine.PrecomputedVisibilityOverrideVolume
/// Size: 0x0030 (0x0002C8 - 0x0002F8)
class APrecomputedVisibilityOverrideVolume : public AVolume
{ 
public:
	TArray<AActor*>                                    OverrideVisibleActors;                                      // 0x02C8   (0x0010)  
	TArray<AActor*>                                    OverrideInvisibleActors;                                    // 0x02D8   (0x0010)  
	TArray<FName>                                      OverrideInvisibleLevels;                                    // 0x02E8   (0x0010)  
};

/// Class /Script/Engine.RigidBodyBase
/// Size: 0x0000 (0x000290 - 0x000290)
class ARigidBodyBase : public AActor
{ 
public:
};

/// Class /Script/Engine.RadialForceActor
/// Size: 0x0008 (0x000290 - 0x000298)
class ARadialForceActor : public ARigidBodyBase
{ 
public:
	URadialForceComponent*                             ForceComponent;                                             // 0x0290   (0x0008)  


	/// Functions
	// Function /Script/Engine.RadialForceActor.ToggleForce
	void ToggleForce();                                                                                                      // [0xc003e0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.RadialForceActor.FireImpulse
	void FireImpulse();                                                                                                      // [0x463cd10] Native|Public|BlueprintCallable 
	// Function /Script/Engine.RadialForceActor.EnableForce
	void EnableForce();                                                                                                      // [0x11d0280] Native|Public|BlueprintCallable 
	// Function /Script/Engine.RadialForceActor.DisableForce
	void DisableForce();                                                                                                     // [0x467ba70] Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.RVOAvoidanceInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class URVOAvoidanceInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.Scene
/// Size: 0x0000 (0x000028 - 0x000028)
class UScene : public UObject
{ 
public:
};

/// Class /Script/Engine.SceneCapture2D
/// Size: 0x0008 (0x0002A0 - 0x0002A8)
class ASceneCapture2D : public ASceneCapture
{ 
public:
	USceneCaptureComponent2D*                          CaptureComponent2D;                                         // 0x02A0   (0x0008)  


	/// Functions
	// Function /Script/Engine.SceneCapture2D.OnInterpToggle
	void OnInterpToggle(bool bEnable);                                                                                       // [0x467b9e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.SceneCaptureComponentCube
/// Size: 0x0010 (0x000360 - 0x000370)
class USceneCaptureComponentCube : public USceneCaptureComponent
{ 
public:
	UTextureRenderTargetCube*                          TextureTarget;                                              // 0x0358   (0x0008)  
	bool                                               bCaptureRotation;                                           // 0x0360   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0361   (0x000F)  MISSED


	/// Functions
	// Function /Script/Engine.SceneCaptureComponentCube.CaptureScene
	void CaptureScene();                                                                                                     // [0x468c000] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.SceneCaptureCube
/// Size: 0x0008 (0x0002A0 - 0x0002A8)
class ASceneCaptureCube : public ASceneCapture
{ 
public:
	USceneCaptureComponentCube*                        CaptureComponentCube;                                       // 0x02A0   (0x0008)  


	/// Functions
	// Function /Script/Engine.SceneCaptureCube.OnInterpToggle
	void OnInterpToggle(bool bEnable);                                                                                       // [0x467b9e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.ServerStreamingLevelsVisibility
/// Size: 0x0050 (0x000290 - 0x0002E0)
class AServerStreamingLevelsVisibility : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0290   (0x0050)  MISSED
};

/// Class /Script/Engine.ShadowMapTexture2D
/// Size: 0x0000 (0x0002B0 - 0x0002B0)
class UShadowMapTexture2D : public UTexture2D
{ 
public:
};

/// Class /Script/Engine.SkeletalMeshSocket
/// Size: 0x0060 (0x000028 - 0x000088)
class USkeletalMeshSocket : public UObject
{ 
public:
	FName                                              SocketName;                                                 // 0x0028   (0x0008)  
	FName                                              BoneName;                                                   // 0x0030   (0x0008)  
	FVector                                            RelativeLocation;                                           // 0x0038   (0x0018)  
	FRotator                                           RelativeRotation;                                           // 0x0050   (0x0018)  
	FVector                                            RelativeScale;                                              // 0x0068   (0x0018)  
	bool                                               bForceAlwaysAnimated;                                       // 0x0080   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0081   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.SkeletalMeshSocket.InitializeSocketFromLocation
	void InitializeSocketFromLocation(USkeletalMeshComponent* SkelComp, FVector WorldLocation, FVector WorldNormal);         // [0x4695160] Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkeletalMeshSocket.GetSocketLocation
	FVector GetSocketLocation(USkeletalMeshComponent* SkelComp);                                                             // [0x4694eb0] Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.SkinnedAsset
/// Size: 0x0008 (0x0000D0 - 0x0000D8)
class USkinnedAsset : public UStreamableRenderAsset
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x00D0   (0x0008)  MISSED
};

/// Class /Script/Engine.SkyLightComponent
/// Size: 0x01D0 (0x0002E0 - 0x0004B0)
class USkyLightComponent : public ULightComponentBase
{ 
public:
	bool                                               bRealTimeCapture;                                           // 0x02D8   (0x0001)  
	TEnumAsByte<ESkyLightSourceType>                   SourceType;                                                 // 0x02D9   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x02DA   (0x0006)  MISSED
	UTextureCube*                                      Cubemap;                                                    // 0x02E0   (0x0008)  
	float                                              SourceCubemapAngle;                                         // 0x02E8   (0x0004)  
	int32_t                                            CubemapResolution;                                          // 0x02EC   (0x0004)  
	float                                              SkyDistanceThreshold;                                       // 0x02F0   (0x0004)  
	bool                                               bCaptureEmissiveOnly;                                       // 0x02F4   (0x0001)  
	bool                                               bLowerHemisphereIsBlack;                                    // 0x02F5   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x02F6   (0x0002)  MISSED
	FLinearColor                                       LowerHemisphereColor;                                       // 0x02F8   (0x0010)  
	float                                              OcclusionMaxDistance;                                       // 0x0308   (0x0004)  
	float                                              Contrast;                                                   // 0x030C   (0x0004)  
	float                                              OcclusionExponent;                                          // 0x0310   (0x0004)  
	float                                              MinOcclusion;                                               // 0x0314   (0x0004)  
	FColor                                             OcclusionTint;                                              // 0x0318   (0x0004)  
	bool                                               bCloudAmbientOcclusion : 1;                                 // 0x031C:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x031D   (0x0003)  MISSED
	float                                              CloudAmbientOcclusionStrength;                              // 0x0320   (0x0004)  
	float                                              CloudAmbientOcclusionExtent;                                // 0x0324   (0x0004)  
	float                                              CloudAmbientOcclusionMapResolutionScale;                    // 0x0328   (0x0004)  
	float                                              CloudAmbientOcclusionApertureScale;                         // 0x032C   (0x0004)  
	TEnumAsByte<EOcclusionCombineMode>                 OcclusionCombineMode;                                       // 0x0330   (0x0001)  
	unsigned char                                      UnknownData03_5[0xA7];                                      // 0x0331   (0x00A7)  MISSED
	UTextureCube*                                      BlendDestinationCubemap;                                    // 0x03D8   (0x0008)  
	unsigned char                                      UnknownData04_6[0xD0];                                      // 0x03E0   (0x00D0)  MISSED


	/// Functions
	// Function /Script/Engine.SkyLightComponent.SetVolumetricScatteringIntensity
	void SetVolumetricScatteringIntensity(float NewIntensity);                                                               // [0x46991a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyLightComponent.SetSourceCubemapAngle
	void SetSourceCubemapAngle(float NewValue);                                                                              // [0x4699120] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyLightComponent.SetOcclusionTint
	void SetOcclusionTint(FColor& InTint);                                                                                   // [0x4699090] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkyLightComponent.SetOcclusionExponent
	void SetOcclusionExponent(float InOcclusionExponent);                                                                    // [0x4699010] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyLightComponent.SetOcclusionContrast
	void SetOcclusionContrast(float InOcclusionContrast);                                                                    // [0x4698f90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyLightComponent.SetMinOcclusion
	void SetMinOcclusion(float InMinOcclusion);                                                                              // [0x4698f10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyLightComponent.SetLowerHemisphereColor
	void SetLowerHemisphereColor(FLinearColor& InLowerHemisphereColor);                                                      // [0x4698e80] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkyLightComponent.SetLightColor
	void SetLightColor(FLinearColor NewLightColor);                                                                          // [0x4698df0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkyLightComponent.SetIntensity
	void SetIntensity(float NewIntensity);                                                                                   // [0x4698d70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyLightComponent.SetIndirectLightingIntensity
	void SetIndirectLightingIntensity(float NewIntensity);                                                                   // [0x4698cf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyLightComponent.SetCubemapBlend
	void SetCubemapBlend(UTextureCube* SourceCubemap, UTextureCube* DestinationCubemap, float InBlendFraction);              // [0x4698bd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyLightComponent.SetCubemap
	void SetCubemap(UTextureCube* NewCubemap);                                                                               // [0x4698b40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyLightComponent.RecaptureSky
	void RecaptureSky();                                                                                                     // [0x4698b20] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.SMInstanceManager
/// Size: 0x0000 (0x000028 - 0x000028)
class USMInstanceManager : public UInterface
{ 
public:
};

/// Class /Script/Engine.SMInstanceManagerProvider
/// Size: 0x0000 (0x000028 - 0x000028)
class USMInstanceManagerProvider : public UInterface
{ 
public:
};

/// Class /Script/Engine.SoundAttenuation
/// Size: 0x03C8 (0x000028 - 0x0003F0)
class USoundAttenuation : public UObject
{ 
public:
	FSoundAttenuationSettings                          Attenuation;                                                // 0x0028   (0x03C8)  
};

/// Class /Script/Engine.SoundEffectPresetWidgetInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class USoundEffectPresetWidgetInterface : public UAudioPanelWidgetInterface
{ 
public:
};

/// Class /Script/Engine.SoundEffectSourcePresetChain
/// Size: 0x0018 (0x000028 - 0x000040)
class USoundEffectSourcePresetChain : public UObject
{ 
public:
	TArray<FSourceEffectChainEntry>                    chain;                                                      // 0x0028   (0x0010)  
	bool                                               bPlayEffectChainTails : 1;                                  // 0x0038:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Class /Script/Engine.SoundGroups
/// Size: 0x0060 (0x000028 - 0x000088)
class USoundGroups : public UObject
{ 
public:
	TArray<FSoundGroup>                                SoundGroupProfiles;                                         // 0x0028   (0x0010)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x0038   (0x0050)  MISSED
};

/// Class /Script/Engine.SoundNode
/// Size: 0x0020 (0x000028 - 0x000048)
class USoundNode : public UObject
{ 
public:
	TArray<USoundNode*>                                ChildNodes;                                                 // 0x0028   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x0038   (0x0010)  MISSED
};

/// Class /Script/Engine.SoundNodeModulatorContinuous
/// Size: 0x0040 (0x000048 - 0x000088)
class USoundNodeModulatorContinuous : public USoundNode
{ 
public:
	FModulatorContinuousParams                         PitchModulationParams;                                      // 0x0048   (0x0020)  
	FModulatorContinuousParams                         VolumeModulationParams;                                     // 0x0068   (0x0020)  
};

/// Class /Script/Engine.SoundSubmixWidgetInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class USoundSubmixWidgetInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.SphereReflectionCapture
/// Size: 0x0008 (0x000298 - 0x0002A0)
class ASphereReflectionCapture : public AReflectionCapture
{ 
public:
	UDrawSphereComponent*                              DrawCaptureRadius;                                          // 0x0298   (0x0008)  
};

/// Class /Script/Engine.SphereReflectionCaptureComponent
/// Size: 0x0010 (0x000310 - 0x000320)
class USphereReflectionCaptureComponent : public UReflectionCaptureComponent
{ 
public:
	float                                              InfluenceRadius;                                            // 0x0310   (0x0004)  
	float                                              CaptureDistanceScale;                                       // 0x0314   (0x0004)  
	UDrawSphereComponent*                              PreviewInfluenceRadius;                                     // 0x0318   (0x0008)  
};

/// Class /Script/Engine.StaticMesh
/// Size: 0x0188 (0x0000D0 - 0x000258)
class UStaticMesh : public UStreamableRenderAsset
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x00D0   (0x0020)  MISSED
	FPerQualityLevelInt                                MinQualityLevelLOD;                                         // 0x00F0   (0x0068)  
	FPerPlatformInt                                    MinLOD;                                                     // 0x0158   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x015C   (0x0004)  MISSED
	TArray<FStaticMaterial>                            StaticMaterials;                                            // 0x0160   (0x0010)  
	float                                              LightmapUVDensity;                                          // 0x0170   (0x0004)  
	int32_t                                            LightMapResolution;                                         // 0x0174   (0x0004)  
	int32_t                                            LightMapCoordinateIndex;                                    // 0x0178   (0x0004)  
	float                                              DistanceFieldSelfShadowBias;                                // 0x017C   (0x0004)  
	UBodySetup*                                        BodySetup;                                                  // 0x0180   (0x0008)  
	int32_t                                            LODForCollision;                                            // 0x0188   (0x0004)  
	bool                                               bGenerateMeshDistanceField : 1;                             // 0x018C:0 (0x0001)  
	bool                                               bStripComplexCollisionForConsole : 1;                       // 0x018C:1 (0x0001)  
	bool                                               bHasNavigationData : 1;                                     // 0x018C:2 (0x0001)  
	bool                                               bSupportUniformlyDistributedSampling : 1;                   // 0x018C:3 (0x0001)  
	bool                                               bSupportPhysicalMaterialMasks : 1;                          // 0x018C:4 (0x0001)  
	bool                                               bSupportRayTracing : 1;                                     // 0x018C:5 (0x0001)  
	bool                                               bDoFastBuild : 1;                                           // 0x018C:6 (0x0001)  
	bool                                               bIsBuiltAtRuntime : 1;                                      // 0x018C:7 (0x0001)  
	unsigned char                                      UnknownBit02 : 1;                                           // 0x018D:0 (0x0001)  MISSED
	bool                                               bAllowCPUAccess : 1;                                        // 0x018D:1 (0x0001)  
	bool                                               bSupportGpuUniformlyDistributedSampling : 1;                // 0x018D:2 (0x0001)  
	unsigned char                                      UnknownData03_4[0x22];                                      // 0x018E   (0x0022)  MISSED
	TArray<UStaticMeshSocket*>                         Sockets;                                                    // 0x01B0   (0x0010)  
	unsigned char                                      UnknownData04_5[0x10];                                      // 0x01C0   (0x0010)  MISSED
	FVector                                            PositiveBoundsExtension;                                    // 0x01D0   (0x0018)  
	FVector                                            NegativeBoundsExtension;                                    // 0x01E8   (0x0018)  
	FBoxSphereBounds                                   ExtendedBounds;                                             // 0x0200   (0x0038)  
	int32_t                                            ElementToIgnoreForTexFactor;                                // 0x0238   (0x0004)  
	unsigned char                                      UnknownData05_5[0x4];                                       // 0x023C   (0x0004)  MISSED
	TArray<UAssetUserData*>                            AssetUserData;                                              // 0x0240   (0x0010)  
	UNavCollisionBase*                                 NavCollision;                                               // 0x0250   (0x0008)  


	/// Functions
	// Function /Script/Engine.StaticMesh.SetStaticMaterials
	void SetStaticMaterials(TArray<FStaticMaterial>& InStaticMaterials);                                                     // [0x469cac0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.StaticMesh.SetMinLODForQualityLevels
	void SetMinLODForQualityLevels(TMap<EPerQualityLevels, int32_t>& QualityLevelMinimumLODs, int32_t Default);              // [0x469c7d0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.StaticMesh.SetMinimumLODForPlatforms
	void SetMinimumLODForPlatforms(TMap<FName, int32_t>& PlatformMinimumLODs);                                               // [0x469c2b0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.StaticMesh.SetMinimumLODForPlatform
	void SetMinimumLODForPlatform(FName& PlatformName, int32_t InMinLOD);                                                    // [0x469c940] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.StaticMesh.RemoveSocket
	void RemoveSocket(UStaticMeshSocket* Socket);                                                                            // [0x469c740] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StaticMesh.GetStaticMeshDescription
	UStaticMeshDescription* GetStaticMeshDescription(int32_t LODIndex);                                                      // [0x469c6a0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StaticMesh.GetStaticMaterials
	TArray<FStaticMaterial> GetStaticMaterials();                                                                            // [0x469c670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.GetSocketsByTag
	TArray<UStaticMeshSocket*> GetSocketsByTag(FString InSocketTag);                                                         // [0x469c550] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.GetNumTriangles
	int32_t GetNumTriangles(int32_t LODIndex);                                                                               // [0x469c4b0] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.GetNumSections
	int32_t GetNumSections(int32_t InLOD);                                                                                   // [0x469c410] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.GetNumLODs
	int32_t GetNumLODs();                                                                                                    // [0x469c3e0] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.GetMinLODForQualityLevels
	void GetMinLODForQualityLevels(TMap<EPerQualityLevels, int32_t>& QualityLevelMinimumLODs, int32_t& Default);             // [0x469c0b0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.GetMinimumLODForQualityLevels
	void GetMinimumLODForQualityLevels(TMap<FName, int32_t>& QualityLevelMinimumLODs);                                       // [0x469c2b0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.GetMinimumLODForQualityLevel
	int32_t GetMinimumLODForQualityLevel(FName& QualityLevel);                                                               // [0x469c220] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.GetMinimumLODForPlatforms
	void GetMinimumLODForPlatforms(TMap<FName, int32_t>& PlatformMinimumLODs);                                               // [0x469c2b0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.GetMinimumLODForPlatform
	int32_t GetMinimumLODForPlatform(FName& PlatformName);                                                                   // [0x469c220] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.GetMaterialIndex
	int32_t GetMaterialIndex(FName MaterialSlotName);                                                                        // [0x469c010] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.GetMaterial
	UMaterialInterface* GetMaterial(int32_t MaterialIndex);                                                                  // [0x469bf70] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.GetBounds
	FBoxSphereBounds GetBounds();                                                                                            // [0x469bf20] Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.GetBoundingBox
	FBox GetBoundingBox();                                                                                                   // [0x469bed0] Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.FindSocket
	UStaticMeshSocket* FindSocket(FName InSocketName);                                                                       // [0x469be30] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StaticMesh.CreateStaticMeshDescription
	UStaticMeshDescription* CreateStaticMeshDescription(UObject* Outer);                                                     // [0x469bda0] Final|RequiredAPI|Native|Static|Public|BlueprintCallable 
	// Function /Script/Engine.StaticMesh.BuildFromStaticMeshDescriptions
	void BuildFromStaticMeshDescriptions(TArray<UStaticMeshDescription*>& StaticMeshDescriptions, bool bBuildSimpleCollision, bool bFastBuild); // [0x469bc50] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.StaticMesh.AddSocket
	void AddSocket(UStaticMeshSocket* Socket);                                                                               // [0x469bbc0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StaticMesh.AddMaterial
	FName AddMaterial(UMaterialInterface* Material);                                                                         // [0x469bb30] Final|RequiredAPI|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.StaticMeshSocket
/// Size: 0x0060 (0x000028 - 0x000088)
class UStaticMeshSocket : public UObject
{ 
public:
	FName                                              SocketName;                                                 // 0x0028   (0x0008)  
	FVector                                            RelativeLocation;                                           // 0x0030   (0x0018)  
	FRotator                                           RelativeRotation;                                           // 0x0048   (0x0018)  
	FVector                                            RelativeScale;                                              // 0x0060   (0x0018)  
	FString                                            Tag;                                                        // 0x0078   (0x0010)  
};

/// Class /Script/Engine.StereoLayerShape
/// Size: 0x0000 (0x000028 - 0x000028)
class UStereoLayerShape : public UObject
{ 
public:
};

/// Class /Script/Engine.StereoLayerShapeQuad
/// Size: 0x0000 (0x000028 - 0x000028)
class UStereoLayerShapeQuad : public UStereoLayerShape
{ 
public:
};

/// Class /Script/Engine.StereoLayerShapeCylinder
/// Size: 0x0010 (0x000028 - 0x000038)
class UStereoLayerShapeCylinder : public UStereoLayerShape
{ 
public:
	float                                              Radius;                                                     // 0x0028   (0x0004)  
	float                                              OverlayArc;                                                 // 0x002C   (0x0004)  
	int32_t                                            Height;                                                     // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED


	/// Functions
	// Function /Script/Engine.StereoLayerShapeCylinder.SetRadius
	void SetRadius(float InRadius);                                                                                          // [0x46a06e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StereoLayerShapeCylinder.SetOverlayArc
	void SetOverlayArc(float InOverlayArc);                                                                                  // [0x46a0540] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StereoLayerShapeCylinder.SetHeight
	void SetHeight(int32_t InHeight);                                                                                        // [0x46a0320] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.StereoLayerShapeCubemap
/// Size: 0x0000 (0x000028 - 0x000028)
class UStereoLayerShapeCubemap : public UStereoLayerShape
{ 
public:
};

/// Class /Script/Engine.StereoLayerShapeEquirect
/// Size: 0x0090 (0x000028 - 0x0000B8)
class UStereoLayerShapeEquirect : public UStereoLayerShape
{ 
public:
	FBox2D                                             LeftUVRect;                                                 // 0x0028   (0x0028)  
	FBox2D                                             RightUVRect;                                                // 0x0050   (0x0028)  
	FVector2D                                          LeftScale;                                                  // 0x0078   (0x0010)  
	FVector2D                                          RightScale;                                                 // 0x0088   (0x0010)  
	FVector2D                                          LeftBias;                                                   // 0x0098   (0x0010)  
	FVector2D                                          RightBias;                                                  // 0x00A8   (0x0010)  


	/// Functions
	// Function /Script/Engine.StereoLayerShapeEquirect.SetEquirectProps
	void SetEquirectProps(FEquirectProps InScaleBiases);                                                                     // [0x46a0170] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.StereoLayerComponent
/// Size: 0x0190 (0x0002A0 - 0x000430)
class UStereoLayerComponent : public USceneComponent
{ 
public:
	bool                                               bLiveTexture : 1;                                           // 0x02A0:0 (0x0001)  
	bool                                               bSupportsDepth : 1;                                         // 0x02A0:1 (0x0001)  
	bool                                               bNoAlphaChannel : 1;                                        // 0x02A0:2 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x02A1   (0x0007)  MISSED
	UTexture*                                          Texture;                                                    // 0x02A8   (0x0008)  
	UTexture*                                          LeftTexture;                                                // 0x02B0   (0x0008)  
	bool                                               bQuadPreserveTextureRatio : 1;                              // 0x02B8:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x7];                                       // 0x02B9   (0x0007)  MISSED
	FVector2D                                          QuadSize;                                                   // 0x02C0   (0x0010)  
	FBox2D                                             UVRect;                                                     // 0x02D0   (0x0028)  
	float                                              CylinderRadius;                                             // 0x02F8   (0x0004)  
	float                                              CylinderOverlayArc;                                         // 0x02FC   (0x0004)  
	int32_t                                            CylinderHeight;                                             // 0x0300   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0304   (0x0004)  MISSED
	FEquirectProps                                     EquirectProps;                                              // 0x0308   (0x0090)  
	TEnumAsByte<EStereoLayerType>                      StereoLayerType;                                            // 0x0398   (0x0001)  
	TEnumAsByte<EStereoLayerShape>                     StereoLayerShape;                                           // 0x0399   (0x0001)  
	unsigned char                                      UnknownData03_5[0x6];                                       // 0x039A   (0x0006)  MISSED
	UStereoLayerShape*                                 Shape;                                                      // 0x03A0   (0x0008)  
	int32_t                                            Priority;                                                   // 0x03A8   (0x0004)  
	unsigned char                                      UnknownData04_6[0x84];                                      // 0x03AC   (0x0084)  MISSED


	/// Functions
	// Function /Script/Engine.StereoLayerComponent.SetUVRect
	void SetUVRect(FBox2D InUVRect);                                                                                         // [0x46a0900] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.StereoLayerComponent.SetTexture
	void SetTexture(UTexture* InTexture);                                                                                    // [0x46a0870] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StereoLayerComponent.SetQuadSize
	void SetQuadSize(FVector2D InQuadSize);                                                                                  // [0x46a0650] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.StereoLayerComponent.SetPriority
	void SetPriority(int32_t InPriority);                                                                                    // [0x46a05c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StereoLayerComponent.SetLeftTexture
	void SetLeftTexture(UTexture* InTexture);                                                                                // [0x46a04b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StereoLayerComponent.SetEquirectProps
	void SetEquirectProps(FEquirectProps InScaleBiases);                                                                     // [0x46a0050] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StereoLayerComponent.MarkTextureForUpdate
	void MarkTextureForUpdate();                                                                                             // [0x46a0030] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.StereoLayerComponent.GetUVRect
	FBox2D GetUVRect();                                                                                                      // [0x469ff20] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StereoLayerComponent.GetTexture
	UTexture* GetTexture();                                                                                                  // [0x1122a50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StereoLayerComponent.GetQuadSize
	FVector2D GetQuadSize();                                                                                                 // [0x469fe70] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StereoLayerComponent.GetPriority
	int32_t GetPriority();                                                                                                   // [0x469fe50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.StereoLayerComponent.GetLeftTexture
	UTexture* GetLeftTexture();                                                                                              // [0x469fe30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.SubUVAnimation
/// Size: 0x0040 (0x000028 - 0x000068)
class USubUVAnimation : public UObject
{ 
public:
	UTexture2D*                                        SubUVTexture;                                               // 0x0028   (0x0008)  
	int32_t                                            SubImages_Horizontal;                                       // 0x0030   (0x0004)  
	int32_t                                            SubImages_Vertical;                                         // 0x0034   (0x0004)  
	TEnumAsByte<ESubUVBoundingVertexCount>             BoundingMode;                                               // 0x0038   (0x0001)  
	TEnumAsByte<EOpacitySourceMode>                    OpacitySourceMode;                                          // 0x0039   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x003A   (0x0002)  MISSED
	float                                              AlphaThreshold;                                             // 0x003C   (0x0004)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x0040   (0x0028)  MISSED
};

/// Class /Script/Engine.TextPropertyTestObject
/// Size: 0x0048 (0x000028 - 0x000070)
class UTextPropertyTestObject : public UObject
{ 
public:
	FText                                              DefaultedText;                                              // 0x0028   (0x0018)  
	FText                                              UndefaultedText;                                            // 0x0040   (0x0018)  
	FText                                              TransientText;                                              // 0x0058   (0x0018)  
};

/// Class /Script/Engine.TextRenderActor
/// Size: 0x0008 (0x000290 - 0x000298)
class ATextRenderActor : public AActor
{ 
public:
	UTextRenderComponent*                              TextRender;                                                 // 0x0290   (0x0008)  
};

/// Class /Script/Engine.TextRenderComponent
/// Size: 0x0050 (0x000540 - 0x000590)
class UTextRenderComponent : public UPrimitiveComponent
{ 
public:
	FText                                              Text;                                                       // 0x0538   (0x0018)  
	UMaterialInterface*                                TextMaterial;                                               // 0x0550   (0x0008)  
	UFont*                                             Font;                                                       // 0x0558   (0x0008)  
	TEnumAsByte<EHorizTextAligment>                    HorizontalAlignment;                                        // 0x0560   (0x0001)  
	TEnumAsByte<EVerticalTextAligment>                 VerticalAlignment;                                          // 0x0561   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0562   (0x0002)  MISSED
	FColor                                             TextRenderColor;                                            // 0x0564   (0x0004)  
	float                                              XScale;                                                     // 0x0568   (0x0004)  
	float                                              YScale;                                                     // 0x056C   (0x0004)  
	float                                              WorldSize;                                                  // 0x0570   (0x0004)  
	float                                              InvDefaultSize;                                             // 0x0574   (0x0004)  
	float                                              HorizSpacingAdjust;                                         // 0x0578   (0x0004)  
	float                                              VertSpacingAdjust;                                          // 0x057C   (0x0004)  
	bool                                               bAlwaysRenderAsText : 1;                                    // 0x0580:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0xF];                                       // 0x0581   (0x000F)  MISSED


	/// Functions
	// Function /Script/Engine.TextRenderComponent.SetYScale
	void SetYScale(float Value);                                                                                             // [0x46a0ba0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TextRenderComponent.SetXScale
	void SetXScale(float Value);                                                                                             // [0x46a0b20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TextRenderComponent.SetWorldSize
	void SetWorldSize(float Value);                                                                                          // [0x46a0aa0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TextRenderComponent.SetVertSpacingAdjust
	void SetVertSpacingAdjust(float Value);                                                                                  // [0x46a09a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TextRenderComponent.SetVerticalAlignment
	void SetVerticalAlignment(TEnumAsByte<EVerticalTextAligment> Value);                                                     // [0x46a0a20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TextRenderComponent.SetTextRenderColor
	void SetTextRenderColor(FColor Value);                                                                                   // [0x46a07f0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.TextRenderComponent.SetTextMaterial
	void SetTextMaterial(UMaterialInterface* Material);                                                                      // [0x46a0760] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TextRenderComponent.SetHorizSpacingAdjust
	void SetHorizSpacingAdjust(float Value);                                                                                 // [0x46a03b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TextRenderComponent.SetHorizontalAlignment
	void SetHorizontalAlignment(TEnumAsByte<EHorizTextAligment> Value);                                                      // [0x46a0430] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TextRenderComponent.SetFont
	void SetFont(UFont* Value);                                                                                              // [0x46a0290] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TextRenderComponent.K2_SetText
	void K2_SetText(FText& Value);                                                                                           // [0x469ff60] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.TextRenderComponent.GetTextWorldSize
	FVector GetTextWorldSize();                                                                                              // [0x469fee0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.TextRenderComponent.GetTextLocalSize
	FVector GetTextLocalSize();                                                                                              // [0x469fea0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.TextureRenderTarget
/// Size: 0x0010 (0x0001F0 - 0x000200)
class UTextureRenderTarget : public UTexture
{ 
public:
	float                                              TargetGamma;                                                // 0x01F0   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x01F4   (0x000C)  MISSED
};

/// Class /Script/Engine.TextureRenderTarget2D
/// Size: 0x0020 (0x000200 - 0x000220)
class UTextureRenderTarget2D : public UTextureRenderTarget
{ 
public:
	int32_t                                            SizeX;                                                      // 0x01F8   (0x0004)  
	int32_t                                            SizeY;                                                      // 0x01FC   (0x0004)  
	FLinearColor                                       ClearColor;                                                 // 0x0200   (0x0010)  
	TEnumAsByte<TextureAddress>                        AddressX;                                                   // 0x0210   (0x0001)  
	TEnumAsByte<TextureAddress>                        AddressY;                                                   // 0x0211   (0x0001)  
	bool                                               bForceLinearGamma : 1;                                      // 0x0212:0 (0x0001)  
	bool                                               bHDR : 1;                                                   // 0x0212:1 (0x0001)  
	bool                                               bGPUSharedFlag : 1;                                         // 0x0212:2 (0x0001)  
	TEnumAsByte<ETextureRenderTargetFormat>            RenderTargetFormat;                                         // 0x0213   (0x0001)  
	bool                                               bAutoGenerateMips : 1;                                      // 0x0214:0 (0x0001)  
	TEnumAsByte<TextureFilter>                         MipsSamplerFilter;                                          // 0x0215   (0x0001)  
	TEnumAsByte<TextureAddress>                        MipsAddressU;                                               // 0x0216   (0x0001)  
	TEnumAsByte<TextureAddress>                        MipsAddressV;                                               // 0x0217   (0x0001)  
	TEnumAsByte<EPixelFormat>                          OverrideFormat;                                             // 0x0218   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0219   (0x0007)  MISSED
};

/// Class /Script/Engine.TimelineComponent
/// Size: 0x00A0 (0x0000A0 - 0x000140)
class UTimelineComponent : public UActorComponent
{ 
public:
	FTimeline                                          TheTimeline;                                                // 0x00A0   (0x0098)  
	bool                                               bIgnoreTimeDilation : 1;                                    // 0x0138:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0139   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.TimelineComponent.Stop
	void Stop();                                                                                                             // [0x46a4110] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.SetVectorCurve
	void SetVectorCurve(UCurveVector* NewVectorCurve, FName VectorTrackName);                                                // [0x46a3ee0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.SetTimelineLengthMode
	void SetTimelineLengthMode(TEnumAsByte<ETimelineLengthMode> NewLengthMode);                                              // [0x46a3e60] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.SetTimelineLength
	void SetTimelineLength(float NewLength);                                                                                 // [0x46a3de0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.SetPlayRate
	void SetPlayRate(float NewRate);                                                                                         // [0x46a3c40] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.SetPlaybackPosition
	void SetPlaybackPosition(float NewPosition, bool bFireEvents, bool bFireUpdate);                                         // [0x46a3cc0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.SetNewTime
	void SetNewTime(float NewTime);                                                                                          // [0x46a3bc0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.SetLooping
	void SetLooping(bool bNewLooping);                                                                                       // [0x46a3b30] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.SetLinearColorCurve
	void SetLinearColorCurve(UCurveLinearColor* NewLinearColorCurve, FName LinearColorTrackName);                            // [0x46a3a60] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.SetIgnoreTimeDilation
	void SetIgnoreTimeDilation(bool bNewIgnoreTimeDilation);                                                                 // [0x46a39d0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.SetFloatCurve
	void SetFloatCurve(UCurveFloat* NewFloatCurve, FName FloatTrackName);                                                    // [0x46a3900] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.ReverseFromEnd
	void ReverseFromEnd();                                                                                                   // [0x46a38e0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.Reverse
	void Reverse();                                                                                                          // [0x46a38c0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.PlayFromStart
	void PlayFromStart();                                                                                                    // [0x46a38a0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.Play
	void Play();                                                                                                             // [0x46a3880] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.TimelineComponent.OnRep_Timeline
	void OnRep_Timeline(FTimeline& OldTimeline);                                                                             // [0x46a35e0] Final|Native|Public|HasOutParms 
	// Function /Script/Engine.TimelineComponent.IsReversing
	bool IsReversing();                                                                                                      // [0x46a35b0] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.TimelineComponent.IsPlaying
	bool IsPlaying();                                                                                                        // [0x46a3580] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.TimelineComponent.IsLooping
	bool IsLooping();                                                                                                        // [0x46a3550] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.TimelineComponent.GetTimelineLength
	float GetTimelineLength();                                                                                               // [0x46a3520] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.TimelineComponent.GetScaledTimelineLength
	float GetScaledTimelineLength();                                                                                         // [0x46a34f0] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.TimelineComponent.GetPlayRate
	float GetPlayRate();                                                                                                     // [0x46a3490] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.TimelineComponent.GetPlaybackPosition
	float GetPlaybackPosition();                                                                                             // [0x46a34c0] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.TimelineComponent.GetIgnoreTimeDilation
	bool GetIgnoreTimeDilation();                                                                                            // [0x46a3430] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.TriggerBase
/// Size: 0x0008 (0x000290 - 0x000298)
class ATriggerBase : public AActor
{ 
public:
	UShapeComponent*                                   CollisionComponent;                                         // 0x0290   (0x0008)  
};

/// Class /Script/Engine.TriggerBox
/// Size: 0x0000 (0x000298 - 0x000298)
class ATriggerBox : public ATriggerBase
{ 
public:
};

/// Class /Script/Engine.TriggerCapsule
/// Size: 0x0000 (0x000298 - 0x000298)
class ATriggerCapsule : public ATriggerBase
{ 
public:
};

/// Class /Script/Engine.TriggerSphere
/// Size: 0x0000 (0x000298 - 0x000298)
class ATriggerSphere : public ATriggerBase
{ 
public:
};

/// Class /Script/Engine.TwitterIntegrationBase
/// Size: 0x0000 (0x000038 - 0x000038)
class UTwitterIntegrationBase : public UPlatformInterfaceBase
{ 
public:
};

/// Class /Script/Engine.UserDefinedStruct
/// Size: 0x0048 (0x0000C0 - 0x000108)
class UUserDefinedStruct : public UScriptStruct
{ 
public:
	TEnumAsByte<EUserDefinedStructureStatus>           Status;                                                     // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00C1   (0x0003)  MISSED
	FGuid                                              Guid;                                                       // 0x00C4   (0x0010)  
	unsigned char                                      UnknownData01_6[0x34];                                      // 0x00D4   (0x0034)  MISSED
};

/// Class /Script/Engine.VectorField
/// Size: 0x0040 (0x000028 - 0x000068)
class UVectorField : public UObject
{ 
public:
	FBox                                               Bounds;                                                     // 0x0028   (0x0038)  
	float                                              Intensity;                                                  // 0x0060   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0064   (0x0004)  MISSED
};

/// Class /Script/Engine.VectorFieldAnimated
/// Size: 0x0040 (0x000068 - 0x0000A8)
class UVectorFieldAnimated : public UVectorField
{ 
public:
	UTexture2D*                                        Texture;                                                    // 0x0068   (0x0008)  
	TEnumAsByte<EVectorFieldConstructionOp>            ConstructionOp;                                             // 0x0070   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0071   (0x0003)  MISSED
	int32_t                                            VolumeSizeX;                                                // 0x0074   (0x0004)  
	int32_t                                            VolumeSizeY;                                                // 0x0078   (0x0004)  
	int32_t                                            VolumeSizeZ;                                                // 0x007C   (0x0004)  
	int32_t                                            SubImagesX;                                                 // 0x0080   (0x0004)  
	int32_t                                            SubImagesY;                                                 // 0x0084   (0x0004)  
	int32_t                                            FrameCount;                                                 // 0x0088   (0x0004)  
	float                                              FramesPerSecond;                                            // 0x008C   (0x0004)  
	bool                                               bLoop : 1;                                                  // 0x0090:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x7];                                       // 0x0091   (0x0007)  MISSED
	UVectorFieldStatic*                                NoiseField;                                                 // 0x0098   (0x0008)  
	float                                              NoiseScale;                                                 // 0x00A0   (0x0004)  
	float                                              NoiseMax;                                                   // 0x00A4   (0x0004)  
};

/// Class /Script/Engine.VectorFieldComponent
/// Size: 0x0020 (0x000540 - 0x000560)
class UVectorFieldComponent : public UPrimitiveComponent
{ 
public:
	UVectorField*                                      VectorField;                                                // 0x0538   (0x0008)  
	float                                              Intensity;                                                  // 0x0540   (0x0004)  
	float                                              Tightness;                                                  // 0x0544   (0x0004)  
	bool                                               bPreviewVectorField : 1;                                    // 0x0548:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x17];                                      // 0x0549   (0x0017)  MISSED


	/// Functions
	// Function /Script/Engine.VectorFieldComponent.SetIntensity
	void SetIntensity(float NewIntensity);                                                                                   // [0x46a6e80] Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.VectorFieldStatic
/// Size: 0x0048 (0x000068 - 0x0000B0)
class UVectorFieldStatic : public UVectorField
{ 
public:
	int32_t                                            SizeX;                                                      // 0x0068   (0x0004)  
	int32_t                                            SizeY;                                                      // 0x006C   (0x0004)  
	int32_t                                            SizeZ;                                                      // 0x0070   (0x0004)  
	bool                                               bAllowCPUAccess;                                            // 0x0074   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3B];                                      // 0x0075   (0x003B)  MISSED
};

/// Class /Script/Engine.VisualLoggerDebugSnapshotInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UVisualLoggerDebugSnapshotInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.WindDirectionalSourceComponent
/// Size: 0x0020 (0x0002A0 - 0x0002C0)
class UWindDirectionalSourceComponent : public USceneComponent
{ 
public:
	float                                              Strength;                                                   // 0x02A0   (0x0004)  
	float                                              Speed;                                                      // 0x02A4   (0x0004)  
	float                                              MinGustAmount;                                              // 0x02A8   (0x0004)  
	float                                              MaxGustAmount;                                              // 0x02AC   (0x0004)  
	float                                              Radius;                                                     // 0x02B0   (0x0004)  
	bool                                               bPointWind : 1;                                             // 0x02B4:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0xB];                                       // 0x02B5   (0x000B)  MISSED


	/// Functions
	// Function /Script/Engine.WindDirectionalSourceComponent.SetWindType
	void SetWindType(EWindSourceType InNewType);                                                                             // [0x46a7190] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.WindDirectionalSourceComponent.SetStrength
	void SetStrength(float InNewStrength);                                                                                   // [0x46a7110] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.WindDirectionalSourceComponent.SetSpeed
	void SetSpeed(float InNewSpeed);                                                                                         // [0x46a7090] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.WindDirectionalSourceComponent.SetRadius
	void SetRadius(float InNewRadius);                                                                                       // [0x46a7010] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.WindDirectionalSourceComponent.SetMinimumGustAmount
	void SetMinimumGustAmount(float InNewMinGust);                                                                           // [0x46a6f90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.WindDirectionalSourceComponent.SetMaximumGustAmount
	void SetMaximumGustAmount(float InNewMaxGust);                                                                           // [0x46a6f10] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.WorldPartitionEditorLoaderAdapter
/// Size: 0x0008 (0x000028 - 0x000030)
class UWorldPartitionEditorLoaderAdapter : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.WorldPartitionRuntimeCellOwner
/// Size: 0x0000 (0x000028 - 0x000028)
class UWorldPartitionRuntimeCellOwner : public UInterface
{ 
public:
};

/// Class /Script/Engine.HierarchicalLODSetup
/// Size: 0x0040 (0x000028 - 0x000068)
class UHierarchicalLODSetup : public UObject
{ 
public:
	TArray<FHierarchicalSimplification>                HierarchicalLODSetup;                                       // 0x0028   (0x0010)  
	TWeakObjectPtr<UMaterialInterface*>                OverrideBaseMaterial;                                       // 0x0038   (0x0030)  
};

/// Class /Script/Engine.Texture2DArray
/// Size: 0x00B0 (0x0001F0 - 0x0002A0)
class UTexture2DArray : public UTexture
{ 
public:
	unsigned char                                      UnknownData00_2[0xA0];                                      // 0x01F0   (0x00A0)  MISSED
	TEnumAsByte<TextureAddress>                        AddressX;                                                   // 0x0290   (0x0001)  
	TEnumAsByte<TextureAddress>                        AddressY;                                                   // 0x0291   (0x0001)  
	TEnumAsByte<TextureAddress>                        AddressZ;                                                   // 0x0292   (0x0001)  
	unsigned char                                      UnknownData01_6[0xD];                                       // 0x0293   (0x000D)  MISSED
};

/// Class /Script/Engine.Level
/// Size: 0x02F0 (0x000028 - 0x000318)
class ULevel : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x90];                                      // 0x0028   (0x0090)  MISSED
	UWorld*                                            OwningWorld;                                                // 0x00B8   (0x0008)  
	UModel*                                            Model;                                                      // 0x00C0   (0x0008)  
	TArray<UModelComponent*>                           ModelComponents;                                            // 0x00C8   (0x0010)  
	ULevelActorContainer*                              ActorCluster;                                               // 0x00D8   (0x0008)  
	int32_t                                            NumTextureStreamingUnbuiltComponents;                       // 0x00E0   (0x0004)  
	int32_t                                            NumTextureStreamingDirtyResources;                          // 0x00E4   (0x0004)  
	ALevelScriptActor*                                 LevelScriptActor;                                           // 0x00E8   (0x0008)  
	ANavigationObjectBase*                             NavListStart;                                               // 0x00F0   (0x0008)  
	ANavigationObjectBase*                             NavListEnd;                                                 // 0x00F8   (0x0008)  
	TArray<UNavigationDataChunk*>                      NavDataChunks;                                              // 0x0100   (0x0010)  
	float                                              LightmapTotalSize;                                          // 0x0110   (0x0004)  
	float                                              ShadowmapTotalSize;                                         // 0x0114   (0x0004)  
	TArray<FVector>                                    StaticNavigableGeometry;                                    // 0x0118   (0x0010)  
	TArray<FGuid>                                      StreamingTextureGuids;                                      // 0x0128   (0x0010)  
	TArray<FName>                                      StreamingTextures;                                          // 0x0138   (0x0010)  
	uint32_t                                           PackedTextureStreamingQualityLevelFeatureLevel;             // 0x0148   (0x0004)  
	unsigned char                                      UnknownData01_5[0xC4];                                      // 0x014C   (0x00C4)  MISSED
	FGuid                                              LevelBuildDataId;                                           // 0x0210   (0x0010)  
	UMapBuildDataRegistry*                             MapBuildData;                                               // 0x0220   (0x0008)  
	FIntVector                                         LightBuildLevelOffset;                                      // 0x0228   (0x000C)  
	bool                                               bIsLightingScenario : 1;                                    // 0x0234:0 (0x0001)  
	unsigned char                                      UnknownBit02 : 1;                                           // 0x0234:1 (0x0001)  MISSED
	unsigned char                                      UnknownBit03 : 1;                                           // 0x0234:2 (0x0001)  MISSED
	bool                                               bTextureStreamingRotationChanged : 1;                       // 0x0234:3 (0x0001)  
	bool                                               bStaticComponentsRegisteredInStreamingManager : 1;          // 0x0234:4 (0x0001)  
	bool                                               bIsVisible : 1;                                             // 0x0234:5 (0x0001)  
	unsigned char                                      UnknownData04_3[0x1];                                       // 0x0235   (0x0001)  MISSED
	unsigned char                                      UnknownBit05 : 1;                                           // 0x0236:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit06 : 1;                                           // 0x0236:1 (0x0001)  MISSED
	unsigned char                                      UnknownBit07 : 1;                                           // 0x0236:2 (0x0001)  MISSED
	unsigned char                                      UnknownBit08 : 1;                                           // 0x0236:3 (0x0001)  MISSED
	unsigned char                                      UnknownBit09 : 1;                                           // 0x0236:4 (0x0001)  MISSED
	unsigned char                                      UnknownBit10 : 1;                                           // 0x0236:5 (0x0001)  MISSED
	bool                                               bIsPartitioned : 1;                                         // 0x0236:6 (0x0001)  
	unsigned char                                      UnknownData11_4[0x61];                                      // 0x0237   (0x0061)  MISSED
	AWorldSettings*                                    WorldSettings;                                              // 0x0298   (0x0008)  
	AWorldDataLayers*                                  WorldDataLayers;                                            // 0x02A0   (0x0008)  
	TWeakObjectPtr<UWorldPartitionRuntimeCell*>        WorldPartitionRuntimeCell;                                  // 0x02A8   (0x0030)  
	unsigned char                                      UnknownData12_5[0x8];                                       // 0x02D8   (0x0008)  MISSED
	TArray<UAssetUserData*>                            AssetUserData;                                              // 0x02E0   (0x0010)  
	unsigned char                                      UnknownData13_5[0x10];                                      // 0x02F0   (0x0010)  MISSED
	TArray<FReplicatedStaticActorDestructionInfo>      DestroyedReplicatedStaticActors;                            // 0x0300   (0x0010)  
	unsigned char                                      UnknownData14_6[0x8];                                       // 0x0310   (0x0008)  MISSED
};

/// Class /Script/Engine.ActorFolder
/// Size: 0x0000 (0x000028 - 0x000028)
class UActorFolder : public UObject
{ 
public:
};

/// Class /Script/Engine.ActorPartitionSubsystem
/// Size: 0x0000 (0x000030 - 0x000030)
class UActorPartitionSubsystem : public UWorldSubsystem
{ 
public:
};

/// Class /Script/Engine.AISystemBase
/// Size: 0x0038 (0x000028 - 0x000060)
class UAISystemBase : public UObject
{ 
public:
	FSoftClassPath                                     AISystemClassName;                                          // 0x0028   (0x0020)  
	FName                                              AISystemModuleName;                                         // 0x0048   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x0050   (0x0008)  MISSED
	bool                                               bInstantiateAISystemOnClient;                               // 0x0058   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0059   (0x0007)  MISSED
};

/// Class /Script/Engine.NavigationSystemConfig
/// Size: 0x0030 (0x000028 - 0x000058)
class UNavigationSystemConfig : public UObject
{ 
public:
	FSoftClassPath                                     NavigationSystemClass;                                      // 0x0028   (0x0020)  
	FNavAgentSelector                                  SupportedAgentsMask;                                        // 0x0048   (0x0004)  
	FName                                              DefaultAgentName;                                           // 0x004C   (0x0008)  
	bool                                               bIsOverriden : 1;                                           // 0x0054:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0055   (0x0003)  MISSED
};

/// Class /Script/Engine.NullNavSysConfig
/// Size: 0x0000 (0x000058 - 0x000058)
class UNullNavSysConfig : public UNavigationSystemConfig
{ 
public:
};

/// Class /Script/Engine.AvoidanceManager
/// Size: 0x00B8 (0x000028 - 0x0000E0)
class UAvoidanceManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	float                                              DefaultTimeToLive;                                          // 0x0030   (0x0004)  
	float                                              LockTimeAfterAvoid;                                         // 0x0034   (0x0004)  
	float                                              LockTimeAfterClean;                                         // 0x0038   (0x0004)  
	float                                              DeltaTimeToPredict;                                         // 0x003C   (0x0004)  
	float                                              ArtificialRadiusExpansion;                                  // 0x0040   (0x0004)  
	float                                              TestHeightDifference;                                       // 0x0044   (0x0004)  
	float                                              HeightCheckMargin;                                          // 0x0048   (0x0004)  
	unsigned char                                      UnknownData01_6[0x94];                                      // 0x004C   (0x0094)  MISSED


	/// Functions
	// Function /Script/Engine.AvoidanceManager.RegisterMovementComponent
	bool RegisterMovementComponent(UMovementComponent* MovementComp, float AvoidanceWeight);                                 // [0x4701750] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AvoidanceManager.GetObjectCount
	int32_t GetObjectCount();                                                                                                // [0x4701610] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AvoidanceManager.GetNewAvoidanceUID
	int32_t GetNewAvoidanceUID();                                                                                            // [0x47015e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AvoidanceManager.GetAvoidanceVelocityForComponent
	FVector GetAvoidanceVelocityForComponent(UMovementComponent* MovementComp);                                              // [0x47014c0] Final|Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.NavCollisionBase
/// Size: 0x0048 (0x000028 - 0x000070)
class UNavCollisionBase : public UObject
{ 
public:
	bool                                               bIsDynamicObstacle : 1;                                     // 0x0028:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x47];                                      // 0x0029   (0x0047)  MISSED
};

/// Class /Script/Engine.NavigationDataChunk
/// Size: 0x0008 (0x000028 - 0x000030)
class UNavigationDataChunk : public UObject
{ 
public:
	FName                                              NavigationDataName;                                         // 0x0028   (0x0008)  
};

/// Class /Script/Engine.AmbientSound
/// Size: 0x0008 (0x000290 - 0x000298)
class AAmbientSound : public AActor
{ 
public:
	UAudioComponent*                                   AudioComponent;                                             // 0x0290   (0x0008)  


	/// Functions
	// Function /Script/Engine.AmbientSound.Stop
	void Stop();                                                                                                             // [0x47018b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AmbientSound.Play
	void Play(float StartTime);                                                                                              // [0x4701640] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AmbientSound.FadeOut
	void FadeOut(float FadeOutDuration, float FadeVolumeLevel);                                                              // [0x47013e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AmbientSound.FadeIn
	void FadeIn(float FadeInDuration, float FadeVolumeLevel);                                                                // [0x4701300] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AmbientSound.AdjustVolume
	void AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel);                                                  // [0x4701220] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.AimOffsetBlendSpace
/// Size: 0x0000 (0x0001A0 - 0x0001A0)
class UAimOffsetBlendSpace : public UBlendSpace
{ 
public:
};

/// Class /Script/Engine.BlendSpace1D
/// Size: 0x0008 (0x0001A0 - 0x0001A8)
class UBlendSpace1D : public UBlendSpace
{ 
public:
	bool                                               bScaleAnimation;                                            // 0x01A0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x01A1   (0x0007)  MISSED
};

/// Class /Script/Engine.AimOffsetBlendSpace1D
/// Size: 0x0000 (0x0001A8 - 0x0001A8)
class UAimOffsetBlendSpace1D : public UBlendSpace1D
{ 
public:
};

/// Class /Script/Engine.AnimationSettings
/// Size: 0x0100 (0x000038 - 0x000138)
class UAnimationSettings : public UDeveloperSettings
{ 
public:
	int32_t                                            CompressCommandletVersion;                                  // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	TArray<FString>                                    KeyEndEffectorsMatchNameArray;                              // 0x0040   (0x0010)  
	bool                                               ForceRecompression;                                         // 0x0050   (0x0001)  
	bool                                               bForceBelowThreshold;                                       // 0x0051   (0x0001)  
	bool                                               bFirstRecompressUsingCurrentOrDefault;                      // 0x0052   (0x0001)  
	bool                                               bRaiseMaxErrorToExisting;                                   // 0x0053   (0x0001)  
	bool                                               bEnablePerformanceLog;                                      // 0x0054   (0x0001)  
	bool                                               bStripAnimationDataOnDedicatedServer;                       // 0x0055   (0x0001)  
	bool                                               bTickAnimationOnSkeletalMeshInit;                           // 0x0056   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0057   (0x0001)  MISSED
	FTimecodeCustomAttributeNameSettings               BoneTimecodeCustomAttributeNameSettings;                    // 0x0058   (0x0038)  
	TArray<FCustomAttributeSetting>                    BoneCustomAttributesNames;                                  // 0x0090   (0x0010)  
	TArray<FString>                                    BoneNamesWithCustomAttributes;                              // 0x00A0   (0x0010)  
	TMap<FName, ECustomAttributeBlendType>             AttributeBlendModes;                                        // 0x00B0   (0x0050)  
	ECustomAttributeBlendType                          DefaultAttributeBlendMode;                                  // 0x0100   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x0101   (0x0007)  MISSED
	TArray<FString>                                    TransformAttributeNames;                                    // 0x0108   (0x0010)  
	TArray<TWeakObjectPtr>                             UserDefinedStructAttributes;                                // 0x0118   (0x0010)  
	TArray<FMirrorFindReplaceExpression>               MirrorFindReplaceExpressions;                               // 0x0128   (0x0010)  


	/// Functions
	// Function /Script/Engine.AnimationSettings.GetBoneCustomAttributeNamesToImport
	TArray<FString> GetBoneCustomAttributeNamesToImport();                                                                   // [0x47116d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.AnimBlueprintGeneratedStruct
/// Size: 0x0000 (0x0000C0 - 0x0000C0)
class UAnimBlueprintGeneratedStruct : public UScriptStruct
{ 
public:
};

/// Class /Script/Engine.AnimBlueprintGeneratedClass
/// Size: 0x0268 (0x000380 - 0x0005E8)
class UAnimBlueprintGeneratedClass : public UBlueprintGeneratedClass
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0380   (0x0008)  MISSED
	TArray<FBakedAnimationStateMachine>                BakedStateMachines;                                         // 0x0388   (0x0010)  
	USkeleton*                                         TargetSkeleton;                                             // 0x0398   (0x0008)  
	TArray<FAnimNotifyEvent>                           AnimNotifies;                                               // 0x03A0   (0x0010)  
	TMap<FName, FCachedPoseIndices>                    OrderedSavedPoseIndicesMap;                                 // 0x03B0   (0x0050)  
	unsigned char                                      UnknownData01_5[0x80];                                      // 0x0400   (0x0080)  MISSED
	TArray<FName>                                      SyncGroupNames;                                             // 0x0480   (0x0010)  
	TMap<FName, FGraphAssetPlayerInformation>          GraphAssetPlayerInformation;                                // 0x0490   (0x0050)  
	TMap<FName, FAnimGraphBlendOptions>                GraphBlendOptions;                                          // 0x04E0   (0x0050)  
	TArray<FAnimNodeData>                              AnimNodeData;                                               // 0x0530   (0x0010)  
	TMap<UScriptStruct*, FAnimNodeStructData>          NodeTypeMap;                                                // 0x0540   (0x0050)  
	unsigned char                                      UnknownData02_6[0x58];                                      // 0x0590   (0x0058)  MISSED
};

/// Class /Script/Engine.AnimBoneCompressionCodec
/// Size: 0x0010 (0x000028 - 0x000038)
class UAnimBoneCompressionCodec : public UObject
{ 
public:
	FString                                            Description;                                                // 0x0028   (0x0010)  
};

/// Class /Script/Engine.AnimBoneCompressionSettings
/// Size: 0x0010 (0x000028 - 0x000038)
class UAnimBoneCompressionSettings : public UObject
{ 
public:
	TArray<UAnimBoneCompressionCodec*>                 Codecs;                                                     // 0x0028   (0x0010)  
};

/// Class /Script/Engine.AnimClassData
/// Size: 0x0230 (0x000028 - 0x000258)
class UAnimClassData : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	TArray<FBakedAnimationStateMachine>                BakedStateMachines;                                         // 0x0030   (0x0010)  
	USkeleton*                                         TargetSkeleton;                                             // 0x0040   (0x0008)  
	TArray<FAnimNotifyEvent>                           AnimNotifies;                                               // 0x0048   (0x0010)  
	TMap<FName, FCachedPoseIndices>                    OrderedSavedPoseIndicesMap;                                 // 0x0058   (0x0050)  
	TArray<FAnimBlueprintFunction>                     AnimBlueprintFunctions;                                     // 0x00A8   (0x0010)  
	TArray<FAnimBlueprintFunctionData>                 AnimBlueprintFunctionData;                                  // 0x00B8   (0x0010)  
	TArray<AnimNodeProperties>                         AnimNodeProperties;                                         // 0x00C8   (0x0010)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x00D8   (0x0010)  MISSED
	TArray<LinkedAnimGraphNodeProperties>              LinkedAnimGraphNodeProperties;                              // 0x00E8   (0x0010)  
	unsigned char                                      UnknownData02_5[0x10];                                      // 0x00F8   (0x0010)  MISSED
	TArray<LinkedAnimLayerNodeProperties>              LinkedAnimLayerNodeProperties;                              // 0x0108   (0x0010)  
	unsigned char                                      UnknownData03_5[0x10];                                      // 0x0118   (0x0010)  MISSED
	TArray<PreUpdateNodeProperties>                    PreUpdateNodeProperties;                                    // 0x0128   (0x0010)  
	unsigned char                                      UnknownData04_5[0x10];                                      // 0x0138   (0x0010)  MISSED
	TArray<DynamicResetNodeProperties>                 DynamicResetNodeProperties;                                 // 0x0148   (0x0010)  
	unsigned char                                      UnknownData05_5[0x10];                                      // 0x0158   (0x0010)  MISSED
	TArray<StateMachineNodeProperties>                 StateMachineNodeProperties;                                 // 0x0168   (0x0010)  
	unsigned char                                      UnknownData06_5[0x10];                                      // 0x0178   (0x0010)  MISSED
	TArray<InitializationNodeProperties>               InitializationNodeProperties;                               // 0x0188   (0x0010)  
	unsigned char                                      UnknownData07_5[0x10];                                      // 0x0198   (0x0010)  MISSED
	TMap<FName, FGraphAssetPlayerInformation>          GraphNameAssetPlayers;                                      // 0x01A8   (0x0050)  
	TArray<FName>                                      SyncGroupNames;                                             // 0x01F8   (0x0010)  
	TMap<FName, FAnimGraphBlendOptions>                GraphBlendOptions;                                          // 0x0208   (0x0050)  
};

/// Class /Script/Engine.AnimClassInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimClassInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.AnimCompositeBase
/// Size: 0x0000 (0x0000B0 - 0x0000B0)
class UAnimCompositeBase : public UAnimSequenceBase
{ 
public:
};

/// Class /Script/Engine.AnimComposite
/// Size: 0x0010 (0x0000B0 - 0x0000C0)
class UAnimComposite : public UAnimCompositeBase
{ 
public:
	FAnimTrack                                         AnimationTrack;                                             // 0x00B0   (0x0010)  
};

/// Class /Script/Engine.AnimCompress
/// Size: 0x0008 (0x000038 - 0x000040)
class UAnimCompress : public UAnimBoneCompressionCodec
{ 
public:
	bool                                               bNeedsSkeleton : 1;                                         // 0x0038:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0039   (0x0003)  MISSED
	TEnumAsByte<AnimationCompressionFormat>            TranslationCompressionFormat;                               // 0x003C   (0x0001)  
	TEnumAsByte<AnimationCompressionFormat>            RotationCompressionFormat;                                  // 0x003D   (0x0001)  
	TEnumAsByte<AnimationCompressionFormat>            ScaleCompressionFormat;                                     // 0x003E   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1];                                       // 0x003F   (0x0001)  MISSED
};

/// Class /Script/Engine.AnimCompress_BitwiseCompressOnly
/// Size: 0x0000 (0x000040 - 0x000040)
class UAnimCompress_BitwiseCompressOnly : public UAnimCompress
{ 
public:
};

/// Class /Script/Engine.AnimCompress_LeastDestructive
/// Size: 0x0000 (0x000040 - 0x000040)
class UAnimCompress_LeastDestructive : public UAnimCompress_BitwiseCompressOnly
{ 
public:
};

/// Class /Script/Engine.AnimCompress_RemoveLinearKeys
/// Size: 0x0020 (0x000040 - 0x000060)
class UAnimCompress_RemoveLinearKeys : public UAnimCompress
{ 
public:
	float                                              MaxPosDiff;                                                 // 0x0040   (0x0004)  
	float                                              MaxAngleDiff;                                               // 0x0044   (0x0004)  
	float                                              MaxScaleDiff;                                               // 0x0048   (0x0004)  
	float                                              MaxEffectorDiff;                                            // 0x004C   (0x0004)  
	float                                              MinEffectorDiff;                                            // 0x0050   (0x0004)  
	float                                              EffectorDiffSocket;                                         // 0x0054   (0x0004)  
	float                                              ParentKeyScale;                                             // 0x0058   (0x0004)  
	bool                                               bRetarget : 1;                                              // 0x005C:0 (0x0001)  
	bool                                               bActuallyFilterLinearKeys : 1;                              // 0x005C:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x005D   (0x0003)  MISSED
};

/// Class /Script/Engine.AnimCompress_PerTrackCompression
/// Size: 0x0078 (0x000060 - 0x0000D8)
class UAnimCompress_PerTrackCompression : public UAnimCompress_RemoveLinearKeys
{ 
public:
	float                                              MaxZeroingThreshold;                                        // 0x0060   (0x0004)  
	float                                              MaxPosDiffBitwise;                                          // 0x0064   (0x0004)  
	float                                              MaxAngleDiffBitwise;                                        // 0x0068   (0x0004)  
	float                                              MaxScaleDiffBitwise;                                        // 0x006C   (0x0004)  
	TArray<TEnumAsByte>                                AllowedRotationFormats;                                     // 0x0070   (0x0010)  
	TArray<TEnumAsByte>                                AllowedTranslationFormats;                                  // 0x0080   (0x0010)  
	TArray<TEnumAsByte>                                AllowedScaleFormats;                                        // 0x0090   (0x0010)  
	bool                                               bResampleAnimation : 1;                                     // 0x00A0:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x00A1   (0x0003)  MISSED
	float                                              ResampledFramerate;                                         // 0x00A4   (0x0004)  
	int32_t                                            MinKeysForResampling;                                       // 0x00A8   (0x0004)  
	bool                                               bUseAdaptiveError : 1;                                      // 0x00AC:0 (0x0001)  
	bool                                               bUseOverrideForEndEffectors : 1;                            // 0x00AC:1 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x00AD   (0x0003)  MISSED
	int32_t                                            TrackHeightBias;                                            // 0x00B0   (0x0004)  
	float                                              ParentingDivisor;                                           // 0x00B4   (0x0004)  
	float                                              ParentingDivisorExponent;                                   // 0x00B8   (0x0004)  
	bool                                               bUseAdaptiveError2 : 1;                                     // 0x00BC:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x00BD   (0x0003)  MISSED
	float                                              RotationErrorSourceRatio;                                   // 0x00C0   (0x0004)  
	float                                              TranslationErrorSourceRatio;                                // 0x00C4   (0x0004)  
	float                                              ScaleErrorSourceRatio;                                      // 0x00C8   (0x0004)  
	float                                              MaxErrorPerTrackRatio;                                      // 0x00CC   (0x0004)  
	float                                              PerturbationProbeSize;                                      // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x00D4   (0x0004)  MISSED
};

/// Class /Script/Engine.AnimCompress_RemoveEverySecondKey
/// Size: 0x0008 (0x000040 - 0x000048)
class UAnimCompress_RemoveEverySecondKey : public UAnimCompress
{ 
public:
	int32_t                                            MinKeys;                                                    // 0x0040   (0x0004)  
	bool                                               bStartAtSecondKey : 1;                                      // 0x0044:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0045   (0x0003)  MISSED
};

/// Class /Script/Engine.AnimCompress_RemoveTrivialKeys
/// Size: 0x0010 (0x000040 - 0x000050)
class UAnimCompress_RemoveTrivialKeys : public UAnimCompress
{ 
public:
	float                                              MaxPosDiff;                                                 // 0x0040   (0x0004)  
	float                                              MaxAngleDiff;                                               // 0x0044   (0x0004)  
	float                                              MaxScaleDiff;                                               // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Class /Script/Engine.AnimCurveCompressionCodec
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimCurveCompressionCodec : public UObject
{ 
public:
};

/// Class /Script/Engine.AnimCurveCompressionCodec_CompressedRichCurve
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimCurveCompressionCodec_CompressedRichCurve : public UAnimCurveCompressionCodec
{ 
public:
};

/// Class /Script/Engine.AnimCurveCompressionCodec_UniformIndexable
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimCurveCompressionCodec_UniformIndexable : public UAnimCurveCompressionCodec
{ 
public:
};

/// Class /Script/Engine.AnimCurveCompressionCodec_UniformlySampled
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimCurveCompressionCodec_UniformlySampled : public UAnimCurveCompressionCodec
{ 
public:
};

/// Class /Script/Engine.AnimCurveCompressionSettings
/// Size: 0x0008 (0x000028 - 0x000030)
class UAnimCurveCompressionSettings : public UObject
{ 
public:
	UAnimCurveCompressionCodec*                        Codec;                                                      // 0x0028   (0x0008)  
};

/// Class /Script/Engine.AnimDataModel
/// Size: 0x0088 (0x000028 - 0x0000B0)
class UAnimDataModel : public UObject
{ 
public:
	int32_t                                            BracketCounter;                                             // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	FMulticastInlineDelegate                           ModifiedEventDynamic;                                       // 0x0030   (0x0010)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x0040   (0x0018)  MISSED
	TArray<FBoneAnimationTrack>                        BoneAnimationTracks;                                        // 0x0058   (0x0010)  
	float                                              PlayLength;                                                 // 0x0068   (0x0004)  
	FFrameRate                                         FrameRate;                                                  // 0x006C   (0x0008)  
	int32_t                                            NumberOfFrames;                                             // 0x0074   (0x0004)  
	int32_t                                            NumberOfKeys;                                               // 0x0078   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x007C   (0x0004)  MISSED
	FAnimationCurveData                                CurveData;                                                  // 0x0080   (0x0020)  
	TArray<FAnimatedBoneAttribute>                     AnimatedBoneAttributes;                                     // 0x00A0   (0x0010)  


	/// Functions
	// Function /Script/Engine.AnimDataModel.IsValidBoneTrackIndex
	bool IsValidBoneTrackIndex(int32_t TrackIndex);                                                                          // [0x473c960] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimDataModel.GetPlayLength
	float GetPlayLength();                                                                                                   // [0x1900ad0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimDataModel.GetNumBoneTracks
	int32_t GetNumBoneTracks();                                                                                              // [0x473b8a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimDataModel.GetNumberOfTransformCurves
	int32_t GetNumberOfTransformCurves();                                                                                    // [0x16183c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimDataModel.GetNumberOfKeys
	int32_t GetNumberOfKeys();                                                                                               // [0x45a7160] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimDataModel.GetNumberOfFrames
	int32_t GetNumberOfFrames();                                                                                             // [0x473b8c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimDataModel.GetNumberOfFloatCurves
	int32_t GetNumberOfFloatCurves();                                                                                        // [0x45a71e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimDataModel.GetFrameRate
	FFrameRate GetFrameRate();                                                                                               // [0x473a520] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimDataModel.GetBoneTrackNames
	void GetBoneTrackNames(TArray<FName>& OutNames);                                                                         // [0x473a030] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimDataModel.GetBoneTrackIndexByName
	int32_t GetBoneTrackIndexByName(FName TrackName);                                                                        // [0x4739f60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimDataModel.GetBoneTrackIndex
	int32_t GetBoneTrackIndex(FBoneAnimationTrack& Track);                                                                   // [0x4739e70] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimDataModel.GetBoneTrackByName
	FBoneAnimationTrack GetBoneTrackByName(FName TrackName);                                                                 // [0x4739db0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimDataModel.GetBoneTrackByIndex
	FBoneAnimationTrack GetBoneTrackByIndex(int32_t TrackIndex);                                                             // [0x4739d10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimDataModel.GetBoneAnimationTracks
	TArray<FBoneAnimationTrack> GetBoneAnimationTracks();                                                                    // [0x4739ce0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimDataModel.GetAnimationSequence
	UAnimSequence* GetAnimationSequence();                                                                                   // [0x4739c70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.AnimMetaData
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimMetaData : public UObject
{ 
public:
};

/// Class /Script/Engine.AnimMontage
/// Size: 0x0148 (0x0000B0 - 0x0001F8)
class UAnimMontage : public UAnimCompositeBase
{ 
public:
	EMontageBlendMode                                  BlendModeIn;                                                // 0x00B0   (0x0001)  
	EMontageBlendMode                                  BlendModeOut;                                               // 0x00B1   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x00B2   (0x0006)  MISSED
	FAlphaBlend                                        BlendIn;                                                    // 0x00B8   (0x0030)  
	float                                              BlendInTime;                                                // 0x00E8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00EC   (0x0004)  MISSED
	FAlphaBlend                                        BlendOut;                                                   // 0x00F0   (0x0030)  
	float                                              BlendOutTime;                                               // 0x0120   (0x0004)  
	float                                              BlendOutTriggerTime;                                        // 0x0124   (0x0004)  
	FName                                              SyncGroup;                                                  // 0x0128   (0x0008)  
	int32_t                                            SyncSlotIndex;                                              // 0x0130   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0134   (0x0004)  MISSED
	FMarkerSyncData                                    MarkerData;                                                 // 0x0138   (0x0020)  
	TArray<FCompositeSection>                          CompositeSections;                                          // 0x0158   (0x0010)  
	TArray<FSlotAnimationTrack>                        SlotAnimTracks;                                             // 0x0168   (0x0010)  
	TArray<FBranchingPoint>                            BranchingPoints;                                            // 0x0178   (0x0010)  
	bool                                               bEnableRootMotionTranslation;                               // 0x0188   (0x0001)  
	bool                                               bEnableRootMotionRotation;                                  // 0x0189   (0x0001)  
	bool                                               bEnableAutoBlendOut;                                        // 0x018A   (0x0001)  
	unsigned char                                      UnknownData03_5[0x5];                                       // 0x018B   (0x0005)  MISSED
	UBlendProfile*                                     BlendProfileIn;                                             // 0x0190   (0x0008)  
	UBlendProfile*                                     BlendProfileOut;                                            // 0x0198   (0x0008)  
	TEnumAsByte<ERootMotionRootLock>                   RootMotionRootLock;                                         // 0x01A0   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x01A1   (0x0007)  MISSED
	TArray<FBranchingPointMarker>                      BranchingPointMarkers;                                      // 0x01A8   (0x0010)  
	TArray<int32_t>                                    BranchingPointStateNotifyIndices;                           // 0x01B8   (0x0010)  
	FTimeStretchCurve                                  TimeStretchCurve;                                           // 0x01C8   (0x0028)  
	FName                                              TimeStretchCurveName;                                       // 0x01F0   (0x0008)  


	/// Functions
	// Function /Script/Engine.AnimMontage.IsValidSectionName
	bool IsValidSectionName(FName InSectionName);                                                                            // [0x47754e0] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimMontage.GetSectionName
	FName GetSectionName(int32_t SectionIndex);                                                                              // [0x4774d90] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimMontage.GetSectionIndex
	int32_t GetSectionIndex(FName InSectionName);                                                                            // [0x4774cc0] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimMontage.GetNumSections
	int32_t GetNumSections();                                                                                                // [0x3d6fbd0] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimMontage.GetDefaultBlendOutTime
	float GetDefaultBlendOutTime();                                                                                          // [0x42cb8f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimMontage.GetDefaultBlendInTime
	float GetDefaultBlendInTime();                                                                                           // [0x1fae7d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimMontage.GetBlendOutArgs
	FAlphaBlendArgs GetBlendOutArgs();                                                                                       // [0x4774ad0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimMontage.GetBlendInArgs
	FAlphaBlendArgs GetBlendInArgs();                                                                                        // [0x4774a90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AnimMontage.CreateSlotAnimationAsDynamicMontage_WithBlendSettings
	UAnimMontage* CreateSlotAnimationAsDynamicMontage_WithBlendSettings(UAnimSequenceBase* Asset, FName SlotNodeName, FMontageBlendSettings& BlendInSettings, FMontageBlendSettings& BlendOutSettings, float InPlayRate, int32_t LoopCount, float InBlendOutTriggerTime); // [0x4774830] Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Engine.AnimNotifyLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimNotifyLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.AnimNotifyMirrorInspectionLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimNotifyMirrorInspectionLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.AnimNotifyStateMachineInspectionLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimNotifyStateMachineInspectionLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.AnimNotifyState_DisableRootMotion
/// Size: 0x0000 (0x000030 - 0x000030)
class UAnimNotifyState_DisableRootMotion : public UAnimNotifyState
{ 
public:
};

/// Class /Script/Engine.AnimNotifyState_TimedParticleEffect
/// Size: 0x0048 (0x000030 - 0x000078)
class UAnimNotifyState_TimedParticleEffect : public UAnimNotifyState
{ 
public:
	UParticleSystem*                                   PSTemplate;                                                 // 0x0030   (0x0008)  
	FName                                              SocketName;                                                 // 0x0038   (0x0008)  
	FVector                                            LocationOffset;                                             // 0x0040   (0x0018)  
	FRotator                                           RotationOffset;                                             // 0x0058   (0x0018)  
	bool                                               bDestroyAtEnd;                                              // 0x0070   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0071   (0x0007)  MISSED
};

/// Class /Script/Engine.AnimNotifyState_Trail
/// Size: 0x0028 (0x000030 - 0x000058)
class UAnimNotifyState_Trail : public UAnimNotifyState
{ 
public:
	UParticleSystem*                                   PSTemplate;                                                 // 0x0030   (0x0008)  
	FName                                              FirstSocketName;                                            // 0x0038   (0x0008)  
	FName                                              SecondSocketName;                                           // 0x0040   (0x0008)  
	TEnumAsByte<ETrailWidthMode>                       WidthScaleMode;                                             // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0049   (0x0003)  MISSED
	FName                                              WidthScaleCurve;                                            // 0x004C   (0x0008)  
	bool                                               bRecycleSpawnedSystems : 1;                                 // 0x0054:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0055   (0x0003)  MISSED


	/// Functions
	// Function /Script/Engine.AnimNotifyState_Trail.OverridePSTemplate
	UParticleSystem* OverridePSTemplate(USkeletalMeshComponent* MeshComp, UAnimSequenceBase* Animation);                     // [0x2e6eb70] Event|Public|BlueprintEvent|Const 
};

/// Class /Script/Engine.AnimNotify_PauseClothingSimulation
/// Size: 0x0000 (0x000038 - 0x000038)
class UAnimNotify_PauseClothingSimulation : public UAnimNotify
{ 
public:
};

/// Class /Script/Engine.AnimNotify_PlayParticleEffect
/// Size: 0x0088 (0x000038 - 0x0000C0)
class UAnimNotify_PlayParticleEffect : public UAnimNotify
{ 
public:
	UParticleSystem*                                   PSTemplate;                                                 // 0x0038   (0x0008)  
	FVector                                            LocationOffset;                                             // 0x0040   (0x0018)  
	FRotator                                           RotationOffset;                                             // 0x0058   (0x0018)  
	FVector                                            Scale;                                                      // 0x0070   (0x0018)  
	unsigned char                                      UnknownData00_5[0x28];                                      // 0x0088   (0x0028)  MISSED
	bool                                               Attached : 1;                                               // 0x00B0:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x00B1   (0x0003)  MISSED
	FName                                              SocketName;                                                 // 0x00B4   (0x0008)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
};

/// Class /Script/Engine.AnimNotify_PlaySound
/// Size: 0x0020 (0x000038 - 0x000058)
class UAnimNotify_PlaySound : public UAnimNotify
{ 
public:
	USoundBase*                                        Sound;                                                      // 0x0038   (0x0008)  
	float                                              VolumeMultiplier;                                           // 0x0040   (0x0004)  
	float                                              PitchMultiplier;                                            // 0x0044   (0x0004)  
	bool                                               bFollow : 1;                                                // 0x0048:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0049   (0x0003)  MISSED
	FName                                              AttachName;                                                 // 0x004C   (0x0008)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0054   (0x0004)  MISSED
};

/// Class /Script/Engine.AnimNotify_ResetClothingSimulation
/// Size: 0x0000 (0x000038 - 0x000038)
class UAnimNotify_ResetClothingSimulation : public UAnimNotify
{ 
public:
};

/// Class /Script/Engine.AnimNotify_ResetDynamics
/// Size: 0x0000 (0x000038 - 0x000038)
class UAnimNotify_ResetDynamics : public UAnimNotify
{ 
public:
};

/// Class /Script/Engine.AnimNotify_ResumeClothingSimulation
/// Size: 0x0000 (0x000038 - 0x000038)
class UAnimNotify_ResumeClothingSimulation : public UAnimNotify
{ 
public:
};

/// Class /Script/Engine.AnimSequence
/// Size: 0x0128 (0x0000B0 - 0x0001D8)
class UAnimSequence : public UAnimSequenceBase
{ 
public:
	UAnimBoneCompressionSettings*                      BoneCompressionSettings;                                    // 0x00B0   (0x0008)  
	UAnimCurveCompressionSettings*                     CurveCompressionSettings;                                   // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData00_5[0x70];                                      // 0x00C0   (0x0070)  MISSED
	TEnumAsByte<EAdditiveAnimationType>                AdditiveAnimType;                                           // 0x0130   (0x0001)  
	TEnumAsByte<EAdditiveBasePoseType>                 RefPoseType;                                                // 0x0131   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x0132   (0x0002)  MISSED
	int32_t                                            RefFrameIndex;                                              // 0x0134   (0x0004)  
	UAnimSequence*                                     RefPoseSeq;                                                 // 0x0138   (0x0008)  
	FName                                              RetargetSource;                                             // 0x0140   (0x0008)  
	TArray<FTransform>                                 RetargetSourceAssetReferencePose;                           // 0x0148   (0x0010)  
	EAnimInterpolationType                             Interpolation;                                              // 0x0158   (0x0001)  
	bool                                               bEnableRootMotion;                                          // 0x0159   (0x0001)  
	TEnumAsByte<ERootMotionRootLock>                   RootMotionRootLock;                                         // 0x015A   (0x0001)  
	bool                                               bForceRootLock;                                             // 0x015B   (0x0001)  
	bool                                               bUseNormalizedRootMotionScale;                              // 0x015C   (0x0001)  
	bool                                               bRootMotionSettingsCopiedFromMontage;                       // 0x015D   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x015E   (0x0002)  MISSED
	TArray<FAnimSyncMarker>                            AuthoredSyncMarkers;                                        // 0x0160   (0x0010)  
	unsigned char                                      UnknownData03_5[0x10];                                      // 0x0170   (0x0010)  MISSED
	FFrameRate                                         TargetFrameRate;                                            // 0x0180   (0x0008)  
	TMap<FAnimationAttributeIdentifier, FAttributeCurve> AttributeCurves;                                          // 0x0188   (0x0050)  
};

/// Class /Script/Engine.AnimSet
/// Size: 0x00C8 (0x000028 - 0x0000F0)
class UAnimSet : public UObject
{ 
public:
	bool                                               bAnimRotationOnly : 1;                                      // 0x0028:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0029   (0x0007)  MISSED
	TArray<FName>                                      TrackBoneNames;                                             // 0x0030   (0x0010)  
	TArray<FAnimSetMeshLinkup>                         LinkupCache;                                                // 0x0040   (0x0010)  
	TArray<char>                                       BoneUseAnimTranslation;                                     // 0x0050   (0x0010)  
	TArray<char>                                       ForceUseMeshTranslation;                                    // 0x0060   (0x0010)  
	TArray<FName>                                      UseTranslationBoneNames;                                    // 0x0070   (0x0010)  
	TArray<FName>                                      ForceMeshTranslationBoneNames;                              // 0x0080   (0x0010)  
	FName                                              PreviewSkelMeshName;                                        // 0x0090   (0x0008)  
	FName                                              BestRatioSkelMeshName;                                      // 0x0098   (0x0008)  
	unsigned char                                      UnknownData01_6[0x50];                                      // 0x00A0   (0x0050)  MISSED
};

/// Class /Script/Engine.AnimSingleNodeInstance
/// Size: 0x0010 (0x000350 - 0x000360)
class UAnimSingleNodeInstance : public UAnimInstance
{ 
public:
	UAnimationAsset*                                   CurrentAsset;                                               // 0x0348   (0x0008)  
	FDelegateProperty                                  PostEvaluateAnimEvent;                                      // 0x0350   (0x0010)  


	/// Functions
	// Function /Script/Engine.AnimSingleNodeInstance.StopAnim
	void StopAnim();                                                                                                         // [0x4787f70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimSingleNodeInstance.SetReverse
	void SetReverse(bool bInReverse);                                                                                        // [0x4787de0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimSingleNodeInstance.SetPreviewCurveOverride
	void SetPreviewCurveOverride(FName& PoseName, float Value, bool bRemoveIfZero);                                          // [0x4787cc0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AnimSingleNodeInstance.SetPositionWithPreviousTime
	void SetPositionWithPreviousTime(float InPosition, float InPreviousTime, bool bFireNotifies);                            // [0x4787ba0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimSingleNodeInstance.SetPosition
	void SetPosition(float InPosition, bool bFireNotifies);                                                                  // [0x4787ac0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimSingleNodeInstance.SetPlayRate
	void SetPlayRate(float InPlayRate);                                                                                      // [0x47879b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimSingleNodeInstance.SetPlaying
	void SetPlaying(bool bIsPlaying);                                                                                        // [0x4787a30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimSingleNodeInstance.SetMirrorDataTable
	void SetMirrorDataTable(UMirrorDataTable* MirrorDataTable);                                                              // [0x47878b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimSingleNodeInstance.SetLooping
	void SetLooping(bool bIsLooping);                                                                                        // [0x4787820] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimSingleNodeInstance.SetBlendSpacePosition
	void SetBlendSpacePosition(FVector& InPosition);                                                                         // [0x4787710] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.AnimSingleNodeInstance.SetAnimationAsset
	void SetAnimationAsset(UAnimationAsset* NewAsset, bool bIsLooping, float InPlayRate);                                    // [0x47875f0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimSingleNodeInstance.PlayAnim
	void PlayAnim(bool bIsLooping, float InPlayRate, float InStartPosition);                                                 // [0x47874a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimSingleNodeInstance.GetMirrorDataTable
	UMirrorDataTable* GetMirrorDataTable();                                                                                  // [0x47873e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimSingleNodeInstance.GetLength
	float GetLength();                                                                                                       // [0x47873b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AnimSingleNodeInstance.GetAnimationAsset
	UAnimationAsset* GetAnimationAsset();                                                                                    // [0x4787380] Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.AnimStateMachineTypes
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimStateMachineTypes : public UObject
{ 
public:
};

/// Class /Script/Engine.AnimStreamable
/// Size: 0x0038 (0x0000B0 - 0x0000E8)
class UAnimStreamable : public UAnimSequenceBase
{ 
public:
	int32_t                                            NumberOfKeys;                                               // 0x00B0   (0x0004)  
	EAnimInterpolationType                             Interpolation;                                              // 0x00B4   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00B5   (0x0003)  MISSED
	FName                                              RetargetSource;                                             // 0x00B8   (0x0008)  
	unsigned char                                      UnknownData01_5[0x10];                                      // 0x00C0   (0x0010)  MISSED
	UAnimBoneCompressionSettings*                      BoneCompressionSettings;                                    // 0x00D0   (0x0008)  
	UAnimCurveCompressionSettings*                     CurveCompressionSettings;                                   // 0x00D8   (0x0008)  
	bool                                               bEnableRootMotion;                                          // 0x00E0   (0x0001)  
	TEnumAsByte<ERootMotionRootLock>                   RootMotionRootLock;                                         // 0x00E1   (0x0001)  
	bool                                               bForceRootLock;                                             // 0x00E2   (0x0001)  
	bool                                               bUseNormalizedRootMotionScale;                              // 0x00E3   (0x0001)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x00E4   (0x0004)  MISSED
};

/// Class /Script/Engine.AssetMappingTable
/// Size: 0x0010 (0x000028 - 0x000038)
class UAssetMappingTable : public UObject
{ 
public:
	TArray<FAssetMapping>                              MappedAssets;                                               // 0x0028   (0x0010)  
};

/// Class /Script/Engine.AnimationAttributeIdentifierExtensions
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimationAttributeIdentifierExtensions : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.Skeleton
/// Size: 0x04A0 (0x000028 - 0x0004C8)
class USkeleton : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0028   (0x0010)  MISSED
	TArray<FBoneNode>                                  BoneTree;                                                   // 0x0038   (0x0010)  
	TArray<FTransform>                                 RefLocalPoses;                                              // 0x0048   (0x0010)  
	unsigned char                                      UnknownData01_5[0x118];                                     // 0x0058   (0x0118)  MISSED
	FGuid                                              VirtualBoneGuid;                                            // 0x0170   (0x0010)  
	TArray<FVirtualBone>                               VirtualBones;                                               // 0x0180   (0x0010)  
	TArray<TWeakObjectPtr>                             CompatibleSkeletons;                                        // 0x0190   (0x0010)  
	TArray<USkeletalMeshSocket*>                       Sockets;                                                    // 0x01A0   (0x0010)  
	unsigned char                                      UnknownData02_5[0x50];                                      // 0x01B0   (0x0050)  MISSED
	FSmartNameContainer                                SmartNames;                                                 // 0x0200   (0x0050)  
	unsigned char                                      UnknownData03_5[0x30];                                      // 0x0250   (0x0030)  MISSED
	TArray<UBlendProfile*>                             BlendProfiles;                                              // 0x0280   (0x0010)  
	TArray<FAnimSlotGroup>                             SlotGroups;                                                 // 0x0290   (0x0010)  
	unsigned char                                      UnknownData04_5[0x218];                                     // 0x02A0   (0x0218)  MISSED
	TArray<UAssetUserData*>                            AssetUserData;                                              // 0x04B8   (0x0010)  


	/// Functions
	// Function /Script/Engine.Skeleton.GetBlendProfile
	UBlendProfile* GetBlendProfile(FName& InProfileName);                                                                    // [0x47dc270] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.Skeleton.AddCompatibleSkeleton
	void AddCompatibleSkeleton(USkeleton* SourceSkeleton);                                                                   // [0x47db630] Final|RequiredAPI|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.BlendProfile
/// Size: 0x0028 (0x000028 - 0x000050)
class UBlendProfile : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	USkeleton*                                         OwningSkeleton;                                             // 0x0030   (0x0008)  
	TArray<FBlendProfileBoneEntry>                     ProfileEntries;                                             // 0x0038   (0x0010)  
	EBlendProfileMode                                  Mode;                                                       // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0049   (0x0007)  MISSED
};

/// Class /Script/Engine.BoneMaskFilter
/// Size: 0x0010 (0x000028 - 0x000038)
class UBoneMaskFilter : public UObject
{ 
public:
	TArray<FInputBlendPose>                            BlendPoses;                                                 // 0x0028   (0x0010)  
};

/// Class /Script/Engine.CachedAnimDataLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UCachedAnimDataLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.AnimationCurveIdentifierExtensions
/// Size: 0x0000 (0x000028 - 0x000028)
class UAnimationCurveIdentifierExtensions : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.CurveSourceInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UCurveSourceInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.MirrorDataTable
/// Size: 0x00F0 (0x0000B0 - 0x0001A0)
class UMirrorDataTable : public UDataTable
{ 
public:
	TArray<FMirrorFindReplaceExpression>               MirrorFindReplaceExpressions;                               // 0x00B0   (0x0010)  
	TEnumAsByte<EAxis>                                 MirrorAxis;                                                 // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x00C1   (0x0007)  MISSED
	USkeleton*                                         Skeleton;                                                   // 0x00C8   (0x0008)  
	unsigned char                                      UnknownData01_6[0xD0];                                      // 0x00D0   (0x00D0)  MISSED
};

/// Class /Script/Engine.NodeMappingContainer
/// Size: 0x0150 (0x000028 - 0x000178)
class UNodeMappingContainer : public UObject
{ 
public:
	TMap<FName, FNodeItem>                             SourceItems;                                                // 0x0028   (0x0050)  
	TMap<FName, FNodeItem>                             TargetItems;                                                // 0x0078   (0x0050)  
	TMap<FName, FName>                                 SourceToTarget;                                             // 0x00C8   (0x0050)  
	TWeakObjectPtr<UObject*>                           SourceAsset;                                                // 0x0118   (0x0030)  
	TWeakObjectPtr<UObject*>                           TargetAsset;                                                // 0x0148   (0x0030)  
};

/// Class /Script/Engine.NodeMappingProviderInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UNodeMappingProviderInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.PoseAsset
/// Size: 0x0080 (0x000080 - 0x000100)
class UPoseAsset : public UAnimationAsset
{ 
public:
	FPoseDataContainer                                 PoseContainer;                                              // 0x0080   (0x0060)  
	bool                                               bAdditivePose;                                              // 0x00E0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x00E1   (0x0003)  MISSED
	int32_t                                            BasePoseIndex;                                              // 0x00E4   (0x0004)  
	FName                                              RetargetSource;                                             // 0x00E8   (0x0008)  
	TArray<FTransform>                                 RetargetSourceAssetReferencePose;                           // 0x00F0   (0x0010)  
};

/// Class /Script/Engine.PreviewCollectionInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPreviewCollectionInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.PreviewMeshCollection
/// Size: 0x0020 (0x000030 - 0x000050)
class UPreviewMeshCollection : public UDataAsset
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0030   (0x0008)  MISSED
	USkeleton*                                         Skeleton;                                                   // 0x0038   (0x0008)  
	TArray<FPreviewMeshCollectionEntry>                SkeletalMeshes;                                             // 0x0040   (0x0010)  
};

/// Class /Script/Engine.Rig
/// Size: 0x0028 (0x000028 - 0x000050)
class URig : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	TArray<FTransformBase>                             TransformBases;                                             // 0x0030   (0x0010)  
	TArray<FNode>                                      Nodes;                                                      // 0x0040   (0x0010)  
};

/// Class /Script/Engine.SkeletalMeshActor
/// Size: 0x0080 (0x000290 - 0x000310)
class ASkeletalMeshActor : public AActor
{ 
public:
	bool                                               bShouldDoAnimNotifies : 1;                                  // 0x0290:0 (0x0001)  
	bool                                               bWakeOnLevelStart : 1;                                      // 0x0290:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0291   (0x0007)  MISSED
	USkeletalMeshComponent*                            SkeletalMeshComponent;                                      // 0x0298   (0x0008)  
	USkeletalMesh*                                     ReplicatedMesh;                                             // 0x02A0   (0x0008)  
	UPhysicsAsset*                                     ReplicatedPhysAsset;                                        // 0x02A8   (0x0008)  
	UMaterialInterface*                                ReplicatedMaterial0;                                        // 0x02B0   (0x0008)  
	UMaterialInterface*                                ReplicatedMaterial1;                                        // 0x02B8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x50];                                      // 0x02C0   (0x0050)  MISSED


	/// Functions
	// Function /Script/Engine.SkeletalMeshActor.OnRep_ReplicatedPhysAsset
	void OnRep_ReplicatedPhysAsset();                                                                                        // [0x11d0280] Native|Public        
	// Function /Script/Engine.SkeletalMeshActor.OnRep_ReplicatedMesh
	void OnRep_ReplicatedMesh();                                                                                             // [0x463cd10] Native|Public        
	// Function /Script/Engine.SkeletalMeshActor.OnRep_ReplicatedMaterial1
	void OnRep_ReplicatedMaterial1();                                                                                        // [0xc003e0] Native|Public        
	// Function /Script/Engine.SkeletalMeshActor.OnRep_ReplicatedMaterial0
	void OnRep_ReplicatedMaterial0();                                                                                        // [0x467ba70] Native|Public        
};

/// Class /Script/Engine.AnimBlueprint
/// Size: 0x0028 (0x0000A8 - 0x0000D0)
class UAnimBlueprint : public UBlueprint
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00A8   (0x0008)  MISSED
	USkeleton*                                         TargetSkeleton;                                             // 0x00B0   (0x0008)  
	TArray<FAnimGroupInfo>                             Groups;                                                     // 0x00B8   (0x0010)  
	bool                                               bIsTemplate;                                                // 0x00C8   (0x0001)  
	bool                                               bUseMultiThreadedAnimationUpdate;                           // 0x00C9   (0x0001)  
	bool                                               bWarnAboutBlueprintUsage;                                   // 0x00CA   (0x0001)  
	unsigned char                                      UnknownData01_6[0x5];                                       // 0x00CB   (0x0005)  MISSED
};

/// Class /Script/Engine.AsyncActionLoadPrimaryAssetBase
/// Size: 0x0048 (0x000030 - 0x000078)
class UAsyncActionLoadPrimaryAssetBase : public UBlueprintAsyncActionBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x48];                                      // 0x0030   (0x0048)  MISSED
};

/// Class /Script/Engine.AsyncActionLoadPrimaryAsset
/// Size: 0x0010 (0x000078 - 0x000088)
class UAsyncActionLoadPrimaryAsset : public UAsyncActionLoadPrimaryAssetBase
{ 
public:
	FMulticastInlineDelegate                           Completed;                                                  // 0x0078   (0x0010)  


	/// Functions
	// Function /Script/Engine.AsyncActionLoadPrimaryAsset.AsyncLoadPrimaryAsset
	UAsyncActionLoadPrimaryAsset* AsyncLoadPrimaryAsset(UObject* WorldContextObject, FPrimaryAssetId PrimaryAsset, TArray<FName>& LoadBundles); // [0x47dba50] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.AsyncActionLoadPrimaryAssetClass
/// Size: 0x0010 (0x000078 - 0x000088)
class UAsyncActionLoadPrimaryAssetClass : public UAsyncActionLoadPrimaryAssetBase
{ 
public:
	FMulticastInlineDelegate                           Completed;                                                  // 0x0078   (0x0010)  


	/// Functions
	// Function /Script/Engine.AsyncActionLoadPrimaryAssetClass.AsyncLoadPrimaryAssetClass
	UAsyncActionLoadPrimaryAssetClass* AsyncLoadPrimaryAssetClass(UObject* WorldContextObject, FPrimaryAssetId PrimaryAsset, TArray<FName>& LoadBundles); // [0x47dbc60] Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.AsyncActionLoadPrimaryAssetList
/// Size: 0x0010 (0x000078 - 0x000088)
class UAsyncActionLoadPrimaryAssetList : public UAsyncActionLoadPrimaryAssetBase
{ 
public:
	FMulticastInlineDelegate                           Completed;                                                  // 0x0078   (0x0010)  


	/// Functions
	// Function /Script/Engine.AsyncActionLoadPrimaryAssetList.AsyncLoadPrimaryAssetList
	UAsyncActionLoadPrimaryAssetList* AsyncLoadPrimaryAssetList(UObject* WorldContextObject, TArray<FPrimaryAssetId>& PrimaryAssetList, TArray<FName>& LoadBundles); // [0x47dc070] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Engine.AsyncActionLoadPrimaryAssetClassList
/// Size: 0x0010 (0x000078 - 0x000088)
class UAsyncActionLoadPrimaryAssetClassList : public UAsyncActionLoadPrimaryAssetBase
{ 
public:
	FMulticastInlineDelegate                           Completed;                                                  // 0x0078   (0x0010)  


	/// Functions
	// Function /Script/Engine.AsyncActionLoadPrimaryAssetClassList.AsyncLoadPrimaryAssetClassList
	UAsyncActionLoadPrimaryAssetClassList* AsyncLoadPrimaryAssetClassList(UObject* WorldContextObject, TArray<FPrimaryAssetId>& PrimaryAssetList, TArray<FName>& LoadBundles); // [0x47dbe70] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Engine.AsyncActionChangePrimaryAssetBundles
/// Size: 0x0010 (0x000078 - 0x000088)
class UAsyncActionChangePrimaryAssetBundles : public UAsyncActionLoadPrimaryAssetBase
{ 
public:
	FMulticastInlineDelegate                           Completed;                                                  // 0x0078   (0x0010)  


	/// Functions
	// Function /Script/Engine.AsyncActionChangePrimaryAssetBundles.AsyncChangeBundleStateForPrimaryAssetList
	UAsyncActionChangePrimaryAssetBundles* AsyncChangeBundleStateForPrimaryAssetList(UObject* WorldContextObject, TArray<FPrimaryAssetId>& PrimaryAssetList, TArray<FName>& AddBundles, TArray<FName>& RemoveBundles); // [0x47db850] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AsyncActionChangePrimaryAssetBundles.AsyncChangeBundleStateForMatchingPrimaryAssets
	UAsyncActionChangePrimaryAssetBundles* AsyncChangeBundleStateForMatchingPrimaryAssets(UObject* WorldContextObject, TArray<FName>& NewBundles, TArray<FName>& OldBundles); // [0x47db6c0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Engine.AtmosphericFog
/// Size: 0x0008 (0x000290 - 0x000298)
class AAtmosphericFog : public AInfo
{ 
public:
	UAtmosphericFogComponent*                          AtmosphericFogComponent;                                    // 0x0290   (0x0008)  
};

/// Class /Script/Engine.SkyAtmosphereComponent
/// Size: 0x0100 (0x0002A0 - 0x0003A0)
class USkyAtmosphereComponent : public USceneComponent
{ 
public:
	ESkyAtmosphereTransformMode                        TransformMode;                                              // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02A1   (0x0003)  MISSED
	float                                              BottomRadius;                                               // 0x02A4   (0x0004)  
	FColor                                             GroundAlbedo;                                               // 0x02A8   (0x0004)  
	float                                              AtmosphereHeight;                                           // 0x02AC   (0x0004)  
	float                                              MultiScatteringFactor;                                      // 0x02B0   (0x0004)  
	float                                              TraceSampleCountScale;                                      // 0x02B4   (0x0004)  
	float                                              RayleighScatteringScale;                                    // 0x02B8   (0x0004)  
	FLinearColor                                       RayleighScattering;                                         // 0x02BC   (0x0010)  
	float                                              RayleighExponentialDistribution;                            // 0x02CC   (0x0004)  
	float                                              MieScatteringScale;                                         // 0x02D0   (0x0004)  
	FLinearColor                                       MieScattering;                                              // 0x02D4   (0x0010)  
	float                                              MieAbsorptionScale;                                         // 0x02E4   (0x0004)  
	FLinearColor                                       MieAbsorption;                                              // 0x02E8   (0x0010)  
	float                                              MieAnisotropy;                                              // 0x02F8   (0x0004)  
	float                                              MieExponentialDistribution;                                 // 0x02FC   (0x0004)  
	float                                              OtherAbsorptionScale;                                       // 0x0300   (0x0004)  
	FLinearColor                                       OtherAbsorption;                                            // 0x0304   (0x0010)  
	FTentDistribution                                  OtherTentDistribution;                                      // 0x0314   (0x000C)  
	FLinearColor                                       SkyLuminanceFactor;                                         // 0x0320   (0x0010)  
	float                                              AerialPespectiveViewDistanceScale;                          // 0x0330   (0x0004)  
	float                                              HeightFogContribution;                                      // 0x0334   (0x0004)  
	float                                              TransmittanceMinLightElevationAngle;                        // 0x0338   (0x0004)  
	float                                              AerialPerspectiveStartDepth;                                // 0x033C   (0x0004)  
	unsigned char                                      UnknownData01_5[0x40];                                      // 0x0340   (0x0040)  MISSED
	FGuid                                              bStaticLightingBuiltGUID;                                   // 0x0380   (0x0010)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0390   (0x0010)  MISSED


	/// Functions
	// Function /Script/Engine.SkyAtmosphereComponent.SetSkyLuminanceFactor
	void SetSkyLuminanceFactor(FLinearColor NewValue);                                                                       // [0x4972bb0] Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetRayleighScatteringScale
	void SetRayleighScatteringScale(float NewValue);                                                                         // [0x4972710] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetRayleighScattering
	void SetRayleighScattering(FLinearColor NewValue);                                                                       // [0x4972580] Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetRayleighExponentialDistribution
	void SetRayleighExponentialDistribution(float NewValue);                                                                 // [0x49724c0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetOtherAbsorptionScale
	void SetOtherAbsorptionScale(float NewValue);                                                                            // [0x48fbc10] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetOtherAbsorption
	void SetOtherAbsorption(FLinearColor NewValue);                                                                          // [0x4972270] Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetMultiScatteringFactor
	void SetMultiScatteringFactor(float NewValue);                                                                           // [0x49721b0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetMieScatteringScale
	void SetMieScatteringScale(float NewValue);                                                                              // [0x49720f0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetMieScattering
	void SetMieScattering(FLinearColor NewValue);                                                                            // [0x4971f60] Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetMieExponentialDistribution
	void SetMieExponentialDistribution(float NewValue);                                                                      // [0x48fba10] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetMieAnisotropy
	void SetMieAnisotropy(float NewValue);                                                                                   // [0x4971ea0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetMieAbsorptionScale
	void SetMieAbsorptionScale(float NewValue);                                                                              // [0x4971de0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetMieAbsorption
	void SetMieAbsorption(FLinearColor NewValue);                                                                            // [0x4971c50] Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetHeightFogContribution
	void SetHeightFogContribution(float NewValue);                                                                           // [0x49716c0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetAtmosphereHeight
	void SetAtmosphereHeight(float NewValue);                                                                                // [0x4970390] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.SetAerialPespectiveViewDistanceScale
	void SetAerialPespectiveViewDistanceScale(float NewValue);                                                               // [0x49702d0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.OverrideAtmosphereLightDirection
	void OverrideAtmosphereLightDirection(int32_t AtmosphereLightIndex, FVector& LightDirection);                            // [0x4970080] Final|RequiredAPI|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SkyAtmosphereComponent.GetAtmosphereTransmitanceOnGroundAtPlanetTop
	FLinearColor GetAtmosphereTransmitanceOnGroundAtPlanetTop(UDirectionalLightComponent* DirectionalLight);                 // [0x4968f40] Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.AtmosphericFogComponent
/// Size: 0x0000 (0x0003A0 - 0x0003A0)
class UAtmosphericFogComponent : public USkyAtmosphereComponent
{ 
public:
};

/// Class /Script/Engine.AudioBus
/// Size: 0x0010 (0x000028 - 0x000038)
class UAudioBus : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	EAudioBusChannels                                  AudioBusChannels;                                           // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0031   (0x0007)  MISSED
};

/// Class /Script/Engine.AudioSettings
/// Size: 0x01A8 (0x000038 - 0x0001E0)
class UAudioSettings : public UDeveloperSettings
{ 
public:
	FSoftObjectPath                                    DefaultSoundClassName;                                      // 0x0038   (0x0020)  
	FSoftObjectPath                                    DefaultMediaSoundClassName;                                 // 0x0058   (0x0020)  
	FSoftObjectPath                                    DefaultSoundConcurrencyName;                                // 0x0078   (0x0020)  
	FSoftObjectPath                                    DefaultBaseSoundMix;                                        // 0x0098   (0x0020)  
	FSoftObjectPath                                    VoiPSoundClass;                                             // 0x00B8   (0x0020)  
	FSoftObjectPath                                    MasterSubmix;                                               // 0x00D8   (0x0020)  
	FSoftObjectPath                                    BaseDefaultSubmix;                                          // 0x00F8   (0x0020)  
	FSoftObjectPath                                    ReverbSubmix;                                               // 0x0118   (0x0020)  
	FSoftObjectPath                                    EQSubmix;                                                   // 0x0138   (0x0020)  
	EVoiceSampleRate                                   VoiPSampleRate;                                             // 0x0158   (0x0004)  
	EDefaultAudioCompressionType                       DefaultAudioCompressionType;                                // 0x015C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x015D   (0x0003)  MISSED
	float                                              DefaultReverbSendLevel;                                     // 0x0160   (0x0004)  
	int32_t                                            MaximumConcurrentStreams;                                   // 0x0164   (0x0004)  
	float                                              GlobalMinPitchScale;                                        // 0x0168   (0x0004)  
	float                                              GlobalMaxPitchScale;                                        // 0x016C   (0x0004)  
	TArray<FAudioQualitySettings>                      QualityLevels;                                              // 0x0170   (0x0010)  
	bool                                               bAllowPlayWhenSilent : 1;                                   // 0x0180:0 (0x0001)  
	bool                                               bDisableMasterEQ : 1;                                       // 0x0180:1 (0x0001)  
	bool                                               bAllowCenterChannel3DPanning : 1;                           // 0x0180:2 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0181   (0x0003)  MISSED
	uint32_t                                           NumStoppingSources;                                         // 0x0184   (0x0004)  
	EPanningMethod                                     PanningMethod;                                              // 0x0188   (0x0001)  
	EMonoChannelUpmixMethod                            MonoChannelUpmixMethod;                                     // 0x0189   (0x0001)  
	unsigned char                                      UnknownData02_5[0x6];                                       // 0x018A   (0x0006)  MISSED
	FString                                            DialogueFilenameFormat;                                     // 0x0190   (0x0010)  
	TArray<FSoundDebugEntry>                           DebugSounds;                                                // 0x01A0   (0x0010)  
	TArray<FDefaultAudioBusSettings>                   DefaultAudioBuses;                                          // 0x01B0   (0x0010)  
	USoundClass*                                       DefaultSoundClass;                                          // 0x01C0   (0x0008)  
	USoundClass*                                       DefaultMediaSoundClass;                                     // 0x01C8   (0x0008)  
	USoundConcurrency*                                 DefaultSoundConcurrency;                                    // 0x01D0   (0x0008)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x01D8   (0x0008)  MISSED
};

/// Class /Script/Engine.AudioVolume
/// Size: 0x0070 (0x0002C8 - 0x000338)
class AAudioVolume : public AVolume
{ 
public:
	float                                              Priority;                                                   // 0x02C8   (0x0004)  
	bool                                               bEnabled : 1;                                               // 0x02CC:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x02CD   (0x0003)  MISSED
	FReverbSettings                                    Settings;                                                   // 0x02D0   (0x0020)  
	FInteriorSettings                                  AmbientZoneSettings;                                        // 0x02F0   (0x0024)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0314   (0x0004)  MISSED
	TArray<FAudioVolumeSubmixSendSettings>             SubmixSendSettings;                                         // 0x0318   (0x0010)  
	TArray<FAudioVolumeSubmixOverrideSettings>         SubmixOverrideSettings;                                     // 0x0328   (0x0010)  


	/// Functions
	// Function /Script/Engine.AudioVolume.SetSubmixSendSettings
	void SetSubmixSendSettings(TArray<FAudioVolumeSubmixSendSettings>& NewSubmixSendSettings);                               // [0x4821930] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AudioVolume.SetSubmixOverrideSettings
	void SetSubmixOverrideSettings(TArray<FAudioVolumeSubmixOverrideSettings>& NewSubmixOverrideSettings);                   // [0x4821840] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AudioVolume.SetReverbSettings
	void SetReverbSettings(FReverbSettings& NewReverbSettings);                                                              // [0x4821750] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AudioVolume.SetPriority
	void SetPriority(float NewPriority);                                                                                     // [0x4821680] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioVolume.SetInteriorSettings
	void SetInteriorSettings(FInteriorSettings& NewInteriorSettings);                                                        // [0x4821530] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.AudioVolume.SetEnabled
	void SetEnabled(bool bNewEnabled);                                                                                       // [0x4821470] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.AudioVolume.OnRep_bEnabled
	void OnRep_bEnabled();                                                                                                   // [0x4821450] Final|Native|Private 
};

/// Class /Script/Engine.ActorSoundParameterInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UActorSoundParameterInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.AudioWidgetSubsystem
/// Size: 0x0000 (0x000030 - 0x000030)
class UAudioWidgetSubsystem : public UEngineSubsystem
{ 
public:
};

/// Class /Script/Engine.SoundParameterControllerInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class USoundParameterControllerInterface : public UAudioParameterControllerInterface
{ 
public:
};

/// Class /Script/Engine.AudioParameterConversionStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UAudioParameterConversionStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.BlockingVolume
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class ABlockingVolume : public AVolume
{ 
public:
};

/// Class /Script/Engine.BlueprintMapLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UBlueprintMapLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.BlueprintSetLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UBlueprintSetLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.BookMark
/// Size: 0x0040 (0x000028 - 0x000068)
class UBookMark : public UBookmarkBase
{ 
public:
	FVector                                            Location;                                                   // 0x0028   (0x0018)  
	FRotator                                           Rotation;                                                   // 0x0040   (0x0018)  
	TArray<FString>                                    HiddenLevels;                                               // 0x0058   (0x0010)  
};

/// Class /Script/Engine.BrushBuilder
/// Size: 0x0058 (0x000028 - 0x000080)
class UBrushBuilder : public UObject
{ 
public:
	FString                                            BitmapFilename;                                             // 0x0028   (0x0010)  
	FString                                            ToolTip;                                                    // 0x0038   (0x0010)  
	bool                                               NotifyBadParams : 1;                                        // 0x0048:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0049   (0x0007)  MISSED
	TArray<FVector>                                    Vertices;                                                   // 0x0050   (0x0010)  
	TArray<FBuilderPoly>                               Polys;                                                      // 0x0060   (0x0010)  
	FName                                              Layer;                                                      // 0x0070   (0x0008)  
	bool                                               MergeCoplanars : 1;                                         // 0x0078:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0079   (0x0007)  MISSED
};

/// Class /Script/Engine.BrushShape
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class ABrushShape : public ABrush
{ 
public:
};

/// Class /Script/Engine.CameraBlockingVolume
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class ACameraBlockingVolume : public AVolume
{ 
public:
};

/// Class /Script/Engine.CameraLensEffectInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UCameraLensEffectInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.CameraLensEffectInterfaceClassSupportLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UCameraLensEffectInterfaceClassSupportLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.CameraModifier_CameraShake
/// Size: 0x0068 (0x000048 - 0x0000B0)
class UCameraModifier_CameraShake : public UCameraModifier
{ 
public:
	TArray<FActiveCameraShakeInfo>                     ActiveShakes;                                               // 0x0048   (0x0010)  
	TMap<UClass*, FPooledCameraShakes>                 ExpiredPooledShakesMap;                                     // 0x0058   (0x0050)  
	float                                              SplitScreenShakeScale;                                      // 0x00A8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00AC   (0x0004)  MISSED
};

/// Class /Script/Engine.CameraShakeSourceActor
/// Size: 0x0008 (0x000290 - 0x000298)
class ACameraShakeSourceActor : public AActor
{ 
public:
	UCameraShakeSourceComponent*                       CameraShakeSourceComponent;                                 // 0x0290   (0x0008)  
};

/// Class /Script/Engine.CameraShakeSourceComponent
/// Size: 0x0020 (0x0002A0 - 0x0002C0)
class UCameraShakeSourceComponent : public USceneComponent
{ 
public:
	ECameraShakeAttenuation                            Attenuation;                                                // 0x02A0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02A1   (0x0003)  MISSED
	float                                              InnerAttenuationRadius;                                     // 0x02A4   (0x0004)  
	float                                              OuterAttenuationRadius;                                     // 0x02A8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02AC   (0x0004)  MISSED
	UClass*                                            CameraShake;                                                // 0x02B0   (0x0008)  
	bool                                               bAutoStart;                                                 // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x02B9   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.CameraShakeSourceComponent.StopAllCameraShakesOfType
	void StopAllCameraShakesOfType(UClass* InCameraShake, bool bImmediately);                                                // [0x4855a40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraShakeSourceComponent.StopAllCameraShakes
	void StopAllCameraShakes(bool bImmediately);                                                                             // [0x48559b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraShakeSourceComponent.StartCameraShake
	void StartCameraShake(UClass* InCameraShake, float Scale, ECameraShakePlaySpace PlaySpace, FRotator UserPlaySpaceRot);   // [0x4855820] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.CameraShakeSourceComponent.Start
	void Start();                                                                                                            // [0x4855800] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CameraShakeSourceComponent.GetAttenuationFactor
	float GetAttenuationFactor(FVector& Location);                                                                           // [0x484fba0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.CanvasRenderTarget2D
/// Size: 0x0020 (0x000220 - 0x000240)
class UCanvasRenderTarget2D : public UTextureRenderTarget2D
{ 
public:
	FMulticastInlineDelegate                           OnCanvasRenderTargetUpdate;                                 // 0x0220   (0x0010)  
	TWeakObjectPtr<UWorld*>                            World;                                                      // 0x0230   (0x0008)  
	bool                                               bShouldClearRenderTargetOnReceiveUpdate;                    // 0x0238   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0239   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.CanvasRenderTarget2D.UpdateResource
	void UpdateResource();                                                                                                   // [0x45cef90] Native|Public|BlueprintCallable 
	// Function /Script/Engine.CanvasRenderTarget2D.ReceiveUpdate
	void ReceiveUpdate(UCanvas* Canvas, int32_t Width, int32_t Height);                                                      // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.CanvasRenderTarget2D.GetSize
	void GetSize(int32_t& Width, int32_t& Height);                                                                           // [0x4850050] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.CanvasRenderTarget2D.CreateCanvasRenderTarget2D
	UCanvasRenderTarget2D* CreateCanvasRenderTarget2D(UObject* WorldContextObject, UClass* CanvasRenderTarget2DClass, int32_t Width, int32_t Height); // [0x484f7b0] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/Engine.CheatManager
/// Size: 0x0060 (0x000028 - 0x000088)
class UCheatManager : public UObject
{ 
public:
	ADebugCameraController*                            DebugCameraControllerRef;                                   // 0x0028   (0x0008)  
	UClass*                                            DebugCameraControllerClass;                                 // 0x0030   (0x0008)  
	unsigned char                                      UnknownData00_5[0x40];                                      // 0x0038   (0x0040)  MISSED
	TArray<UCheatManagerExtension*>                    CheatManagerExtensions;                                     // 0x0078   (0x0010)  


	/// Functions
	// Function /Script/Engine.CheatManager.Walk
	void Walk();                                                                                                             // [0x3d499e0] Exec|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CheatManager.ViewSelf
	void ViewSelf();                                                                                                         // [0x487e640] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.ViewPlayer
	void ViewPlayer(FString S);                                                                                              // [0x487e5a0] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.ViewClass
	void ViewClass(UClass* DesiredClass);                                                                                    // [0x487e510] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.ViewActor
	void ViewActor(FName ActorName);                                                                                         // [0x487e480] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.UpdateSafeArea
	void UpdateSafeArea();                                                                                                   // [0x487e460] Final|Exec|Native|Public 
	// Function /Script/Engine.CheatManager.ToggleServerStatReplicatorUpdateStatNet
	void ToggleServerStatReplicatorUpdateStatNet();                                                                          // [0x487e3e0] Final|Exec|Native|Public 
	// Function /Script/Engine.CheatManager.ToggleServerStatReplicatorClientOverwrite
	void ToggleServerStatReplicatorClientOverwrite();                                                                        // [0x487e360] Final|Exec|Native|Public 
	// Function /Script/Engine.CheatManager.ToggleDebugCamera
	void ToggleDebugCamera();                                                                                                // [0x487e340] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.ToggleAILogging
	void ToggleAILogging();                                                                                                  // [0x487e320] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.TestCollisionDistance
	void TestCollisionDistance();                                                                                            // [0x487e300] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.Teleport
	void Teleport();                                                                                                         // [0xfa2ea0] Exec|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CheatManager.Summon
	void Summon(FString ClassName);                                                                                          // [0x487e260] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.StreamLevelOut
	void StreamLevelOut(FName PackageName);                                                                                  // [0x487e1d0] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.StreamLevelIn
	void StreamLevelIn(FName PackageName);                                                                                   // [0x487e140] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.SpawnServerStatReplicator
	void SpawnServerStatReplicator();                                                                                        // [0x487e100] Final|Exec|Native|Public 
	// Function /Script/Engine.CheatManager.Slomo
	void Slomo(float NewTimeDilation);                                                                                       // [0x1854d50] Exec|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CheatManager.SetWorldOrigin
	void SetWorldOrigin();                                                                                                   // [0x487dff0] Final|Exec|Native|Public 
	// Function /Script/Engine.CheatManager.SetMouseSensitivityToDefault
	void SetMouseSensitivityToDefault();                                                                                     // [0x487dfd0] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.ServerToggleAILogging
	void ServerToggleAILogging();                                                                                            // [0x487df80] Net|NetReliableNative|Event|Public|NetServer|NetValidate 
	// Function /Script/Engine.CheatManager.ReceiveInitCheatManager
	void ReceiveInitCheatManager();                                                                                          // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.CheatManager.ReceiveEndPlay
	void ReceiveEndPlay();                                                                                                   // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.CheatManager.PlayersOnly
	void PlayersOnly();                                                                                                      // [0x487df60] Exec|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CheatManager.OnPlayerEndPlayed
	void OnPlayerEndPlayed(AActor* Player, TEnumAsByte<EEndPlayReason> EndPlayReason);                                       // [0x487de00] Final|Native|Public  
	// Function /Script/Engine.CheatManager.OnlyLoadLevel
	void OnlyLoadLevel(FName PackageName);                                                                                   // [0x487ded0] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.LogLoc
	void LogLoc();                                                                                                           // [0x487dde0] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.InvertMouse
	void InvertMouse();                                                                                                      // [0xc03b10] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.God
	void God();                                                                                                              // [0xc4ef80] Exec|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CheatManager.Ghost
	void Ghost();                                                                                                            // [0xc00b40] Exec|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CheatManager.GetPlayerController
	APlayerController* GetPlayerController();                                                                                // [0x487dd70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CheatManager.FreezeFrame
	void FreezeFrame(float Delay);                                                                                           // [0x487dce0] Exec|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CheatManager.Fly
	void Fly();                                                                                                              // [0x487dcc0] Exec|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CheatManager.FlushLog
	void FlushLog();                                                                                                         // [0x487dca0] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.EnableDebugCamera
	void EnableDebugCamera();                                                                                                // [0xc02530] Native|Protected|BlueprintCallable 
	// Function /Script/Engine.CheatManager.DumpVoiceMutingState
	void DumpVoiceMutingState();                                                                                             // [0x487dc80] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.DumpPartyState
	void DumpPartyState();                                                                                                   // [0x487dc60] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.DumpOnlineSessionState
	void DumpOnlineSessionState();                                                                                           // [0x487dc40] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.DumpChatState
	void DumpChatState();                                                                                                    // [0x487dc20] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.DisableDebugCamera
	void DisableDebugCamera();                                                                                               // [0x487dc00] Native|Protected|BlueprintCallable 
	// Function /Script/Engine.CheatManager.DestroyTarget
	void DestroyTarget();                                                                                                    // [0x487dbe0] Exec|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CheatManager.DestroyServerStatReplicator
	void DestroyServerStatReplicator();                                                                                      // [0x487dbc0] Final|Exec|Native|Public 
	// Function /Script/Engine.CheatManager.DestroyPawns
	void DestroyPawns(UClass* aClass);                                                                                       // [0x487db30] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.DestroyAllPawnsExceptTarget
	void DestroyAllPawnsExceptTarget();                                                                                      // [0x45cef90] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.DestroyAll
	void DestroyAll(UClass* aClass);                                                                                         // [0x487daa0] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.DebugCapsuleSweepSize
	void DebugCapsuleSweepSize(float HalfHeight, float Radius);                                                              // [0x487d9d0] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.DebugCapsuleSweepPawn
	void DebugCapsuleSweepPawn();                                                                                            // [0x487d9b0] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.DebugCapsuleSweepComplex
	void DebugCapsuleSweepComplex(bool bTraceComplex);                                                                       // [0x487d920] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.DebugCapsuleSweepClear
	void DebugCapsuleSweepClear();                                                                                           // [0x487d900] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.DebugCapsuleSweepChannel
	void DebugCapsuleSweepChannel(TEnumAsByte<ECollisionChannel> Channel);                                                   // [0x487d880] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.DebugCapsuleSweepCapture
	void DebugCapsuleSweepCapture();                                                                                         // [0x487d860] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.DebugCapsuleSweep
	void DebugCapsuleSweep();                                                                                                // [0x487d840] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.DamageTarget
	void DamageTarget(float DamageAmount);                                                                                   // [0x487d7b0] Exec|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CheatManager.CheatScript
	void CheatScript(FString ScriptName);                                                                                    // [0x487d6c0] Final|Exec|Native|Public 
	// Function /Script/Engine.CheatManager.ChangeSize
	void ChangeSize(float F);                                                                                                // [0x45a7220] Exec|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CheatManager.BugItStringCreator
	void BugItStringCreator(FVector ViewLocation, FRotator ViewRotation, FString& GoString, FString& LocString);             // [0x487d4f0] Exec|Native|Public|HasOutParms|HasDefaults 
	// Function /Script/Engine.CheatManager.BugItGo
	void BugItGo(float X, float Y, float Z, float Pitch, float Yaw, float Roll);                                             // [0x487d300] Exec|Native|Public   
	// Function /Script/Engine.CheatManager.BugIt
	void BugIt(FString ScreenShotDescription);                                                                               // [0x487d260] Exec|Native|Public   
};

/// Class /Script/Engine.CheatManagerExtension
/// Size: 0x0000 (0x000028 - 0x000028)
class UCheatManagerExtension : public UObject
{ 
public:
};

/// Class /Script/Engine.CollisionProfile
/// Size: 0x0138 (0x000038 - 0x000170)
class UCollisionProfile : public UDeveloperSettings
{ 
public:
	TArray<FCollisionResponseTemplate>                 Profiles;                                                   // 0x0038   (0x0010)  
	TArray<FCustomChannelSetup>                        DefaultChannelResponses;                                    // 0x0048   (0x0010)  
	TArray<FCustomProfile>                             EditProfiles;                                               // 0x0058   (0x0010)  
	TArray<FRedirector>                                ProfileRedirects;                                           // 0x0068   (0x0010)  
	TArray<FRedirector>                                CollisionChannelRedirects;                                  // 0x0078   (0x0010)  
	unsigned char                                      UnknownData00_6[0xE8];                                      // 0x0088   (0x00E8)  MISSED
};

/// Class /Script/Engine.PluginCommandlet
/// Size: 0x0020 (0x000080 - 0x0000A0)
class UPluginCommandlet : public UCommandlet
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0080   (0x0020)  MISSED
};

/// Class /Script/Engine.SmokeTestCommandlet
/// Size: 0x0000 (0x000080 - 0x000080)
class USmokeTestCommandlet : public UCommandlet
{ 
public:
};

/// Class /Script/Engine.ComponentDelegateBinding
/// Size: 0x0010 (0x000028 - 0x000038)
class UComponentDelegateBinding : public UDynamicBlueprintBinding
{ 
public:
	TArray<FBlueprintComponentDelegateBinding>         ComponentDelegateBindings;                                  // 0x0028   (0x0010)  
};

/// Class /Script/Engine.ActorComponentInstanceDataTransientOuter
/// Size: 0x0000 (0x000028 - 0x000028)
class UActorComponentInstanceDataTransientOuter : public UObject
{ 
public:
};

/// Class /Script/Engine.ApplicationLifecycleComponent
/// Size: 0x0090 (0x0000A0 - 0x000130)
class UApplicationLifecycleComponent : public UActorComponent
{ 
public:
	FMulticastInlineDelegate                           ApplicationWillDeactivateDelegate;                          // 0x00A0   (0x0010)  
	FMulticastInlineDelegate                           ApplicationHasReactivatedDelegate;                          // 0x00B0   (0x0010)  
	FMulticastInlineDelegate                           ApplicationWillEnterBackgroundDelegate;                     // 0x00C0   (0x0010)  
	FMulticastInlineDelegate                           ApplicationHasEnteredForegroundDelegate;                    // 0x00D0   (0x0010)  
	FMulticastInlineDelegate                           ApplicationWillTerminateDelegate;                           // 0x00E0   (0x0010)  
	FMulticastInlineDelegate                           ApplicationShouldUnloadResourcesDelegate;                   // 0x00F0   (0x0010)  
	FMulticastInlineDelegate                           ApplicationReceivedStartupArgumentsDelegate;                // 0x0100   (0x0010)  
	FMulticastInlineDelegate                           OnTemperatureChangeDelegate;                                // 0x0110   (0x0010)  
	FMulticastInlineDelegate                           OnLowPowerModeDelegate;                                     // 0x0120   (0x0010)  
};

/// Class /Script/Engine.ArrowComponent
/// Size: 0x0010 (0x000540 - 0x000550)
class UArrowComponent : public UPrimitiveComponent
{ 
public:
	FColor                                             ArrowColor;                                                 // 0x0538   (0x0004)  
	float                                              ArrowSize;                                                  // 0x053C   (0x0004)  
	float                                              ArrowLength;                                                // 0x0540   (0x0004)  
	float                                              ScreenSize;                                                 // 0x0544   (0x0004)  
	bool                                               bIsScreenSizeScaled : 1;                                    // 0x0548:0 (0x0001)  
	bool                                               bTreatAsASprite : 1;                                        // 0x0548:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0549   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.ArrowComponent.SetArrowColor
	void SetArrowColor(FLinearColor NewColor);                                                                               // [0x48bec20] Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.InitialActiveSoundParams
/// Size: 0x0010 (0x000028 - 0x000038)
class UInitialActiveSoundParams : public UObject
{ 
public:
	TArray<FAudioParameter>                            AudioParams;                                                // 0x0028   (0x0010)  
};

/// Class /Script/Engine.BillboardComponent
/// Size: 0x0020 (0x000540 - 0x000560)
class UBillboardComponent : public UPrimitiveComponent
{ 
public:
	UTexture2D*                                        Sprite;                                                     // 0x0538   (0x0008)  
	bool                                               bIsScreenSizeScaled : 1;                                    // 0x0540:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0541   (0x0003)  MISSED
	float                                              ScreenSize;                                                 // 0x0544   (0x0004)  
	float                                              U;                                                          // 0x0548   (0x0004)  
	float                                              UL;                                                         // 0x054C   (0x0004)  
	float                                              V;                                                          // 0x0550   (0x0004)  
	float                                              VL;                                                         // 0x0554   (0x0004)  
	float                                              OpacityMaskRefVal;                                          // 0x0558   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x055C   (0x0004)  MISSED


	/// Functions
	// Function /Script/Engine.BillboardComponent.SetUV
	void SetUV(int32_t NewU, int32_t NewUL, int32_t NewV, int32_t NewVL);                                                    // [0x48c0a70] Native|Public|BlueprintCallable 
	// Function /Script/Engine.BillboardComponent.SetSpriteAndUV
	void SetSpriteAndUV(UTexture2D* NewSprite, int32_t NewU, int32_t NewUL, int32_t NewV, int32_t NewVL);                    // [0x48c0610] Native|Public|BlueprintCallable 
	// Function /Script/Engine.BillboardComponent.SetSprite
	void SetSprite(UTexture2D* NewSprite);                                                                                   // [0x16ab710] Native|Public|BlueprintCallable 
	// Function /Script/Engine.BillboardComponent.SetOpacityMaskRefVal
	void SetOpacityMaskRefVal(float RefVal);                                                                                 // [0x48bff80] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.BoundsCopyComponent
/// Size: 0x00B0 (0x0000A0 - 0x000150)
class UBoundsCopyComponent : public UActorComponent
{ 
public:
	TWeakObjectPtr<AActor*>                            BoundsSourceActor;                                          // 0x00A0   (0x0030)  
	bool                                               bUseCollidingComponentsForSourceBounds;                     // 0x00D0   (0x0001)  
	bool                                               bKeepOwnBoundsScale;                                        // 0x00D1   (0x0001)  
	bool                                               bUseCollidingComponentsForOwnBounds;                        // 0x00D2   (0x0001)  
	unsigned char                                      UnknownData00_5[0xD];                                       // 0x00D3   (0x000D)  MISSED
	FTransform                                         PostTransform;                                              // 0x00E0   (0x0060)  
	bool                                               bCopyXBounds;                                               // 0x0140   (0x0001)  
	bool                                               bCopyYBounds;                                               // 0x0141   (0x0001)  
	bool                                               bCopyZBounds;                                               // 0x0142   (0x0001)  
	unsigned char                                      UnknownData01_6[0xD];                                       // 0x0143   (0x000D)  MISSED
};

/// Class /Script/Engine.BrushComponent
/// Size: 0x0010 (0x000540 - 0x000550)
class UBrushComponent : public UPrimitiveComponent
{ 
public:
	UModel*                                            Brush;                                                      // 0x0538   (0x0008)  
	UBodySetup*                                        BrushBodySetup;                                             // 0x0540   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0548   (0x0008)  MISSED
};

/// Class /Script/Engine.CapsuleComponent
/// Size: 0x0000 (0x000560 - 0x000560)
class UCapsuleComponent : public UShapeComponent
{ 
public:


	/// Functions
	// Function /Script/Engine.CapsuleComponent.SetCapsuleSize
	void SetCapsuleSize(float InRadius, float InHalfHeight, bool bUpdateOverlaps);                                           // [0x48bf4a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CapsuleComponent.SetCapsuleRadius
	void SetCapsuleRadius(float Radius, bool bUpdateOverlaps);                                                               // [0x48bf3c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CapsuleComponent.SetCapsuleHalfHeight
	void SetCapsuleHalfHeight(float HalfHeight, bool bUpdateOverlaps);                                                       // [0x48bf2e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.CapsuleComponent.GetUnscaledCapsuleSize_WithoutHemisphere
	void GetUnscaledCapsuleSize_WithoutHemisphere(float& OutRadius, float& OutHalfHeightWithoutHemisphere);                  // [0x48bde40] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CapsuleComponent.GetUnscaledCapsuleSize
	void GetUnscaledCapsuleSize(float& OutRadius, float& OutHalfHeight);                                                     // [0x48bdd50] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CapsuleComponent.GetUnscaledCapsuleRadius
	float GetUnscaledCapsuleRadius();                                                                                        // [0x48bdd30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CapsuleComponent.GetUnscaledCapsuleHalfHeight_WithoutHemisphere
	float GetUnscaledCapsuleHalfHeight_WithoutHemisphere();                                                                  // [0x48bdd00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CapsuleComponent.GetUnscaledCapsuleHalfHeight
	float GetUnscaledCapsuleHalfHeight();                                                                                    // [0x48bdce0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CapsuleComponent.GetShapeScale
	float GetShapeScale();                                                                                                   // [0x48bdc30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CapsuleComponent.GetScaledCapsuleSize_WithoutHemisphere
	void GetScaledCapsuleSize_WithoutHemisphere(float& OutRadius, float& OutHalfHeightWithoutHemisphere);                    // [0x48bdaf0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CapsuleComponent.GetScaledCapsuleSize
	void GetScaledCapsuleSize(float& OutRadius, float& OutHalfHeight);                                                       // [0x48bd9d0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CapsuleComponent.GetScaledCapsuleRadius
	float GetScaledCapsuleRadius();                                                                                          // [0x48bd980] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CapsuleComponent.GetScaledCapsuleHalfHeight_WithoutHemisphere
	float GetScaledCapsuleHalfHeight_WithoutHemisphere();                                                                    // [0x48bd920] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CapsuleComponent.GetScaledCapsuleHalfHeight
	float GetScaledCapsuleHalfHeight();                                                                                      // [0x48bd8e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.ChildActorComponent
/// Size: 0x0040 (0x0002A0 - 0x0002E0)
class UChildActorComponent : public USceneComponent
{ 
public:
	UClass*                                            ChildActorClass;                                            // 0x02A0   (0x0008)  
	AActor*                                            ChildActor;                                                 // 0x02A8   (0x0008)  
	AActor*                                            ChildActorTemplate;                                         // 0x02B0   (0x0008)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x02B8   (0x0028)  MISSED


	/// Functions
	// Function /Script/Engine.ChildActorComponent.SetChildActorClass
	void SetChildActorClass(UClass* InClass);                                                                                // [0x48f99e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ChildActorComponent.OnChildActorDestroyed
	void OnChildActorDestroyed(AActor* DestroyedActor);                                                                      // [0x48f84b0] Final|Native|Private 
};

/// Class /Script/Engine.DecalComponent
/// Size: 0x0050 (0x0002A0 - 0x0002F0)
class UDecalComponent : public USceneComponent
{ 
public:
	UMaterialInterface*                                DecalMaterial;                                              // 0x02A0   (0x0008)  
	int32_t                                            SortOrder;                                                  // 0x02A8   (0x0004)  
	float                                              FadeScreenSize;                                             // 0x02AC   (0x0004)  
	float                                              FadeStartDelay;                                             // 0x02B0   (0x0004)  
	float                                              FadeDuration;                                               // 0x02B4   (0x0004)  
	float                                              FadeInDuration;                                             // 0x02B8   (0x0004)  
	float                                              FadeInStartDelay;                                           // 0x02BC   (0x0004)  
	bool                                               bDestroyOwnerAfterFade : 1;                                 // 0x02C0:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x02C1   (0x0007)  MISSED
	FVector                                            DecalSize;                                                  // 0x02C8   (0x0018)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x02E0   (0x0010)  MISSED


	/// Functions
	// Function /Script/Engine.DecalComponent.SetSortOrder
	void SetSortOrder(int32_t Value);                                                                                        // [0x48fbe50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DecalComponent.SetFadeScreenSize
	void SetFadeScreenSize(float NewFadeScreenSize);                                                                         // [0x48fa240] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DecalComponent.SetFadeOut
	void SetFadeOut(float StartDelay, float Duration, bool DestroyOwnerAfterFade);                                           // [0x48fa0b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DecalComponent.SetFadeIn
	void SetFadeIn(float StartDelay, float Duaration);                                                                       // [0x48f9f90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DecalComponent.SetDecalMaterial
	void SetDecalMaterial(UMaterialInterface* NewDecalMaterial);                                                             // [0x48f9a70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DecalComponent.GetFadeStartDelay
	float GetFadeStartDelay();                                                                                               // [0x1900d10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DecalComponent.GetFadeInStartDelay
	float GetFadeInStartDelay();                                                                                             // [0x48f7610] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DecalComponent.GetFadeInDuration
	float GetFadeInDuration();                                                                                               // [0x48f75f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DecalComponent.GetFadeDuration
	float GetFadeDuration();                                                                                                 // [0x40d1a10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DecalComponent.GetDecalMaterial
	UMaterialInterface* GetDecalMaterial();                                                                                  // [0x4486a60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DecalComponent.CreateDynamicMaterialInstance
	UMaterialInstanceDynamic* CreateDynamicMaterialInstance();                                                               // [0x48f6d40] Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.LightComponent
/// Size: 0x0100 (0x0002E0 - 0x0003E0)
class ULightComponent : public ULightComponentBase
{ 
public:
	float                                              Temperature;                                                // 0x02D8   (0x0004)  
	float                                              MaxDrawDistance;                                            // 0x02DC   (0x0004)  
	float                                              MaxDistanceFadeRange;                                       // 0x02E0   (0x0004)  
	bool                                               bUseTemperature : 1;                                        // 0x02E4:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x02E5   (0x0003)  MISSED
	int32_t                                            ShadowMapChannel;                                           // 0x02E8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02EC   (0x0004)  MISSED
	float                                              MinRoughness;                                               // 0x02F0   (0x0004)  
	float                                              SpecularScale;                                              // 0x02F4   (0x0004)  
	float                                              ShadowResolutionScale;                                      // 0x02F8   (0x0004)  
	float                                              ShadowBias;                                                 // 0x02FC   (0x0004)  
	float                                              ShadowSlopeBias;                                            // 0x0300   (0x0004)  
	float                                              ShadowSharpen;                                              // 0x0304   (0x0004)  
	float                                              ContactShadowLength;                                        // 0x0308   (0x0004)  
	bool                                               ContactShadowLengthInWS : 1;                                // 0x030C:0 (0x0001)  
	bool                                               InverseSquaredFalloff : 1;                                  // 0x030C:1 (0x0001)  
	bool                                               CastTranslucentShadows : 1;                                 // 0x030C:2 (0x0001)  
	bool                                               bCastShadowsFromCinematicObjectsOnly : 1;                   // 0x030C:3 (0x0001)  
	bool                                               bAffectDynamicIndirectLighting : 1;                         // 0x030C:4 (0x0001)  
	bool                                               bForceCachedShadowsForMovablePrimitives : 1;                // 0x030C:5 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x030D   (0x0003)  MISSED
	FLightingChannels                                  LightingChannels;                                           // 0x0310   (0x0001)  
	unsigned char                                      UnknownData03_5[0x7];                                       // 0x0311   (0x0007)  MISSED
	UMaterialInterface*                                LightFunctionMaterial;                                      // 0x0318   (0x0008)  
	FVector                                            LightFunctionScale;                                         // 0x0320   (0x0018)  
	UTextureLightProfile*                              IESTexture;                                                 // 0x0338   (0x0008)  
	bool                                               bUseIESBrightness : 1;                                      // 0x0340:0 (0x0001)  
	unsigned char                                      UnknownData04_4[0x3];                                       // 0x0341   (0x0003)  MISSED
	float                                              IESBrightnessScale;                                         // 0x0344   (0x0004)  
	float                                              LightFunctionFadeDistance;                                  // 0x0348   (0x0004)  
	float                                              DisabledBrightness;                                         // 0x034C   (0x0004)  
	bool                                               bEnableLightShaftBloom : 1;                                 // 0x0350:0 (0x0001)  
	unsigned char                                      UnknownData05_4[0x3];                                       // 0x0351   (0x0003)  MISSED
	float                                              BloomScale;                                                 // 0x0354   (0x0004)  
	float                                              BloomThreshold;                                             // 0x0358   (0x0004)  
	float                                              BloomMaxBrightness;                                         // 0x035C   (0x0004)  
	FColor                                             BloomTint;                                                  // 0x0360   (0x0004)  
	bool                                               bUseRayTracedDistanceFieldShadows;                          // 0x0364   (0x0001)  
	unsigned char                                      UnknownData06_5[0x3];                                       // 0x0365   (0x0003)  MISSED
	float                                              RayStartOffsetDepthScale;                                   // 0x0368   (0x0004)  
	unsigned char                                      UnknownData07_6[0x74];                                      // 0x036C   (0x0074)  MISSED


	/// Functions
	// Function /Script/Engine.LightComponent.SetVolumetricScatteringIntensity
	void SetVolumetricScatteringIntensity(float NewIntensity);                                                               // [0x48fc640] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetUseTemperature
	void SetUseTemperature(bool bNewValue);                                                                                  // [0x48fc490] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetUseIESBrightness
	void SetUseIESBrightness(bool bNewValue);                                                                                // [0x48fc2f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetTransmission
	void SetTransmission(bool bNewValue);                                                                                    // [0x48fc210] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetTemperature
	void SetTemperature(float NewTemperature);                                                                               // [0x48fc120] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetSpecularScale
	void SetSpecularScale(float NewValue);                                                                                   // [0x48fc060] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetShadowSlopeBias
	void SetShadowSlopeBias(float NewValue);                                                                                 // [0x48fbc10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetShadowBias
	void SetShadowBias(float NewValue);                                                                                      // [0x48fba10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetLightingChannels
	void SetLightingChannels(bool bChannel0, bool bChannel1, bool bChannel2);                                                // [0x48fb140] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetLightFunctionScale
	void SetLightFunctionScale(FVector NewLightFunctionScale);                                                               // [0x48fae30] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetLightFunctionMaterial
	void SetLightFunctionMaterial(UMaterialInterface* NewLightFunctionMaterial);                                             // [0x48fad70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetLightFunctionFadeDistance
	void SetLightFunctionFadeDistance(float NewLightFunctionFadeDistance);                                                   // [0x48facb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetLightFunctionDisabledBrightness
	void SetLightFunctionDisabledBrightness(float NewValue);                                                                 // [0x48fabf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetLightFColor
	void SetLightFColor(FColor NewLightColor);                                                                               // [0x48faab0] Final|Native|Public|HasDefaults 
	// Function /Script/Engine.LightComponent.SetLightColor
	void SetLightColor(FLinearColor NewLightColor, bool bSRGB);                                                              // [0x48fa930] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetIntensity
	void SetIntensity(float NewIntensity);                                                                                   // [0x48fa700] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetIndirectLightingIntensity
	void SetIndirectLightingIntensity(float NewIntensity);                                                                   // [0x48fa610] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetIESTexture
	void SetIESTexture(UTextureLightProfile* NewValue);                                                                      // [0x48fa550] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetIESBrightnessScale
	void SetIESBrightnessScale(float NewValue);                                                                              // [0x48fa490] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetForceCachedShadowsForMovablePrimitives
	void SetForceCachedShadowsForMovablePrimitives(bool bNewValue);                                                          // [0x48fa2d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetEnableLightShaftBloom
	void SetEnableLightShaftBloom(bool bNewValue);                                                                           // [0x48f9df0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetBloomTint
	void SetBloomTint(FColor NewValue);                                                                                      // [0x48f91e0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetBloomThreshold
	void SetBloomThreshold(float NewValue);                                                                                  // [0x48f9120] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetBloomScale
	void SetBloomScale(float NewValue);                                                                                      // [0x48f9060] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetBloomMaxBrightness
	void SetBloomMaxBrightness(float NewValue);                                                                              // [0x48f8fa0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetAffectTranslucentLighting
	void SetAffectTranslucentLighting(bool bNewValue);                                                                       // [0x48f8c30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LightComponent.SetAffectDynamicIndirectLighting
	void SetAffectDynamicIndirectLighting(bool bNewValue);                                                                   // [0x48f8b50] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.DirectionalLightComponent
/// Size: 0x00D0 (0x0003E0 - 0x0004B0)
class UDirectionalLightComponent : public ULightComponent
{ 
public:
	float                                              ShadowCascadeBiasDistribution;                              // 0x03E0   (0x0004)  
	bool                                               bEnableLightShaftOcclusion : 1;                             // 0x03E4:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x03E5   (0x0003)  MISSED
	float                                              OcclusionMaskDarkness;                                      // 0x03E8   (0x0004)  
	float                                              OcclusionDepthRange;                                        // 0x03EC   (0x0004)  
	FVector                                            LightShaftOverrideDirection;                                // 0x03F0   (0x0018)  
	float                                              WholeSceneDynamicShadowRadius;                              // 0x0408   (0x0004)  
	float                                              DynamicShadowDistanceMovableLight;                          // 0x040C   (0x0004)  
	float                                              DynamicShadowDistanceStationaryLight;                       // 0x0410   (0x0004)  
	int32_t                                            DynamicShadowCascades;                                      // 0x0414   (0x0004)  
	float                                              CascadeDistributionExponent;                                // 0x0418   (0x0004)  
	float                                              CascadeTransitionFraction;                                  // 0x041C   (0x0004)  
	float                                              ShadowDistanceFadeoutFraction;                              // 0x0420   (0x0004)  
	bool                                               bUseInsetShadowsForMovableObjects : 1;                      // 0x0424:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0425   (0x0003)  MISSED
	int32_t                                            FarShadowCascadeCount;                                      // 0x0428   (0x0004)  
	float                                              FarShadowDistance;                                          // 0x042C   (0x0004)  
	float                                              DistanceFieldShadowDistance;                                // 0x0430   (0x0004)  
	int32_t                                            ForwardShadingPriority;                                     // 0x0434   (0x0004)  
	float                                              LightSourceAngle;                                           // 0x0438   (0x0004)  
	float                                              LightSourceSoftAngle;                                       // 0x043C   (0x0004)  
	float                                              ShadowSourceAngleFactor;                                    // 0x0440   (0x0004)  
	float                                              TraceDistance;                                              // 0x0444   (0x0004)  
	bool                                               bUsedAsAtmosphereSunLight : 1;                              // 0x0448:0 (0x0001)  
	bool                                               bAtmosphereSunLight : 1;                                    // 0x0448:1 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x0449   (0x0003)  MISSED
	int32_t                                            AtmosphereSunLightIndex;                                    // 0x044C   (0x0004)  
	FLinearColor                                       AtmosphereSunDiskColorScale;                                // 0x0450   (0x0010)  
	bool                                               bPerPixelAtmosphereTransmittance : 1;                       // 0x0460:0 (0x0001)  
	bool                                               bCastShadowsOnClouds : 1;                                   // 0x0460:1 (0x0001)  
	bool                                               bCastShadowsOnAtmosphere : 1;                               // 0x0460:2 (0x0001)  
	bool                                               bCastCloudShadows : 1;                                      // 0x0460:3 (0x0001)  
	unsigned char                                      UnknownData03_4[0x3];                                       // 0x0461   (0x0003)  MISSED
	float                                              CloudShadowStrength;                                        // 0x0464   (0x0004)  
	float                                              CloudShadowOnAtmosphereStrength;                            // 0x0468   (0x0004)  
	float                                              CloudShadowOnSurfaceStrength;                               // 0x046C   (0x0004)  
	float                                              CloudShadowDepthBias;                                       // 0x0470   (0x0004)  
	float                                              CloudShadowExtent;                                          // 0x0474   (0x0004)  
	float                                              CloudShadowMapResolutionScale;                              // 0x0478   (0x0004)  
	float                                              CloudShadowRaySampleCountScale;                             // 0x047C   (0x0004)  
	FLinearColor                                       CloudScatteredLuminanceScale;                               // 0x0480   (0x0010)  
	FLightmassDirectionalLightSettings                 LightmassSettings;                                          // 0x0490   (0x0010)  
	bool                                               bCastModulatedShadows : 1;                                  // 0x04A0:0 (0x0001)  
	unsigned char                                      UnknownData04_4[0x3];                                       // 0x04A1   (0x0003)  MISSED
	FColor                                             ModulatedShadowColor;                                       // 0x04A4   (0x0004)  
	float                                              ShadowAmount;                                               // 0x04A8   (0x0004)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x04AC   (0x0004)  MISSED


	/// Functions
	// Function /Script/Engine.DirectionalLightComponent.SetShadowSourceAngleFactor
	void SetShadowSourceAngleFactor(float NewValue);                                                                         // [0x48fbcd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetShadowDistanceFadeoutFraction
	void SetShadowDistanceFadeoutFraction(float NewValue);                                                                   // [0x48fbb70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetShadowCascadeBiasDistribution
	void SetShadowCascadeBiasDistribution(float NewValue);                                                                   // [0x48fbad0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetShadowAmount
	void SetShadowAmount(float NewValue);                                                                                    // [0x48fb950] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetOcclusionMaskDarkness
	void SetOcclusionMaskDarkness(float NewValue);                                                                           // [0x48fb350] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetOcclusionDepthRange
	void SetOcclusionDepthRange(float NewValue);                                                                             // [0x48fb290] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetLightSourceSoftAngle
	void SetLightSourceSoftAngle(float NewValue);                                                                            // [0x48fb080] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetLightSourceAngle
	void SetLightSourceAngle(float NewValue);                                                                                // [0x48fafc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetLightShaftOverrideDirection
	void SetLightShaftOverrideDirection(FVector NewValue);                                                                   // [0x48faf30] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetEnableLightShaftOcclusion
	void SetEnableLightShaftOcclusion(bool bNewValue);                                                                       // [0x48f9ec0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetDynamicShadowDistanceStationaryLight
	void SetDynamicShadowDistanceStationaryLight(float NewValue);                                                            // [0x48f9c40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetDynamicShadowDistanceMovableLight
	void SetDynamicShadowDistanceMovableLight(float NewValue);                                                               // [0x48f9ba0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetDynamicShadowCascades
	void SetDynamicShadowCascades(int32_t NewValue);                                                                         // [0x48f9b00] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetCascadeTransitionFraction
	void SetCascadeTransitionFraction(float NewValue);                                                                       // [0x48f9940] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetCascadeDistributionExponent
	void SetCascadeDistributionExponent(float NewValue);                                                                     // [0x48f98a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetAtmosphereSunLightIndex
	void SetAtmosphereSunLightIndex(int32_t NewValue);                                                                       // [0x48f8df0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DirectionalLightComponent.SetAtmosphereSunLight
	void SetAtmosphereSunLight(bool bNewValue);                                                                              // [0x48f8d10] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.DrawFrustumComponent
/// Size: 0x0020 (0x000540 - 0x000560)
class UDrawFrustumComponent : public UPrimitiveComponent
{ 
public:
	bool                                               bFrustumEnabled;                                            // 0x0538   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0539   (0x0003)  MISSED
	FColor                                             FrustumColor;                                               // 0x053C   (0x0004)  
	float                                              FrustumAngle;                                               // 0x0540   (0x0004)  
	float                                              FrustumAspectRatio;                                         // 0x0544   (0x0004)  
	float                                              FrustumStartDist;                                           // 0x0548   (0x0004)  
	float                                              FrustumEndDist;                                             // 0x054C   (0x0004)  
	UTexture*                                          Texture;                                                    // 0x0550   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0558   (0x0008)  MISSED
};

/// Class /Script/Engine.SphereComponent
/// Size: 0x0000 (0x000560 - 0x000560)
class USphereComponent : public UShapeComponent
{ 
public:


	/// Functions
	// Function /Script/Engine.SphereComponent.SetSphereRadius
	void SetSphereRadius(float InSphereRadius, bool bUpdateOverlaps);                                                        // [0x4972d40] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SphereComponent.GetUnscaledSphereRadius
	float GetUnscaledSphereRadius();                                                                                         // [0x48bdce0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SphereComponent.GetShapeScale
	float GetShapeScale();                                                                                                   // [0x48bdc30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SphereComponent.GetScaledSphereRadius
	float GetScaledSphereRadius();                                                                                           // [0x496d410] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.DrawSphereComponent
/// Size: 0x0000 (0x000560 - 0x000560)
class UDrawSphereComponent : public USphereComponent
{ 
public:
};

/// Class /Script/Engine.ForceFeedbackComponent
/// Size: 0x00F0 (0x0002A0 - 0x000390)
class UForceFeedbackComponent : public USceneComponent
{ 
public:
	UForceFeedbackEffect*                              ForceFeedbackEffect;                                        // 0x02A0   (0x0008)  
	bool                                               bAutoDestroy : 1;                                           // 0x02A8:0 (0x0001)  
	bool                                               bStopWhenOwnerDestroyed : 1;                                // 0x02A8:1 (0x0001)  
	bool                                               bLooping : 1;                                               // 0x02A8:2 (0x0001)  
	bool                                               bIgnoreTimeDilation : 1;                                    // 0x02A8:3 (0x0001)  
	bool                                               bOverrideAttenuation : 1;                                   // 0x02A8:4 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x02A9   (0x0003)  MISSED
	float                                              IntensityMultiplier;                                        // 0x02AC   (0x0004)  
	UForceFeedbackAttenuation*                         AttenuationSettings;                                        // 0x02B0   (0x0008)  
	FForceFeedbackAttenuationSettings                  AttenuationOverrides;                                       // 0x02B8   (0x00C0)  
	FMulticastInlineDelegate                           OnForceFeedbackFinished;                                    // 0x0378   (0x0010)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0388   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.ForceFeedbackComponent.Stop
	void Stop();                                                                                                             // [0x48fc750] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ForceFeedbackComponent.SetIntensityMultiplier
	void SetIntensityMultiplier(float NewIntensityMultiplier);                                                               // [0x4853e90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ForceFeedbackComponent.SetForceFeedbackEffect
	void SetForceFeedbackEffect(UForceFeedbackEffect* NewForceFeedbackEffect);                                               // [0x48fa3b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ForceFeedbackComponent.Play
	void Play(float StartTime);                                                                                              // [0x44dc2c0] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ForceFeedbackComponent.BP_GetAttenuationSettingsToApply
	bool BP_GetAttenuationSettingsToApply(FForceFeedbackAttenuationSettings& OutAttenuationSettings);                        // [0x48f6750] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ForceFeedbackComponent.AdjustAttenuation
	void AdjustAttenuation(FForceFeedbackAttenuationSettings& InAttenuationSettings);                                        // [0x48f6610] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Engine.InterpToMovementComponent
/// Size: 0x00B0 (0x000108 - 0x0001B8)
class UInterpToMovementComponent : public UMovementComponent
{ 
public:
	float                                              Duration;                                                   // 0x0108   (0x0004)  
	bool                                               bPauseOnImpact : 1;                                         // 0x010C:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x010D   (0x0003)  MISSED
	bool                                               bSweep;                                                     // 0x0110   (0x0001)  
	ETeleportType                                      TeleportType;                                               // 0x0111   (0x0001)  
	EInterpToBehaviourType                             BehaviourType;                                              // 0x0112   (0x0001)  
	bool                                               bCheckIfStillInWorld;                                       // 0x0113   (0x0001)  
	bool                                               bForceSubStepping : 1;                                      // 0x0114:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0115   (0x0003)  MISSED
	FMulticastInlineDelegate                           OnInterpToReverse;                                          // 0x0118   (0x0010)  
	FMulticastInlineDelegate                           OnInterpToStop;                                             // 0x0128   (0x0010)  
	FMulticastInlineDelegate                           OnWaitBeginDelegate;                                        // 0x0138   (0x0010)  
	FMulticastInlineDelegate                           OnWaitEndDelegate;                                          // 0x0148   (0x0010)  
	FMulticastInlineDelegate                           OnResetDelegate;                                            // 0x0158   (0x0010)  
	float                                              MaxSimulationTimeStep;                                      // 0x0168   (0x0004)  
	int32_t                                            MaxSimulationIterations;                                    // 0x016C   (0x0004)  
	TArray<FInterpControlPoint>                        ControlPoints;                                              // 0x0170   (0x0010)  
	unsigned char                                      UnknownData02_6[0x38];                                      // 0x0180   (0x0038)  MISSED


	/// Functions
	// Function /Script/Engine.InterpToMovementComponent.StopSimulating
	void StopSimulating(FHitResult& HitResult);                                                                              // [0x48fc7f0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.InterpToMovementComponent.RestartMovement
	void RestartMovement(float InitialDirection);                                                                            // [0x48f8ab0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.InterpToMovementComponent.ResetControlPoints
	void ResetControlPoints();                                                                                               // [0x48f8a60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.InterpToMovementComponent.OnInterpToWaitEndDelegate__DelegateSignature
	void OnInterpToWaitEndDelegate__DelegateSignature(FHitResult& ImpactResult, float Time);                                 // [0x2e6eb70] MulticastDelegate|Public|Delegate|HasOutParms 
	// Function /Script/Engine.InterpToMovementComponent.OnInterpToWaitBeginDelegate__DelegateSignature
	void OnInterpToWaitBeginDelegate__DelegateSignature(FHitResult& ImpactResult, float Time);                               // [0x2e6eb70] MulticastDelegate|Public|Delegate|HasOutParms 
	// Function /Script/Engine.InterpToMovementComponent.OnInterpToStopDelegate__DelegateSignature
	void OnInterpToStopDelegate__DelegateSignature(FHitResult& ImpactResult, float Time);                                    // [0x2e6eb70] MulticastDelegate|Public|Delegate|HasOutParms 
	// Function /Script/Engine.InterpToMovementComponent.OnInterpToReverseDelegate__DelegateSignature
	void OnInterpToReverseDelegate__DelegateSignature(FHitResult& ImpactResult, float Time);                                 // [0x2e6eb70] MulticastDelegate|Public|Delegate|HasOutParms 
	// Function /Script/Engine.InterpToMovementComponent.OnInterpToResetDelegate__DelegateSignature
	void OnInterpToResetDelegate__DelegateSignature(FHitResult& ImpactResult, float Time);                                   // [0x2e6eb70] MulticastDelegate|Public|Delegate|HasOutParms 
	// Function /Script/Engine.InterpToMovementComponent.FinaliseControlPoints
	void FinaliseControlPoints();                                                                                            // [0x48f6d70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.InterpToMovementComponent.AddControlPointPosition
	void AddControlPointPosition(FVector Pos, bool bPositionIsRelative);                                                     // [0x48f6080] Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.LineBatchComponent
/// Size: 0x0040 (0x000540 - 0x000580)
class ULineBatchComponent : public UPrimitiveComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x40];                                      // 0x0540   (0x0040)  MISSED
};

/// Class /Script/Engine.LocalLightComponent
/// Size: 0x0020 (0x0003E0 - 0x000400)
class ULocalLightComponent : public ULightComponent
{ 
public:
	ELightUnits                                        IntensityUnits;                                             // 0x03E0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x03E1   (0x0003)  MISSED
	float                                              InverseExposureBlend;                                       // 0x03E4   (0x0004)  
	float                                              Radius;                                                     // 0x03E8   (0x0004)  
	float                                              AttenuationRadius;                                          // 0x03EC   (0x0004)  
	FLightmassPointLightSettings                       LightmassSettings;                                          // 0x03F0   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x03FC   (0x0004)  MISSED


	/// Functions
	// Function /Script/Engine.LocalLightComponent.SetIntensityUnits
	void SetIntensityUnits(ELightUnits NewIntensityUnits);                                                                   // [0x48fa7c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LocalLightComponent.SetAttenuationRadius
	void SetAttenuationRadius(float NewRadius);                                                                              // [0x48f8eb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LocalLightComponent.GetUnitsConversionFactor
	float GetUnitsConversionFactor(ELightUnits SrcUnits, ELightUnits TargetUnits, float CosHalfConeAngle);                   // [0x48f7bd0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/Engine.LODSyncComponent
/// Size: 0x0098 (0x0000A0 - 0x000138)
class ULODSyncComponent : public UActorComponent
{ 
public:
	int32_t                                            NumLODs;                                                    // 0x00A0   (0x0004)  
	int32_t                                            ForcedLOD;                                                  // 0x00A4   (0x0004)  
	int32_t                                            MinLOD;                                                     // 0x00A8   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00AC   (0x0004)  MISSED
	TArray<FComponentSync>                             ComponentsToSync;                                           // 0x00B0   (0x0010)  
	TMap<FName, FLODMappingData>                       CustomLODMapping;                                           // 0x00C0   (0x0050)  
	int32_t                                            CurrentLOD;                                                 // 0x0110   (0x0004)  
	int32_t                                            CurrentNumLODs;                                             // 0x0114   (0x0004)  
	TArray<UPrimitiveComponent*>                       DriveComponents;                                            // 0x0118   (0x0010)  
	TArray<UPrimitiveComponent*>                       SubComponents;                                              // 0x0128   (0x0010)  


	/// Functions
	// Function /Script/Engine.LODSyncComponent.GetLODSyncDebugText
	FString GetLODSyncDebugText();                                                                                           // [0x48f7670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.MaterialBillboardComponent
/// Size: 0x0010 (0x000540 - 0x000550)
class UMaterialBillboardComponent : public UPrimitiveComponent
{ 
public:
	TArray<FMaterialSpriteElement>                     Elements;                                                   // 0x0538   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0548   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.MaterialBillboardComponent.SetElements
	void SetElements(TArray<FMaterialSpriteElement>& NewElements);                                                           // [0x48f9ce0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.MaterialBillboardComponent.AddElement
	void AddElement(UMaterialInterface* Material, UCurveFloat* DistanceToOpacityCurve, bool bSizeIsInScreenSpace, float BaseSizeX, float BaseSizeY, UCurveFloat* DistanceToSizeCurve); // [0x48f6170] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.ModelComponent
/// Size: 0x0040 (0x000540 - 0x000580)
class UModelComponent : public UPrimitiveComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0540   (0x0010)  MISSED
	UBodySetup*                                        ModelBodySetup;                                             // 0x0550   (0x0008)  
	unsigned char                                      UnknownData01_6[0x28];                                      // 0x0558   (0x0028)  MISSED
};

/// Class /Script/Engine.PawnNoiseEmitterComponent
/// Size: 0x0038 (0x0000A0 - 0x0000D8)
class UPawnNoiseEmitterComponent : public UActorComponent
{ 
public:
	bool                                               bAIPerceptionSystemCompatibilityMode : 1;                   // 0x00A0:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x00A1   (0x0007)  MISSED
	FVector                                            LastRemoteNoisePosition;                                    // 0x00A8   (0x0018)  
	float                                              NoiseLifetime;                                              // 0x00C0   (0x0004)  
	float                                              LastRemoteNoiseVolume;                                      // 0x00C4   (0x0004)  
	float                                              LastRemoteNoiseTime;                                        // 0x00C8   (0x0004)  
	float                                              LastLocalNoiseVolume;                                       // 0x00CC   (0x0004)  
	float                                              LastLocalNoiseTime;                                         // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00D4   (0x0004)  MISSED


	/// Functions
	// Function /Script/Engine.PawnNoiseEmitterComponent.MakeNoise
	void MakeNoise(AActor* NoiseMaker, float Loudness, FVector& NoiseLocation);                                              // [0x48f8390] BlueprintAuthorityOnly|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.PlatformEventsComponent
/// Size: 0x0020 (0x0000A0 - 0x0000C0)
class UPlatformEventsComponent : public UActorComponent
{ 
public:
	FMulticastInlineDelegate                           PlatformChangedToLaptopModeDelegate;                        // 0x00A0   (0x0010)  
	FMulticastInlineDelegate                           PlatformChangedToTabletModeDelegate;                        // 0x00B0   (0x0010)  


	/// Functions
	// Function /Script/Engine.PlatformEventsComponent.SupportsConvertibleLaptops
	bool SupportsConvertibleLaptops();                                                                                       // [0x48fc930] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlatformEventsComponent.PlatformEventDelegate__DelegateSignature
	void PlatformEventDelegate__DelegateSignature();                                                                         // [0x2e6eb70] MulticastDelegate|Public|Delegate 
	// Function /Script/Engine.PlatformEventsComponent.IsInTabletMode
	bool IsInTabletMode();                                                                                                   // [0x48f8000] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PlatformEventsComponent.IsInLaptopMode
	bool IsInLaptopMode();                                                                                                   // [0x48f7fd0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.PointLightComponent
/// Size: 0x0020 (0x000400 - 0x000420)
class UPointLightComponent : public ULocalLightComponent
{ 
public:
	bool                                               bUseInverseSquaredFalloff : 1;                              // 0x0400:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0401   (0x0003)  MISSED
	float                                              LightFalloffExponent;                                       // 0x0404   (0x0004)  
	float                                              SourceRadius;                                               // 0x0408   (0x0004)  
	float                                              SoftSourceRadius;                                           // 0x040C   (0x0004)  
	float                                              SourceLength;                                               // 0x0410   (0x0004)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x0414   (0x000C)  MISSED


	/// Functions
	// Function /Script/Engine.PointLightComponent.SetUseInverseSquaredFalloff
	void SetUseInverseSquaredFalloff(bool bNewValue);                                                                        // [0x48fc3c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PointLightComponent.SetSourceRadius
	void SetSourceRadius(float bNewValue);                                                                                   // [0x48fbfa0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PointLightComponent.SetSourceLength
	void SetSourceLength(float NewValue);                                                                                    // [0x48fbee0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PointLightComponent.SetSoftSourceRadius
	void SetSoftSourceRadius(float bNewValue);                                                                               // [0x48fbd90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PointLightComponent.SetLightFalloffExponent
	void SetLightFalloffExponent(float NewLightFalloffExponent);                                                             // [0x48fab30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PointLightComponent.SetInverseExposureBlend
	void SetInverseExposureBlend(float NewInverseExposureBlend);                                                             // [0x48fa870] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.PoseableMeshComponent
/// Size: 0x01A0 (0x0008A0 - 0x000A40)
class UPoseableMeshComponent : public USkinnedMeshComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x1A0];                                     // 0x08A0   (0x01A0)  MISSED
};

/// Class /Script/Engine.PostProcessComponent
/// Size: 0x0700 (0x0002A0 - 0x0009A0)
class UPostProcessComponent : public USceneComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x02A0   (0x0010)  MISSED
	FPostProcessSettings                               Settings;                                                   // 0x02B0   (0x06E0)  
	float                                              Priority;                                                   // 0x0990   (0x0004)  
	float                                              BlendRadius;                                                // 0x0994   (0x0004)  
	float                                              BlendWeight;                                                // 0x0998   (0x0004)  
	bool                                               bEnabled : 1;                                               // 0x099C:0 (0x0001)  
	bool                                               bUnbound : 1;                                               // 0x099C:1 (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x099D   (0x0003)  MISSED


	/// Functions
	// Function /Script/Engine.PostProcessComponent.AddOrUpdateBlendable
	void AddOrUpdateBlendable(TScriptInterface<Class> InBlendableObject, float InWeight);                                    // [0x48f64c0] Final|RequiredAPI|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.ProjectileMovementComponent
/// Size: 0x0138 (0x000108 - 0x000240)
class UProjectileMovementComponent : public UMovementComponent
{ 
public:
	float                                              InitialSpeed;                                               // 0x0108   (0x0004)  
	float                                              MaxSpeed;                                                   // 0x010C   (0x0004)  
	bool                                               bRotationFollowsVelocity : 1;                               // 0x0110:0 (0x0001)  
	bool                                               bRotationRemainsVertical : 1;                               // 0x0110:1 (0x0001)  
	bool                                               bShouldBounce : 1;                                          // 0x0110:2 (0x0001)  
	bool                                               bInitialVelocityInLocalSpace : 1;                           // 0x0110:3 (0x0001)  
	bool                                               bForceSubStepping : 1;                                      // 0x0110:4 (0x0001)  
	bool                                               bSimulationEnabled : 1;                                     // 0x0110:5 (0x0001)  
	bool                                               bSweepCollision : 1;                                        // 0x0110:6 (0x0001)  
	bool                                               bIsHomingProjectile : 1;                                    // 0x0110:7 (0x0001)  
	bool                                               bBounceAngleAffectsFriction : 1;                            // 0x0111:0 (0x0001)  
	bool                                               bIsSliding : 1;                                             // 0x0111:1 (0x0001)  
	bool                                               bInterpMovement : 1;                                        // 0x0111:2 (0x0001)  
	bool                                               bInterpRotation : 1;                                        // 0x0111:3 (0x0001)  
	unsigned char                                      UnknownData00_4[0x2];                                       // 0x0112   (0x0002)  MISSED
	float                                              PreviousHitTime;                                            // 0x0114   (0x0004)  
	FVector                                            PreviousHitNormal;                                          // 0x0118   (0x0018)  
	float                                              ProjectileGravityScale;                                     // 0x0130   (0x0004)  
	float                                              Buoyancy;                                                   // 0x0134   (0x0004)  
	float                                              Bounciness;                                                 // 0x0138   (0x0004)  
	float                                              Friction;                                                   // 0x013C   (0x0004)  
	float                                              BounceVelocityStopSimulatingThreshold;                      // 0x0140   (0x0004)  
	float                                              MinFrictionFraction;                                        // 0x0144   (0x0004)  
	FMulticastInlineDelegate                           OnProjectileBounce;                                         // 0x0148   (0x0010)  
	FMulticastInlineDelegate                           OnProjectileStop;                                           // 0x0158   (0x0010)  
	float                                              HomingAccelerationMagnitude;                                // 0x0168   (0x0004)  
	TWeakObjectPtr<USceneComponent*>                   HomingTargetComponent;                                      // 0x016C   (0x0008)  
	float                                              MaxSimulationTimeStep;                                      // 0x0174   (0x0004)  
	int32_t                                            MaxSimulationIterations;                                    // 0x0178   (0x0004)  
	int32_t                                            BounceAdditionalIterations;                                 // 0x017C   (0x0004)  
	float                                              InterpLocationTime;                                         // 0x0180   (0x0004)  
	float                                              InterpRotationTime;                                         // 0x0184   (0x0004)  
	float                                              InterpLocationMaxLagDistance;                               // 0x0188   (0x0004)  
	float                                              InterpLocationSnapToTargetDistance;                         // 0x018C   (0x0004)  
	unsigned char                                      UnknownData01_6[0xB0];                                      // 0x0190   (0x00B0)  MISSED


	/// Functions
	// Function /Script/Engine.ProjectileMovementComponent.StopSimulating
	void StopSimulating(FHitResult& HitResult);                                                                              // [0x4930c80] Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.ProjectileMovementComponent.SetVelocityInLocalSpace
	void SetVelocityInLocalSpace(FVector NewVelocity);                                                                       // [0x49307b0] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.ProjectileMovementComponent.SetInterpolatedComponent
	void SetInterpolatedComponent(USceneComponent* Component);                                                               // [0x492fe50] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ProjectileMovementComponent.ResetInterpolation
	void ResetInterpolation();                                                                                               // [0x3d76e50] Native|Public|BlueprintCallable 
	// Function /Script/Engine.ProjectileMovementComponent.OnProjectileStopDelegate__DelegateSignature
	void OnProjectileStopDelegate__DelegateSignature(FHitResult& ImpactResult);                                              // [0x2e6eb70] MulticastDelegate|Public|Delegate|HasOutParms 
	// Function /Script/Engine.ProjectileMovementComponent.OnProjectileBounceDelegate__DelegateSignature
	void OnProjectileBounceDelegate__DelegateSignature(FHitResult& ImpactResult, FVector& ImpactVelocity);                   // [0x2e6eb70] MulticastDelegate|Public|Delegate|HasOutParms|HasDefaults 
	// Function /Script/Engine.ProjectileMovementComponent.MoveInterpolationTarget
	void MoveInterpolationTarget(FVector& NewLocation, FRotator& NewRotation);                                               // [0x492db80] Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.ProjectileMovementComponent.LimitVelocity
	FVector LimitVelocity(FVector NewVelocity);                                                                              // [0x492d940] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ProjectileMovementComponent.IsVelocityUnderSimulationThreshold
	bool IsVelocityUnderSimulationThreshold();                                                                               // [0x492d6c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ProjectileMovementComponent.IsInterpolationComplete
	bool IsInterpolationComplete();                                                                                          // [0x492d600] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.RectLightComponent
/// Size: 0x0020 (0x000400 - 0x000420)
class URectLightComponent : public ULocalLightComponent
{ 
public:
	float                                              SourceWidth;                                                // 0x0400   (0x0004)  
	float                                              SourceHeight;                                               // 0x0404   (0x0004)  
	float                                              BarnDoorAngle;                                              // 0x0408   (0x0004)  
	float                                              BarnDoorLength;                                             // 0x040C   (0x0004)  
	UTexture*                                          SourceTexture;                                              // 0x0410   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0418   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.RectLightComponent.SetSourceWidth
	void SetSourceWidth(float NewValue);                                                                                     // [0x49305c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.RectLightComponent.SetSourceTexture
	void SetSourceTexture(UTexture* NewValue);                                                                               // [0x4930500] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.RectLightComponent.SetSourceHeight
	void SetSourceHeight(float NewValue);                                                                                    // [0x48fab30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.RectLightComponent.SetBarnDoorLength
	void SetBarnDoorLength(float NewValue);                                                                                  // [0x492f5f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.RectLightComponent.SetBarnDoorAngle
	void SetBarnDoorAngle(float NewValue);                                                                                   // [0x492f510] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.RotatingMovementComponent
/// Size: 0x0038 (0x000108 - 0x000140)
class URotatingMovementComponent : public UMovementComponent
{ 
public:
	FRotator                                           RotationRate;                                               // 0x0108   (0x0018)  
	FVector                                            PivotTranslation;                                           // 0x0120   (0x0018)  
	bool                                               bRotationInLocalSpace : 1;                                  // 0x0138:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0139   (0x0007)  MISSED
};

/// Class /Script/Engine.RuntimeVirtualTextureComponent
/// Size: 0x0090 (0x0002A0 - 0x000330)
class URuntimeVirtualTextureComponent : public USceneComponent
{ 
public:
	TWeakObjectPtr<AActor*>                            BoundsAlignActor;                                           // 0x02A0   (0x0030)  
	bool                                               bSetBoundsButton;                                           // 0x02D0   (0x0001)  
	bool                                               bSnapBoundsToLandscape;                                     // 0x02D1   (0x0001)  
	unsigned char                                      UnknownData00_5[0x6];                                       // 0x02D2   (0x0006)  MISSED
	URuntimeVirtualTexture*                            VirtualTexture;                                             // 0x02D8   (0x0008)  
	bool                                               bEnableScalability;                                         // 0x02E0   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x02E1   (0x0003)  MISSED
	uint32_t                                           ScalabilityGroup;                                           // 0x02E4   (0x0004)  
	bool                                               bHidePrimitives;                                            // 0x02E8   (0x0001)  
	unsigned char                                      UnknownData02_5[0x7];                                       // 0x02E9   (0x0007)  MISSED
	UVirtualTextureBuilder*                            StreamingTexture;                                           // 0x02F0   (0x0008)  
	int32_t                                            StreamLowMips;                                              // 0x02F8   (0x0004)  
	bool                                               bBuildStreamingMipsButton;                                  // 0x02FC   (0x0001)  
	TEnumAsByte<ETextureLossyCompressionAmount>        LossyCompressionAmount;                                     // 0x02FD   (0x0001)  
	bool                                               bUseStreamingLowMipsInEditor;                               // 0x02FE   (0x0001)  
	bool                                               bBuildDebugStreamingMips;                                   // 0x02FF   (0x0001)  
	unsigned char                                      UnknownData03_6[0x30];                                      // 0x0300   (0x0030)  MISSED


	/// Functions
	// Function /Script/Engine.RuntimeVirtualTextureComponent.Invalidate
	void Invalidate(FBoxSphereBounds& WorldBounds);                                                                          // [0x492d470] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.SkyAtmosphere
/// Size: 0x0008 (0x000290 - 0x000298)
class ASkyAtmosphere : public AInfo
{ 
public:
	USkyAtmosphereComponent*                           SkyAtmosphereComponent;                                     // 0x0290   (0x0008)  
};

/// Class /Script/Engine.SplineMeshComponent
/// Size: 0x0100 (0x0005F0 - 0x0006F0)
class USplineMeshComponent : public UStaticMeshComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x05F0   (0x0008)  MISSED
	FSplineMeshParams                                  SplineParams;                                               // 0x05F8   (0x00B0)  
	FVector                                            SplineUpDir;                                                // 0x06A8   (0x0018)  
	float                                              SplineBoundaryMin;                                          // 0x06C0   (0x0004)  
	FGuid                                              CachedMeshBodySetupGuid;                                    // 0x06C4   (0x0010)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x06D4   (0x0004)  MISSED
	UBodySetup*                                        BodySetup;                                                  // 0x06D8   (0x0008)  
	float                                              SplineBoundaryMax;                                          // 0x06E0   (0x0004)  
	bool                                               bAllowSplineEditingPerInstance : 1;                         // 0x06E4:0 (0x0001)  
	bool                                               bSmoothInterpRollScale : 1;                                 // 0x06E4:1 (0x0001)  
	bool                                               bMeshDirty : 1;                                             // 0x06E4:2 (0x0001)  
	TEnumAsByte<ESplineMeshAxis>                       ForwardAxis;                                                // 0x06E5   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x06E6   (0x0002)  MISSED
	float                                              VirtualTextureMainPassMaxDrawDistance;                      // 0x06E8   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x06EC   (0x0004)  MISSED


	/// Functions
	// Function /Script/Engine.SplineMeshComponent.UpdateMesh
	void UpdateMesh();                                                                                                       // [0x4974bd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetStartTangent
	void SetStartTangent(FVector StartTangent, bool bUpdateMesh);                                                            // [0x4973a90] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetStartScale
	void SetStartScale(FVector2D StartScale, bool bUpdateMesh);                                                              // [0x4973990] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetStartRoll
	void SetStartRoll(float StartRoll, bool bUpdateMesh);                                                                    // [0x49738a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetStartPosition
	void SetStartPosition(FVector StartPos, bool bUpdateMesh);                                                               // [0x49737b0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetStartOffset
	void SetStartOffset(FVector2D StartOffset, bool bUpdateMesh);                                                            // [0x49736d0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetStartAndEnd
	void SetStartAndEnd(FVector StartPos, FVector StartTangent, FVector EndPos, FVector EndTangent, bool bUpdateMesh);       // [0x4973400] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetSplineUpDir
	void SetSplineUpDir(FVector& InSplineUpDir, bool bUpdateMesh);                                                           // [0x49731e0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetForwardAxis
	void SetForwardAxis(TEnumAsByte<ESplineMeshAxis> InForwardAxis, bool bUpdateMesh);                                       // [0x49715d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetEndTangent
	void SetEndTangent(FVector EndTangent, bool bUpdateMesh);                                                                // [0x4971180] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetEndScale
	void SetEndScale(FVector2D EndScale, bool bUpdateMesh);                                                                  // [0x4971080] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetEndRoll
	void SetEndRoll(float EndRoll, bool bUpdateMesh);                                                                        // [0x4970f90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetEndPosition
	void SetEndPosition(FVector EndPos, bool bUpdateMesh);                                                                   // [0x4970ea0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetEndOffset
	void SetEndOffset(FVector2D EndOffset, bool bUpdateMesh);                                                                // [0x4970dc0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetBoundaryMin
	void SetBoundaryMin(float InBoundaryMin, bool bUpdateMesh);                                                              // [0x4970540] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.SetBoundaryMax
	void SetBoundaryMax(float InBoundaryMax, bool bUpdateMesh);                                                              // [0x4970450] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SplineMeshComponent.GetStartTangent
	FVector GetStartTangent();                                                                                               // [0x496d6a0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineMeshComponent.GetStartScale
	FVector2D GetStartScale();                                                                                               // [0x496d670] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineMeshComponent.GetStartRoll
	float GetStartRoll();                                                                                                    // [0x496d650] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineMeshComponent.GetStartPosition
	FVector GetStartPosition();                                                                                              // [0x496d620] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineMeshComponent.GetStartOffset
	FVector2D GetStartOffset();                                                                                              // [0x496d5f0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineMeshComponent.GetSplineUpDir
	FVector GetSplineUpDir();                                                                                                // [0x496d5c0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineMeshComponent.GetForwardAxis
	TEnumAsByte<ESplineMeshAxis> GetForwardAxis();                                                                           // [0x496a310] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineMeshComponent.GetEndTangent
	FVector GetEndTangent();                                                                                                 // [0x496a090] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineMeshComponent.GetEndScale
	FVector2D GetEndScale();                                                                                                 // [0x496a060] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineMeshComponent.GetEndRoll
	float GetEndRoll();                                                                                                      // [0x496a040] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineMeshComponent.GetEndPosition
	FVector GetEndPosition();                                                                                                // [0x496a010] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineMeshComponent.GetEndOffset
	FVector2D GetEndOffset();                                                                                                // [0x4969fe0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineMeshComponent.GetBoundaryMin
	float GetBoundaryMin();                                                                                                  // [0x4969060] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SplineMeshComponent.GetBoundaryMax
	float GetBoundaryMax();                                                                                                  // [0x4969040] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.SpotLightComponent
/// Size: 0x0000 (0x000420 - 0x000420)
class USpotLightComponent : public UPointLightComponent
{ 
public:


	/// Functions
	// Function /Script/Engine.SpotLightComponent.SetOuterConeAngle
	void SetOuterConeAngle(float NewOuterConeAngle);                                                                         // [0x4972400] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SpotLightComponent.SetInnerConeAngle
	void SetInnerConeAngle(float NewInnerConeAngle);                                                                         // [0x4971780] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.VolumetricCloudComponent
/// Size: 0x0060 (0x0002A0 - 0x000300)
class UVolumetricCloudComponent : public USceneComponent
{ 
public:
	float                                              LayerBottomAltitude;                                        // 0x02A0   (0x0004)  
	float                                              LayerHeight;                                                // 0x02A4   (0x0004)  
	float                                              TracingStartMaxDistance;                                    // 0x02A8   (0x0004)  
	EVolumetricCloudTracingMaxDistanceMode             TracingMaxDistanceMode;                                     // 0x02AC   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02AD   (0x0003)  MISSED
	float                                              TracingMaxDistance;                                         // 0x02B0   (0x0004)  
	float                                              PlanetRadius;                                               // 0x02B4   (0x0004)  
	FColor                                             GroundAlbedo;                                               // 0x02B8   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02BC   (0x0004)  MISSED
	UMaterialInterface*                                Material;                                                   // 0x02C0   (0x0008)  
	bool                                               bUsePerSampleAtmosphericLightTransmittance : 1;             // 0x02C8:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x02C9   (0x0003)  MISSED
	float                                              SkyLightCloudBottomOcclusion;                               // 0x02CC   (0x0004)  
	float                                              ViewSampleCountScale;                                       // 0x02D0   (0x0004)  
	float                                              ReflectionViewSampleCountScaleValue;                        // 0x02D4   (0x0004)  
	float                                              ReflectionViewSampleCountScale;                             // 0x02D8   (0x0004)  
	float                                              ReflectionSampleCountScale;                                 // 0x02DC   (0x0004)  
	float                                              ShadowViewSampleCountScale;                                 // 0x02E0   (0x0004)  
	float                                              ShadowReflectionViewSampleCountScaleValue;                  // 0x02E4   (0x0004)  
	float                                              ShadowReflectionViewSampleCountScale;                       // 0x02E8   (0x0004)  
	float                                              ShadowReflectionSampleCountScale;                           // 0x02EC   (0x0004)  
	float                                              ShadowTracingDistance;                                      // 0x02F0   (0x0004)  
	float                                              StopTracingTransmittanceThreshold;                          // 0x02F4   (0x0004)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x02F8   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.VolumetricCloudComponent.SetViewSampleCountScale
	void SetViewSampleCountScale(float NewValue);                                                                            // [0x49720f0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetTracingStartMaxDistance
	void SetTracingStartMaxDistance(float NewValue);                                                                         // [0x499dbb0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetTracingMaxDistance
	void SetTracingMaxDistance(float NewValue);                                                                              // [0x49721b0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetStopTracingTransmittanceThreshold
	void SetStopTracingTransmittanceThreshold(float NewValue);                                                               // [0x48fc060] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetSkyLightCloudBottomOcclusion
	void SetSkyLightCloudBottomOcclusion(float NewValue);                                                                    // [0x49724c0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetShadowViewSampleCountScale
	void SetShadowViewSampleCountScale(float NewValue);                                                                      // [0x499daf0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetShadowTracingDistance
	void SetShadowTracingDistance(float NewValue);                                                                           // [0x499da30] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetShadowReflectionViewSampleCountScale
	void SetShadowReflectionViewSampleCountScale(float NewValue);                                                            // [0x4971de0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetShadowReflectionSampleCountScale
	void SetShadowReflectionSampleCountScale(float NewValue);                                                                // [0x499d970] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetReflectionViewSampleCountScale
	void SetReflectionViewSampleCountScale(float NewValue);                                                                  // [0x499d8b0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetReflectionSampleCountScale
	void SetReflectionSampleCountScale(float NewValue);                                                                      // [0x499d7f0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetPlanetRadius
	void SetPlanetRadius(float NewValue);                                                                                    // [0x499d730] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetMaterial
	void SetMaterial(UMaterialInterface* NewValue);                                                                          // [0x499d670] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetLayerHeight
	void SetLayerHeight(float NewValue);                                                                                     // [0x499d5b0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetLayerBottomAltitude
	void SetLayerBottomAltitude(float NewValue);                                                                             // [0x499d4f0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetGroundAlbedo
	void SetGroundAlbedo(FColor NewValue);                                                                                   // [0x499d240] Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.VolumetricCloudComponent.SetbUsePerSampleAtmosphericLightTransmittance
	void SetbUsePerSampleAtmosphericLightTransmittance(bool NewValue);                                                       // [0x499dc70] Final|RequiredAPI|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.VolumetricCloud
/// Size: 0x0008 (0x000290 - 0x000298)
class AVolumetricCloud : public AInfo
{ 
public:
	UVolumetricCloudComponent*                         VolumetricCloudComponent;                                   // 0x0290   (0x0008)  
};

/// Class /Script/Engine.WorldPartitionStreamingSourceComponent
/// Size: 0x0038 (0x0000A0 - 0x0000D8)
class UWorldPartitionStreamingSourceComponent : public UActorComponent
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x00A0   (0x0008)  MISSED
	FName                                              TargetGrid;                                                 // 0x00A8   (0x0008)  
	FColor                                             DebugColor;                                                 // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x00B4   (0x0004)  MISSED
	UHLODLayer*                                        TargetHLODLayer;                                            // 0x00B8   (0x0008)  
	TArray<FStreamingSourceShape>                      Shapes;                                                     // 0x00C0   (0x0010)  
	EStreamingSourcePriority                           Priority;                                                   // 0x00D0   (0x0001)  
	bool                                               bStreamingSourceEnabled;                                    // 0x00D1   (0x0001)  
	EStreamingSourceTargetState                        TargetState;                                                // 0x00D2   (0x0001)  
	unsigned char                                      UnknownData02_6[0x5];                                       // 0x00D3   (0x0005)  MISSED


	/// Functions
	// Function /Script/Engine.WorldPartitionStreamingSourceComponent.IsStreamingSourceEnabled
	bool IsStreamingSourceEnabled();                                                                                         // [0x499cf00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.WorldPartitionStreamingSourceComponent.IsStreamingCompleted
	bool IsStreamingCompleted();                                                                                             // [0x499ce80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.WorldPartitionStreamingSourceComponent.EnableStreamingSource
	void EnableStreamingSource();                                                                                            // [0x499c490] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.WorldPartitionStreamingSourceComponent.DisableStreamingSource
	void DisableStreamingSource();                                                                                           // [0x499c470] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.CurveTable
/// Size: 0x0078 (0x000028 - 0x0000A0)
class UCurveTable : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x78];                                      // 0x0028   (0x0078)  MISSED
};

/// Class /Script/Engine.CompositeCurveTable
/// Size: 0x0028 (0x0000A0 - 0x0000C8)
class UCompositeCurveTable : public UCurveTable
{ 
public:
	TArray<UCurveTable*>                               ParentTables;                                               // 0x00A0   (0x0010)  
	TArray<UCurveTable*>                               OldParentTables;                                            // 0x00B0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00C0   (0x0008)  MISSED
};

/// Class /Script/Engine.CompositeDataTable
/// Size: 0x0028 (0x0000B0 - 0x0000D8)
class UCompositeDataTable : public UDataTable
{ 
public:
	TArray<UDataTable*>                                ParentTables;                                               // 0x00B0   (0x0010)  
	TArray<UDataTable*>                                OldParentTables;                                            // 0x00C0   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x00D0   (0x0008)  MISSED
};

/// Class /Script/Engine.EnumCookedMetaData
/// Size: 0x0050 (0x000028 - 0x000078)
class UEnumCookedMetaData : public UObject
{ 
public:
	FObjectCookedMetaDataStore                         EnumMetaData;                                               // 0x0028   (0x0050)  
};

/// Class /Script/Engine.StructCookedMetaData
/// Size: 0x00A0 (0x000028 - 0x0000C8)
class UStructCookedMetaData : public UObject
{ 
public:
	FStructCookedMetaDataStore                         StructMetaData;                                             // 0x0028   (0x00A0)  
};

/// Class /Script/Engine.ClassCookedMetaData
/// Size: 0x00F0 (0x000028 - 0x000118)
class UClassCookedMetaData : public UObject
{ 
public:
	FStructCookedMetaDataStore                         ClassMetaData;                                              // 0x0028   (0x00A0)  
	TMap<FName, FStructCookedMetaDataStore>            FunctionsMetaData;                                          // 0x00C8   (0x0050)  
};

/// Class /Script/Engine.StreamingSettings
/// Size: 0x0038 (0x000038 - 0x000070)
class UStreamingSettings : public UDeveloperSettings
{ 
public:
	bool                                               AsyncLoadingThreadEnabled : 1;                              // 0x0038:0 (0x0001)  
	bool                                               WarnIfTimeLimitExceeded : 1;                                // 0x0038:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0039   (0x0003)  MISSED
	float                                              TimeLimitExceededMultiplier;                                // 0x003C   (0x0004)  
	float                                              TimeLimitExceededMinTime;                                   // 0x0040   (0x0004)  
	int32_t                                            MinBulkDataSizeForAsyncLoading;                             // 0x0044   (0x0004)  
	bool                                               UseBackgroundLevelStreaming : 1;                            // 0x0048:0 (0x0001)  
	bool                                               AsyncLoadingUseFullTimeLimit : 1;                           // 0x0048:1 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0049   (0x0003)  MISSED
	float                                              AsyncLoadingTimeLimit;                                      // 0x004C   (0x0004)  
	float                                              PriorityAsyncLoadingExtraTime;                              // 0x0050   (0x0004)  
	float                                              LevelStreamingActorsUpdateTimeLimit;                        // 0x0054   (0x0004)  
	float                                              PriorityLevelStreamingActorsUpdateExtraTime;                // 0x0058   (0x0004)  
	int32_t                                            LevelStreamingComponentsRegistrationGranularity;            // 0x005C   (0x0004)  
	int32_t                                            LevelStreamingAddPrimitiveGranularity;                      // 0x0060   (0x0004)  
	float                                              LevelStreamingUnregisterComponentsTimeLimit;                // 0x0064   (0x0004)  
	int32_t                                            LevelStreamingComponentsUnregistrationGranularity;          // 0x0068   (0x0004)  
	bool                                               FlushStreamingOnExit : 1;                                   // 0x006C:0 (0x0001)  
	bool                                               EventDrivenLoaderEnabled : 1;                               // 0x006C:1 (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x006D   (0x0003)  MISSED
};

/// Class /Script/Engine.GarbageCollectionSettings
/// Size: 0x0020 (0x000038 - 0x000058)
class UGarbageCollectionSettings : public UDeveloperSettings
{ 
public:
	float                                              TimeBetweenPurgingPendingKillObjects;                       // 0x0038   (0x0004)  
	bool                                               FlushStreamingOnGC : 1;                                     // 0x003C:0 (0x0001)  
	bool                                               AllowParallelGC : 1;                                        // 0x003C:1 (0x0001)  
	bool                                               IncrementalBeginDestroyEnabled : 1;                         // 0x003C:2 (0x0001)  
	bool                                               MultithreadedDestructionEnabled : 1;                        // 0x003C:3 (0x0001)  
	bool                                               CreateGCClusters : 1;                                       // 0x003C:4 (0x0001)  
	bool                                               AssetClusteringEnabled : 1;                                 // 0x003C:5 (0x0001)  
	bool                                               ActorClusteringEnabled : 1;                                 // 0x003C:6 (0x0001)  
	bool                                               BlueprintClusteringEnabled : 1;                             // 0x003C:7 (0x0001)  
	bool                                               UseDisregardForGCOnDedicatedServers : 1;                    // 0x003D:0 (0x0001)  
	bool                                               VerifyGCObjectNames : 1;                                    // 0x003D:1 (0x0001)  
	bool                                               VerifyUObjectsAreNotFGCObjects : 1;                         // 0x003D:2 (0x0001)  
	bool                                               PendingKillEnabled : 1;                                     // 0x003D:3 (0x0001)  
	unsigned char                                      UnknownData00_4[0x2];                                       // 0x003E   (0x0002)  MISSED
	int32_t                                            MinGCClusterSize;                                           // 0x0040   (0x0004)  
	int32_t                                            NumRetriesBeforeForcingGC;                                  // 0x0044   (0x0004)  
	int32_t                                            MaxObjectsNotConsideredByGC;                                // 0x0048   (0x0004)  
	int32_t                                            SizeOfPermanentObjectPool;                                  // 0x004C   (0x0004)  
	int32_t                                            MaxObjectsInGame;                                           // 0x0050   (0x0004)  
	int32_t                                            MaxObjectsInEditor;                                         // 0x0054   (0x0004)  
};

/// Class /Script/Engine.CullDistanceVolume
/// Size: 0x0018 (0x0002C8 - 0x0002E0)
class ACullDistanceVolume : public AVolume
{ 
public:
	TArray<FCullDistanceSizePair>                      CullDistances;                                              // 0x02C8   (0x0010)  
	bool                                               bEnabled : 1;                                               // 0x02D8:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02D9   (0x0007)  MISSED
};

/// Class /Script/Engine.CurveBase
/// Size: 0x0008 (0x000028 - 0x000030)
class UCurveBase : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.CurveEdPresetCurve
/// Size: 0x0000 (0x000028 - 0x000028)
class UCurveEdPresetCurve : public UObject
{ 
public:
};

/// Class /Script/Engine.CurveFloat
/// Size: 0x0088 (0x000030 - 0x0000B8)
class UCurveFloat : public UCurveBase
{ 
public:
	FRichCurve                                         FloatCurve;                                                 // 0x0030   (0x0080)  
	bool                                               bIsEventCurve;                                              // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00B1   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.CurveFloat.GetFloatValue
	float GetFloatValue(float InTime);                                                                                       // [0x499c720] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.CurveLinearColor
/// Size: 0x0220 (0x000030 - 0x000250)
class UCurveLinearColor : public UCurveBase
{ 
public:
	FRichCurve                                         FloatCurves;                                                // 0x0030   (0x0200)  
	float                                              AdjustHue;                                                  // 0x0230   (0x0004)  
	float                                              AdjustSaturation;                                           // 0x0234   (0x0004)  
	float                                              AdjustBrightness;                                           // 0x0238   (0x0004)  
	float                                              AdjustBrightnessCurve;                                      // 0x023C   (0x0004)  
	float                                              AdjustVibrance;                                             // 0x0240   (0x0004)  
	float                                              AdjustMinAlpha;                                             // 0x0244   (0x0004)  
	float                                              AdjustMaxAlpha;                                             // 0x0248   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x024C   (0x0004)  MISSED


	/// Functions
	// Function /Script/Engine.CurveLinearColor.GetUnadjustedLinearColorValue
	FLinearColor GetUnadjustedLinearColorValue(float InTime);                                                                // [0x499ca40] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CurveLinearColor.GetLinearColorValue
	FLinearColor GetLinearColorValue(float InTime);                                                                          // [0x499c7c0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.CurveLinearColor.GetClampedLinearColorValue
	FLinearColor GetClampedLinearColorValue(float InTime);                                                                   // [0x499c4b0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.CurveLinearColorAtlas
/// Size: 0x0020 (0x0002B0 - 0x0002D0)
class UCurveLinearColorAtlas : public UTexture2D
{ 
public:
	uint32_t                                           TextureSize;                                                // 0x02A8   (0x0004)  
	bool                                               bSquareResolution : 1;                                      // 0x02AC:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x02AD   (0x0003)  MISSED
	uint32_t                                           TextureHeight;                                              // 0x02B0   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02B4   (0x0004)  MISSED
	TArray<UCurveLinearColor*>                         GradientCurves;                                             // 0x02B8   (0x0010)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x02C8   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.CurveLinearColorAtlas.GetCurvePosition
	bool GetCurvePosition(UCurveLinearColor* InCurve, float& Position);                                                      // [0x499c5a0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Engine.CurveVector
/// Size: 0x0180 (0x000030 - 0x0001B0)
class UCurveVector : public UCurveBase
{ 
public:
	FRichCurve                                         FloatCurves;                                                // 0x0030   (0x0180)  


	/// Functions
	// Function /Script/Engine.CurveVector.GetVectorValue
	FVector GetVectorValue(float InTime);                                                                                    // [0x499cc40] Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.DamageType
/// Size: 0x0018 (0x000028 - 0x000040)
class UDamageType : public UObject
{ 
public:
	bool                                               bCausedByWorld : 1;                                         // 0x0028:0 (0x0001)  
	bool                                               bScaleMomentumByMass : 1;                                   // 0x0028:1 (0x0001)  
	bool                                               bRadialDamageVelChange : 1;                                 // 0x0028:2 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0029   (0x0003)  MISSED
	float                                              DamageImpulse;                                              // 0x002C   (0x0004)  
	float                                              DestructibleImpulse;                                        // 0x0030   (0x0004)  
	float                                              DestructibleDamageSpreadScale;                              // 0x0034   (0x0004)  
	float                                              DamageFalloff;                                              // 0x0038   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Class /Script/Engine.DataDrivenCVarEngineSubsystem
/// Size: 0x0010 (0x000030 - 0x000040)
class UDataDrivenCVarEngineSubsystem : public UEngineSubsystem
{ 
public:
	FMulticastInlineDelegate                           OnDataDrivenCVarDelegate;                                   // 0x0030   (0x0010)  
};

/// Class /Script/Engine.DataDrivenConsoleVariableSettings
/// Size: 0x0038 (0x000038 - 0x000070)
class UDataDrivenConsoleVariableSettings : public UDeveloperSettings
{ 
public:
	unsigned char                                      UnknownData00_2[0x18];                                      // 0x0038   (0x0018)  MISSED
	TArray<FDataDrivenConsoleVariable>                 CVarsArray;                                                 // 0x0050   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0060   (0x0010)  MISSED
};

/// Class /Script/Engine.DataTableFunctionLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UDataTableFunctionLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.DebugCameraController
/// Size: 0x0180 (0x000850 - 0x0009D0)
class ADebugCameraController : public APlayerController
{ 
public:
	bool                                               bShowSelectedInfo : 1;                                      // 0x0850:0 (0x0001)  
	bool                                               bIsFrozenRendering : 1;                                     // 0x0850:1 (0x0001)  
	bool                                               bIsOrbitingSelectedActor : 1;                               // 0x0850:2 (0x0001)  
	bool                                               bOrbitPivotUseCenter : 1;                                   // 0x0850:3 (0x0001)  
	bool                                               bEnableBufferVisualization : 1;                             // 0x0850:4 (0x0001)  
	bool                                               bEnableBufferVisualizationFullMode : 1;                     // 0x0850:5 (0x0001)  
	bool                                               bIsBufferVisualizationInputSetup : 1;                       // 0x0850:6 (0x0001)  
	bool                                               bLastDisplayEnabled : 1;                                    // 0x0850:7 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0851   (0x0007)  MISSED
	UDrawFrustumComponent*                             DrawFrustum;                                                // 0x0858   (0x0008)  
	TWeakObjectPtr<AActor*>                            SelectedActor;                                              // 0x0860   (0x0008)  
	TWeakObjectPtr<UPrimitiveComponent*>               SelectedComponent;                                          // 0x0868   (0x0008)  
	FHitResult                                         SelectedHitPoint;                                           // 0x0870   (0x00E8)  
	APlayerController*                                 OriginalControllerRef;                                      // 0x0958   (0x0008)  
	UPlayer*                                           OriginalPlayer;                                             // 0x0960   (0x0008)  
	float                                              SpeedScale;                                                 // 0x0968   (0x0004)  
	float                                              InitialMaxSpeed;                                            // 0x096C   (0x0004)  
	float                                              InitialAccel;                                               // 0x0970   (0x0004)  
	float                                              InitialDecel;                                               // 0x0974   (0x0004)  
	unsigned char                                      UnknownData01_6[0x58];                                      // 0x0978   (0x0058)  MISSED


	/// Functions
	// Function /Script/Engine.DebugCameraController.ToggleDisplay
	void ToggleDisplay();                                                                                                    // [0x49bac60] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DebugCameraController.ShowDebugSelectedInfo
	void ShowDebugSelectedInfo();                                                                                            // [0x49bac40] Exec|Native|Public   
	// Function /Script/Engine.DebugCameraController.SetPawnMovementSpeedScale
	void SetPawnMovementSpeedScale(float NewSpeedScale);                                                                     // [0x49babb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DebugCameraController.ReceiveOnDeactivate
	void ReceiveOnDeactivate(APlayerController* RestoredPC);                                                                 // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.DebugCameraController.ReceiveOnActorSelected
	void ReceiveOnActorSelected(AActor* NewSelectedActor, FVector& SelectHitLocation, FVector& SelectHitNormal, FHitResult& Hit); // [0x2e6eb70] Event|Protected|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/Engine.DebugCameraController.ReceiveOnActivate
	void ReceiveOnActivate(APlayerController* OriginalPC);                                                                   // [0x2e6eb70] Event|Public|BlueprintEvent 
	// Function /Script/Engine.DebugCameraController.GetSelectedActor
	AActor* GetSelectedActor();                                                                                              // [0x49bab70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.DebugCameraControllerSettings
/// Size: 0x0010 (0x000038 - 0x000048)
class UDebugCameraControllerSettings : public UDeveloperSettings
{ 
public:
	TArray<FDebugCameraControllerSettingsViewModeIndex> CycleViewModes;                                            // 0x0038   (0x0010)  
};

/// Class /Script/Engine.DebugCameraHUD
/// Size: 0x0000 (0x000380 - 0x000380)
class ADebugCameraHUD : public AHUD
{ 
public:
};

/// Class /Script/Engine.DebugDrawComponent
/// Size: 0x0050 (0x000540 - 0x000590)
class UDebugDrawComponent : public UPrimitiveComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0540   (0x0050)  MISSED
};

/// Class /Script/Engine.DebugDrawService
/// Size: 0x0000 (0x000028 - 0x000028)
class UDebugDrawService : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.ReporterBase
/// Size: 0x0008 (0x000028 - 0x000030)
class UReporterBase : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.ReporterGraph
/// Size: 0x0098 (0x000030 - 0x0000C8)
class UReporterGraph : public UReporterBase
{ 
public:
	unsigned char                                      UnknownData00_1[0x98];                                      // 0x0030   (0x0098)  MISSED
};

/// Class /Script/Engine.DecalActor
/// Size: 0x0008 (0x000290 - 0x000298)
class ADecalActor : public AActor
{ 
public:
	UDecalComponent*                                   Decal;                                                      // 0x0290   (0x0008)  


	/// Functions
	// Function /Script/Engine.DecalActor.SetDecalMaterial
	void SetDecalMaterial(UMaterialInterface* NewDecalMaterial);                                                             // [0x49e9380] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DecalActor.GetDecalMaterial
	UMaterialInterface* GetDecalMaterial();                                                                                  // [0x49e90f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DecalActor.CreateDynamicMaterialInstance
	UMaterialInstanceDynamic* CreateDynamicMaterialInstance();                                                               // [0x49e90c0] Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.DefaultPhysicsVolume
/// Size: 0x0000 (0x0002D8 - 0x0002D8)
class ADefaultPhysicsVolume : public APhysicsVolume
{ 
public:
};

/// Class /Script/Engine.DemoNetDriver
/// Size: 0x0CA0 (0x000790 - 0x001430)
class UDemoNetDriver : public UNetDriver
{ 
public:
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x0790   (0x0038)  MISSED
	TMap<FString, FRollbackNetStartupActorInfo>        RollbackNetStartupActors;                                   // 0x07C8   (0x0050)  
	unsigned char                                      UnknownData01_5[0xDC];                                      // 0x0818   (0x00DC)  MISSED
	float                                              CheckpointSaveMaxMSPerFrame;                                // 0x08F4   (0x0004)  
	unsigned char                                      UnknownData02_5[0x18];                                      // 0x08F8   (0x0018)  MISSED
	TArray<FMulticastRecordOptions>                    MulticastRecordOptions;                                     // 0x0910   (0x0010)  
	TArray<APlayerController*>                         SpectatorControllers;                                       // 0x0920   (0x0010)  
	unsigned char                                      UnknownData03_6[0xB00];                                     // 0x0930   (0x0B00)  MISSED
};

/// Class /Script/Engine.DestructibleInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UDestructibleInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.TextureLODSettings
/// Size: 0x0010 (0x000028 - 0x000038)
class UTextureLODSettings : public UObject
{ 
public:
	TArray<FTextureLODGroup>                           TextureLODGroups;                                           // 0x0028   (0x0010)  
};

/// Class /Script/Engine.DeviceProfile
/// Size: 0x0098 (0x000038 - 0x0000D0)
class UDeviceProfile : public UTextureLODSettings
{ 
public:
	FString                                            DeviceType;                                                 // 0x0038   (0x0010)  
	FString                                            BaseProfileName;                                            // 0x0048   (0x0010)  
	bool                                               bIsVisibleForAssets : 1;                                    // 0x0058:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0059   (0x0007)  MISSED
	UDeviceProfile*                                    Parent;                                                     // 0x0060   (0x0008)  
	unsigned char                                      UnknownData01_5[0x28];                                      // 0x0068   (0x0028)  MISSED
	TArray<FString>                                    CVars;                                                      // 0x0090   (0x0010)  
	TArray<FDPMatchingRulestruct>                      MatchingRules;                                              // 0x00A0   (0x0010)  
	unsigned char                                      UnknownData02_6[0x20];                                      // 0x00B0   (0x0020)  MISSED
};

/// Class /Script/Engine.DeviceProfileManager
/// Size: 0x0068 (0x000028 - 0x000090)
class UDeviceProfileManager : public UObject
{ 
public:
	TArray<UDeviceProfile*>                            Profiles;                                                   // 0x0028   (0x0010)  
	TArray<UDeviceProfile*>                            BackupProfiles;                                             // 0x0038   (0x0010)  
	unsigned char                                      UnknownData00_6[0x48];                                      // 0x0048   (0x0048)  MISSED
};

/// Class /Script/Engine.DialogueVoice
/// Size: 0x0018 (0x000028 - 0x000040)
class UDialogueVoice : public UObject
{ 
public:
	TEnumAsByte<EGrammaticalGender>                    Gender;                                                     // 0x0028   (0x0001)  
	TEnumAsByte<EGrammaticalNumber>                    Plurality;                                                  // 0x0029   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x002A   (0x0002)  MISSED
	FGuid                                              LocalizationGUID;                                           // 0x002C   (0x0010)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Class /Script/Engine.DialogueWave
/// Size: 0x0048 (0x000028 - 0x000070)
class UDialogueWave : public UObject
{ 
public:
	bool                                               bMature : 1;                                                // 0x0028:0 (0x0001)  
	bool                                               bOverride_SubtitleOverride : 1;                             // 0x0028:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0029   (0x0007)  MISSED
	FString                                            SpokenText;                                                 // 0x0030   (0x0010)  
	FString                                            SubtitleOverride;                                           // 0x0040   (0x0010)  
	TArray<FDialogueContextMapping>                    ContextMappings;                                            // 0x0050   (0x0010)  
	FGuid                                              LocalizationGUID;                                           // 0x0060   (0x0010)  
};

/// Class /Script/Engine.DocumentationActor
/// Size: 0x0008 (0x000290 - 0x000298)
class ADocumentationActor : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0290   (0x0008)  MISSED
};

/// Class /Script/Engine.DPICustomScalingRule
/// Size: 0x0000 (0x000028 - 0x000028)
class UDPICustomScalingRule : public UObject
{ 
public:
};

/// Class /Script/Engine.EdGraphNode_Documentation
/// Size: 0x0020 (0x000098 - 0x0000B8)
class UEdGraphNode_Documentation : public UEdGraphNode
{ 
public:
	FString                                            Link;                                                       // 0x0098   (0x0010)  
	FString                                            Excerpt;                                                    // 0x00A8   (0x0010)  
};

/// Class /Script/Engine.ThumbnailInfo
/// Size: 0x0000 (0x000028 - 0x000028)
class UThumbnailInfo : public UObject
{ 
public:
};

/// Class /Script/Engine.ActorElementAssetDataInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UActorElementAssetDataInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.ActorElementCounterInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UActorElementCounterInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.ActorElementHierarchyInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UActorElementHierarchyInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.ActorElementObjectInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UActorElementObjectInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.ActorElementSelectionInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UActorElementSelectionInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.ActorElementWorldInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UActorElementWorldInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.ComponentElementCounterInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UComponentElementCounterInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.ComponentElementHierarchyInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UComponentElementHierarchyInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.ComponentElementObjectInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UComponentElementObjectInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.ComponentElementSelectionInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UComponentElementSelectionInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.ComponentElementWorldInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UComponentElementWorldInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.EngineElementsLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UEngineElementsLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.TypedElementCommonActions
/// Size: 0x0800 (0x000028 - 0x000828)
class UTypedElementCommonActions : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x800];                                     // 0x0028   (0x0800)  MISSED
};

/// Class /Script/Engine.TypedElementWorldInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UTypedElementWorldInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.ObjectElementAssetDataInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UObjectElementAssetDataInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.ObjectElementCounterInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UObjectElementCounterInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.ObjectElementObjectInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UObjectElementObjectInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.ObjectElementSelectionInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class UObjectElementSelectionInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.SMInstanceElementAssetDataInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class USMInstanceElementAssetDataInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.SMInstanceElementHierarchyInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class USMInstanceElementHierarchyInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.SMInstanceElementIdMapTransactor
/// Size: 0x0000 (0x000028 - 0x000028)
class USMInstanceElementIdMapTransactor : public UObject
{ 
public:
};

/// Class /Script/Engine.SMInstanceElementSelectionInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class USMInstanceElementSelectionInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.SMInstanceElementWorldInterface
/// Size: 0x0008 (0x000028 - 0x000030)
class USMInstanceElementWorldInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.LocalMessage
/// Size: 0x0000 (0x000028 - 0x000028)
class ULocalMessage : public UObject
{ 
public:
};

/// Class /Script/Engine.EngineMessage
/// Size: 0x0080 (0x000028 - 0x0000A8)
class UEngineMessage : public ULocalMessage
{ 
public:
	FString                                            FailedPlaceMessage;                                         // 0x0028   (0x0010)  
	FString                                            MaxedOutMessage;                                            // 0x0038   (0x0010)  
	FString                                            EnteredMessage;                                             // 0x0048   (0x0010)  
	FString                                            LeftMessage;                                                // 0x0058   (0x0010)  
	FString                                            GlobalNameChange;                                           // 0x0068   (0x0010)  
	FString                                            SpecEnteredMessage;                                         // 0x0078   (0x0010)  
	FString                                            NewPlayerMessage;                                           // 0x0088   (0x0010)  
	FString                                            NewSpecMessage;                                             // 0x0098   (0x0010)  
};

/// Class /Script/Engine.AutoDestroySubsystem
/// Size: 0x0010 (0x000040 - 0x000050)
class UAutoDestroySubsystem : public UTickableWorldSubsystem
{ 
public:
	TArray<AActor*>                                    ActorsToPoll;                                               // 0x0040   (0x0010)  


	/// Functions
	// Function /Script/Engine.AutoDestroySubsystem.OnActorEndPlay
	void OnActorEndPlay(AActor* Actor, TEnumAsByte<EEndPlayReason> EndPlayReason);                                           // [0x4a29c10] Final|Native|Private 
};

/// Class /Script/Engine.LODSyncInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class ULODSyncInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.PoseWatchFolder
/// Size: 0x0000 (0x000028 - 0x000028)
class UPoseWatchFolder : public UObject
{ 
public:
};

/// Class /Script/Engine.PoseWatchElement
/// Size: 0x0000 (0x000028 - 0x000028)
class UPoseWatchElement : public UObject
{ 
public:
};

/// Class /Script/Engine.PoseWatchPoseElement
/// Size: 0x0000 (0x000028 - 0x000028)
class UPoseWatchPoseElement : public UPoseWatchElement
{ 
public:
};

/// Class /Script/Engine.PoseWatch
/// Size: 0x0000 (0x000028 - 0x000028)
class UPoseWatch : public UObject
{ 
public:
};

/// Class /Script/Engine.ServerStatReplicator
/// Size: 0x00C8 (0x000290 - 0x000358)
class AServerStatReplicator : public AInfo
{ 
public:
	bool                                               bUpdateStatNet;                                             // 0x0290   (0x0001)  
	bool                                               bOverwriteClientStats;                                      // 0x0291   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x0292   (0x0002)  MISSED
	uint32_t                                           Channels;                                                   // 0x0294   (0x0004)  
	uint32_t                                           InRate;                                                     // 0x0298   (0x0004)  
	uint32_t                                           OutRate;                                                    // 0x029C   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x02A0   (0x0004)  MISSED
	uint32_t                                           MaxPacketOverhead;                                          // 0x02A4   (0x0004)  
	uint32_t                                           InRateClientMax;                                            // 0x02A8   (0x0004)  
	uint32_t                                           InRateClientMin;                                            // 0x02AC   (0x0004)  
	uint32_t                                           InRateClientAvg;                                            // 0x02B0   (0x0004)  
	uint32_t                                           InPacketsClientMax;                                         // 0x02B4   (0x0004)  
	uint32_t                                           InPacketsClientMin;                                         // 0x02B8   (0x0004)  
	uint32_t                                           InPacketsClientAvg;                                         // 0x02BC   (0x0004)  
	uint32_t                                           OutRateClientMax;                                           // 0x02C0   (0x0004)  
	uint32_t                                           OutRateClientMin;                                           // 0x02C4   (0x0004)  
	uint32_t                                           OutRateClientAvg;                                           // 0x02C8   (0x0004)  
	uint32_t                                           OutPacketsClientMax;                                        // 0x02CC   (0x0004)  
	uint32_t                                           OutPacketsClientMin;                                        // 0x02D0   (0x0004)  
	uint32_t                                           OutPacketsClientAvg;                                        // 0x02D4   (0x0004)  
	uint32_t                                           NetNumClients;                                              // 0x02D8   (0x0004)  
	uint32_t                                           InPackets;                                                  // 0x02DC   (0x0004)  
	uint32_t                                           OutPackets;                                                 // 0x02E0   (0x0004)  
	uint32_t                                           InBunches;                                                  // 0x02E4   (0x0004)  
	uint32_t                                           OutBunches;                                                 // 0x02E8   (0x0004)  
	uint32_t                                           OutLoss;                                                    // 0x02EC   (0x0004)  
	uint32_t                                           InLoss;                                                     // 0x02F0   (0x0004)  
	uint32_t                                           VoiceBytesSent;                                             // 0x02F4   (0x0004)  
	uint32_t                                           VoiceBytesRecv;                                             // 0x02F8   (0x0004)  
	uint32_t                                           VoicePacketsSent;                                           // 0x02FC   (0x0004)  
	uint32_t                                           VoicePacketsRecv;                                           // 0x0300   (0x0004)  
	uint32_t                                           PercentInVoice;                                             // 0x0304   (0x0004)  
	uint32_t                                           PercentOutVoice;                                            // 0x0308   (0x0004)  
	uint32_t                                           NumActorChannels;                                           // 0x030C   (0x0004)  
	uint32_t                                           NumConsideredActors;                                        // 0x0310   (0x0004)  
	uint32_t                                           PrioritizedActors;                                          // 0x0314   (0x0004)  
	uint32_t                                           NumRelevantActors;                                          // 0x0318   (0x0004)  
	uint32_t                                           NumRelevantDeletedActors;                                   // 0x031C   (0x0004)  
	uint32_t                                           NumReplicatedActorAttempts;                                 // 0x0320   (0x0004)  
	uint32_t                                           NumReplicatedActors;                                        // 0x0324   (0x0004)  
	uint32_t                                           NumActors;                                                  // 0x0328   (0x0004)  
	uint32_t                                           NumNetActors;                                               // 0x032C   (0x0004)  
	uint32_t                                           NumDormantActors;                                           // 0x0330   (0x0004)  
	uint32_t                                           NumInitiallyDormantActors;                                  // 0x0334   (0x0004)  
	uint32_t                                           NumNetGUIDsAckd;                                            // 0x0338   (0x0004)  
	uint32_t                                           NumNetGUIDsPending;                                         // 0x033C   (0x0004)  
	uint32_t                                           NumNetGUIDsUnAckd;                                          // 0x0340   (0x0004)  
	uint32_t                                           ObjPathBytes;                                               // 0x0344   (0x0004)  
	uint32_t                                           NetGUIDOutRate;                                             // 0x0348   (0x0004)  
	uint32_t                                           NetGUIDInRate;                                              // 0x034C   (0x0004)  
	uint32_t                                           NetSaturated;                                               // 0x0350   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0354   (0x0004)  MISSED
};

/// Class /Script/Engine.SystemTimeTimecodeProvider
/// Size: 0x0010 (0x000030 - 0x000040)
class USystemTimeTimecodeProvider : public UTimecodeProvider
{ 
public:
	FFrameRate                                         FrameRate;                                                  // 0x0030   (0x0008)  
	bool                                               bGenerateFullFrame;                                         // 0x0038   (0x0001)  
	bool                                               bUseHighPerformanceClock;                                   // 0x0039   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x003A   (0x0006)  MISSED
};

/// Class /Script/Engine.ViewportStatsSubsystem
/// Size: 0x0020 (0x000030 - 0x000050)
class UViewportStatsSubsystem : public UWorldSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0030   (0x0020)  MISSED
};

/// Class /Script/Engine.FloatingPawnMovement
/// Size: 0x0018 (0x000158 - 0x000170)
class UFloatingPawnMovement : public UPawnMovementComponent
{ 
public:
	float                                              MaxSpeed;                                                   // 0x0158   (0x0004)  
	float                                              Acceleration;                                               // 0x015C   (0x0004)  
	float                                              Deceleration;                                               // 0x0160   (0x0004)  
	float                                              TurningBoost;                                               // 0x0164   (0x0004)  
	bool                                               bPositionCorrected : 1;                                     // 0x0168:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0169   (0x0007)  MISSED
};

/// Class /Script/Engine.Font
/// Size: 0x01A8 (0x000028 - 0x0001D0)
class UFont : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	EFontCacheType                                     FontCacheType;                                              // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	TArray<FFontCharacter>                             Characters;                                                 // 0x0038   (0x0010)  
	TArray<UTexture2D*>                                Textures;                                                   // 0x0048   (0x0010)  
	int32_t                                            IsRemapped;                                                 // 0x0058   (0x0004)  
	float                                              EmScale;                                                    // 0x005C   (0x0004)  
	float                                              Ascent;                                                     // 0x0060   (0x0004)  
	float                                              Descent;                                                    // 0x0064   (0x0004)  
	float                                              Leading;                                                    // 0x0068   (0x0004)  
	int32_t                                            Kerning;                                                    // 0x006C   (0x0004)  
	FFontImportOptionsData                             ImportOptions;                                              // 0x0070   (0x00B0)  
	int32_t                                            NumCharacters;                                              // 0x0120   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x0124   (0x0004)  MISSED
	TArray<int32_t>                                    MaxCharHeight;                                              // 0x0128   (0x0010)  
	float                                              ScalingFactor;                                              // 0x0138   (0x0004)  
	int32_t                                            LegacyFontSize;                                             // 0x013C   (0x0004)  
	FName                                              LegacyFontName;                                             // 0x0140   (0x0008)  
	FCompositeFont                                     CompositeFont;                                              // 0x0148   (0x0038)  
	unsigned char                                      UnknownData03_6[0x50];                                      // 0x0180   (0x0050)  MISSED
};

/// Class /Script/Engine.FontFace
/// Size: 0x0030 (0x000028 - 0x000058)
class UFontFace : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	FString                                            SourceFilename;                                             // 0x0030   (0x0010)  
	EFontHinting                                       Hinting;                                                    // 0x0040   (0x0001)  
	EFontLoadingPolicy                                 LoadingPolicy;                                              // 0x0041   (0x0001)  
	EFontLayoutMethod                                  LayoutMethod;                                               // 0x0042   (0x0001)  
	unsigned char                                      UnknownData01_6[0x15];                                      // 0x0043   (0x0015)  MISSED
};

/// Class /Script/Engine.GameEngine
/// Size: 0x0058 (0x001050 - 0x0010A8)
class UGameEngine : public UEngine
{ 
public:
	float                                              MaxDeltaTime;                                               // 0x1050   (0x0004)  
	float                                              ServerFlushLogInterval;                                     // 0x1054   (0x0004)  
	UGameInstance*                                     GameInstance;                                               // 0x1058   (0x0008)  
	unsigned char                                      UnknownData00_6[0x48];                                      // 0x1060   (0x0048)  MISSED
};

/// Class /Script/Engine.AsyncActionHandleSaveGame
/// Size: 0x0038 (0x000030 - 0x000068)
class UAsyncActionHandleSaveGame : public UBlueprintAsyncActionBase
{ 
public:
	FMulticastInlineDelegate                           Completed;                                                  // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_5[0x20];                                      // 0x0040   (0x0020)  MISSED
	USaveGame*                                         SaveGameObject;                                             // 0x0060   (0x0008)  


	/// Functions
	// Function /Script/Engine.AsyncActionHandleSaveGame.AsyncSaveGameToSlot
	UAsyncActionHandleSaveGame* AsyncSaveGameToSlot(UObject* WorldContextObject, USaveGame* SaveGameObject, FString SlotName, int32_t UserIndex); // [0x4a27c20] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Engine.AsyncActionHandleSaveGame.AsyncLoadGameFromSlot
	UAsyncActionHandleSaveGame* AsyncLoadGameFromSlot(UObject* WorldContextObject, FString SlotName, int32_t UserIndex);     // [0x4a27a50] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/Engine.ForceFeedbackEffect
/// Size: 0x0018 (0x000028 - 0x000040)
class UForceFeedbackEffect : public UObject
{ 
public:
	TArray<FForceFeedbackChannelDetails>               ChannelDetails;                                             // 0x0028   (0x0010)  
	float                                              Duration;                                                   // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Class /Script/Engine.TouchInterface
/// Size: 0x0030 (0x000028 - 0x000058)
class UTouchInterface : public UObject
{ 
public:
	TArray<FTouchInputControl>                         Controls;                                                   // 0x0028   (0x0010)  
	float                                              ActiveOpacity;                                              // 0x0038   (0x0004)  
	float                                              InactiveOpacity;                                            // 0x003C   (0x0004)  
	float                                              TimeUntilDeactive;                                          // 0x0040   (0x0004)  
	float                                              TimeUntilReset;                                             // 0x0044   (0x0004)  
	float                                              ActivationDelay;                                            // 0x0048   (0x0004)  
	bool                                               bPreventRecenter;                                           // 0x004C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x004D   (0x0003)  MISSED
	float                                              StartupDelay;                                               // 0x0050   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0054   (0x0004)  MISSED
};

/// Class /Script/Engine.GameplayStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UGameplayStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.HLODProxy
/// Size: 0x0060 (0x000028 - 0x000088)
class UHLODProxy : public UObject
{ 
public:
	TArray<FHLODProxyMesh>                             ProxyMeshes;                                                // 0x0028   (0x0010)  
	TMap<UHLODProxyDesc*, FHLODProxyMesh>              HLODActors;                                                 // 0x0038   (0x0050)  
};

/// Class /Script/Engine.HLODEngineSubsystem
/// Size: 0x0000 (0x000030 - 0x000030)
class UHLODEngineSubsystem : public UEngineSubsystem
{ 
public:
};

/// Class /Script/Engine.HLODProxyDesc
/// Size: 0x0000 (0x000028 - 0x000028)
class UHLODProxyDesc : public UObject
{ 
public:
};

/// Class /Script/Engine.ImportantToggleSettingInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UImportantToggleSettingInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.InheritableComponentHandler
/// Size: 0x0020 (0x000028 - 0x000048)
class UInheritableComponentHandler : public UObject
{ 
public:
	TArray<FComponentOverrideRecord>                   Records;                                                    // 0x0028   (0x0010)  
	TArray<UActorComponent*>                           UnnecessaryComponents;                                      // 0x0038   (0x0010)  
};

/// Class /Script/Engine.InputActionDelegateBinding
/// Size: 0x0010 (0x000028 - 0x000038)
class UInputActionDelegateBinding : public UInputDelegateBinding
{ 
public:
	TArray<FBlueprintInputActionDelegateBinding>       InputActionDelegateBindings;                                // 0x0028   (0x0010)  
};

/// Class /Script/Engine.InputAxisDelegateBinding
/// Size: 0x0010 (0x000028 - 0x000038)
class UInputAxisDelegateBinding : public UInputDelegateBinding
{ 
public:
	TArray<FBlueprintInputAxisDelegateBinding>         InputAxisDelegateBindings;                                  // 0x0028   (0x0010)  
};

/// Class /Script/Engine.InputAxisKeyDelegateBinding
/// Size: 0x0010 (0x000028 - 0x000038)
class UInputAxisKeyDelegateBinding : public UInputDelegateBinding
{ 
public:
	TArray<FBlueprintInputAxisKeyDelegateBinding>      InputAxisKeyDelegateBindings;                               // 0x0028   (0x0010)  
};

/// Class /Script/Engine.InputKeyDelegateBinding
/// Size: 0x0010 (0x000028 - 0x000038)
class UInputKeyDelegateBinding : public UInputDelegateBinding
{ 
public:
	TArray<FBlueprintInputKeyDelegateBinding>          InputKeyDelegateBindings;                                   // 0x0028   (0x0010)  
};

/// Class /Script/Engine.InputTouchDelegateBinding
/// Size: 0x0010 (0x000028 - 0x000038)
class UInputTouchDelegateBinding : public UInputDelegateBinding
{ 
public:
	TArray<FBlueprintInputTouchDelegateBinding>        InputTouchDelegateBindings;                                 // 0x0028   (0x0010)  
};

/// Class /Script/Engine.InputVectorAxisDelegateBinding
/// Size: 0x0000 (0x000038 - 0x000038)
class UInputVectorAxisDelegateBinding : public UInputAxisKeyDelegateBinding
{ 
public:
};

/// Class /Script/Engine.InstancedPlacemenClientSettings
/// Size: 0x0000 (0x000028 - 0x000028)
class UInstancedPlacemenClientSettings : public UObject
{ 
public:
};

/// Class /Script/Engine.InstancedPlacementPartitionActor
/// Size: 0x0000 (0x0002A0 - 0x0002A0)
class AInstancedPlacementPartitionActor : public AISMPartitionActor
{ 
public:
};

/// Class /Script/Engine.StringTable
/// Size: 0x0018 (0x000028 - 0x000040)
class UStringTable : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x18];                                      // 0x0028   (0x0018)  MISSED
};

/// Class /Script/Engine.InterpCurveEdSetup
/// Size: 0x0018 (0x000028 - 0x000040)
class UInterpCurveEdSetup : public UObject
{ 
public:
	TArray<FCurveEdTab>                                Tabs;                                                       // 0x0028   (0x0010)  
	int32_t                                            ActiveTab;                                                  // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Class /Script/Engine.IntSerialization
/// Size: 0x0028 (0x000028 - 0x000050)
class UIntSerialization : public UObject
{ 
public:
	uint16_t                                           UnsignedInt16Variable;                                      // 0x0028   (0x0002)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x002A   (0x0002)  MISSED
	uint32_t                                           UnsignedInt32Variable;                                      // 0x002C   (0x0004)  
	uint64_t                                           UnsignedInt64Variable;                                      // 0x0030   (0x0008)  
	int8_t                                             SignedInt8Variable;                                         // 0x0038   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x0039   (0x0001)  MISSED
	int16_t                                            SignedInt16Variable;                                        // 0x003A   (0x0002)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	int64_t                                            SignedInt64Variable;                                        // 0x0040   (0x0008)  
	char                                               UnsignedInt8Variable;                                       // 0x0048   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x0049   (0x0003)  MISSED
	int32_t                                            SignedInt32Variable;                                        // 0x004C   (0x0004)  
};

/// Class /Script/Engine.KillZVolume
/// Size: 0x0000 (0x0002D8 - 0x0002D8)
class AKillZVolume : public APhysicsVolume
{ 
public:
};

/// Class /Script/Engine.KismetArrayLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UKismetArrayLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.KismetGuidLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UKismetGuidLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.KismetInputLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UKismetInputLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.KismetInternationalizationLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UKismetInternationalizationLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.KismetMaterialLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UKismetMaterialLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.KismetMathLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UKismetMathLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.KismetNodeHelperLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UKismetNodeHelperLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.KismetRenderingLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UKismetRenderingLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.KismetStringLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UKismetStringLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.KismetStringTableLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UKismetStringTableLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.KismetSystemLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UKismetSystemLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.BlueprintPathsLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UBlueprintPathsLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.PlatformGameInstance
/// Size: 0x00D0 (0x0001C0 - 0x000290)
class UPlatformGameInstance : public UGameInstance
{ 
public:
	FMulticastInlineDelegate                           ApplicationWillDeactivateDelegate;                          // 0x01C0   (0x0010)  
	FMulticastInlineDelegate                           ApplicationHasReactivatedDelegate;                          // 0x01D0   (0x0010)  
	FMulticastInlineDelegate                           ApplicationWillEnterBackgroundDelegate;                     // 0x01E0   (0x0010)  
	FMulticastInlineDelegate                           ApplicationHasEnteredForegroundDelegate;                    // 0x01F0   (0x0010)  
	FMulticastInlineDelegate                           ApplicationWillTerminateDelegate;                           // 0x0200   (0x0010)  
	FMulticastInlineDelegate                           ApplicationShouldUnloadResourcesDelegate;                   // 0x0210   (0x0010)  
	FMulticastInlineDelegate                           ApplicationReceivedStartupArgumentsDelegate;                // 0x0220   (0x0010)  
	FMulticastInlineDelegate                           ApplicationRegisteredForRemoteNotificationsDelegate;        // 0x0230   (0x0010)  
	FMulticastInlineDelegate                           ApplicationRegisteredForUserNotificationsDelegate;          // 0x0240   (0x0010)  
	FMulticastInlineDelegate                           ApplicationFailedToRegisterForRemoteNotificationsDelegate;  // 0x0250   (0x0010)  
	FMulticastInlineDelegate                           ApplicationReceivedRemoteNotificationDelegate;              // 0x0260   (0x0010)  
	FMulticastInlineDelegate                           ApplicationReceivedLocalNotificationDelegate;               // 0x0270   (0x0010)  
	FMulticastInlineDelegate                           ApplicationReceivedScreenOrientationChangedNotificationDelegate; // 0x0280   (0x0010)  
};

/// Class /Script/Engine.BlueprintPlatformLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UBlueprintPlatformLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.BlueprintTypeConversions
/// Size: 0x0000 (0x000028 - 0x000028)
class UBlueprintTypeConversions : public UObject
{ 
public:
};

/// Class /Script/Engine.ImportanceSamplingLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UImportanceSamplingLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.Layer
/// Size: 0x0020 (0x000028 - 0x000048)
class ULayer : public UObject
{ 
public:
	FName                                              LayerName;                                                  // 0x0028   (0x0008)  
	bool                                               bIsVisible : 1;                                             // 0x0030:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0031   (0x0007)  MISSED
	TArray<FLayerActorStats>                           ActorStats;                                                 // 0x0038   (0x0010)  
};

/// Class /Script/Engine.LevelPartitionInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class ULevelPartitionInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.ActorContainer
/// Size: 0x0050 (0x000028 - 0x000078)
class UActorContainer : public UObject
{ 
public:
	TMap<FName, AActor*>                               Actors;                                                     // 0x0028   (0x0050)  
};

/// Class /Script/Engine.LevelActorContainer
/// Size: 0x0010 (0x000028 - 0x000038)
class ULevelActorContainer : public UObject
{ 
public:
	TArray<AActor*>                                    Actors;                                                     // 0x0028   (0x0010)  
};

/// Class /Script/Engine.LevelBounds
/// Size: 0x0010 (0x000290 - 0x0002A0)
class ALevelBounds : public AActor
{ 
public:
	UBoxComponent*                                     BoxComponent;                                               // 0x0290   (0x0008)  
	bool                                               bAutoUpdateBounds;                                          // 0x0298   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0299   (0x0007)  MISSED
};

/// Class /Script/Engine.LevelInstance
/// Size: 0x0090 (0x000290 - 0x000320)
class ALevelInstance : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0290   (0x0008)  MISSED
	TWeakObjectPtr<UWorld*>                            CookedWorldAsset;                                           // 0x0298   (0x0030)  
	FGuid                                              LevelInstanceSpawnGuid;                                     // 0x02C8   (0x0010)  
	unsigned char                                      UnknownData01_6[0x48];                                      // 0x02D8   (0x0048)  MISSED


	/// Functions
	// Function /Script/Engine.LevelInstance.OnRep_LevelInstanceSpawnGuid
	void OnRep_LevelInstanceSpawnGuid();                                                                                     // [0x4b98fa0] Final|Native|Public  
};

/// Class /Script/Engine.LevelInstanceComponent
/// Size: 0x0000 (0x0002A0 - 0x0002A0)
class ULevelInstanceComponent : public USceneComponent
{ 
public:
};

/// Class /Script/Engine.LevelInstanceEditorInstanceActor
/// Size: 0x0000 (0x000290 - 0x000290)
class ALevelInstanceEditorInstanceActor : public AActor
{ 
public:
};

/// Class /Script/Engine.LevelStreamingLevelInstanceEditor
/// Size: 0x0000 (0x0001B0 - 0x0001B0)
class ULevelStreamingLevelInstanceEditor : public ULevelStreamingAlwaysLoaded
{ 
public:
};

/// Class /Script/Engine.LevelInstanceEditorObject
/// Size: 0x0000 (0x000028 - 0x000028)
class ULevelInstanceEditorObject : public UObject
{ 
public:
};

/// Class /Script/Engine.LevelInstancePivot
/// Size: 0x0008 (0x000290 - 0x000298)
class ALevelInstancePivot : public AActor
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0290   (0x0008)  MISSED
};

/// Class /Script/Engine.LevelInstanceInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class ULevelInstanceInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.LevelStreamingLevelInstance
/// Size: 0x0020 (0x0001B0 - 0x0001D0)
class ULevelStreamingLevelInstance : public ULevelStreamingDynamic
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x01B0   (0x0020)  MISSED
};

/// Class /Script/Engine.LevelInstanceSubsystem
/// Size: 0x0190 (0x000030 - 0x0001C0)
class ULevelInstanceSubsystem : public UWorldSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x190];                                     // 0x0030   (0x0190)  MISSED
};

/// Class /Script/Engine.LevelScriptActor
/// Size: 0x0008 (0x000290 - 0x000298)
class ALevelScriptActor : public AActor
{ 
public:
	bool                                               bInputEnabled : 1;                                          // 0x0290:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0291   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.LevelScriptActor.WorldOriginLocationChanged
	void WorldOriginLocationChanged(FIntVector OldOriginLocation, FIntVector NewOriginLocation);                             // [0x2e6eb70] Event|Public|HasDefaults|BlueprintEvent 
	// Function /Script/Engine.LevelScriptActor.SetCinematicMode
	void SetCinematicMode(bool bCinematicMode, bool bHidePlayer, bool bAffectsHUD, bool bAffectsMovement, bool bAffectsTurning); // [0x4bb4780] Native|Public|BlueprintCallable 
	// Function /Script/Engine.LevelScriptActor.RemoteEvent
	bool RemoteEvent(FName EventName);                                                                                       // [0x4bb4530] Native|Public|BlueprintCallable 
	// Function /Script/Engine.LevelScriptActor.LevelReset
	void LevelReset();                                                                                                       // [0x2e6eb70] BlueprintAuthorityOnly|Event|Public|BlueprintEvent 
};

/// Class /Script/Engine.LevelScriptBlueprint
/// Size: 0x0000 (0x0000A8 - 0x0000A8)
class ULevelScriptBlueprint : public UBlueprint
{ 
public:
};

/// Class /Script/Engine.LightmappedSurfaceCollection
/// Size: 0x0018 (0x000028 - 0x000040)
class ULightmappedSurfaceCollection : public UObject
{ 
public:
	UModel*                                            SourceModel;                                                // 0x0028   (0x0008)  
	TArray<int32_t>                                    Surfaces;                                                   // 0x0030   (0x0010)  
};

/// Class /Script/Engine.LightmassCharacterIndirectDetailVolume
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class ALightmassCharacterIndirectDetailVolume : public AVolume
{ 
public:
};

/// Class /Script/Engine.LightmassImportanceVolume
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class ALightmassImportanceVolume : public AVolume
{ 
public:
};

/// Class /Script/Engine.LightmassPrimitiveSettingsObject
/// Size: 0x0018 (0x000028 - 0x000040)
class ULightmassPrimitiveSettingsObject : public UObject
{ 
public:
	FLightmassPrimitiveSettings                        LightmassSettings;                                          // 0x0028   (0x0018)  
};

/// Class /Script/Engine.LightWeightInstanceBlueprintFunctionLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class ULightWeightInstanceBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.ActorInstanceHandleInterface
/// Size: 0x0020 (0x000028 - 0x000048)
class UActorInstanceHandleInterface : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x20];                                      // 0x0028   (0x0020)  MISSED
};

/// Class /Script/Engine.LightWeightInstanceManager
/// Size: 0x00A0 (0x000290 - 0x000330)
class ALightWeightInstanceManager : public AActor
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0290   (0x0010)  MISSED
	UClass*                                            RepresentedClass;                                           // 0x02A0   (0x0008)  
	UClass*                                            AcceptedClass;                                              // 0x02A8   (0x0008)  
	TArray<FTransform>                                 InstanceTransforms;                                         // 0x02B0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x50];                                      // 0x02C0   (0x0050)  MISSED
	TArray<int32_t>                                    FreeIndices;                                                // 0x0310   (0x0010)  
	TArray<bool>                                       ValidIndices;                                               // 0x0320   (0x0010)  


	/// Functions
	// Function /Script/Engine.LightWeightInstanceManager.OnRep_Transforms
	void OnRep_Transforms();                                                                                                 // [0xc99530] Native|Protected     
};

/// Class /Script/Engine.LightWeightInstanceStaticMeshManager
/// Size: 0x0070 (0x000330 - 0x0003A0)
class ALightWeightInstanceStaticMeshManager : public ALightWeightInstanceManager
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0330   (0x0008)  MISSED
	TWeakObjectPtr<UStaticMesh*>                       StaticMesh;                                                 // 0x0338   (0x0030)  
	UHierarchicalInstancedStaticMeshComponent*         InstancedStaticMeshComponent;                               // 0x0368   (0x0008)  
	TArray<int32_t>                                    RenderingIndicesToDataIndices;                              // 0x0370   (0x0010)  
	TArray<int32_t>                                    DataIndicesToRenderingIndices;                              // 0x0380   (0x0010)  
	unsigned char                                      UnknownData01_6[0x10];                                      // 0x0390   (0x0010)  MISSED


	/// Functions
	// Function /Script/Engine.LightWeightInstanceStaticMeshManager.OnRep_StaticMesh
	void OnRep_StaticMesh();                                                                                                 // [0x4bb4510] Final|Native|Protected 
};

/// Class /Script/Engine.LocationVolume
/// Size: 0x0010 (0x0002C8 - 0x0002D8)
class ALocationVolume : public AVolume
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x02C8   (0x0008)  MISSED
	FColor                                             DebugColor;                                                 // 0x02D0   (0x0004)  
	bool                                               bIsRuntime : 1;                                             // 0x02D4:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x02D5   (0x0003)  MISSED


	/// Functions
	// Function /Script/Engine.LocationVolume.Unload
	void Unload();                                                                                                           // [0xc479d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LocationVolume.Load
	void Load();                                                                                                             // [0xc479d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.LocationVolume.IsLoaded
	bool IsLoaded();                                                                                                         // [0x1ab4670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.LODActor
/// Size: 0x0088 (0x000290 - 0x000318)
class ALODActor : public AActor
{ 
public:
	UStaticMeshComponent*                              StaticMeshComponent;                                        // 0x0290   (0x0008)  
	TMap<FHLODInstancingKey, UInstancedStaticMeshComponent*> InstancedStaticMeshComponents;                        // 0x0298   (0x0050)  
	UHLODProxy*                                        Proxy;                                                      // 0x02E8   (0x0008)  
	FName                                              Key;                                                        // 0x02F0   (0x0008)  
	float                                              LODDrawDistance;                                            // 0x02F8   (0x0004)  
	int32_t                                            LODLevel;                                                   // 0x02FC   (0x0004)  
	TArray<AActor*>                                    SubActors;                                                  // 0x0300   (0x0010)  
	char                                               CachedNumHLODLevels;                                        // 0x0310   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0311   (0x0007)  MISSED


	/// Functions
	// Function /Script/Engine.LODActor.OnSubActorEndPlay
	void OnSubActorEndPlay(AActor* Actor, TEnumAsByte<EEndPlayReason> Reason);                                               // [0x4bc4e90] Final|Native|Private 
};

/// Class /Script/Engine.MaterialInstanceActor
/// Size: 0x0010 (0x000290 - 0x0002A0)
class AMaterialInstanceActor : public AActor
{ 
public:
	TArray<AActor*>                                    TargetActors;                                               // 0x0290   (0x0010)  
};

/// Class /Script/Engine.MaterialInstanceEditorOnlyData
/// Size: 0x00A0 (0x000040 - 0x0000E0)
class UMaterialInstanceEditorOnlyData : public UMaterialInterfaceEditorOnlyData
{ 
public:
	FStaticParameterSetEditorOnlyData                  StaticParameters;                                           // 0x0040   (0x00A0)  
};

/// Class /Script/Engine.MaterialInstanceDynamic
/// Size: 0x0050 (0x0001F8 - 0x000248)
class UMaterialInstanceDynamic : public UMaterialInstance
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x01F8   (0x0050)  MISSED
};

/// Class /Script/Engine.MeshMergeCullingVolume
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class AMeshMergeCullingVolume : public AVolume
{ 
public:
};

/// Class /Script/Engine.MeshSimplificationSettings
/// Size: 0x0010 (0x000038 - 0x000048)
class UMeshSimplificationSettings : public UDeveloperSettings
{ 
public:
	FName                                              MeshReductionModuleName;                                    // 0x0038   (0x0008)  
	bool                                               bMeshReductionBackwardCompatible;                           // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0041   (0x0007)  MISSED
};

/// Class /Script/Engine.MeshVertexPainterKismetLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UMeshVertexPainterKismetLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.Model
/// Size: 0x0248 (0x000028 - 0x000270)
class UModel : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x248];                                     // 0x0028   (0x0248)  MISSED
};

/// Class /Script/Engine.SimulatedClientNetConnection
/// Size: 0x0000 (0x003310 - 0x003310)
class USimulatedClientNetConnection : public UNetConnection
{ 
public:
};

/// Class /Script/Engine.NetworkSettings
/// Size: 0x0018 (0x000038 - 0x000050)
class UNetworkSettings : public UDeveloperSettings
{ 
public:
	bool                                               bVerifyPeer : 1;                                            // 0x0038:0 (0x0001)  
	bool                                               bEnableMultiplayerWorldOriginRebasing : 1;                  // 0x0038:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0039   (0x0007)  MISSED
	TArray<FNetworkEmulationProfileDescription>        NetworkEmulationProfiles;                                   // 0x0040   (0x0010)  
};

/// Class /Script/Engine.BandwidthTestActor
/// Size: 0x0020 (0x000290 - 0x0002B0)
class ABandwidthTestActor : public AActor
{ 
public:
	FBandwidthTestGenerator                            BandwidthGenerator;                                         // 0x0290   (0x0020)  
};

/// Class /Script/Engine.NetFaultConfig
/// Size: 0x0000 (0x000088 - 0x000088)
class UNetFaultConfig : public UEscalationManagerConfig
{ 
public:
};

/// Class /Script/Engine.NetPushModelHelpers
/// Size: 0x0000 (0x000028 - 0x000028)
class UNetPushModelHelpers : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.RPCDoSDetectionConfig
/// Size: 0x0060 (0x000028 - 0x000088)
class URPCDoSDetectionConfig : public UObject
{ 
public:
	bool                                               bRPCDoSDetection;                                           // 0x0028   (0x0001)  
	bool                                               bRPCDoSAnalytics;                                           // 0x0029   (0x0001)  
	unsigned char                                      UnknownData00_5[0x2];                                       // 0x002A   (0x0002)  MISSED
	int32_t                                            HitchTimeQuotaMS;                                           // 0x002C   (0x0004)  
	int32_t                                            HitchSuspendDetectionTimeMS;                                // 0x0030   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x0034   (0x0004)  MISSED
	TArray<FString>                                    DetectionSeverity;                                          // 0x0038   (0x0010)  
	int32_t                                            InitialConnectToleranceMS;                                  // 0x0048   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x004C   (0x0004)  MISSED
	TArray<FName>                                      RPCBlockWhitelist;                                          // 0x0050   (0x0010)  
	TArray<FName>                                      RPCBlockAllowlist;                                          // 0x0060   (0x0010)  
	TArray<FRPCAnalyticsThreshold>                     RPCAnalyticsThresholds;                                     // 0x0070   (0x0010)  
	double                                             RPCAnalyticsOverrideChance;                                 // 0x0080   (0x0008)  
};

/// Class /Script/Engine.NetworkSubsystem
/// Size: 0x0050 (0x000030 - 0x000080)
class UNetworkSubsystem : public UWorldSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x50];                                      // 0x0030   (0x0050)  MISSED
};

/// Class /Script/Engine.Note
/// Size: 0x0000 (0x000290 - 0x000290)
class ANote : public AActor
{ 
public:
};

/// Class /Script/Engine.ObjectLibrary
/// Size: 0x0080 (0x000028 - 0x0000A8)
class UObjectLibrary : public UObject
{ 
public:
	UClass*                                            ObjectBaseClass;                                            // 0x0028   (0x0008)  
	bool                                               bHasBlueprintClasses;                                       // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	TArray<UObject*>                                   Objects;                                                    // 0x0038   (0x0010)  
	TArray<TWeakObjectPtr>                             WeakObjects;                                                // 0x0048   (0x0010)  
	bool                                               bUseWeakReferences;                                         // 0x0058   (0x0001)  
	bool                                               bIsFullyLoaded;                                             // 0x0059   (0x0001)  
	unsigned char                                      UnknownData01_6[0x4E];                                      // 0x005A   (0x004E)  MISSED
};

/// Class /Script/Engine.ObjectReferencer
/// Size: 0x0010 (0x000028 - 0x000038)
class UObjectReferencer : public UObject
{ 
public:
	TArray<UObject*>                                   ReferencedObjects;                                          // 0x0028   (0x0010)  
};

/// Class /Script/Engine.ObjectTraceWorldSubsystem
/// Size: 0x0010 (0x000030 - 0x000040)
class UObjectTraceWorldSubsystem : public UWorldSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0030   (0x0010)  MISSED
};

/// Class /Script/Engine.PackageMapClient
/// Size: 0x0328 (0x0000E0 - 0x000408)
class UPackageMapClient : public UPackageMap
{ 
public:
	unsigned char                                      UnknownData00_1[0x328];                                     // 0x00E0   (0x0328)  MISSED
};

/// Class /Script/Engine.PackedLevelActor
/// Size: 0x0000 (0x000320 - 0x000320)
class APackedLevelActor : public ALevelInstance
{ 
public:
};

/// Class /Script/Engine.EngineHandlerComponentFactory
/// Size: 0x0000 (0x000028 - 0x000028)
class UEngineHandlerComponentFactory : public UHandlerComponentFactory
{ 
public:
};

/// Class /Script/Engine.PainCausingVolume
/// Size: 0x0028 (0x0002D8 - 0x000300)
class APainCausingVolume : public APhysicsVolume
{ 
public:
	bool                                               bPainCausing : 1;                                           // 0x02D8:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x02D9   (0x0003)  MISSED
	float                                              DamagePerSec;                                               // 0x02DC   (0x0004)  
	UClass*                                            DamageType;                                                 // 0x02E0   (0x0008)  
	float                                              PainInterval;                                               // 0x02E8   (0x0004)  
	bool                                               bEntryPain : 1;                                             // 0x02EC:0 (0x0001)  
	bool                                               BACKUP_bPainCausing : 1;                                    // 0x02EC:1 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x02ED   (0x0003)  MISSED
	AController*                                       DamageInstigator;                                           // 0x02F0   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x02F8   (0x0008)  MISSED
};

/// Class /Script/Engine.ParticleEventManager
/// Size: 0x0000 (0x000290 - 0x000290)
class AParticleEventManager : public AActor
{ 
public:
};

/// Class /Script/Engine.AsyncPhysicsInputComponent
/// Size: 0x0028 (0x0000A0 - 0x0000C8)
class UAsyncPhysicsInputComponent : public UActorComponent
{ 
public:
	UClass*                                            DataClass;                                                  // 0x00A0   (0x0008)  
	TArray<UAsyncPhysicsData*>                         BufferedData;                                               // 0x00A8   (0x0010)  
	UAsyncPhysicsData*                                 DataToConsume;                                              // 0x00B8   (0x0008)  
	UAsyncPhysicsData*                                 DataToWrite;                                                // 0x00C0   (0x0008)  


	/// Functions
	// Function /Script/Engine.AsyncPhysicsInputComponent.ServerRPCBufferInput
	void ServerRPCBufferInput(UAsyncPhysicsData* AsyncPhysicsData);                                                          // [0x4d32bc0] Net|Native|Event|Public|NetServer 
	// Function /Script/Engine.AsyncPhysicsInputComponent.GetDataToWrite
	UAsyncPhysicsData* GetDataToWrite();                                                                                     // [0x4d32620] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.AsyncPhysicsInputComponent.GetDataToConsume
	UAsyncPhysicsData* GetDataToConsume();                                                                                   // [0x4d32560] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.BodySetup
/// Size: 0x02B8 (0x000038 - 0x0002F0)
class UBodySetup : public UBodySetupCore
{ 
public:
	FKAggregateGeom                                    AggGeom;                                                    // 0x0038   (0x0068)  
	bool                                               bAlwaysFullAnimWeight : 1;                                  // 0x00A0:0 (0x0001)  
	bool                                               bConsiderForBounds : 1;                                     // 0x00A0:1 (0x0001)  
	bool                                               bMeshCollideAll : 1;                                        // 0x00A0:2 (0x0001)  
	bool                                               bDoubleSidedGeometry : 1;                                   // 0x00A0:3 (0x0001)  
	bool                                               bGenerateNonMirroredCollision : 1;                          // 0x00A0:4 (0x0001)  
	bool                                               bSharedCookedData : 1;                                      // 0x00A0:5 (0x0001)  
	bool                                               bGenerateMirroredCollision : 1;                             // 0x00A0:6 (0x0001)  
	bool                                               bSupportUVsAndFaceRemap : 1;                                // 0x00A0:7 (0x0001)  
	unsigned char                                      UnknownBit00 : 1;                                           // 0x00A1:0 (0x0001)  MISSED
	unsigned char                                      UnknownBit01 : 1;                                           // 0x00A1:1 (0x0001)  MISSED
	unsigned char                                      UnknownBit02 : 1;                                           // 0x00A1:2 (0x0001)  MISSED
	bool                                               bNeverNeedsCookedCollisionData : 1;                         // 0x00A1:3 (0x0001)  
	unsigned char                                      UnknownData03_4[0x6];                                       // 0x00A2   (0x0006)  MISSED
	UPhysicalMaterial*                                 PhysMaterial;                                               // 0x00A8   (0x0008)  
	FWalkableSlopeOverride                             WalkableSlopeOverride;                                      // 0x00B0   (0x0010)  
	unsigned char                                      UnknownData04_5[0x70];                                      // 0x00C0   (0x0070)  MISSED
	FBodyInstance                                      DefaultInstance;                                            // 0x0130   (0x0190)  
	unsigned char                                      UnknownData05_5[0x8];                                       // 0x02C0   (0x0008)  MISSED
	FVector                                            BuildScale3D;                                               // 0x02C8   (0x0018)  
	unsigned char                                      UnknownData06_6[0x10];                                      // 0x02E0   (0x0010)  MISSED
};

/// Class /Script/Engine.ConstraintInstanceBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UConstraintInstanceBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.PhysicalAnimationComponent
/// Size: 0x0040 (0x0000A0 - 0x0000E0)
class UPhysicalAnimationComponent : public UActorComponent
{ 
public:
	float                                              StrengthMultiplyer;                                         // 0x00A0   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x00A4   (0x0004)  MISSED
	USkeletalMeshComponent*                            SkeletalMeshComponent;                                      // 0x00A8   (0x0008)  
	unsigned char                                      UnknownData01_6[0x30];                                      // 0x00B0   (0x0030)  MISSED


	/// Functions
	// Function /Script/Engine.PhysicalAnimationComponent.SetStrengthMultiplyer
	void SetStrengthMultiplyer(float InStrengthMultiplyer);                                                                  // [0x4d98160] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicalAnimationComponent.SetSkeletalMeshComponent
	void SetSkeletalMeshComponent(USkeletalMeshComponent* InSkeletalMeshComponent);                                          // [0x4d97f90] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicalAnimationComponent.GetBodyTargetTransform
	FTransform GetBodyTargetTransform(FName BodyName);                                                                       // [0x4d95560] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationSettingsBelow
	void ApplyPhysicalAnimationSettingsBelow(FName BodyName, FPhysicalAnimationData& PhysicalAnimationData, bool bIncludeSelf); // [0x4d94fd0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationSettings
	void ApplyPhysicalAnimationSettings(FName BodyName, FPhysicalAnimationData& PhysicalAnimationData);                      // [0x4d94e90] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationProfileBelow
	void ApplyPhysicalAnimationProfileBelow(FName BodyName, FName ProfileName, bool bIncludeSelf, bool bClearNotFound);      // [0x4d94ca0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.PhysicalMaterialMask
/// Size: 0x0010 (0x000028 - 0x000038)
class UPhysicalMaterialMask : public UObject
{ 
public:
	int32_t                                            UVChannelIndex;                                             // 0x0028   (0x0004)  
	TEnumAsByte<TextureAddress>                        AddressX;                                                   // 0x002C   (0x0001)  
	TEnumAsByte<TextureAddress>                        AddressY;                                                   // 0x002D   (0x0001)  
	unsigned char                                      UnknownData00_6[0xA];                                       // 0x002E   (0x000A)  MISSED
};

/// Class /Script/Engine.PhysicsAsset
/// Size: 0x0128 (0x000028 - 0x000150)
class UPhysicsAsset : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	TArray<int32_t>                                    BoundsBodies;                                               // 0x0030   (0x0010)  
	TArray<USkeletalBodySetup*>                        SkeletalBodySetups;                                         // 0x0040   (0x0010)  
	TArray<UPhysicsConstraintTemplate*>                ConstraintSetup;                                            // 0x0050   (0x0010)  
	FPhysicsAssetSolverSettings                        SolverSettings;                                             // 0x0060   (0x001C)  
	FSolverIterations                                  SolverIterations;                                           // 0x007C   (0x0018)  
	EPhysicsAssetSolverType                            SolverType;                                                 // 0x0094   (0x0001)  
	bool                                               bNotForDedicatedServer : 1;                                 // 0x0095:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0xA2];                                      // 0x0096   (0x00A2)  MISSED
	UThumbnailInfo*                                    ThumbnailInfo;                                              // 0x0138   (0x0008)  
	TArray<UBodySetup*>                                BodySetup;                                                  // 0x0140   (0x0010)  
};

/// Class /Script/Engine.SkeletalBodySetup
/// Size: 0x0018 (0x0002F0 - 0x000308)
class USkeletalBodySetup : public UBodySetup
{ 
public:
	bool                                               bSkipScaleFromAnimation;                                    // 0x02F0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x02F1   (0x0007)  MISSED
	TArray<FPhysicalAnimationProfile>                  PhysicalAnimationData;                                      // 0x02F8   (0x0010)  
};

/// Class /Script/Engine.PhysicsCollisionHandler
/// Size: 0x0018 (0x000028 - 0x000040)
class UPhysicsCollisionHandler : public UObject
{ 
public:
	float                                              ImpactThreshold;                                            // 0x0028   (0x0004)  
	float                                              ImpactReFireDelay;                                          // 0x002C   (0x0004)  
	USoundBase*                                        DefaultImpactSound;                                         // 0x0030   (0x0008)  
	float                                              LastImpactSoundTime;                                        // 0x0038   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
};

/// Class /Script/Engine.PhysicsConstraintActor
/// Size: 0x0020 (0x000290 - 0x0002B0)
class APhysicsConstraintActor : public ARigidBodyBase
{ 
public:
	UPhysicsConstraintComponent*                       ConstraintComp;                                             // 0x0290   (0x0008)  
	AActor*                                            ConstraintActor1;                                           // 0x0298   (0x0008)  
	AActor*                                            ConstraintActor2;                                           // 0x02A0   (0x0008)  
	bool                                               bDisableCollision : 1;                                      // 0x02A8:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02A9   (0x0007)  MISSED
};

/// Class /Script/Engine.PhysicsConstraintComponent
/// Size: 0x02D0 (0x0002A0 - 0x000570)
class UPhysicsConstraintComponent : public USceneComponent
{ 
public:
	AActor*                                            ConstraintActor1;                                           // 0x02A0   (0x0008)  
	FConstrainComponentPropName                        ComponentName1;                                             // 0x02A8   (0x0008)  
	AActor*                                            ConstraintActor2;                                           // 0x02B0   (0x0008)  
	FConstrainComponentPropName                        ComponentName2;                                             // 0x02B8   (0x0008)  
	unsigned char                                      UnknownData00_5[0x10];                                      // 0x02C0   (0x0010)  MISSED
	UPhysicsConstraintTemplate*                        ConstraintSetup;                                            // 0x02D0   (0x0008)  
	FMulticastInlineDelegate                           OnConstraintBroken;                                         // 0x02D8   (0x0010)  
	FMulticastInlineDelegate                           OnPlasticDeformation;                                       // 0x02E8   (0x0010)  
	FConstraintInstance                                ConstraintInstance;                                         // 0x02F8   (0x0278)  


	/// Functions
	// Function /Script/Engine.PhysicsConstraintComponent.SetOrientationDriveTwistAndSwing
	void SetOrientationDriveTwistAndSwing(bool bEnableTwistDrive, bool bEnableSwingDrive);                                   // [0x4d97ec0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetOrientationDriveSLERP
	void SetOrientationDriveSLERP(bool bEnableSLERP);                                                                        // [0x4d97e30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetLinearZLimit
	void SetLinearZLimit(TEnumAsByte<ELinearConstraintMotion> ConstraintType, float LimitSize);                              // [0x4d97d30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetLinearYLimit
	void SetLinearYLimit(TEnumAsByte<ELinearConstraintMotion> ConstraintType, float LimitSize);                              // [0x4d97c30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetLinearXLimit
	void SetLinearXLimit(TEnumAsByte<ELinearConstraintMotion> ConstraintType, float LimitSize);                              // [0x4d97b30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetLinearVelocityTarget
	void SetLinearVelocityTarget(FVector& InVelTarget);                                                                      // [0x4d97a90] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetLinearVelocityDrive
	void SetLinearVelocityDrive(bool bEnableDriveX, bool bEnableDriveY, bool bEnableDriveZ);                                 // [0x4d97970] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetLinearPositionTarget
	void SetLinearPositionTarget(FVector& InPosTarget);                                                                      // [0x4d97840] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetLinearPositionDrive
	void SetLinearPositionDrive(bool bEnableDriveX, bool bEnableDriveY, bool bEnableDriveZ);                                 // [0x4d97720] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetLinearPlasticity
	void SetLinearPlasticity(bool bLinearPlasticity, float LinearPlasticityThreshold, TEnumAsByte<EConstraintPlasticityType> PlasticityType); // [0x4d975e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetLinearDriveParams
	void SetLinearDriveParams(float PositionStrength, float VelocityStrength, float InForceLimit);                           // [0x4d974c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetLinearBreakable
	void SetLinearBreakable(bool bLinearBreakable, float LinearBreakThreshold);                                              // [0x4d97340] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetDisableCollision
	void SetDisableCollision(bool bDisableCollision);                                                                        // [0x4d97230] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetContactTransferScale
	void SetContactTransferScale(float ContactTransferScale);                                                                // [0x4d971a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetConstraintReferencePosition
	void SetConstraintReferencePosition(TEnumAsByte<EConstraintFrame> Frame, FVector& RefPosition);                          // [0x4d970c0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetConstraintReferenceOrientation
	void SetConstraintReferenceOrientation(TEnumAsByte<EConstraintFrame> Frame, FVector& PriAxis, FVector& SecAxis);         // [0x4d96f80] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetConstraintReferenceFrame
	void SetConstraintReferenceFrame(TEnumAsByte<EConstraintFrame> Frame, FTransform& RefFrame);                             // [0x4d96e20] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetConstrainedComponents
	void SetConstrainedComponents(UPrimitiveComponent* Component1, FName BoneName1, UPrimitiveComponent* Component2, FName BoneName2); // [0x4d96c80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetAngularVelocityTarget
	void SetAngularVelocityTarget(FVector& InVelTarget);                                                                     // [0x4d96be0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetAngularVelocityDriveTwistAndSwing
	void SetAngularVelocityDriveTwistAndSwing(bool bEnableTwistDrive, bool bEnableSwingDrive);                               // [0x4d96b10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetAngularVelocityDriveSLERP
	void SetAngularVelocityDriveSLERP(bool bEnableSLERP);                                                                    // [0x4d96a80] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetAngularVelocityDrive
	void SetAngularVelocityDrive(bool bEnableSwingDrive, bool bEnableTwistDrive);                                            // [0x4d969b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetAngularTwistLimit
	void SetAngularTwistLimit(TEnumAsByte<EAngularConstraintMotion> ConstraintType, float TwistLimitAngle);                  // [0x4d968d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetAngularSwing2Limit
	void SetAngularSwing2Limit(TEnumAsByte<EAngularConstraintMotion> MotionType, float Swing2LimitAngle);                    // [0x4d967f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetAngularSwing1Limit
	void SetAngularSwing1Limit(TEnumAsByte<EAngularConstraintMotion> MotionType, float Swing1LimitAngle);                    // [0x4d96710] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetAngularPlasticity
	void SetAngularPlasticity(bool bAngularPlasticity, float AngularPlasticityThreshold);                                    // [0x4d96590] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetAngularOrientationTarget
	void SetAngularOrientationTarget(FRotator& InPosTarget);                                                                 // [0x4d964f0] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetAngularOrientationDrive
	void SetAngularOrientationDrive(bool bEnableSwingDrive, bool bEnableTwistDrive);                                         // [0x4d96420] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetAngularDriveParams
	void SetAngularDriveParams(float PositionStrength, float VelocityStrength, float InForceLimit);                          // [0x4d96300] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetAngularDriveMode
	void SetAngularDriveMode(TEnumAsByte<EAngularDriveMode> DriveMode);                                                      // [0x4d96280] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.SetAngularBreakable
	void SetAngularBreakable(bool bAngularBreakable, float AngularBreakThreshold);                                           // [0x4d96100] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.IsBroken
	bool IsBroken();                                                                                                         // [0x4d96020] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.GetCurrentTwist
	float GetCurrentTwist();                                                                                                 // [0x4d95a00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PhysicsConstraintComponent.GetCurrentSwing2
	float GetCurrentSwing2();                                                                                                // [0x4d959c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PhysicsConstraintComponent.GetCurrentSwing1
	float GetCurrentSwing1();                                                                                                // [0x4d95980] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PhysicsConstraintComponent.GetConstraintForce
	void GetConstraintForce(FVector& OutLinearForce, FVector& OutAngularForce);                                              // [0x4d95890] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.GetConstraint
	FConstraintInstanceAccessor GetConstraint();                                                                             // [0x4d95800] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.GetConstrainedComponents
	void GetConstrainedComponents(UPrimitiveComponent*& OutComponent1, FName& OutBoneName1, UPrimitiveComponent*& OutComponent2, FName& OutBoneName2); // [0x4d95640] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.PhysicsConstraintComponent.BreakConstraint
	void BreakConstraint();                                                                                                  // [0x4d951b0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.PhysicsConstraintTemplate
/// Size: 0x03E8 (0x000028 - 0x000410)
class UPhysicsConstraintTemplate : public UObject
{ 
public:
	FConstraintInstance                                DefaultInstance;                                            // 0x0028   (0x0278)  
	TArray<FPhysicsConstraintProfileHandle>            ProfileHandles;                                             // 0x02A0   (0x0010)  
	FConstraintProfileProperties                       DefaultProfile;                                             // 0x02B0   (0x0160)  
};

/// Class /Script/Engine.PhysicsHandleComponent
/// Size: 0x0440 (0x0000A0 - 0x0004E0)
class UPhysicsHandleComponent : public UActorComponent
{ 
public:
	UPrimitiveComponent*                               GrabbedComponent;                                           // 0x00A0   (0x0008)  
	unsigned char                                      UnknownData00_5[0x8];                                       // 0x00A8   (0x0008)  MISSED
	unsigned char                                      UnknownBit01 : 1;                                           // 0x00B0:0 (0x0001)  MISSED
	bool                                               bSoftAngularConstraint : 1;                                 // 0x00B0:1 (0x0001)  
	bool                                               bSoftLinearConstraint : 1;                                  // 0x00B0:2 (0x0001)  
	bool                                               bInterpolateTarget : 1;                                     // 0x00B0:3 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x00B1   (0x0003)  MISSED
	float                                              LinearDamping;                                              // 0x00B4   (0x0004)  
	float                                              LinearStiffness;                                            // 0x00B8   (0x0004)  
	float                                              AngularDamping;                                             // 0x00BC   (0x0004)  
	float                                              AngularStiffness;                                           // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData03_5[0xCC];                                      // 0x00C4   (0x00CC)  MISSED
	float                                              InterpolationSpeed;                                         // 0x0190   (0x0004)  
	unsigned char                                      UnknownData04_6[0x34C];                                     // 0x0194   (0x034C)  MISSED


	/// Functions
	// Function /Script/Engine.PhysicsHandleComponent.SetTargetRotation
	void SetTargetRotation(FRotator NewRotation);                                                                            // [0x4d98400] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PhysicsHandleComponent.SetTargetLocationAndRotation
	void SetTargetLocationAndRotation(FVector NewLocation, FRotator NewRotation);                                            // [0x4d982b0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PhysicsHandleComponent.SetTargetLocation
	void SetTargetLocation(FVector NewLocation);                                                                             // [0x4d98220] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PhysicsHandleComponent.SetLinearStiffness
	void SetLinearStiffness(float NewLinearStiffness);                                                                       // [0x4d978e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsHandleComponent.SetLinearDamping
	void SetLinearDamping(float NewLinearDamping);                                                                           // [0x4d97430] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsHandleComponent.SetInterpolationSpeed
	void SetInterpolationSpeed(float NewInterpolationSpeed);                                                                 // [0x4d972c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsHandleComponent.SetAngularStiffness
	void SetAngularStiffness(float NewAngularStiffness);                                                                     // [0x4d96680] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsHandleComponent.SetAngularDamping
	void SetAngularDamping(float NewAngularDamping);                                                                         // [0x4d961f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsHandleComponent.ReleaseComponent
	void ReleaseComponent();                                                                                                 // [0x4d96060] Native|Public|BlueprintCallable 
	// Function /Script/Engine.PhysicsHandleComponent.GrabComponentAtLocationWithRotation
	void GrabComponentAtLocationWithRotation(UPrimitiveComponent* Component, FName InBoneName, FVector Location, FRotator Rotation); // [0x4d95e70] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PhysicsHandleComponent.GrabComponentAtLocation
	void GrabComponentAtLocation(UPrimitiveComponent* Component, FName InBoneName, FVector GrabLocation);                    // [0x4d95d20] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PhysicsHandleComponent.GrabComponent
	void GrabComponent(UPrimitiveComponent* Component, FName InBoneName, FVector GrabLocation, bool bConstrainRotation);     // [0x4d95b90] Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.PhysicsHandleComponent.GetTargetLocationAndRotation
	void GetTargetLocationAndRotation(FVector& TargetLocation, FRotator& TargetRotation);                                    // [0x4d95a40] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.PhysicsHandleComponent.GetGrabbedComponent
	UPrimitiveComponent* GetGrabbedComponent();                                                                              // [0x45ca6c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.PhysicsSettings
/// Size: 0x0108 (0x0000E0 - 0x0001E8)
class UPhysicsSettings : public UPhysicsSettingsCore
{ 
public:
	FRigidBodyErrorCorrection                          PhysicErrorCorrection;                                      // 0x00E0   (0x0034)  
	TEnumAsByte<ESettingsLockedAxis>                   LockedAxis;                                                 // 0x0114   (0x0001)  
	TEnumAsByte<ESettingsDOF>                          DefaultDegreesOfFreedom;                                    // 0x0115   (0x0001)  
	bool                                               bSuppressFaceRemapTable;                                    // 0x0116   (0x0001)  
	bool                                               bSupportUVFromHitResults;                                   // 0x0117   (0x0001)  
	bool                                               bDisableActiveActors;                                       // 0x0118   (0x0001)  
	bool                                               bDisableKinematicStaticPairs;                               // 0x0119   (0x0001)  
	bool                                               bDisableKinematicKinematicPairs;                            // 0x011A   (0x0001)  
	bool                                               bDisableCCD;                                                // 0x011B   (0x0001)  
	bool                                               bEnableEnhancedDeterminism;                                 // 0x011C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x011D   (0x0003)  MISSED
	float                                              AnimPhysicsMinDeltaTime;                                    // 0x0120   (0x0004)  
	bool                                               bSimulateAnimPhysicsAfterReset;                             // 0x0124   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0125   (0x0003)  MISSED
	float                                              MinPhysicsDeltaTime;                                        // 0x0128   (0x0004)  
	float                                              MaxPhysicsDeltaTime;                                        // 0x012C   (0x0004)  
	bool                                               bSubstepping;                                               // 0x0130   (0x0001)  
	bool                                               bSubsteppingAsync;                                          // 0x0131   (0x0001)  
	bool                                               bTickPhysicsAsync;                                          // 0x0132   (0x0001)  
	unsigned char                                      UnknownData02_5[0x1];                                       // 0x0133   (0x0001)  MISSED
	float                                              AsyncFixedTimeStepSize;                                     // 0x0134   (0x0004)  
	float                                              MaxSubstepDeltaTime;                                        // 0x0138   (0x0004)  
	int32_t                                            MaxSubsteps;                                                // 0x013C   (0x0004)  
	float                                              SyncSceneSmoothingFactor;                                   // 0x0140   (0x0004)  
	float                                              InitialAverageFrameRate;                                    // 0x0144   (0x0004)  
	int32_t                                            PhysXTreeRebuildRate;                                       // 0x0148   (0x0004)  
	unsigned char                                      UnknownData03_5[0x4];                                       // 0x014C   (0x0004)  MISSED
	TArray<FPhysicalSurfaceName>                       PhysicalSurfaces;                                           // 0x0150   (0x0010)  
	FBroadphaseSettings                                DefaultBroadphaseSettings;                                  // 0x0160   (0x0080)  
	float                                              MinDeltaVelocityForHitEvents;                               // 0x01E0   (0x0004)  
	FChaosPhysicsSettings                              ChaosSettings;                                              // 0x01E4   (0x0003)  
	unsigned char                                      UnknownData04_6[0x1];                                       // 0x01E7   (0x0001)  MISSED
};

/// Class /Script/Engine.PhysicsThruster
/// Size: 0x0008 (0x000290 - 0x000298)
class APhysicsThruster : public ARigidBodyBase
{ 
public:
	UPhysicsThrusterComponent*                         ThrusterComponent;                                          // 0x0290   (0x0008)  
};

/// Class /Script/Engine.RadialForceComponent
/// Size: 0x0030 (0x0002A0 - 0x0002D0)
class URadialForceComponent : public USceneComponent
{ 
public:
	float                                              Radius;                                                     // 0x02A0   (0x0004)  
	TEnumAsByte<ERadialImpulseFalloff>                 Falloff;                                                    // 0x02A4   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x02A5   (0x0003)  MISSED
	float                                              ImpulseStrength;                                            // 0x02A8   (0x0004)  
	bool                                               bImpulseVelChange : 1;                                      // 0x02AC:0 (0x0001)  
	bool                                               bIgnoreOwningActor : 1;                                     // 0x02AC:1 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x02AD   (0x0003)  MISSED
	float                                              ForceStrength;                                              // 0x02B0   (0x0004)  
	float                                              DestructibleDamage;                                         // 0x02B4   (0x0004)  
	TArray<TEnumAsByte>                                ObjectTypesToAffect;                                        // 0x02B8   (0x0010)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x02C8   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.RadialForceComponent.RemoveObjectTypeToAffect
	void RemoveObjectTypeToAffect(TEnumAsByte<EObjectTypeQuery> ObjectType);                                                 // [0x4d96080] Native|Public|BlueprintCallable 
	// Function /Script/Engine.RadialForceComponent.FireImpulse
	void FireImpulse();                                                                                                      // [0x3d76e50] Native|Public|BlueprintCallable 
	// Function /Script/Engine.RadialForceComponent.AddObjectTypeToAffect
	void AddObjectTypeToAffect(TEnumAsByte<EObjectTypeQuery> ObjectType);                                                    // [0x4d94c20] Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.PhysicsFieldComponent
/// Size: 0x00A0 (0x0002A0 - 0x000340)
class UPhysicsFieldComponent : public USceneComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0xA0];                                      // 0x02A0   (0x00A0)  MISSED
};

/// Class /Script/Engine.PhysicsFieldStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UPhysicsFieldStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.PlatformInputDeviceMapperLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UPlatformInputDeviceMapperLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.PlayerStartPIE
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class APlayerStartPIE : public APlayerStart
{ 
public:
};

/// Class /Script/Engine.PostProcessVolume
/// Size: 0x06F8 (0x0002C8 - 0x0009C0)
class APostProcessVolume : public AVolume
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x02C8   (0x0008)  MISSED
	FPostProcessSettings                               Settings;                                                   // 0x02D0   (0x06E0)  
	float                                              Priority;                                                   // 0x09B0   (0x0004)  
	float                                              BlendRadius;                                                // 0x09B4   (0x0004)  
	float                                              BlendWeight;                                                // 0x09B8   (0x0004)  
	bool                                               bEnabled : 1;                                               // 0x09BC:0 (0x0001)  
	bool                                               bUnbound : 1;                                               // 0x09BC:1 (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x09BD   (0x0003)  MISSED


	/// Functions
	// Function /Script/Engine.PostProcessVolume.AddOrUpdateBlendable
	void AddOrUpdateBlendable(TScriptInterface<Class> InBlendableObject, float InWeight);                                    // [0x4dc4ff0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/Engine.PrecomputedVisibilityVolume
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class APrecomputedVisibilityVolume : public AVolume
{ 
public:
};

/// Class /Script/Engine.PrimaryAssetLabel
/// Size: 0x0038 (0x000030 - 0x000068)
class UPrimaryAssetLabel : public UPrimaryDataAsset
{ 
public:
	FPrimaryAssetRules                                 Rules;                                                      // 0x0030   (0x000C)  
	bool                                               bLabelAssetsInMyDirectory : 1;                              // 0x003C:0 (0x0001)  
	bool                                               bIsRuntimeLabel : 1;                                        // 0x003C:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x003D   (0x0003)  MISSED
	TArray<TWeakObjectPtr>                             ExplicitAssets;                                             // 0x0040   (0x0010)  
	TArray<TWeakObjectPtr>                             ExplicitBlueprints;                                         // 0x0050   (0x0010)  
	FCollectionReference                               AssetCollection;                                            // 0x0060   (0x0008)  
};

/// Class /Script/Engine.HealthSnapshotBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UHealthSnapshotBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.ProxyLODMeshSimplificationSettings
/// Size: 0x0008 (0x000038 - 0x000040)
class UProxyLODMeshSimplificationSettings : public UDeveloperSettings
{ 
public:
	FName                                              ProxyLODMeshReductionModuleName;                            // 0x0038   (0x0008)  
};

/// Class /Script/Engine.RectLight
/// Size: 0x0008 (0x0002A0 - 0x0002A8)
class ARectLight : public ALight
{ 
public:
	URectLightComponent*                               RectLightComponent;                                         // 0x02A0   (0x0008)  
};

/// Class /Script/Engine.RendererSettings
/// Size: 0x01A0 (0x000038 - 0x0001D8)
class URendererSettings : public UDeveloperSettings
{ 
public:
	TEnumAsByte<EMobileShadingPath>                    MobileShadingPath;                                          // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0039   (0x0003)  MISSED
	bool                                               bMobileSupportGPUScene : 1;                                 // 0x003C:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x003D   (0x0003)  MISSED
	TEnumAsByte<EMobileAntiAliasingMethod>             MobileAntiAliasing;                                         // 0x0040   (0x0001)  
	TEnumAsByte<EMobileFloatPrecisionMode>             MobileFloatPrecisionMode;                                   // 0x0041   (0x0001)  
	unsigned char                                      UnknownData02_5[0x2];                                       // 0x0042   (0x0002)  MISSED
	bool                                               bMobileAllowDitheredLODTransition : 1;                      // 0x0044:0 (0x0001)  
	bool                                               bMobileVirtualTextures : 1;                                 // 0x0044:1 (0x0001)  
	bool                                               bDiscardUnusedQualityLevels : 1;                            // 0x0044:2 (0x0001)  
	unsigned char                                      UnknownData03_4[0x3];                                       // 0x0045   (0x0003)  MISSED
	TEnumAsByte<EShaderCompressionFormat>              ShaderCompressionFormat;                                    // 0x0048   (0x0001)  
	unsigned char                                      UnknownData04_5[0x3];                                       // 0x0049   (0x0003)  MISSED
	bool                                               bOcclusionCulling : 1;                                      // 0x004C:0 (0x0001)  
	unsigned char                                      UnknownData05_4[0x3];                                       // 0x004D   (0x0003)  MISSED
	float                                              MinScreenRadiusForLights;                                   // 0x0050   (0x0004)  
	float                                              MinScreenRadiusForEarlyZPass;                               // 0x0054   (0x0004)  
	float                                              MinScreenRadiusForCSMdepth;                                 // 0x0058   (0x0004)  
	bool                                               bPrecomputedVisibilityWarning : 1;                          // 0x005C:0 (0x0001)  
	bool                                               bTextureStreaming : 1;                                      // 0x005C:1 (0x0001)  
	bool                                               bUseDXT5NormalMaps : 1;                                     // 0x005C:2 (0x0001)  
	bool                                               bVirtualTextures : 1;                                       // 0x005C:3 (0x0001)  
	bool                                               bVirtualTextureEnableAutoImport : 1;                        // 0x005C:4 (0x0001)  
	bool                                               bVirtualTexturedLightmaps : 1;                              // 0x005C:5 (0x0001)  
	bool                                               bVirtualTextureAnisotropicFiltering : 1;                    // 0x005C:6 (0x0001)  
	bool                                               bEnableVirtualTextureOpacityMask : 1;                       // 0x005C:7 (0x0001)  
	unsigned char                                      UnknownData06_4[0x3];                                       // 0x005D   (0x0003)  MISSED
	uint32_t                                           VirtualTextureTileSize;                                     // 0x0060   (0x0004)  
	uint32_t                                           VirtualTextureTileBorderSize;                               // 0x0064   (0x0004)  
	uint32_t                                           VirtualTextureFeedbackFactor;                               // 0x0068   (0x0004)  
	TEnumAsByte<EWorkingColorSpace>                    WorkingColorSpaceChoice;                                    // 0x006C   (0x0001)  
	unsigned char                                      UnknownData07_5[0x3];                                       // 0x006D   (0x0003)  MISSED
	FVector2D                                          RedChromaticityCoordinate;                                  // 0x0070   (0x0010)  
	FVector2D                                          GreenChromaticityCoordinate;                                // 0x0080   (0x0010)  
	FVector2D                                          BlueChromaticityCoordinate;                                 // 0x0090   (0x0010)  
	FVector2D                                          WhiteChromaticityCoordinate;                                // 0x00A0   (0x0010)  
	bool                                               bClearCoatEnableSecondNormal : 1;                           // 0x00B0:0 (0x0001)  
	unsigned char                                      UnknownData08_4[0x3];                                       // 0x00B1   (0x0003)  MISSED
	TEnumAsByte<EDynamicGlobalIlluminationMethod>      DynamicGlobalIllumination;                                  // 0x00B4   (0x0001)  
	TEnumAsByte<EReflectionMethod>                     Reflections;                                                // 0x00B5   (0x0001)  
	unsigned char                                      UnknownData09_5[0x2];                                       // 0x00B6   (0x0002)  MISSED
	int32_t                                            ReflectionCaptureResolution;                                // 0x00B8   (0x0004)  
	bool                                               ReflectionEnvironmentLightmapMixBasedOnRoughness : 1;       // 0x00BC:0 (0x0001)  
	bool                                               bUseHardwareRayTracingForLumen : 1;                         // 0x00BC:1 (0x0001)  
	unsigned char                                      UnknownData10_4[0x3];                                       // 0x00BD   (0x0003)  MISSED
	ELumenRayLightingMode                              LumenRayLightingMode;                                       // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData11_5[0x3];                                       // 0x00C1   (0x0003)  MISSED
	bool                                               LumenFrontLayerTranslucencyReflections : 1;                 // 0x00C4:0 (0x0001)  
	unsigned char                                      UnknownData12_4[0x3];                                       // 0x00C5   (0x0003)  MISSED
	TEnumAsByte<ELumenSoftwareTracingMode>             LumenSoftwareTracingMode;                                   // 0x00C8   (0x0001)  
	TEnumAsByte<EShadowMapMethod>                      ShadowMapMethod;                                            // 0x00C9   (0x0001)  
	unsigned char                                      UnknownData13_5[0x2];                                       // 0x00CA   (0x0002)  MISSED
	bool                                               bEnableRayTracing : 1;                                      // 0x00CC:0 (0x0001)  
	bool                                               bEnableRayTracingShadows : 1;                               // 0x00CC:1 (0x0001)  
	bool                                               bEnableRayTracingSkylight : 1;                              // 0x00CC:2 (0x0001)  
	bool                                               bEnableRayTracingTextureLOD : 1;                            // 0x00CC:3 (0x0001)  
	bool                                               bEnablePathTracing : 1;                                     // 0x00CC:4 (0x0001)  
	bool                                               bGenerateMeshDistanceFields : 1;                            // 0x00CC:5 (0x0001)  
	unsigned char                                      UnknownData14_4[0x3];                                       // 0x00CD   (0x0003)  MISSED
	float                                              DistanceFieldVoxelDensity;                                  // 0x00D0   (0x0004)  
	bool                                               bNanite : 1;                                                // 0x00D4:0 (0x0001)  
	bool                                               bAllowStaticLighting : 1;                                   // 0x00D4:1 (0x0001)  
	bool                                               bUseNormalMapsForStaticLighting : 1;                        // 0x00D4:2 (0x0001)  
	bool                                               bForwardShading : 1;                                        // 0x00D4:3 (0x0001)  
	bool                                               bVertexFoggingForOpaque : 1;                                // 0x00D4:4 (0x0001)  
	bool                                               bSeparateTranslucency : 1;                                  // 0x00D4:5 (0x0001)  
	unsigned char                                      UnknownData15_4[0x3];                                       // 0x00D5   (0x0003)  MISSED
	TEnumAsByte<ETranslucentSortPolicy>                TranslucentSortPolicy;                                      // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData16_5[0x7];                                       // 0x00D9   (0x0007)  MISSED
	FVector                                            TranslucentSortAxis;                                        // 0x00E0   (0x0018)  
	TEnumAsByte<EFixedFoveationLevels>                 HMDFixedFoveationLevel;                                     // 0x00F8   (0x0001)  
	unsigned char                                      UnknownData17_5[0x3];                                       // 0x00F9   (0x0003)  MISSED
	bool                                               bHMDFixedFoveationDynamic : 1;                              // 0x00FC:0 (0x0001)  
	unsigned char                                      UnknownData18_4[0x3];                                       // 0x00FD   (0x0003)  MISSED
	TEnumAsByte<ECustomDepthStencil>                   CustomDepthStencil;                                         // 0x0100   (0x0001)  
	unsigned char                                      UnknownData19_5[0x3];                                       // 0x0101   (0x0003)  MISSED
	bool                                               bCustomDepthTaaJitter : 1;                                  // 0x0104:0 (0x0001)  
	unsigned char                                      UnknownData20_4[0x3];                                       // 0x0105   (0x0003)  MISSED
	TEnumAsByte<EAlphaChannelMode>                     bEnableAlphaChannelInPostProcessing;                        // 0x0108   (0x0001)  
	unsigned char                                      UnknownData21_5[0x3];                                       // 0x0109   (0x0003)  MISSED
	bool                                               bDefaultFeatureBloom : 1;                                   // 0x010C:0 (0x0001)  
	bool                                               bDefaultFeatureAmbientOcclusion : 1;                        // 0x010C:1 (0x0001)  
	bool                                               bDefaultFeatureAmbientOcclusionStaticFraction : 1;          // 0x010C:2 (0x0001)  
	bool                                               bDefaultFeatureAutoExposure : 1;                            // 0x010C:3 (0x0001)  
	unsigned char                                      UnknownData22_4[0x3];                                       // 0x010D   (0x0003)  MISSED
	TEnumAsByte<EAutoExposureMethodUI>                 DefaultFeatureAutoExposure;                                 // 0x0110   (0x0001)  
	unsigned char                                      UnknownData23_5[0x3];                                       // 0x0111   (0x0003)  MISSED
	float                                              DefaultFeatureAutoExposureBias;                             // 0x0114   (0x0004)  
	bool                                               bExtendDefaultLuminanceRangeInAutoExposureSettings : 1;     // 0x0118:0 (0x0001)  
	bool                                               bDefaultFeatureMotionBlur : 1;                              // 0x0118:1 (0x0001)  
	bool                                               bDefaultFeatureLensFlare : 1;                               // 0x0118:2 (0x0001)  
	bool                                               bTemporalUpsampling : 1;                                    // 0x0118:3 (0x0001)  
	unsigned char                                      UnknownData24_4[0x3];                                       // 0x0119   (0x0003)  MISSED
	TEnumAsByte<EAntiAliasingMethod>                   DefaultFeatureAntiAliasing;                                 // 0x011C   (0x0001)  
	TEnumAsByte<ECompositingSampleCount>               MSAASampleCount;                                            // 0x011D   (0x0001)  
	ELightUnits                                        DefaultLightUnits;                                          // 0x011E   (0x0001)  
	TEnumAsByte<EDefaultBackBufferPixelFormat>         DefaultBackBufferPixelFormat;                               // 0x011F   (0x0001)  
	bool                                               bRenderUnbuiltPreviewShadowsInGame : 1;                     // 0x0120:0 (0x0001)  
	bool                                               bStencilForLODDither : 1;                                   // 0x0120:1 (0x0001)  
	unsigned char                                      UnknownData25_4[0x3];                                       // 0x0121   (0x0003)  MISSED
	TEnumAsByte<EEarlyZPass>                           EarlyZPass;                                                 // 0x0124   (0x0001)  
	unsigned char                                      UnknownData26_5[0x3];                                       // 0x0125   (0x0003)  MISSED
	bool                                               bEarlyZPassOnlyMaterialMasking : 1;                         // 0x0128:0 (0x0001)  
	bool                                               bEnableCSMCaching : 1;                                      // 0x0128:1 (0x0001)  
	bool                                               bDBuffer : 1;                                               // 0x0128:2 (0x0001)  
	unsigned char                                      UnknownData27_4[0x3];                                       // 0x0129   (0x0003)  MISSED
	TEnumAsByte<EClearSceneOptions>                    ClearSceneMethod;                                           // 0x012C   (0x0001)  
	TEnumAsByte<EVelocityOutputPass>                   VelocityPass;                                               // 0x012D   (0x0001)  
	TEnumAsByte<EVertexDeformationOutputsVelocity>     VertexDeformationOutputsVelocity;                           // 0x012E   (0x0001)  
	unsigned char                                      UnknownData28_5[0x1];                                       // 0x012F   (0x0001)  MISSED
	bool                                               bSelectiveBasePassOutputs : 1;                              // 0x0130:0 (0x0001)  
	bool                                               bDefaultParticleCutouts : 1;                                // 0x0130:1 (0x0001)  
	unsigned char                                      UnknownData29_4[0x3];                                       // 0x0131   (0x0003)  MISSED
	int32_t                                            GPUSimulationTextureSizeX;                                  // 0x0134   (0x0004)  
	int32_t                                            GPUSimulationTextureSizeY;                                  // 0x0138   (0x0004)  
	bool                                               bGlobalClipPlane : 1;                                       // 0x013C:0 (0x0001)  
	unsigned char                                      UnknownData30_4[0x3];                                       // 0x013D   (0x0003)  MISSED
	TEnumAsByte<EGBufferFormat>                        GBufferFormat;                                              // 0x0140   (0x0001)  
	unsigned char                                      UnknownData31_5[0x3];                                       // 0x0141   (0x0003)  MISSED
	bool                                               bUseGPUMorphTargets : 1;                                    // 0x0144:0 (0x0001)  
	bool                                               bNvidiaAftermathEnabled : 1;                                // 0x0144:1 (0x0001)  
	bool                                               bMultiView : 1;                                             // 0x0144:2 (0x0001)  
	bool                                               bMobilePostProcessing : 1;                                  // 0x0144:3 (0x0001)  
	bool                                               bMobileMultiView : 1;                                       // 0x0144:4 (0x0001)  
	bool                                               bMobileUseHWsRGBEncoding : 1;                               // 0x0144:5 (0x0001)  
	bool                                               bRoundRobinOcclusion : 1;                                   // 0x0144:6 (0x0001)  
	bool                                               bMeshStreaming : 1;                                         // 0x0144:7 (0x0001)  
	bool                                               bEnableHeterogeneousVolumes : 1;                            // 0x0145:0 (0x0001)  
	unsigned char                                      UnknownData32_4[0x2];                                       // 0x0146   (0x0002)  MISSED
	float                                              WireframeCullThreshold;                                     // 0x0148   (0x0004)  
	bool                                               bSupportStationarySkylight : 1;                             // 0x014C:0 (0x0001)  
	bool                                               bSupportLowQualityLightmaps : 1;                            // 0x014C:1 (0x0001)  
	bool                                               bSupportPointLightWholeSceneShadows : 1;                    // 0x014C:2 (0x0001)  
	bool                                               bSupportSkyAtmosphere : 1;                                  // 0x014C:3 (0x0001)  
	bool                                               bSupportSkyAtmosphereAffectsHeightFog : 1;                  // 0x014C:4 (0x0001)  
	bool                                               bSupportCloudShadowOnForwardLitTranslucent : 1;             // 0x014C:5 (0x0001)  
	bool                                               bSupportTranslucentPerObjectShadow : 1;                     // 0x014C:6 (0x0001)  
	bool                                               bSupportCloudShadowOnSingleLayerWater : 1;                  // 0x014C:7 (0x0001)  
	bool                                               bEnableStrata : 1;                                          // 0x014D:0 (0x0001)  
	unsigned char                                      UnknownData33_4[0x2];                                       // 0x014E   (0x0002)  MISSED
	uint32_t                                           StrataBytePerPixel;                                         // 0x0150   (0x0004)  
	bool                                               StrataOpaqueMaterialRoughRefraction : 1;                    // 0x0154:0 (0x0001)  
	bool                                               StrataDebugAdvancedVisualizationShaders : 1;                // 0x0154:1 (0x0001)  
	bool                                               bMaterialRoughDiffuse : 1;                                  // 0x0154:2 (0x0001)  
	bool                                               bMaterialEnergyConservation : 1;                            // 0x0154:3 (0x0001)  
	bool                                               bOrderedIndependentTransparencyEnable : 1;                  // 0x0154:4 (0x0001)  
	bool                                               bSupportSkinCacheShaders : 1;                               // 0x0154:5 (0x0001)  
	bool                                               bSkipCompilingGPUSkinVF : 1;                                // 0x0154:6 (0x0001)  
	unsigned char                                      UnknownData34_4[0x3];                                       // 0x0155   (0x0003)  MISSED
	ESkinCacheDefaultBehavior                          DefaultSkinCacheBehavior;                                   // 0x0158   (0x0001)  
	unsigned char                                      UnknownData35_5[0x3];                                       // 0x0159   (0x0003)  MISSED
	float                                              SkinCacheSceneMemoryLimitInMB;                              // 0x015C   (0x0004)  
	bool                                               bMobileEnableStaticAndCSMShadowReceivers : 1;               // 0x0160:0 (0x0001)  
	bool                                               bMobileEnableMovableLightCSMShaderCulling : 1;              // 0x0160:1 (0x0001)  
	bool                                               bMobileForwardEnableLocalLights : 1;                        // 0x0160:2 (0x0001)  
	bool                                               bMobileForwardEnableClusteredReflections : 1;               // 0x0160:3 (0x0001)  
	bool                                               bMobileEnableNoPrecomputedLightingCSMShader : 1;            // 0x0160:4 (0x0001)  
	bool                                               bMobileAllowDistanceFieldShadows : 1;                       // 0x0160:5 (0x0001)  
	bool                                               bMobileAllowMovableDirectionalLights : 1;                   // 0x0160:6 (0x0001)  
	bool                                               bMobileAllowMovableSpotlightShadows : 1;                    // 0x0160:7 (0x0001)  
	bool                                               bSupport16BitBoneIndex : 1;                                 // 0x0161:0 (0x0001)  
	bool                                               bGPUSkinLimit2BoneInfluences : 1;                           // 0x0161:1 (0x0001)  
	bool                                               bSupportDepthOnlyIndexBuffers : 1;                          // 0x0161:2 (0x0001)  
	bool                                               bSupportReversedIndexBuffers : 1;                           // 0x0161:3 (0x0001)  
	bool                                               bMobileAmbientOcclusion : 1;                                // 0x0161:4 (0x0001)  
	bool                                               bUseUnlimitedBoneInfluences : 1;                            // 0x0161:5 (0x0001)  
	unsigned char                                      UnknownData36_4[0x2];                                       // 0x0162   (0x0002)  MISSED
	int32_t                                            UnlimitedBonInfluencesThreshold;                            // 0x0164   (0x0004)  
	FPerPlatformInt                                    MaxSkinBones;                                               // 0x0168   (0x0004)  
	TEnumAsByte<EMobilePlanarReflectionMode>           MobilePlanarReflectionMode;                                 // 0x016C   (0x0001)  
	unsigned char                                      UnknownData37_5[0x3];                                       // 0x016D   (0x0003)  MISSED
	bool                                               bMobileSupportsGen4TAA : 1;                                 // 0x0170:0 (0x0001)  
	unsigned char                                      UnknownData38_4[0x3];                                       // 0x0171   (0x0003)  MISSED
	FPerPlatformBool                                   bStreamSkeletalMeshLODs;                                    // 0x0174   (0x0001)  
	FPerPlatformBool                                   bDiscardSkeletalMeshOptionalLODs;                           // 0x0175   (0x0001)  
	unsigned char                                      UnknownData39_5[0x2];                                       // 0x0176   (0x0002)  MISSED
	FSoftObjectPath                                    VisualizeCalibrationColorMaterialPath;                      // 0x0178   (0x0020)  
	FSoftObjectPath                                    VisualizeCalibrationCustomMaterialPath;                     // 0x0198   (0x0020)  
	FSoftObjectPath                                    VisualizeCalibrationGrayscaleMaterialPath;                  // 0x01B8   (0x0020)  
};

/// Class /Script/Engine.RendererOverrideSettings
/// Size: 0x0008 (0x000038 - 0x000040)
class URendererOverrideSettings : public UDeveloperSettings
{ 
public:
	bool                                               bSupportAllShaderPermutations : 1;                          // 0x0038:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Class /Script/Engine.SubsurfaceProfile
/// Size: 0x00A0 (0x000028 - 0x0000C8)
class USubsurfaceProfile : public UObject
{ 
public:
	FSubsurfaceProfileStruct                           Settings;                                                   // 0x0028   (0x009C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00C4   (0x0004)  MISSED
};

/// Class /Script/Engine.ReplayNetConnection
/// Size: 0x0A70 (0x003310 - 0x003D80)
class UReplayNetConnection : public UNetConnection
{ 
public:
	unsigned char                                      UnknownData00_1[0xA70];                                     // 0x3310   (0x0A70)  MISSED
};

/// Class /Script/Engine.ReplaySubsystem
/// Size: 0x0010 (0x000030 - 0x000040)
class UReplaySubsystem : public UGameInstanceSubsystem
{ 
public:
	bool                                               bLoadDefaultMapOnStop;                                      // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0xF];                                       // 0x0031   (0x000F)  MISSED


	/// Functions
	// Function /Script/Engine.ReplaySubsystem.RequestCheckpoint
	void RequestCheckpoint();                                                                                                // [0x4e62870] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.ReplaySubsystem.IsRecording
	bool IsRecording();                                                                                                      // [0x4e62800] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ReplaySubsystem.IsPlaying
	bool IsPlaying();                                                                                                        // [0x4e627b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ReplaySubsystem.GetReplayCurrentTime
	float GetReplayCurrentTime();                                                                                            // [0x4e62720] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.ReplaySubsystem.GetActiveReplayName
	FString GetActiveReplayName();                                                                                           // [0x4e62610] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.ReverbEffect
/// Size: 0x0038 (0x000028 - 0x000060)
class UReverbEffect : public UObject
{ 
public:
	bool                                               bBypassEarlyReflections;                                    // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	float                                              ReflectionsDelay;                                           // 0x002C   (0x0004)  
	float                                              GainHF;                                                     // 0x0030   (0x0004)  
	float                                              ReflectionsGain;                                            // 0x0034   (0x0004)  
	bool                                               bBypassLateReflections;                                     // 0x0038   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0039   (0x0003)  MISSED
	float                                              LateDelay;                                                  // 0x003C   (0x0004)  
	float                                              DecayTime;                                                  // 0x0040   (0x0004)  
	float                                              Density;                                                    // 0x0044   (0x0004)  
	float                                              Diffusion;                                                  // 0x0048   (0x0004)  
	float                                              AirAbsorptionGainHF;                                        // 0x004C   (0x0004)  
	float                                              DecayHFRatio;                                               // 0x0050   (0x0004)  
	float                                              LateGain;                                                   // 0x0054   (0x0004)  
	float                                              Gain;                                                       // 0x0058   (0x0004)  
	float                                              RoomRolloffFactor;                                          // 0x005C   (0x0004)  
};

/// Class /Script/Engine.SCS_Node
/// Size: 0x00B0 (0x000028 - 0x0000D8)
class USCS_Node : public UObject
{ 
public:
	UClass*                                            ComponentClass;                                             // 0x0028   (0x0008)  
	UActorComponent*                                   ComponentTemplate;                                          // 0x0030   (0x0008)  
	FBlueprintCookedComponentInstancingData            CookedComponentInstancingData;                              // 0x0038   (0x0048)  
	FName                                              AttachToName;                                               // 0x0080   (0x0008)  
	FName                                              ParentComponentOrVariableName;                              // 0x0088   (0x0008)  
	FName                                              ParentComponentOwnerClassName;                              // 0x0090   (0x0008)  
	bool                                               bIsParentComponentNative;                                   // 0x0098   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0099   (0x0007)  MISSED
	TArray<USCS_Node*>                                 ChildNodes;                                                 // 0x00A0   (0x0010)  
	TArray<FBPVariableMetaDataEntry>                   MetaDataArray;                                              // 0x00B0   (0x0010)  
	FGuid                                              VariableGuid;                                               // 0x00C0   (0x0010)  
	FName                                              InternalVariableName;                                       // 0x00D0   (0x0008)  
};

/// Class /Script/Engine.SimpleConstructionScript
/// Size: 0x0078 (0x000028 - 0x0000A0)
class USimpleConstructionScript : public UObject
{ 
public:
	TArray<USCS_Node*>                                 RootNodes;                                                  // 0x0028   (0x0010)  
	TArray<USCS_Node*>                                 AllNodes;                                                   // 0x0038   (0x0010)  
	USCS_Node*                                         DefaultSceneRootNode;                                       // 0x0048   (0x0008)  
	unsigned char                                      UnknownData00_6[0x50];                                      // 0x0050   (0x0050)  MISSED
};

/// Class /Script/Engine.SkeletalMesh
/// Size: 0x0408 (0x0000D8 - 0x0004E0)
class USkeletalMesh : public USkinnedAsset
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x00D8   (0x0020)  MISSED
	USkeleton*                                         Skeleton;                                                   // 0x00F8   (0x0008)  
	FBoxSphereBounds                                   ImportedBounds;                                             // 0x0100   (0x0038)  
	FBoxSphereBounds                                   ExtendedBounds;                                             // 0x0138   (0x0038)  
	FVector                                            PositiveBoundsExtension;                                    // 0x0170   (0x0018)  
	FVector                                            NegativeBoundsExtension;                                    // 0x0188   (0x0018)  
	TArray<FSkeletalMaterial>                          Materials;                                                  // 0x01A0   (0x0010)  
	TArray<FBoneMirrorInfo>                            SkelMirrorTable;                                            // 0x01B0   (0x0010)  
	TArray<FSkeletalMeshLODInfo>                       LODInfo;                                                    // 0x01C0   (0x0010)  
	unsigned char                                      UnknownData01_5[0x50];                                      // 0x01D0   (0x0050)  MISSED
	FPerQualityLevelInt                                MinQualityLevelLOD;                                         // 0x0220   (0x0068)  
	FPerPlatformInt                                    MinLOD;                                                     // 0x0288   (0x0004)  
	FPerPlatformBool                                   DisableBelowMinLodStripping;                                // 0x028C   (0x0001)  
	TEnumAsByte<EAxis>                                 SkelMirrorAxis;                                             // 0x028D   (0x0001)  
	TEnumAsByte<EAxis>                                 SkelMirrorFlipAxis;                                         // 0x028E   (0x0001)  
	bool                                               bUseFullPrecisionUVs : 1;                                   // 0x028F:0 (0x0001)  
	bool                                               bUseHighPrecisionTangentBasis : 1;                          // 0x028F:1 (0x0001)  
	bool                                               bHasBeenSimplified : 1;                                     // 0x028F:2 (0x0001)  
	bool                                               bHasVertexColors : 1;                                       // 0x028F:3 (0x0001)  
	unsigned char                                      UnknownBit02 : 1;                                           // 0x028F:4 (0x0001)  MISSED
	bool                                               bEnablePerPolyCollision : 1;                                // 0x028F:5 (0x0001)  
	UBodySetup*                                        BodySetup;                                                  // 0x0290   (0x0008)  
	UPhysicsAsset*                                     PhysicsAsset;                                               // 0x0298   (0x0008)  
	UPhysicsAsset*                                     ShadowPhysicsAsset;                                         // 0x02A0   (0x0008)  
	TArray<UNodeMappingContainer*>                     NodeMappingData;                                            // 0x02A8   (0x0010)  
	bool                                               bSupportRayTracing : 1;                                     // 0x02B8:0 (0x0001)  
	unsigned char                                      UnknownData03_4[0x3];                                       // 0x02B9   (0x0003)  MISSED
	int32_t                                            RayTracingMinLOD;                                           // 0x02BC   (0x0004)  
	EClothLODBiasMode                                  ClothLODBiasMode;                                           // 0x02C0   (0x0001)  
	unsigned char                                      UnknownData04_5[0x7];                                       // 0x02C1   (0x0007)  MISSED
	TArray<UMorphTarget*>                              MorphTargets;                                               // 0x02C8   (0x0010)  
	unsigned char                                      UnknownData05_5[0x178];                                     // 0x02D8   (0x0178)  MISSED
	UClass*                                            PostProcessAnimBlueprint;                                   // 0x0450   (0x0008)  
	TArray<UClothingAssetBase*>                        MeshClothingAssets;                                         // 0x0458   (0x0010)  
	FSkeletalMeshSamplingInfo                          SamplingInfo;                                               // 0x0468   (0x0030)  
	TArray<UAssetUserData*>                            AssetUserData;                                              // 0x0498   (0x0010)  
	TArray<USkeletalMeshSocket*>                       Sockets;                                                    // 0x04A8   (0x0010)  
	unsigned char                                      UnknownData06_5[0x10];                                      // 0x04B8   (0x0010)  MISSED
	TArray<FSkinWeightProfileInfo>                     SkinWeightProfiles;                                         // 0x04C8   (0x0010)  
	UMeshDeformer*                                     DefaultMeshDeformer;                                        // 0x04D8   (0x0008)  


	/// Functions
	// Function /Script/Engine.SkeletalMesh.SetSkeleton
	void SetSkeleton(USkeleton* InSkeleton);                                                                                 // [0x4eb64b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMesh.SetMorphTargets
	void SetMorphTargets(TArray<UMorphTarget*>& InMorphTargets);                                                             // [0x4eb63b0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMesh.SetMinLODForQualityLevels
	void SetMinLODForQualityLevels(TMap<EPerQualityLevels, int32_t>& QualityLevelMinimumLODs, int32_t Default);              // [0x469c7d0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMesh.SetMeshClothingAssets
	void SetMeshClothingAssets(TArray<UClothingAssetBase*>& InMeshClothingAssets);                                           // [0x4eb62b0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMesh.SetMaterials
	void SetMaterials(TArray<FSkeletalMaterial>& InMaterials);                                                               // [0x4eb61e0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SkeletalMesh.SetLODSettings
	void SetLODSettings(USkeletalMeshLODSettings* InLODSettings);                                                            // [0x4eb6150] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMesh.SetDefaultAnimatingRig
	void SetDefaultAnimatingRig(TWeakObjectPtr<UObject*> InAnimatingRig);                                                    // [0x4eb5ff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SkeletalMesh.NumSockets
	int32_t NumSockets();                                                                                                    // [0x4eb5f80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.K2_GetAllMorphTargetNames
	TArray<FString> K2_GetAllMorphTargetNames();                                                                             // [0x4eb5dd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.IsSectionUsingCloth
	bool IsSectionUsingCloth(int32_t InSectionIndex, bool bCheckCorrespondingSections);                                      // [0x4eb5ca0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.GetSocketByIndex
	USkeletalMeshSocket* GetSocketByIndex(int32_t Index);                                                                    // [0x4eb5ba0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.GetSkeleton
	USkeleton* GetSkeleton();                                                                                                // [0x4eb5b70] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.GetShadowPhysicsAsset
	UPhysicsAsset* GetShadowPhysicsAsset();                                                                                  // [0x4eb5b40] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.GetPhysicsAsset
	UPhysicsAsset* GetPhysicsAsset();                                                                                        // [0x4eb5b10] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.GetNodeMappingData
	TArray<UNodeMappingContainer*> GetNodeMappingData();                                                                     // [0x4eb5a70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.GetNodeMappingContainer
	UNodeMappingContainer* GetNodeMappingContainer(UBlueprint* SourceAsset);                                                 // [0x4eb59d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.GetMorphTargetsPtrConv
	TArray<UMorphTarget*> GetMorphTargetsPtrConv();                                                                          // [0x4eb5900] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.GetMinLODForQualityLevels
	void GetMinLODForQualityLevels(TMap<EPerQualityLevels, int32_t>& QualityLevelMinimumLODs, int32_t& Default);             // [0x469c0b0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.GetMeshClothingAssets
	TArray<UClothingAssetBase*> GetMeshClothingAssets();                                                                     // [0x4eb5860] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.GetMaterials
	TArray<FSkeletalMaterial> GetMaterials();                                                                                // [0x4eb5820] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.GetLODSettings
	USkeletalMeshLODSettings* GetLODSettings();                                                                              // [0x4eb57e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.GetImportedBounds
	FBoxSphereBounds GetImportedBounds();                                                                                    // [0x4eb5760] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.GetDefaultAnimatingRig
	TWeakObjectPtr<UObject*> GetDefaultAnimatingRig();                                                                       // [0x4eb5650] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.GetBounds
	FBoxSphereBounds GetBounds();                                                                                            // [0x4eb55f0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.SkeletalMesh.FindSocketAndIndex
	USkeletalMeshSocket* FindSocketAndIndex(FName InSocketName, int32_t& OutIndex);                                          // [0x4eb5460] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.SkeletalMeshEditorData
/// Size: 0x0000 (0x000028 - 0x000028)
class USkeletalMeshEditorData : public UObject
{ 
public:
};

/// Class /Script/Engine.SkeletalMeshLODSettings
/// Size: 0x0088 (0x000030 - 0x0000B8)
class USkeletalMeshLODSettings : public UDataAsset
{ 
public:
	FPerQualityLevelInt                                MinQualityLevelLOD;                                         // 0x0030   (0x0068)  
	FPerPlatformInt                                    MinLOD;                                                     // 0x0098   (0x0004)  
	FPerPlatformBool                                   DisableBelowMinLodStripping;                                // 0x009C   (0x0001)  
	bool                                               bOverrideLODStreamingSettings;                              // 0x009D   (0x0001)  
	FPerPlatformBool                                   bSupportLODStreaming;                                       // 0x009E   (0x0001)  
	unsigned char                                      UnknownData00_5[0x1];                                       // 0x009F   (0x0001)  MISSED
	FPerPlatformInt                                    MaxNumStreamedLODs;                                         // 0x00A0   (0x0004)  
	FPerPlatformInt                                    MaxNumOptionalLODs;                                         // 0x00A4   (0x0004)  
	TArray<FSkeletalMeshLODGroupSettings>              LODGroups;                                                  // 0x00A8   (0x0010)  
};

/// Class /Script/Engine.SkeletalMeshSimplificationSettings
/// Size: 0x0008 (0x000038 - 0x000040)
class USkeletalMeshSimplificationSettings : public UDeveloperSettings
{ 
public:
	FName                                              SkeletalMeshReductionModuleName;                            // 0x0038   (0x0008)  
};

/// Class /Script/Engine.ButtonStyleAsset
/// Size: 0x03F8 (0x000028 - 0x000420)
class UButtonStyleAsset : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	FButtonStyle                                       ButtonStyle;                                                // 0x0030   (0x03F0)  
};

/// Class /Script/Engine.CheckBoxStyleAsset
/// Size: 0x0AD8 (0x000028 - 0x000B00)
class UCheckBoxStyleAsset : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	FCheckBoxStyle                                     CheckBoxStyle;                                              // 0x0030   (0x0AD0)  
};

/// Class /Script/Engine.SlateBrushAsset
/// Size: 0x00D8 (0x000028 - 0x000100)
class USlateBrushAsset : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	FSlateBrush                                        Brush;                                                      // 0x0030   (0x00D0)  
};

/// Class /Script/Engine.SlateTextureAtlasInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class USlateTextureAtlasInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.SoundClass
/// Size: 0x01E0 (0x000028 - 0x000208)
class USoundClass : public UObject
{ 
public:
	FSoundClassProperties                              Properties;                                                 // 0x0028   (0x01B8)  
	TArray<USoundClass*>                               ChildClasses;                                               // 0x01E0   (0x0010)  
	TArray<FPassiveSoundMixModifier>                   PassiveSoundMixModifiers;                                   // 0x01F0   (0x0010)  
	USoundClass*                                       ParentClass;                                                // 0x0200   (0x0008)  
};

/// Class /Script/Engine.SoundConcurrency
/// Size: 0x0020 (0x000028 - 0x000048)
class USoundConcurrency : public UObject
{ 
public:
	FSoundConcurrencySettings                          Concurrency;                                                // 0x0028   (0x0020)  
};

/// Class /Script/Engine.SoundCue
/// Size: 0x03F0 (0x000168 - 0x000558)
class USoundCue : public USoundBase
{ 
public:
	USoundNode*                                        FirstNode;                                                  // 0x0168   (0x0008)  
	float                                              VolumeMultiplier;                                           // 0x0170   (0x0004)  
	float                                              PitchMultiplier;                                            // 0x0174   (0x0004)  
	FSoundAttenuationSettings                          AttenuationOverrides;                                       // 0x0178   (0x03C8)  
	float                                              SubtitlePriority;                                           // 0x0540   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x0544   (0x0004)  MISSED
	bool                                               bPrimeOnLoad : 1;                                           // 0x0548:0 (0x0001)  
	bool                                               bOverrideAttenuation : 1;                                   // 0x0548:1 (0x0001)  
	bool                                               bExcludeFromRandomNodeBranchCulling : 1;                    // 0x0548:2 (0x0001)  
	bool                                               bHasPlayWhenSilent : 1;                                     // 0x0548:3 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0549   (0x0003)  MISSED
	int32_t                                            CookedQualityIndex;                                         // 0x054C   (0x0004)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0550   (0x0008)  MISSED
};

/// Class /Script/Engine.SoundMix
/// Size: 0x0068 (0x000028 - 0x000090)
class USoundMix : public UObject
{ 
public:
	bool                                               bApplyEQ : 1;                                               // 0x0028:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0029   (0x0003)  MISSED
	float                                              EQPriority;                                                 // 0x002C   (0x0004)  
	FAudioEQEffect                                     EQSettings;                                                 // 0x0030   (0x0040)  
	TArray<FSoundClassAdjuster>                        SoundClassEffects;                                          // 0x0070   (0x0010)  
	float                                              InitialDelay;                                               // 0x0080   (0x0004)  
	float                                              FadeInTime;                                                 // 0x0084   (0x0004)  
	float                                              Duration;                                                   // 0x0088   (0x0004)  
	float                                              FadeOutTime;                                                // 0x008C   (0x0004)  
};

/// Class /Script/Engine.SoundNodeAssetReferencer
/// Size: 0x0000 (0x000048 - 0x000048)
class USoundNodeAssetReferencer : public USoundNode
{ 
public:
};

/// Class /Script/Engine.SoundNodeAttenuation
/// Size: 0x03D8 (0x000048 - 0x000420)
class USoundNodeAttenuation : public USoundNode
{ 
public:
	USoundAttenuation*                                 AttenuationSettings;                                        // 0x0048   (0x0008)  
	FSoundAttenuationSettings                          AttenuationOverrides;                                       // 0x0050   (0x03C8)  
	bool                                               bOverrideAttenuation : 1;                                   // 0x0418:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0419   (0x0007)  MISSED
};

/// Class /Script/Engine.SoundNodeBranch
/// Size: 0x0008 (0x000048 - 0x000050)
class USoundNodeBranch : public USoundNode
{ 
public:
	FName                                              BoolParameterName;                                          // 0x0048   (0x0008)  
};

/// Class /Script/Engine.SoundNodeConcatenator
/// Size: 0x0010 (0x000048 - 0x000058)
class USoundNodeConcatenator : public USoundNode
{ 
public:
	TArray<float>                                      InputVolume;                                                // 0x0048   (0x0010)  
};

/// Class /Script/Engine.SoundNodeDelay
/// Size: 0x0008 (0x000048 - 0x000050)
class USoundNodeDelay : public USoundNode
{ 
public:
	float                                              DelayMin;                                                   // 0x0048   (0x0004)  
	float                                              DelayMax;                                                   // 0x004C   (0x0004)  
};

/// Class /Script/Engine.SoundNodeDialoguePlayer
/// Size: 0x0028 (0x000048 - 0x000070)
class USoundNodeDialoguePlayer : public USoundNode
{ 
public:
	FDialogueWaveParameter                             DialogueWaveParameter;                                      // 0x0048   (0x0020)  
	bool                                               bLooping : 1;                                               // 0x0068:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0069   (0x0007)  MISSED
};

/// Class /Script/Engine.SoundNodeDistanceCrossFade
/// Size: 0x0010 (0x000048 - 0x000058)
class USoundNodeDistanceCrossFade : public USoundNode
{ 
public:
	TArray<FDistanceDatum>                             CrossFadeInput;                                             // 0x0048   (0x0010)  
};

/// Class /Script/Engine.SoundNodeDoppler
/// Size: 0x0010 (0x000048 - 0x000058)
class USoundNodeDoppler : public USoundNode
{ 
public:
	float                                              DopplerIntensity;                                           // 0x0048   (0x0004)  
	bool                                               bUseSmoothing;                                              // 0x004C   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x004D   (0x0003)  MISSED
	float                                              SmoothingInterpSpeed;                                       // 0x0050   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0054   (0x0004)  MISSED
};

/// Class /Script/Engine.SoundNodeEnveloper
/// Size: 0x0148 (0x000048 - 0x000190)
class USoundNodeEnveloper : public USoundNode
{ 
public:
	float                                              LoopStart;                                                  // 0x0048   (0x0004)  
	float                                              LoopEnd;                                                    // 0x004C   (0x0004)  
	float                                              DurationAfterLoop;                                          // 0x0050   (0x0004)  
	int32_t                                            LoopCount;                                                  // 0x0054   (0x0004)  
	bool                                               bLoopIndefinitely : 1;                                      // 0x0058:0 (0x0001)  
	bool                                               bLoop : 1;                                                  // 0x0058:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0059   (0x0007)  MISSED
	UDistributionFloatConstantCurve*                   VolumeInterpCurve;                                          // 0x0060   (0x0008)  
	UDistributionFloatConstantCurve*                   PitchInterpCurve;                                           // 0x0068   (0x0008)  
	FRuntimeFloatCurve                                 VolumeCurve;                                                // 0x0070   (0x0088)  
	FRuntimeFloatCurve                                 PitchCurve;                                                 // 0x00F8   (0x0088)  
	float                                              PitchMin;                                                   // 0x0180   (0x0004)  
	float                                              PitchMax;                                                   // 0x0184   (0x0004)  
	float                                              VolumeMin;                                                  // 0x0188   (0x0004)  
	float                                              VolumeMax;                                                  // 0x018C   (0x0004)  
};

/// Class /Script/Engine.SoundNodeGroupControl
/// Size: 0x0010 (0x000048 - 0x000058)
class USoundNodeGroupControl : public USoundNode
{ 
public:
	TArray<int32_t>                                    GroupSizes;                                                 // 0x0048   (0x0010)  
};

/// Class /Script/Engine.SoundNodeLooping
/// Size: 0x0008 (0x000048 - 0x000050)
class USoundNodeLooping : public USoundNode
{ 
public:
	int32_t                                            LoopCount;                                                  // 0x0048   (0x0004)  
	bool                                               bLoopIndefinitely : 1;                                      // 0x004C:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x004D   (0x0003)  MISSED
};

/// Class /Script/Engine.SoundNodeMature
/// Size: 0x0000 (0x000048 - 0x000048)
class USoundNodeMature : public USoundNode
{ 
public:
};

/// Class /Script/Engine.SoundNodeMixer
/// Size: 0x0010 (0x000048 - 0x000058)
class USoundNodeMixer : public USoundNode
{ 
public:
	TArray<float>                                      InputVolume;                                                // 0x0048   (0x0010)  
};

/// Class /Script/Engine.SoundNodeModulator
/// Size: 0x0010 (0x000048 - 0x000058)
class USoundNodeModulator : public USoundNode
{ 
public:
	float                                              PitchMin;                                                   // 0x0048   (0x0004)  
	float                                              PitchMax;                                                   // 0x004C   (0x0004)  
	float                                              VolumeMin;                                                  // 0x0050   (0x0004)  
	float                                              VolumeMax;                                                  // 0x0054   (0x0004)  
};

/// Class /Script/Engine.SoundNodeOscillator
/// Size: 0x0028 (0x000048 - 0x000070)
class USoundNodeOscillator : public USoundNode
{ 
public:
	bool                                               bModulateVolume : 1;                                        // 0x0048:0 (0x0001)  
	bool                                               bModulatePitch : 1;                                         // 0x0048:1 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0049   (0x0003)  MISSED
	float                                              AmplitudeMin;                                               // 0x004C   (0x0004)  
	float                                              AmplitudeMax;                                               // 0x0050   (0x0004)  
	float                                              FrequencyMin;                                               // 0x0054   (0x0004)  
	float                                              FrequencyMax;                                               // 0x0058   (0x0004)  
	float                                              OffsetMin;                                                  // 0x005C   (0x0004)  
	float                                              OffsetMax;                                                  // 0x0060   (0x0004)  
	float                                              CenterMin;                                                  // 0x0064   (0x0004)  
	float                                              CenterMax;                                                  // 0x0068   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x006C   (0x0004)  MISSED
};

/// Class /Script/Engine.SoundNodeParamCrossFade
/// Size: 0x0008 (0x000058 - 0x000060)
class USoundNodeParamCrossFade : public USoundNodeDistanceCrossFade
{ 
public:
	FName                                              ParamName;                                                  // 0x0058   (0x0008)  
};

/// Class /Script/Engine.SoundNodeQualityLevel
/// Size: 0x0008 (0x000048 - 0x000050)
class USoundNodeQualityLevel : public USoundNode
{ 
public:
	int32_t                                            CookedQualityLevelIndex;                                    // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED
};

/// Class /Script/Engine.SoundNodeRandom
/// Size: 0x0030 (0x000048 - 0x000078)
class USoundNodeRandom : public USoundNode
{ 
public:
	TArray<float>                                      Weights;                                                    // 0x0048   (0x0010)  
	TArray<bool>                                       HasBeenUsed;                                                // 0x0058   (0x0010)  
	int32_t                                            NumRandomUsed;                                              // 0x0068   (0x0004)  
	int32_t                                            PreselectAtLevelLoad;                                       // 0x006C   (0x0004)  
	bool                                               bShouldExcludeFromBranchCulling : 1;                        // 0x0070:0 (0x0001)  
	bool                                               bSoundCueExcludedFromBranchCulling : 1;                     // 0x0070:1 (0x0001)  
	bool                                               bRandomizeWithoutReplacement : 1;                           // 0x0070:2 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0071   (0x0007)  MISSED
};

/// Class /Script/Engine.SoundNodeSoundClass
/// Size: 0x0010 (0x000048 - 0x000058)
class USoundNodeSoundClass : public USoundNode
{ 
public:
	USoundClass*                                       SoundClassOverride;                                         // 0x0048   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0050   (0x0008)  MISSED
};

/// Class /Script/Engine.SoundNodeSwitch
/// Size: 0x0008 (0x000048 - 0x000050)
class USoundNodeSwitch : public USoundNode
{ 
public:
	FName                                              IntParameterName;                                           // 0x0048   (0x0008)  
};

/// Class /Script/Engine.SoundNodeWaveParam
/// Size: 0x0008 (0x000048 - 0x000050)
class USoundNodeWaveParam : public USoundNode
{ 
public:
	FName                                              WaveParameterName;                                          // 0x0048   (0x0008)  
};

/// Class /Script/Engine.SoundNodeWavePlayer
/// Size: 0x0040 (0x000048 - 0x000088)
class USoundNodeWavePlayer : public USoundNodeAssetReferencer
{ 
public:
	TWeakObjectPtr<USoundWave*>                        SoundWaveAssetPtr;                                          // 0x0048   (0x0030)  
	USoundWave*                                        SoundWave;                                                  // 0x0078   (0x0008)  
	unsigned char                                      UnknownBit00 : 1;                                           // 0x0080:0 (0x0001)  MISSED
	bool                                               bLooping : 1;                                               // 0x0080:1 (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0081   (0x0007)  MISSED
};

/// Class /Script/Engine.SoundSourceBus
/// Size: 0x0018 (0x000450 - 0x000468)
class USoundSourceBus : public USoundWave
{ 
public:
	ESourceBusChannels                                 SourceBusChannels;                                          // 0x0450   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0451   (0x0003)  MISSED
	float                                              SourceBusDuration;                                          // 0x0454   (0x0004)  
	UAudioBus*                                         AudioBus;                                                   // 0x0458   (0x0008)  
	bool                                               bAutoDeactivateWhenSilent : 1;                              // 0x0460:0 (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0461   (0x0007)  MISSED
};

/// Class /Script/Engine.SoundSubmixBase
/// Size: 0x0018 (0x000028 - 0x000040)
class USoundSubmixBase : public UObject
{ 
public:
	bool                                               bAutoDisable;                                               // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	float                                              AutoDisableTime;                                            // 0x002C   (0x0004)  
	TArray<USoundSubmixBase*>                          ChildSubmixes;                                              // 0x0030   (0x0010)  
};

/// Class /Script/Engine.SoundSubmixWithParentBase
/// Size: 0x0008 (0x000040 - 0x000048)
class USoundSubmixWithParentBase : public USoundSubmixBase
{ 
public:
	USoundSubmixBase*                                  ParentSubmix;                                               // 0x0040   (0x0008)  
};

/// Class /Script/Engine.SoundSubmix
/// Size: 0x0180 (0x000048 - 0x0001C8)
class USoundSubmix : public USoundSubmixWithParentBase
{ 
public:
	bool                                               bMuteWhenBackgrounded : 1;                                  // 0x0048:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x7];                                       // 0x0049   (0x0007)  MISSED
	TArray<USoundEffectSubmixPreset*>                  SubmixEffectChain;                                          // 0x0050   (0x0010)  
	USoundfieldEncodingSettingsBase*                   AmbisonicsPluginSettings;                                   // 0x0060   (0x0008)  
	int32_t                                            EnvelopeFollowerAttackTime;                                 // 0x0068   (0x0004)  
	int32_t                                            EnvelopeFollowerReleaseTime;                                // 0x006C   (0x0004)  
	float                                              OutputVolume;                                               // 0x0070   (0x0004)  
	float                                              WetLevel;                                                   // 0x0074   (0x0004)  
	float                                              DryLevel;                                                   // 0x0078   (0x0004)  
	unsigned char                                      UnknownData01_5[0x4];                                       // 0x007C   (0x0004)  MISSED
	FSoundModulationDestinationSettings                OutputVolumeModulation;                                     // 0x0080   (0x0060)  
	FSoundModulationDestinationSettings                WetLevelModulation;                                         // 0x00E0   (0x0060)  
	FSoundModulationDestinationSettings                DryLevelModulation;                                         // 0x0140   (0x0060)  
	bool                                               bSendToAudioLink : 1;                                       // 0x01A0:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x7];                                       // 0x01A1   (0x0007)  MISSED
	UAudioLinkSettingsAbstract*                        AudioLinkSettings;                                          // 0x01A8   (0x0008)  
	FMulticastInlineDelegate                           OnSubmixRecordedFileDone;                                   // 0x01B0   (0x0010)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x01C0   (0x0008)  MISSED


	/// Functions
	// Function /Script/Engine.SoundSubmix.StopSpectralAnalysis
	void StopSpectralAnalysis(UObject* WorldContextObject);                                                                  // [0x4f52190] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SoundSubmix.StopRecordingOutput
	void StopRecordingOutput(UObject* WorldContextObject, EAudioRecordingExportType ExportType, FString Name, FString Path, USoundWave* ExistingSoundWaveToOverwrite); // [0x4f51f30] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SoundSubmix.StopEnvelopeFollowing
	void StopEnvelopeFollowing(UObject* WorldContextObject);                                                                 // [0x4f51e70] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SoundSubmix.StartSpectralAnalysis
	void StartSpectralAnalysis(UObject* WorldContextObject, EFFTSize FFTSize, EFFTPeakInterpolationMethod InterpolationMethod, EFFTWindowType WindowType, float HopSize, EAudioSpectrumType SpectrumType); // [0x4f51c20] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SoundSubmix.StartRecordingOutput
	void StartRecordingOutput(UObject* WorldContextObject, float ExpectedDuration);                                          // [0x4f51b10] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SoundSubmix.StartEnvelopeFollowing
	void StartEnvelopeFollowing(UObject* WorldContextObject);                                                                // [0x4f51a50] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SoundSubmix.SetSubmixWetLevel
	void SetSubmixWetLevel(UObject* WorldContextObject, float InWetLevel);                                                   // [0x4f51940] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SoundSubmix.SetSubmixOutputVolume
	void SetSubmixOutputVolume(UObject* WorldContextObject, float InOutputVolume);                                           // [0x4f51830] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SoundSubmix.SetSubmixDryLevel
	void SetSubmixDryLevel(UObject* WorldContextObject, float InDryLevel);                                                   // [0x4f51720] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.SoundSubmix.RemoveSpectralAnalysisDelegate
	void RemoveSpectralAnalysisDelegate(UObject* WorldContextObject, FDelegateProperty& OnSubmixSpectralAnalysisBP);         // [0x4f514e0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SoundSubmix.AddSpectralAnalysisDelegate
	void AddSpectralAnalysisDelegate(UObject* WorldContextObject, TArray<FSoundSubmixSpectralAnalysisBandSettings>& InBandSettings, FDelegateProperty& OnSubmixSpectralAnalysisBP, float UpdateRate, float DecibelNoiseFloor, bool bDoNormalize, bool bDoAutoRange, float AutoRangeAttackTime, float AutoRangeReleaseTime); // [0x4f51110] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.SoundSubmix.AddEnvelopeFollowerDelegate
	void AddEnvelopeFollowerDelegate(UObject* WorldContextObject, FDelegateProperty& OnSubmixEnvelopeBP);                    // [0x4f50ff0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Engine.SoundfieldSubmix
/// Size: 0x0028 (0x000048 - 0x000070)
class USoundfieldSubmix : public USoundSubmixWithParentBase
{ 
public:
	FName                                              SoundfieldEncodingFormat;                                   // 0x0048   (0x0008)  
	USoundfieldEncodingSettingsBase*                   EncodingSettings;                                           // 0x0050   (0x0008)  
	TArray<USoundfieldEffectBase*>                     SoundfieldEffectChain;                                      // 0x0058   (0x0010)  
	UClass*                                            EncodingSettingsClass;                                      // 0x0068   (0x0008)  
};

/// Class /Script/Engine.EndpointSubmix
/// Size: 0x0018 (0x000040 - 0x000058)
class UEndpointSubmix : public USoundSubmixBase
{ 
public:
	FName                                              EndpointType;                                               // 0x0040   (0x0008)  
	UClass*                                            EndpointSettingsClass;                                      // 0x0048   (0x0008)  
	UAudioEndpointSettingsBase*                        EndpointSettings;                                           // 0x0050   (0x0008)  
};

/// Class /Script/Engine.SoundfieldEndpointSubmix
/// Size: 0x0038 (0x000040 - 0x000078)
class USoundfieldEndpointSubmix : public USoundSubmixBase
{ 
public:
	FName                                              SoundfieldEndpointType;                                     // 0x0040   (0x0008)  
	UClass*                                            EndpointSettingsClass;                                      // 0x0048   (0x0008)  
	USoundfieldEndpointSettingsBase*                   EndpointSettings;                                           // 0x0050   (0x0008)  
	UClass*                                            EncodingSettingsClass;                                      // 0x0058   (0x0008)  
	USoundfieldEncodingSettingsBase*                   EncodingSettings;                                           // 0x0060   (0x0008)  
	TArray<USoundfieldEffectBase*>                     SoundfieldEffectChain;                                      // 0x0068   (0x0010)  
};

/// Class /Script/Engine.SpectatorPawnMovement
/// Size: 0x0008 (0x000170 - 0x000178)
class USpectatorPawnMovement : public UFloatingPawnMovement
{ 
public:
	bool                                               bIgnoreTimeDilation : 1;                                    // 0x0170:0 (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0171   (0x0007)  MISSED
};

/// Class /Script/Engine.SplineMeshActor
/// Size: 0x0008 (0x000290 - 0x000298)
class ASplineMeshActor : public AActor
{ 
public:
	USplineMeshComponent*                              SplineMeshComponent;                                        // 0x0290   (0x0008)  
};

/// Class /Script/Engine.StaticMeshDescriptionBulkData
/// Size: 0x0000 (0x000028 - 0x000028)
class UStaticMeshDescriptionBulkData : public UMeshDescriptionBaseBulkData
{ 
public:
};

/// Class /Script/Engine.StereoLayerFunctionLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UStereoLayerFunctionLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.ActorTextureStreamingBuildDataComponent
/// Size: 0x0000 (0x0000A0 - 0x0000A0)
class UActorTextureStreamingBuildDataComponent : public UActorComponent
{ 
public:
};

/// Class /Script/Engine.TextureMipDataProviderFactory
/// Size: 0x0000 (0x000028 - 0x000028)
class UTextureMipDataProviderFactory : public UAssetUserData
{ 
public:
};

/// Class /Script/Engine.AudioSubsystemCollectionRoot
/// Size: 0x0008 (0x000028 - 0x000030)
class UAudioSubsystemCollectionRoot : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.AudioEngineSubsystem
/// Size: 0x0000 (0x000030 - 0x000030)
class UAudioEngineSubsystem : public UDynamicSubsystem
{ 
public:
};

/// Class /Script/Engine.SubsystemBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class USubsystemBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.TargetPoint
/// Size: 0x0000 (0x000290 - 0x000290)
class ATargetPoint : public AActor
{ 
public:
};

/// Class /Script/Engine.AutomationTestSettings
/// Size: 0x0330 (0x000028 - 0x000358)
class UAutomationTestSettings : public UObject
{ 
public:
	TArray<FString>                                    EngineTestModules;                                          // 0x0028   (0x0010)  
	TArray<FString>                                    EditorTestModules;                                          // 0x0038   (0x0010)  
	FSoftObjectPath                                    AutomationTestmap;                                          // 0x0048   (0x0020)  
	TArray<FEditorMapPerformanceTestDefinition>        EditorPerformanceTestMaps;                                  // 0x0068   (0x0010)  
	TArray<FString>                                    AssetsToOpen;                                               // 0x0078   (0x0010)  
	TArray<FString>                                    MapsToPIETest;                                              // 0x0088   (0x0010)  
	bool                                               bUseAllProjectMapsToPlayInPIE;                              // 0x0098   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0099   (0x0007)  MISSED
	FBuildPromotionTestSettings                        BuildPromotionTest;                                         // 0x00A0   (0x01F0)  
	FMaterialEditorPromotionSettings                   MaterialEditorPromotionTest;                                // 0x0290   (0x0030)  
	FParticleEditorPromotionSettings                   ParticleEditorPromotionTest;                                // 0x02C0   (0x0010)  
	FBlueprintEditorPromotionSettings                  BlueprintEditorPromotionTest;                               // 0x02D0   (0x0030)  
	TArray<FString>                                    TestLevelFolders;                                           // 0x0300   (0x0010)  
	TArray<FExternalToolDefinition>                    ExternalTools;                                              // 0x0310   (0x0010)  
	TArray<FEditorImportExportTestDefinition>          ImportExportTestDefinitions;                                // 0x0320   (0x0010)  
	TArray<FLaunchOnTestSettings>                      LaunchOnSettings;                                           // 0x0330   (0x0010)  
	FIntPoint                                          DefaultScreenshotResolution;                                // 0x0340   (0x0008)  
	float                                              PIETestDuration;                                            // 0x0348   (0x0004)  
	float                                              DefaultInteractiveFramerate;                                // 0x034C   (0x0004)  
	float                                              DefaultInteractiveFramerateWaitTime;                        // 0x0350   (0x0004)  
	float                                              DefaultInteractiveFramerateDuration;                        // 0x0354   (0x0004)  
};

/// Class /Script/Engine.TransactionDiffingTestObject
/// Size: 0x0078 (0x000028 - 0x0000A0)
class UTransactionDiffingTestObject : public UObject
{ 
public:
	TArray<FName>                                      NamesArray;                                                 // 0x0028   (0x0010)  
	FName                                              AdditionalName;                                             // 0x0038   (0x0008)  
	TArray<UObject*>                                   ObjectsArray;                                               // 0x0040   (0x0010)  
	UObject*                                           AdditionalObject;                                           // 0x0050   (0x0008)  
	TArray<TWeakObjectPtr>                             SoftObjectsArray;                                           // 0x0058   (0x0010)  
	TWeakObjectPtr<UObject*>                           AdditionalSoftObject;                                       // 0x0068   (0x0030)  
	int32_t                                            PropertyData;                                               // 0x0098   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x009C   (0x0004)  MISSED
};

/// Class /Script/Engine.Texture2DDynamic
/// Size: 0x0020 (0x0001F0 - 0x000210)
class UTexture2DDynamic : public UTexture
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x01F0   (0x0008)  MISSED
	TEnumAsByte<EPixelFormat>                          Format;                                                     // 0x01F8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x17];                                      // 0x01F9   (0x0017)  MISSED
};

/// Class /Script/Engine.TextureCubeArray
/// Size: 0x00A0 (0x0001F0 - 0x000290)
class UTextureCubeArray : public UTexture
{ 
public:
	unsigned char                                      UnknownData00_1[0xA0];                                      // 0x01F0   (0x00A0)  MISSED
};

/// Class /Script/Engine.TextureEncodingProjectSettings
/// Size: 0x0018 (0x000038 - 0x000050)
class UTextureEncodingProjectSettings : public UDeveloperSettings
{ 
public:
	bool                                               bFinalUsesRDO : 1;                                          // 0x0038:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0039   (0x0003)  MISSED
	int8_t                                             FinalRDOLambda;                                             // 0x003C   (0x0001)  
	ETextureEncodeEffort                               FinalEffortLevel;                                           // 0x003D   (0x0001)  
	ETextureUniversalTiling                            FinalUniversalTiling;                                       // 0x003E   (0x0001)  
	unsigned char                                      UnknownData01_5[0x1];                                       // 0x003F   (0x0001)  MISSED
	bool                                               bFastUsesRDO : 1;                                           // 0x0040:0 (0x0001)  
	unsigned char                                      UnknownData02_4[0x3];                                       // 0x0041   (0x0003)  MISSED
	int8_t                                             FastRDOLambda;                                              // 0x0044   (0x0001)  
	ETextureEncodeEffort                               FastEffortLevel;                                            // 0x0045   (0x0001)  
	ETextureUniversalTiling                            FastUniversalTiling;                                        // 0x0046   (0x0001)  
	ETextureEncodeSpeed                                CookUsesSpeed;                                              // 0x0047   (0x0001)  
	ETextureEncodeSpeed                                EditorUsesSpeed;                                            // 0x0048   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0049   (0x0007)  MISSED
};

/// Class /Script/Engine.TextureEncodingUserSettings
/// Size: 0x0008 (0x000038 - 0x000040)
class UTextureEncodingUserSettings : public UDeveloperSettings
{ 
public:
	ETextureEncodeSpeedOverride                        ForceEncodeSpeed;                                           // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
};

/// Class /Script/Engine.TextureLightProfile
/// Size: 0x0000 (0x0002B0 - 0x0002B0)
class UTextureLightProfile : public UTexture2D
{ 
public:
};

/// Class /Script/Engine.TextureRenderTarget2DArray
/// Size: 0x0020 (0x000200 - 0x000220)
class UTextureRenderTarget2DArray : public UTextureRenderTarget
{ 
public:
	int32_t                                            SizeX;                                                      // 0x01F8   (0x0004)  
	int32_t                                            SizeY;                                                      // 0x01FC   (0x0004)  
	int32_t                                            Slices;                                                     // 0x0200   (0x0004)  
	FLinearColor                                       ClearColor;                                                 // 0x0204   (0x0010)  
	TEnumAsByte<EPixelFormat>                          OverrideFormat;                                             // 0x0214   (0x0001)  
	bool                                               bHDR : 1;                                                   // 0x0215:0 (0x0001)  
	bool                                               bForceLinearGamma : 1;                                      // 0x0215:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0xA];                                       // 0x0216   (0x000A)  MISSED
};

/// Class /Script/Engine.TextureRenderTargetCube
/// Size: 0x0010 (0x000200 - 0x000210)
class UTextureRenderTargetCube : public UTextureRenderTarget
{ 
public:
	int32_t                                            SizeX;                                                      // 0x01F8   (0x0004)  
	FLinearColor                                       ClearColor;                                                 // 0x01FC   (0x0010)  
	TEnumAsByte<EPixelFormat>                          OverrideFormat;                                             // 0x020C   (0x0001)  
	bool                                               bHDR : 1;                                                   // 0x020D:0 (0x0001)  
	bool                                               bForceLinearGamma : 1;                                      // 0x020D:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x020E   (0x0002)  MISSED
};

/// Class /Script/Engine.TextureRenderTargetVolume
/// Size: 0x0020 (0x000200 - 0x000220)
class UTextureRenderTargetVolume : public UTextureRenderTarget
{ 
public:
	int32_t                                            SizeX;                                                      // 0x01F8   (0x0004)  
	int32_t                                            SizeY;                                                      // 0x01FC   (0x0004)  
	int32_t                                            SizeZ;                                                      // 0x0200   (0x0004)  
	FLinearColor                                       ClearColor;                                                 // 0x0204   (0x0010)  
	TEnumAsByte<EPixelFormat>                          OverrideFormat;                                             // 0x0214   (0x0001)  
	bool                                               bHDR : 1;                                                   // 0x0215:0 (0x0001)  
	bool                                               bForceLinearGamma : 1;                                      // 0x0215:1 (0x0001)  
	unsigned char                                      UnknownData00_6[0xA];                                       // 0x0216   (0x000A)  MISSED
};

/// Class /Script/Engine.TimelineTemplate
/// Size: 0x0090 (0x000028 - 0x0000B8)
class UTimelineTemplate : public UObject
{ 
public:
	float                                              TimelineLength;                                             // 0x0028   (0x0004)  
	TEnumAsByte<ETimelineLengthMode>                   LengthMode;                                                 // 0x002C   (0x0001)  
	bool                                               bAutoPlay : 1;                                              // 0x002D:0 (0x0001)  
	bool                                               bLoop : 1;                                                  // 0x002D:1 (0x0001)  
	bool                                               bReplicated : 1;                                            // 0x002D:2 (0x0001)  
	bool                                               bIgnoreTimeDilation : 1;                                    // 0x002D:3 (0x0001)  
	unsigned char                                      UnknownData00_4[0x2];                                       // 0x002E   (0x0002)  MISSED
	TArray<FTTEventTrack>                              EventTracks;                                                // 0x0030   (0x0010)  
	TArray<FTTFloatTrack>                              FloatTracks;                                                // 0x0040   (0x0010)  
	TArray<FTTVectorTrack>                             VectorTracks;                                               // 0x0050   (0x0010)  
	TArray<FTTLinearColorTrack>                        LinearColorTracks;                                          // 0x0060   (0x0010)  
	TArray<FBPVariableMetaDataEntry>                   MetaDataArray;                                              // 0x0070   (0x0010)  
	FGuid                                              TimelineGuid;                                               // 0x0080   (0x0010)  
	TEnumAsByte<ETickingGroup>                         TimelineTickGroup;                                          // 0x0090   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0091   (0x0003)  MISSED
	FName                                              VariableName;                                               // 0x0094   (0x0008)  
	FName                                              DirectionPropertyName;                                      // 0x009C   (0x0008)  
	FName                                              UpdateFunctionName;                                         // 0x00A4   (0x0008)  
	FName                                              FinishedFunctionName;                                       // 0x00AC   (0x0008)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x00B4   (0x0004)  MISSED
};

/// Class /Script/Engine.TriggerVolume
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class ATriggerVolume : public AVolume
{ 
public:
};

/// Class /Script/Engine.UserDefinedEnum
/// Size: 0x0050 (0x000068 - 0x0000B8)
class UUserDefinedEnum : public UEnum
{ 
public:
	TMap<FName, FText>                                 DisplayNameMap;                                             // 0x0068   (0x0050)  
};

/// Class /Script/Engine.UserInterfaceSettings
/// Size: 0x0278 (0x000038 - 0x0002B0)
class UUserInterfaceSettings : public UDeveloperSettings
{ 
public:
	ERenderFocusRule                                   RenderFocusRule;                                            // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0039   (0x0007)  MISSED
	TMap<TEnumAsByte, FHardwareCursorReference>        HardwareCursors;                                            // 0x0040   (0x0050)  
	TMap<TEnumAsByte, FSoftClassPath>                  SoftwareCursors;                                            // 0x0090   (0x0050)  
	FSoftClassPath                                     DefaultCursor;                                              // 0x00E0   (0x0020)  
	FSoftClassPath                                     TextEditBeamCursor;                                         // 0x0100   (0x0020)  
	FSoftClassPath                                     CrosshairsCursor;                                           // 0x0120   (0x0020)  
	FSoftClassPath                                     HandCursor;                                                 // 0x0140   (0x0020)  
	FSoftClassPath                                     GrabHandCursor;                                             // 0x0160   (0x0020)  
	FSoftClassPath                                     GrabHandClosedCursor;                                       // 0x0180   (0x0020)  
	FSoftClassPath                                     SlashedCircleCursor;                                        // 0x01A0   (0x0020)  
	float                                              ApplicationScale;                                           // 0x01C0   (0x0004)  
	EUIScalingRule                                     UIScaleRule;                                                // 0x01C4   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x01C5   (0x0003)  MISSED
	FSoftClassPath                                     CustomScalingRuleClass;                                     // 0x01C8   (0x0020)  
	FRuntimeFloatCurve                                 UIScaleCurve;                                               // 0x01E8   (0x0088)  
	bool                                               bAllowHighDPIInGameMode;                                    // 0x0270   (0x0001)  
	unsigned char                                      UnknownData02_5[0x3];                                       // 0x0271   (0x0003)  MISSED
	FIntPoint                                          DesignScreenSize;                                           // 0x0274   (0x0008)  
	bool                                               bLoadWidgetsOnDedicatedServer;                              // 0x027C   (0x0001)  
	unsigned char                                      UnknownData03_5[0x3];                                       // 0x027D   (0x0003)  MISSED
	TArray<UObject*>                                   CursorClasses;                                              // 0x0280   (0x0010)  
	UClass*                                            CustomScalingRuleClassInstance;                             // 0x0290   (0x0008)  
	UDPICustomScalingRule*                             CustomScalingRule;                                          // 0x0298   (0x0008)  
	unsigned char                                      UnknownData04_6[0x10];                                      // 0x02A0   (0x0010)  MISSED
};

/// Class /Script/Engine.Canvas
/// Size: 0x0368 (0x000028 - 0x000390)
class UCanvas : public UObject
{ 
public:
	float                                              OrgX;                                                       // 0x0028   (0x0004)  
	float                                              OrgY;                                                       // 0x002C   (0x0004)  
	float                                              ClipX;                                                      // 0x0030   (0x0004)  
	float                                              ClipY;                                                      // 0x0034   (0x0004)  
	FColor                                             DrawColor;                                                  // 0x0038   (0x0004)  
	bool                                               bCenterX : 1;                                               // 0x003C:0 (0x0001)  
	bool                                               bCenterY : 1;                                               // 0x003C:1 (0x0001)  
	bool                                               bNoSmooth : 1;                                              // 0x003C:2 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x003D   (0x0003)  MISSED
	int32_t                                            SizeX;                                                      // 0x0040   (0x0004)  
	int32_t                                            SizeY;                                                      // 0x0044   (0x0004)  
	unsigned char                                      UnknownData01_5[0x8];                                       // 0x0048   (0x0008)  MISSED
	FPlane                                             ColorModulate;                                              // 0x0050   (0x0020)  
	UTexture2D*                                        DefaultTexture;                                             // 0x0070   (0x0008)  
	UTexture2D*                                        GradientTexture0;                                           // 0x0078   (0x0008)  
	UReporterGraph*                                    ReporterGraph;                                              // 0x0080   (0x0008)  
	unsigned char                                      UnknownData02_6[0x308];                                     // 0x0088   (0x0308)  MISSED


	/// Functions
	// Function /Script/Engine.Canvas.K2_TextSize
	FVector2D K2_TextSize(UFont* RenderFont, FString RenderText, FVector2D Scale);                                           // [0x5020b60] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Canvas.K2_StrLen
	FVector2D K2_StrLen(UFont* RenderFont, FString RenderText);                                                              // [0x50208b0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Canvas.K2_Project
	FVector K2_Project(FVector WorldLocation);                                                                               // [0x5020770] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Canvas.K2_DrawTriangle
	void K2_DrawTriangle(UTexture* RenderTexture, TArray<FCanvasUVTri> Triangles);                                           // [0x50204b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Canvas.K2_DrawTexture
	void K2_DrawTexture(UTexture* RenderTexture, FVector2D ScreenPosition, FVector2D ScreenSize, FVector2D CoordinatePosition, FVector2D CoordinateSize, FLinearColor RenderColor, TEnumAsByte<EBlendMode> BlendMode, float Rotation, FVector2D PivotPoint); // [0x5020050] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Canvas.K2_DrawText
	void K2_DrawText(UFont* RenderFont, FString RenderText, FVector2D ScreenPosition, FVector2D Scale, FLinearColor RenderColor, float Kerning, FLinearColor ShadowColor, FVector2D ShadowOffset, bool bCentreX, bool bCentreY, bool bOutlined, FLinearColor OutlineColor); // [0x501fb90] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Canvas.K2_DrawPolygon
	void K2_DrawPolygon(UTexture* RenderTexture, FVector2D ScreenPosition, FVector2D Radius, int32_t NumberOfSides, FLinearColor RenderColor); // [0x501f8a0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Canvas.K2_DrawMaterialTriangle
	void K2_DrawMaterialTriangle(UMaterialInterface* RenderMaterial, TArray<FCanvasUVTri> Triangles);                        // [0x501f680] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.Canvas.K2_DrawMaterial
	void K2_DrawMaterial(UMaterialInterface* RenderMaterial, FVector2D ScreenPosition, FVector2D ScreenSize, FVector2D CoordinatePosition, FVector2D CoordinateSize, float Rotation, FVector2D PivotPoint); // [0x501f2b0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Canvas.K2_DrawLine
	void K2_DrawLine(FVector2D ScreenPositionA, FVector2D ScreenPositionB, float Thickness, FLinearColor RenderColor);       // [0x501f0b0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Canvas.K2_DrawBox
	void K2_DrawBox(FVector2D ScreenPosition, FVector2D ScreenSize, float Thickness, FLinearColor RenderColor);              // [0x501eee0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Canvas.K2_DrawBorder
	void K2_DrawBorder(UTexture* BorderTexture, UTexture* BackgroundTexture, UTexture* LeftBorderTexture, UTexture* RightBorderTexture, UTexture* TopBorderTexture, UTexture* BottomBorderTexture, FVector2D ScreenPosition, FVector2D ScreenSize, FVector2D CoordinatePosition, FVector2D CoordinateSize, FLinearColor RenderColor, FVector2D BorderScale, FVector2D BackgroundScale, float Rotation, FVector2D PivotPoint, FVector2D CornerSize); // [0x501e840] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/Engine.Canvas.K2_Deproject
	void K2_Deproject(FVector2D ScreenPosition, FVector& WorldOrigin, FVector& WorldDirection);                              // [0x501e700] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
};

/// Class /Script/Engine.Console
/// Size: 0x0108 (0x000028 - 0x000130)
class UConsole : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x10];                                      // 0x0028   (0x0010)  MISSED
	ULocalPlayer*                                      ConsoleTargetPlayer;                                        // 0x0038   (0x0008)  
	UTexture2D*                                        DefaultTexture_Black;                                       // 0x0040   (0x0008)  
	UTexture2D*                                        DefaultTexture_White;                                       // 0x0048   (0x0008)  
	unsigned char                                      UnknownData01_5[0x18];                                      // 0x0050   (0x0018)  MISSED
	TArray<FString>                                    HistoryBuffer;                                              // 0x0068   (0x0010)  
	unsigned char                                      UnknownData02_6[0xB8];                                      // 0x0078   (0x00B8)  MISSED
};

/// Class /Script/Engine.InputSettings
/// Size: 0x0118 (0x000028 - 0x000140)
class UInputSettings : public UObject
{ 
public:
	TArray<FInputAxisConfigEntry>                      AxisConfig;                                                 // 0x0028   (0x0010)  
	bool                                               bAltEnterTogglesFullscreen : 1;                             // 0x0038:0 (0x0001)  
	bool                                               bF11TogglesFullscreen : 1;                                  // 0x0038:1 (0x0001)  
	bool                                               bUseMouseForTouch : 1;                                      // 0x0038:2 (0x0001)  
	bool                                               bEnableMouseSmoothing : 1;                                  // 0x0038:3 (0x0001)  
	bool                                               bEnableFOVScaling : 1;                                      // 0x0038:4 (0x0001)  
	bool                                               bCaptureMouseOnLaunch : 1;                                  // 0x0038:5 (0x0001)  
	bool                                               bEnableLegacyInputScales : 1;                               // 0x0038:6 (0x0001)  
	bool                                               bEnableMotionControls : 1;                                  // 0x0038:7 (0x0001)  
	bool                                               bFilterInputByPlatformUser : 1;                             // 0x0039:0 (0x0001)  
	bool                                               bShouldFlushPressedKeysOnViewportFocusLost : 1;             // 0x0039:1 (0x0001)  
	bool                                               bEnableDynamicComponentInputBinding : 1;                    // 0x0039:2 (0x0001)  
	bool                                               bAlwaysShowTouchInterface : 1;                              // 0x0039:3 (0x0001)  
	bool                                               bShowConsoleOnFourFingerTap : 1;                            // 0x0039:4 (0x0001)  
	bool                                               bEnableGestureRecognizer : 1;                               // 0x0039:5 (0x0001)  
	bool                                               bUseAutocorrect : 1;                                        // 0x0039:6 (0x0001)  
	unsigned char                                      UnknownData00_4[0x6];                                       // 0x003A   (0x0006)  MISSED
	TArray<FString>                                    ExcludedAutocorrectOS;                                      // 0x0040   (0x0010)  
	TArray<FString>                                    ExcludedAutocorrectCultures;                                // 0x0050   (0x0010)  
	TArray<FString>                                    ExcludedAutocorrectDeviceModels;                            // 0x0060   (0x0010)  
	EMouseCaptureMode                                  DefaultViewportMouseCaptureMode;                            // 0x0070   (0x0001)  
	EMouseLockMode                                     DefaultViewportMouseLockMode;                               // 0x0071   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x0072   (0x0002)  MISSED
	float                                              FOVScale;                                                   // 0x0074   (0x0004)  
	float                                              DoubleClickTime;                                            // 0x0078   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x007C   (0x0004)  MISSED
	TArray<FInputActionKeyMapping>                     ActionMappings;                                             // 0x0080   (0x0010)  
	TArray<FInputAxisKeyMapping>                       AxisMappings;                                               // 0x0090   (0x0010)  
	TArray<FInputActionSpeechMapping>                  SpeechMappings;                                             // 0x00A0   (0x0010)  
	TWeakObjectPtr<UClass*>                            DefaultPlayerInputClass;                                    // 0x00B0   (0x0030)  
	TWeakObjectPtr<UClass*>                            DefaultInputComponentClass;                                 // 0x00E0   (0x0030)  
	FSoftObjectPath                                    DefaultTouchInterface;                                      // 0x0110   (0x0020)  
	TArray<FKey>                                       ConsoleKeys;                                                // 0x0130   (0x0010)  


	/// Functions
	// Function /Script/Engine.InputSettings.SaveKeyMappings
	void SaveKeyMappings();                                                                                                  // [0x5021320] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.InputSettings.RemoveAxisMapping
	void RemoveAxisMapping(FInputAxisKeyMapping& KeyMapping, bool bForceRebuildKeymaps);                                     // [0x5021110] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.InputSettings.RemoveActionMapping
	void RemoveActionMapping(FInputActionKeyMapping& KeyMapping, bool bForceRebuildKeymaps);                                 // [0x5020ed0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.InputSettings.GetInputSettings
	UInputSettings* GetInputSettings();                                                                                      // [0x501e390] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/Engine.InputSettings.GetAxisNames
	void GetAxisNames(TArray<FName>& AxisNames);                                                                             // [0x501e290] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InputSettings.GetAxisMappingByName
	void GetAxisMappingByName(FName InAxisName, TArray<FInputAxisKeyMapping>& OutMappings);                                  // [0x501e070] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InputSettings.GetActionNames
	void GetActionNames(TArray<FName>& ActionNames);                                                                         // [0x501dee0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InputSettings.GetActionMappingByName
	void GetActionMappingByName(FName InActionName, TArray<FInputActionKeyMapping>& OutMappings);                            // [0x501dcf0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.InputSettings.ForceRebuildKeymaps
	void ForceRebuildKeymaps();                                                                                              // [0x501dcd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.InputSettings.AddAxisMapping
	void AddAxisMapping(FInputAxisKeyMapping& KeyMapping, bool bForceRebuildKeymaps);                                        // [0x501db00] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.InputSettings.AddActionMapping
	void AddActionMapping(FInputActionKeyMapping& KeyMapping, bool bForceRebuildKeymaps);                                    // [0x501d910] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/Engine.VectorFieldVolume
/// Size: 0x0008 (0x000290 - 0x000298)
class AVectorFieldVolume : public AActor
{ 
public:
	UVectorFieldComponent*                             VectorFieldComponent;                                       // 0x0290   (0x0008)  
};

/// Class /Script/Engine.TireType
/// Size: 0x0008 (0x000030 - 0x000038)
class UTireType : public UDataAsset
{ 
public:
	float                                              FrictionScale;                                              // 0x0030   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
};

/// Class /Script/Engine.VisualLoggerAutomationTests
/// Size: 0x0000 (0x000028 - 0x000028)
class UVisualLoggerAutomationTests : public UObject
{ 
public:
};

/// Class /Script/Engine.VisualLoggerFilterVolume
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class AVisualLoggerFilterVolume : public AVolume
{ 
public:
};

/// Class /Script/Engine.VisualLoggerKismetLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UVisualLoggerKismetLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.VoiceChannel
/// Size: 0x0010 (0x000068 - 0x000078)
class UVoiceChannel : public UChannel
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0068   (0x0010)  MISSED
};

/// Class /Script/Engine.VOIPTalker
/// Size: 0x0040 (0x0000A0 - 0x0000E0)
class UVOIPTalker : public UActorComponent
{ 
public:
	FVoiceSettings                                     Settings;                                                   // 0x00A0   (0x0018)  
	unsigned char                                      UnknownData00_6[0x28];                                      // 0x00B8   (0x0028)  MISSED


	/// Functions
	// Function /Script/Engine.VOIPTalker.RegisterWithPlayerState
	void RegisterWithPlayerState(APlayerState* OwningState);                                                                 // [0x503b130] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VOIPTalker.GetVoiceLevel
	float GetVoiceLevel();                                                                                                   // [0x503a4d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/Engine.VOIPTalker.CreateTalkerForPlayer
	UVOIPTalker* CreateTalkerForPlayer(APlayerState* OwningState);                                                           // [0x503a1d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/Engine.VOIPTalker.BPOnTalkingEnd
	void BPOnTalkingEnd();                                                                                                   // [0x503a1b0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/Engine.VOIPTalker.BPOnTalkingBegin
	void BPOnTalkingBegin(UAudioComponent* AudioComponent);                                                                  // [0x503a120] Native|Event|Protected|BlueprintEvent 
};

/// Class /Script/Engine.VOIPStatics
/// Size: 0x0000 (0x000028 - 0x000028)
class UVOIPStatics : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.VolumeTexture
/// Size: 0x00B0 (0x0001F0 - 0x0002A0)
class UVolumeTexture : public UTexture
{ 
public:
	unsigned char                                      UnknownData00_2[0xA0];                                      // 0x01F0   (0x00A0)  MISSED
	TEnumAsByte<TextureAddress>                        AddressMode;                                                // 0x0290   (0x0001)  
	unsigned char                                      UnknownData01_6[0xF];                                       // 0x0291   (0x000F)  MISSED
};

/// Class /Script/Engine.VolumetricLightmapDensityVolume
/// Size: 0x0008 (0x0002C8 - 0x0002D0)
class AVolumetricLightmapDensityVolume : public AVolume
{ 
public:
	FInt32Interval                                     AllowedMipLevelRange;                                       // 0x02C8   (0x0008)  
};

/// Class /Script/Engine.LightMapVirtualTexture2D
/// Size: 0x0010 (0x0002B0 - 0x0002C0)
class ULightMapVirtualTexture2D : public UTexture2D
{ 
public:
	TArray<int8_t>                                     TypeToLayer;                                                // 0x02A8   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x02B8   (0x0008)  MISSED
};

/// Class /Script/Engine.RuntimeVirtualTexture
/// Size: 0x00B8 (0x000028 - 0x0000E0)
class URuntimeVirtualTexture : public UObject
{ 
public:
	int32_t                                            TileCount;                                                  // 0x0028   (0x0004)  
	int32_t                                            TileSize;                                                   // 0x002C   (0x0004)  
	int32_t                                            TileBorderSize;                                             // 0x0030   (0x0004)  
	ERuntimeVirtualTextureMaterialType                 MaterialType;                                               // 0x0034   (0x0001)  
	bool                                               bCompressTextures;                                          // 0x0035   (0x0001)  
	bool                                               bUseLowQualityCompression;                                  // 0x0036   (0x0001)  
	bool                                               bClearTextures;                                             // 0x0037   (0x0001)  
	bool                                               bSinglePhysicalSpace;                                       // 0x0038   (0x0001)  
	bool                                               bPrivateSpace;                                              // 0x0039   (0x0001)  
	bool                                               bAdaptive;                                                  // 0x003A   (0x0001)  
	bool                                               bContinuousUpdate;                                          // 0x003B   (0x0001)  
	int32_t                                            RemoveLowMips;                                              // 0x003C   (0x0004)  
	TEnumAsByte<TextureGroup>                          LODGroup;                                                   // 0x0040   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0041   (0x0003)  MISSED
	int32_t                                            Size;                                                       // 0x0044   (0x0004)  
	URuntimeVirtualTextureStreamingProxy*              StreamingTexture;                                           // 0x0048   (0x0008)  
	unsigned char                                      UnknownData01_6[0x90];                                      // 0x0050   (0x0090)  MISSED


	/// Functions
	// Function /Script/Engine.RuntimeVirtualTexture.GetTileSize
	int32_t GetTileSize();                                                                                                   // [0x503a480] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.RuntimeVirtualTexture.GetTileCount
	int32_t GetTileCount();                                                                                                  // [0x503a430] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.RuntimeVirtualTexture.GetTileBorderSize
	int32_t GetTileBorderSize();                                                                                             // [0x503a3f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.RuntimeVirtualTexture.GetSize
	int32_t GetSize();                                                                                                       // [0x503a370] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.RuntimeVirtualTexture.GetPageTableSize
	int32_t GetPageTableSize();                                                                                              // [0x503a2f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.RuntimeVirtualTextureVolume
/// Size: 0x0008 (0x000290 - 0x000298)
class ARuntimeVirtualTextureVolume : public AActor
{ 
public:
	URuntimeVirtualTextureComponent*                   VirtualTextureComponent;                                    // 0x0290   (0x0008)  
};

/// Class /Script/Engine.VirtualTexture
/// Size: 0x0000 (0x000028 - 0x000028)
class UVirtualTexture : public UObject
{ 
public:
};

/// Class /Script/Engine.LightMapVirtualTexture
/// Size: 0x0000 (0x000028 - 0x000028)
class ULightMapVirtualTexture : public UVirtualTexture
{ 
public:
};

/// Class /Script/Engine.RuntimeVirtualTextureStreamingProxy
/// Size: 0x0000 (0x0002B0 - 0x0002B0)
class URuntimeVirtualTextureStreamingProxy : public UTexture2D
{ 
public:
};

/// Class /Script/Engine.VirtualTexture2D
/// Size: 0x0010 (0x0002B0 - 0x0002C0)
class UVirtualTexture2D : public UTexture2D
{ 
public:
	FVirtualTextureBuildSettings                       Settings;                                                   // 0x02A8   (0x0008)  
	bool                                               bContinuousUpdate;                                          // 0x02B0   (0x0001)  
	bool                                               bSinglePhysicalSpace;                                       // 0x02B1   (0x0001)  
	unsigned char                                      UnknownData00_6[0xE];                                       // 0x02B2   (0x000E)  MISSED
};

/// Class /Script/Engine.VirtualTextureBuilder
/// Size: 0x0010 (0x000028 - 0x000038)
class UVirtualTextureBuilder : public UObject
{ 
public:
	UVirtualTexture2D*                                 Texture;                                                    // 0x0028   (0x0008)  
	uint64_t                                           BuildHash;                                                  // 0x0030   (0x0008)  
};

/// Class /Script/Engine.VirtualTexturePoolConfig
/// Size: 0x0018 (0x000028 - 0x000040)
class UVirtualTexturePoolConfig : public UObject
{ 
public:
	int32_t                                            DefaultSizeInMegabyte;                                      // 0x0028   (0x0004)  
	unsigned char                                      UnknownData00_5[0x4];                                       // 0x002C   (0x0004)  MISSED
	TArray<FVirtualTextureSpacePoolConfig>             Pools;                                                      // 0x0030   (0x0010)  
};

/// Class /Script/Engine.WindDirectionalSource
/// Size: 0x0008 (0x000290 - 0x000298)
class AWindDirectionalSource : public AInfo
{ 
public:
	UWindDirectionalSourceComponent*                   Component;                                                  // 0x0290   (0x0008)  
};

/// Class /Script/Engine.WorldComposition
/// Size: 0x0040 (0x000028 - 0x000068)
class UWorldComposition : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x20];                                      // 0x0028   (0x0020)  MISSED
	TArray<ULevelStreaming*>                           TilesStreaming;                                             // 0x0048   (0x0010)  
	double                                             TilesStreamingTimeThreshold;                                // 0x0058   (0x0008)  
	bool                                               bLoadAllTilesDuringCinematic;                               // 0x0060   (0x0001)  
	bool                                               bRebaseOriginIn3DSpace;                                     // 0x0061   (0x0001)  
	unsigned char                                      UnknownData01_5[0x2];                                       // 0x0062   (0x0002)  MISSED
	float                                              RebaseOriginDistance;                                       // 0x0064   (0x0004)  
};

/// Class /Script/Engine.WorldPartitionBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UWorldPartitionBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
public:
};

/// Class /Script/Engine.ActorDescContainer
/// Size: 0x0008 (0x000028 - 0x000030)
class UActorDescContainer : public UObject
{ 
public:
	UWorld*                                            World;                                                      // 0x0028   (0x0008)  
};

/// Class /Script/Engine.ContentBundleDescriptor
/// Size: 0x0030 (0x000028 - 0x000058)
class UContentBundleDescriptor : public UObject
{ 
public:
	FString                                            DisplayName;                                                // 0x0028   (0x0010)  
	FGuid                                              Guid;                                                       // 0x0038   (0x0010)  
	FString                                            PackageRoot;                                                // 0x0048   (0x0010)  
};

/// Class /Script/Engine.ContentBundleUnsavedActorMonitor
/// Size: 0x0000 (0x000028 - 0x000028)
class UContentBundleUnsavedActorMonitor : public UObject
{ 
public:
};

/// Class /Script/Engine.ContentBundleEngineSubsystem
/// Size: 0x0070 (0x000030 - 0x0000A0)
class UContentBundleEngineSubsystem : public UEngineSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x70];                                      // 0x0030   (0x0070)  MISSED
};

/// Class /Script/Engine.ContentBundleManager
/// Size: 0x0010 (0x000028 - 0x000038)
class UContentBundleManager : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x10];                                      // 0x0028   (0x0010)  MISSED
};

/// Class /Script/Engine.ContentBundleDuplicateForPIEHelper
/// Size: 0x0000 (0x000028 - 0x000028)
class UContentBundleDuplicateForPIEHelper : public UObject
{ 
public:
};

/// Class /Script/Engine.WorldDataLayers
/// Size: 0x0328 (0x000290 - 0x0005B8)
class AWorldDataLayers : public AInfo
{ 
public:
	unsigned char                                      UnknownData00_2[0xA0];                                      // 0x0290   (0x00A0)  MISSED
	TSet<UDataLayerInstance*>                          DataLayerInstances;                                         // 0x0330   (0x0050)  
	TMap<FName, TWeakObjectPtr>                        DeprecatedDataLayerNameToDataLayerInstance;                 // 0x0380   (0x0050)  
	TSet<UDataLayer*>                                  WorldDataLayers;                                            // 0x03D0   (0x0050)  
	TArray<FName>                                      RepActiveDataLayerNames;                                    // 0x0420   (0x0010)  
	TArray<FName>                                      RepLoadedDataLayerNames;                                    // 0x0430   (0x0010)  
	unsigned char                                      UnknownData01_5[0xA0];                                      // 0x0440   (0x00A0)  MISSED
	TArray<FName>                                      RepEffectiveActiveDataLayerNames;                           // 0x04E0   (0x0010)  
	TArray<FName>                                      RepEffectiveLoadedDataLayerNames;                           // 0x04F0   (0x0010)  
	unsigned char                                      UnknownData02_6[0xB8];                                      // 0x0500   (0x00B8)  MISSED


	/// Functions
	// Function /Script/Engine.WorldDataLayers.OnRep_LoadedDataLayerNames
	void OnRep_LoadedDataLayerNames();                                                                                       // [0x5067d60] Final|Native|Protected 
	// Function /Script/Engine.WorldDataLayers.OnRep_EffectiveLoadedDataLayerNames
	void OnRep_EffectiveLoadedDataLayerNames();                                                                              // [0x5067ce0] Final|Native|Protected 
	// Function /Script/Engine.WorldDataLayers.OnRep_EffectiveActiveDataLayerNames
	void OnRep_EffectiveActiveDataLayerNames();                                                                              // [0x5067c60] Final|Native|Protected 
	// Function /Script/Engine.WorldDataLayers.OnRep_ActiveDataLayerNames
	void OnRep_ActiveDataLayerNames();                                                                                       // [0x5067be0] Final|Native|Protected 
	// Function /Script/Engine.WorldDataLayers.OnDataLayerRuntimeStateChanged
	void OnDataLayerRuntimeStateChanged(UDataLayerInstance* InDataLayer, EDataLayerRuntimeState InState);                    // [0x5067b10] Net|NetReliableNative|Event|NetMulticast|Public 
};

/// Class /Script/Engine.DataLayer
/// Size: 0x0030 (0x000028 - 0x000058)
class UDataLayer : public UObject
{ 
public:
	FName                                              DataLayerLabel;                                             // 0x0028   (0x0008)  
	bool                                               bIsRuntime : 1;                                             // 0x0030:0 (0x0001)  
	unsigned char                                      UnknownData00_4[0x3];                                       // 0x0031   (0x0003)  MISSED
	EDataLayerRuntimeState                             InitialRuntimeState;                                        // 0x0034   (0x0001)  
	unsigned char                                      UnknownData01_5[0x3];                                       // 0x0035   (0x0003)  MISSED
	FColor                                             DebugColor;                                                 // 0x0038   (0x0004)  
	unsigned char                                      UnknownData02_5[0x4];                                       // 0x003C   (0x0004)  MISSED
	UDataLayer*                                        Parent;                                                     // 0x0040   (0x0008)  
	TArray<UDataLayer*>                                Children;                                                   // 0x0048   (0x0010)  


	/// Functions
	// Function /Script/Engine.DataLayer.IsVisible
	bool IsVisible();                                                                                                        // [0x1ab4670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayer.IsRuntime
	bool IsRuntime();                                                                                                        // [0x5067aa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayer.IsInitiallyVisible
	bool IsInitiallyVisible();                                                                                               // [0x1ab4670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayer.IsInitiallyActive
	bool IsInitiallyActive();                                                                                                // [0x5067ac0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayer.IsEffectiveVisible
	bool IsEffectiveVisible();                                                                                               // [0x1ab4670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayer.IsDynamicallyLoaded
	bool IsDynamicallyLoaded();                                                                                              // [0x5067aa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayer.GetInitialState
	EDataLayerState GetInitialState();                                                                                       // [0x5067930] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayer.GetInitialRuntimeState
	EDataLayerRuntimeState GetInitialRuntimeState();                                                                         // [0x5067930] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayer.GetDebugColor
	FColor GetDebugColor();                                                                                                  // [0x15f84d0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayer.GetDataLayerLabel
	FName GetDataLayerLabel();                                                                                               // [0x14401b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayer.Equals
	bool Equals(FActorDataLayer& ActorDataLayer);                                                                            // [0x5066f80] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.DataLayerAsset
/// Size: 0x0008 (0x000028 - 0x000030)
class UDataLayerAsset : public UObject
{ 
public:
	EDataLayerType                                     DataLayerType;                                              // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0029   (0x0003)  MISSED
	FColor                                             DebugColor;                                                 // 0x002C   (0x0004)  


	/// Functions
	// Function /Script/Engine.DataLayerAsset.IsRuntime
	bool IsRuntime();                                                                                                        // [0x5067af0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerAsset.GetType
	EDataLayerType GetType();                                                                                                // [0x4a98bc0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerAsset.GetDebugColor
	FColor GetDebugColor();                                                                                                  // [0x3d6fc30] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.DataLayerInstance
/// Size: 0x0020 (0x000028 - 0x000048)
class UDataLayerInstance : public UObject
{ 
public:
	EDataLayerRuntimeState                             InitialRuntimeState;                                        // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	UDataLayerInstance*                                Parent;                                                     // 0x0030   (0x0008)  
	TArray<UDataLayerInstance*>                        Children;                                                   // 0x0038   (0x0010)  


	/// Functions
	// Function /Script/Engine.DataLayerInstance.IsVisible
	bool IsVisible();                                                                                                        // [0x1ab4670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerInstance.IsRuntime
	bool IsRuntime();                                                                                                        // [0x45cefb0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerInstance.IsInitiallyVisible
	bool IsInitiallyVisible();                                                                                               // [0x1ab4670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerInstance.IsEffectiveVisible
	bool IsEffectiveVisible();                                                                                               // [0x1ab4670] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerInstance.GetType
	EDataLayerType GetType();                                                                                                // [0x129f730] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerInstance.GetInitialRuntimeState
	EDataLayerRuntimeState GetInitialRuntimeState();                                                                         // [0x5067960] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerInstance.GetDebugColor
	FColor GetDebugColor();                                                                                                  // [0x50678f0] Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.DataLayerInstanceWithAsset
/// Size: 0x0008 (0x000048 - 0x000050)
class UDataLayerInstanceWithAsset : public UDataLayerInstance
{ 
public:
	UDataLayerAsset*                                   DataLayerAsset;                                             // 0x0048   (0x0008)  
};

/// Class /Script/Engine.DataLayerSubsystem
/// Size: 0x0070 (0x000030 - 0x0000A0)
class UDataLayerSubsystem : public UWorldSubsystem
{ 
public:
	FMulticastInlineDelegate                           OnDataLayerRuntimeStateChanged;                             // 0x0030   (0x0010)  
	unsigned char                                      UnknownData00_6[0x60];                                      // 0x0040   (0x0060)  MISSED


	/// Functions
	// Function /Script/Engine.DataLayerSubsystem.SetDataLayerStateByLabel
	void SetDataLayerStateByLabel(FName& InDataLayerLabel, EDataLayerState InState);                                         // [0x50682e0] Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.DataLayerSubsystem.SetDataLayerState
	void SetDataLayerState(FActorDataLayer& InDataLayer, EDataLayerState InState);                                           // [0x50681e0] Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.DataLayerSubsystem.SetDataLayerRuntimeStateByLabel
	void SetDataLayerRuntimeStateByLabel(FName& InDataLayerLabel, EDataLayerRuntimeState InState, bool bInIsRecursive);      // [0x5068070] Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.DataLayerSubsystem.SetDataLayerRuntimeState
	void SetDataLayerRuntimeState(FActorDataLayer& InDataLayer, EDataLayerRuntimeState InState, bool bInIsRecursive);        // [0x5067f20] Final|BlueprintAuthorityOnly|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/Engine.DataLayerSubsystem.SetDataLayerInstanceRuntimeState
	void SetDataLayerInstanceRuntimeState(UDataLayerAsset* InDataLayerAsset, EDataLayerRuntimeState InState, bool bInIsRecursive); // [0x5067de0] Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable 
	// Function /Script/Engine.DataLayerSubsystem.GetLoadedDataLayerNames
	TSet<FName> GetLoadedDataLayerNames();                                                                                   // [0x50679c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerSubsystem.GetDataLayerStateByLabel
	EDataLayerState GetDataLayerStateByLabel(FName& InDataLayerLabel);                                                       // [0x5067800] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerSubsystem.GetDataLayerState
	EDataLayerState GetDataLayerState(FActorDataLayer& InDataLayer);                                                         // [0x5067720] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerSubsystem.GetDataLayerRuntimeStateByLabel
	EDataLayerRuntimeState GetDataLayerRuntimeStateByLabel(FName& InDataLayerLabel);                                         // [0x5067800] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerSubsystem.GetDataLayerRuntimeState
	EDataLayerRuntimeState GetDataLayerRuntimeState(FActorDataLayer& InDataLayer);                                           // [0x5067720] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerSubsystem.GetDataLayerInstanceRuntimeState
	EDataLayerRuntimeState GetDataLayerInstanceRuntimeState(UDataLayerAsset* InDataLayerAsset);                              // [0x5067660] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerSubsystem.GetDataLayerInstanceFromAsset
	UDataLayerInstance* GetDataLayerInstanceFromAsset(UDataLayerAsset* InDataLayerAsset);                                    // [0x50675c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerSubsystem.GetDataLayerInstanceEffectiveRuntimeState
	EDataLayerRuntimeState GetDataLayerInstanceEffectiveRuntimeState(UDataLayerAsset* InDataLayerAsset);                     // [0x5067500] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerSubsystem.GetDataLayerFromName
	UDataLayerInstance* GetDataLayerFromName(FName InDataLayerName);                                                         // [0x5067460] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerSubsystem.GetDataLayerFromLabel
	UDataLayerInstance* GetDataLayerFromLabel(FName InDataLayerLabel);                                                       // [0x5067390] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerSubsystem.GetDataLayerEffectiveRuntimeStateByLabel
	EDataLayerRuntimeState GetDataLayerEffectiveRuntimeStateByLabel(FName& InDataLayerLabel);                                // [0x50672a0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerSubsystem.GetDataLayerEffectiveRuntimeState
	EDataLayerRuntimeState GetDataLayerEffectiveRuntimeState(FActorDataLayer& InDataLayer);                                  // [0x50671c0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerSubsystem.GetDataLayer
	UDataLayerInstance* GetDataLayer(FActorDataLayer& InDataLayer);                                                          // [0x5067110] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/Engine.DataLayerSubsystem.GetActiveDataLayerNames
	TSet<FName> GetActiveDataLayerNames();                                                                                   // [0x5067030] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/Engine.DeprecatedDataLayerInstance
/// Size: 0x0018 (0x000048 - 0x000060)
class UDeprecatedDataLayerInstance : public UDataLayerInstance
{ 
public:
	FName                                              Label;                                                      // 0x0048   (0x0008)  
	FName                                              DeprecatedDataLayerFName;                                   // 0x0050   (0x0008)  
	EDataLayerType                                     DataLayerType;                                              // 0x0058   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0059   (0x0003)  MISSED
	FColor                                             DebugColor;                                                 // 0x005C   (0x0004)  
};

/// Class /Script/Engine.WorldPartitionHLOD
/// Size: 0x0040 (0x000290 - 0x0002D0)
class AWorldPartitionHLOD : public AActor
{ 
public:
	uint32_t                                           LODLevel;                                                   // 0x0290   (0x0004)  
	bool                                               bRequireWarmup;                                             // 0x0294   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0295   (0x0003)  MISSED
	TWeakObjectPtr<UWorldPartitionRuntimeCell*>        SourceCell;                                                 // 0x0298   (0x0030)  
	FName                                              SourceCellName;                                             // 0x02C8   (0x0008)  
};

/// Class /Script/Engine.HLODBuilderSettings
/// Size: 0x0000 (0x000028 - 0x000028)
class UHLODBuilderSettings : public UObject
{ 
public:
};

/// Class /Script/Engine.NullHLODBuilder
/// Size: 0x0000 (0x000028 - 0x000028)
class UNullHLODBuilder : public UHLODBuilder
{ 
public:
};

/// Class /Script/Engine.HLODLayer
/// Size: 0x0058 (0x000028 - 0x000080)
class UHLODLayer : public UObject
{ 
public:
	EHLODLayerType                                     LayerType;                                                  // 0x0028   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0029   (0x0007)  MISSED
	UClass*                                            HLODBuilderClass;                                           // 0x0030   (0x0008)  
	UHLODBuilderSettings*                              HLODBuilderSettings;                                        // 0x0038   (0x0008)  
	bool                                               bIsSpatiallyLoaded : 1;                                     // 0x0040:0 (0x0001)  
	unsigned char                                      UnknownData01_4[0x3];                                       // 0x0041   (0x0003)  MISSED
	int32_t                                            CellSize;                                                   // 0x0044   (0x0004)  
	double                                             LoadingRange;                                               // 0x0048   (0x0008)  
	TWeakObjectPtr<UHLODLayer*>                        ParentLayer;                                                // 0x0050   (0x0030)  
};

/// Class /Script/Engine.HLODSubsystem
/// Size: 0x0060 (0x000030 - 0x000090)
class UHLODSubsystem : public UWorldSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x60];                                      // 0x0030   (0x0060)  MISSED
};

/// Class /Script/Engine.NavigationDataChunkActor
/// Size: 0x0048 (0x000290 - 0x0002D8)
class ANavigationDataChunkActor : public APartitionActor
{ 
public:
	TArray<UNavigationDataChunk*>                      NavDataChunks;                                              // 0x0290   (0x0010)  
	FBox                                               DataChunkActorBounds;                                       // 0x02A0   (0x0038)  
};

/// Class /Script/Engine.WorldPartition
/// Size: 0x00E8 (0x000028 - 0x000110)
class UWorldPartition : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x38];                                      // 0x0028   (0x0038)  MISSED
	UActorDescContainer*                               ActorDescContainer;                                         // 0x0060   (0x0008)  
	UWorldPartitionRuntimeHash*                        RuntimeHash;                                                // 0x0068   (0x0008)  
	UWorld*                                            World;                                                      // 0x0070   (0x0008)  
	bool                                               bEnableStreaming;                                           // 0x0078   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7F];                                      // 0x0079   (0x007F)  MISSED
	UWorldPartitionStreamingPolicy*                    StreamingPolicy;                                            // 0x00F8   (0x0008)  
	unsigned char                                      UnknownData02_6[0x10];                                      // 0x0100   (0x0010)  MISSED
};

/// Class /Script/Engine.WorldPartitionActorLoaderInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UWorldPartitionActorLoaderInterface : public UInterface
{ 
public:
};

/// Class /Script/Engine.WorldPartitionEditorHash
/// Size: 0x0000 (0x000028 - 0x000028)
class UWorldPartitionEditorHash : public UObject
{ 
public:
};

/// Class /Script/Engine.WorldPartitionEditorPerProjectUserSettings
/// Size: 0x0000 (0x000028 - 0x000028)
class UWorldPartitionEditorPerProjectUserSettings : public UObject
{ 
public:
};

/// Class /Script/Engine.WorldPartitionEditorSpatialHash
/// Size: 0x0000 (0x000028 - 0x000028)
class UWorldPartitionEditorSpatialHash : public UWorldPartitionEditorHash
{ 
public:
};

/// Class /Script/Engine.WorldPartitionLevelStreamingDynamic
/// Size: 0x0020 (0x0001B0 - 0x0001D0)
class UWorldPartitionLevelStreamingDynamic : public ULevelStreamingDynamic
{ 
public:
	bool                                               bShouldBeAlwaysLoaded;                                      // 0x01B0   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x01B1   (0x0003)  MISSED
	TWeakObjectPtr<UWorldPartitionRuntimeLevelStreamingCell*> StreamingCell;                                       // 0x01B4   (0x0008)  
	TWeakObjectPtr<UWorldPartition*>                   OuterWorldPartition;                                        // 0x01BC   (0x0008)  
	unsigned char                                      UnknownData01_6[0xC];                                       // 0x01C4   (0x000C)  MISSED
};

/// Class /Script/Engine.WorldPartitionStreamingPolicy
/// Size: 0x01D0 (0x000028 - 0x0001F8)
class UWorldPartitionStreamingPolicy : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x1D0];                                     // 0x0028   (0x01D0)  MISSED
};

/// Class /Script/Engine.WorldPartitionLevelStreamingPolicy
/// Size: 0x0050 (0x0001F8 - 0x000248)
class UWorldPartitionLevelStreamingPolicy : public UWorldPartitionStreamingPolicy
{ 
public:
	TMap<FName, FName>                                 SubObjectsToCellRemapping;                                  // 0x01F8   (0x0050)  
};

/// Class /Script/Engine.WorldPartitionMiniMap
/// Size: 0x00D0 (0x000290 - 0x000360)
class AWorldPartitionMiniMap : public AInfo
{ 
public:
	FBox                                               MiniMapWorldBounds;                                         // 0x0290   (0x0038)  
	FBox2D                                             UVOffset;                                                   // 0x02C8   (0x0028)  
	UTexture2D*                                        MiniMapTexture;                                             // 0x02F0   (0x0008)  
	TSet<FActorDataLayer>                              ExcludedDataLayers;                                         // 0x02F8   (0x0050)  
	int32_t                                            WorldUnitsPerPixel;                                         // 0x0348   (0x0004)  
	int32_t                                            BuilderCellSize;                                            // 0x034C   (0x0004)  
	TEnumAsByte<ESceneCaptureSource>                   CaptureSource;                                              // 0x0350   (0x0001)  
	unsigned char                                      UnknownData00_5[0x3];                                       // 0x0351   (0x0003)  MISSED
	uint32_t                                           CaptureWarmupFrames;                                        // 0x0354   (0x0004)  
	int32_t                                            MiniMapTileSize;                                            // 0x0358   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x035C   (0x0004)  MISSED
};

/// Class /Script/Engine.WorldPartitionMiniMapVolume
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class AWorldPartitionMiniMapVolume : public AVolume
{ 
public:
};

/// Class /Script/Engine.WorldPartitionReplay
/// Size: 0x0020 (0x000290 - 0x0002B0)
class AWorldPartitionReplay : public AActor
{ 
public:
	TArray<FName>                                      StreamingSourceNames;                                       // 0x0290   (0x0010)  
	unsigned char                                      UnknownData00_6[0x10];                                      // 0x02A0   (0x0010)  MISSED
};

/// Class /Script/Engine.WorldPartitionRuntimeCell
/// Size: 0x00C0 (0x000028 - 0x0000E8)
class UWorldPartitionRuntimeCell : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	bool                                               bIsAlwaysLoaded;                                            // 0x0030   (0x0001)  
	unsigned char                                      UnknownData01_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	TArray<FName>                                      DataLayers;                                                 // 0x0038   (0x0010)  
	FBox                                               ContentBounds;                                              // 0x0048   (0x0038)  
	FWorldPartitionRuntimeCellDebugInfo                DebugInfo;                                                  // 0x0080   (0x0030)  
	int32_t                                            Priority;                                                   // 0x00B0   (0x0004)  
	bool                                               bClientOnlyVisible;                                         // 0x00B4   (0x0001)  
	bool                                               bIsHLOD;                                                    // 0x00B5   (0x0001)  
	bool                                               bBlockOnSlowLoading;                                        // 0x00B6   (0x0001)  
	unsigned char                                      UnknownData02_5[0x1];                                       // 0x00B7   (0x0001)  MISSED
	FGuid                                              ContentBundleID;                                            // 0x00B8   (0x0010)  
	unsigned char                                      UnknownData03_6[0x20];                                      // 0x00C8   (0x0020)  MISSED
};

/// Class /Script/Engine.RuntimeHashExternalStreamingObjectBase
/// Size: 0x0068 (0x000028 - 0x000090)
class URuntimeHashExternalStreamingObjectBase : public UObject
{ 
public:
	unsigned char                                      UnknownData00_2[0x8];                                       // 0x0028   (0x0008)  MISSED
	TWeakObjectPtr<UWorld*>                            OwningWorld;                                                // 0x0030   (0x0030)  
	TWeakObjectPtr<UWorld*>                            OuterWorld;                                                 // 0x0060   (0x0030)  
};

/// Class /Script/Engine.WorldPartitionRuntimeHash
/// Size: 0x0008 (0x000028 - 0x000030)
class UWorldPartitionRuntimeHash : public UObject
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0028   (0x0008)  MISSED
};

/// Class /Script/Engine.WorldPartitionRuntimeSpatialHashCell
/// Size: 0x0050 (0x0000E8 - 0x000138)
class UWorldPartitionRuntimeSpatialHashCell : public UWorldPartitionRuntimeCell
{ 
public:
	FVector                                            Position;                                                   // 0x00E8   (0x0018)  
	float                                              Extent;                                                     // 0x0100   (0x0004)  
	int32_t                                            Level;                                                      // 0x0104   (0x0004)  
	unsigned char                                      UnknownData00_6[0x30];                                      // 0x0108   (0x0030)  MISSED
};

/// Class /Script/Engine.WorldPartitionRuntimeLevelStreamingCell
/// Size: 0x0008 (0x000138 - 0x000140)
class UWorldPartitionRuntimeLevelStreamingCell : public UWorldPartitionRuntimeSpatialHashCell
{ 
public:
	UWorldPartitionLevelStreamingDynamic*              LevelStreaming;                                             // 0x0138   (0x0008)  


	/// Functions
	// Function /Script/Engine.WorldPartitionRuntimeLevelStreamingCell.OnLevelShown
	void OnLevelShown();                                                                                                     // [0x5085e00] Final|Native|Private 
	// Function /Script/Engine.WorldPartitionRuntimeLevelStreamingCell.OnLevelHidden
	void OnLevelHidden();                                                                                                    // [0x5085d90] Final|Native|Private 
};

/// Class /Script/Engine.SpatialHashRuntimeGridInfo
/// Size: 0x0008 (0x000290 - 0x000298)
class ASpatialHashRuntimeGridInfo : public AInfo
{ 
public:
	FSpatialHashRuntimeGrid                            GridSettings;                                               // 0x0290   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0291   (0x0007)  MISSED
};

/// Class /Script/Engine.RuntimeSpatialHashExternalStreamingObject
/// Size: 0x0060 (0x000090 - 0x0000F0)
class URuntimeSpatialHashExternalStreamingObject : public URuntimeHashExternalStreamingObjectBase
{ 
public:
	TArray<FSpatialHashStreamingGrid>                  StreamingGrids;                                             // 0x0090   (0x0010)  
	TMap<FName, FName>                                 CellToLevelStreamingPackage;                                // 0x00A0   (0x0050)  
};

/// Class /Script/Engine.WorldPartitionRuntimeSpatialHash
/// Size: 0x0080 (0x000030 - 0x0000B0)
class UWorldPartitionRuntimeSpatialHash : public UWorldPartitionRuntimeHash
{ 
public:
	bool                                               bEnableZCulling;                                            // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_5[0x7];                                       // 0x0031   (0x0007)  MISSED
	TArray<FSpatialHashStreamingGrid>                  StreamingGrids;                                             // 0x0038   (0x0010)  
	unsigned char                                      UnknownData01_5[0x58];                                      // 0x0048   (0x0058)  MISSED
	TArray<TWeakObjectPtr>                             ExternalStreamingObjects;                                   // 0x00A0   (0x0010)  
};

/// Class /Script/Engine.WorldPartitionSubsystem
/// Size: 0x0070 (0x000040 - 0x0000B0)
class UWorldPartitionSubsystem : public UTickableWorldSubsystem
{ 
public:
	unsigned char                                      UnknownData00_1[0x70];                                      // 0x0040   (0x0070)  MISSED
};

/// Class /Script/Engine.WorldPartitionVolume
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class AWorldPartitionVolume : public AVolume
{ 
public:
};

/// Enum /Script/Engine.ETextGender
/// Size: 0x04
enum ETextGender : uint8_t
{
	ETextGender__Masculine0                                                          = 0,
	ETextGender__Feminine1                                                           = 1,
	ETextGender__Neuter2                                                             = 2,
	ETextGender__ETextGender_MAX3                                                    = 3
};

/// Enum /Script/Engine.EFormatArgumentType
/// Size: 0x07
enum EFormatArgumentType : uint8_t
{
	EFormatArgumentType__Int0                                                        = 0,
	EFormatArgumentType__UInt1                                                       = 1,
	EFormatArgumentType__Float2                                                      = 2,
	EFormatArgumentType__Double3                                                     = 3,
	EFormatArgumentType__Text4                                                       = 4,
	EFormatArgumentType__Gender5                                                     = 5,
	EFormatArgumentType__EFormatArgumentType_MAX6                                    = 6
};

/// Enum /Script/Engine.EAnimDataModelNotifyType
/// Size: 0x21
enum EAnimDataModelNotifyType : uint8_t
{
	EAnimDataModelNotifyType__BracketOpened0                                         = 0,
	EAnimDataModelNotifyType__BracketClosed1                                         = 1,
	EAnimDataModelNotifyType__TrackAdded2                                            = 2,
	EAnimDataModelNotifyType__TrackChanged3                                          = 3,
	EAnimDataModelNotifyType__TrackRemoved4                                          = 4,
	EAnimDataModelNotifyType__SequenceLengthChanged5                                 = 5,
	EAnimDataModelNotifyType__FrameRateChanged6                                      = 6,
	EAnimDataModelNotifyType__CurveAdded7                                            = 7,
	EAnimDataModelNotifyType__CurveChanged8                                          = 8,
	EAnimDataModelNotifyType__CurveRemoved9                                          = 9,
	EAnimDataModelNotifyType__CurveFlagsChanged10                                    = 10,
	EAnimDataModelNotifyType__CurveRenamed11                                         = 11,
	EAnimDataModelNotifyType__CurveScaled12                                          = 12,
	EAnimDataModelNotifyType__CurveColorChanged13                                    = 13,
	EAnimDataModelNotifyType__AttributeAdded14                                       = 14,
	EAnimDataModelNotifyType__AttributeRemoved15                                     = 15,
	EAnimDataModelNotifyType__AttributeChanged16                                     = 16,
	EAnimDataModelNotifyType__Populated17                                            = 17,
	EAnimDataModelNotifyType__Reset18                                                = 18,
	EAnimDataModelNotifyType__Invalid19                                              = 19,
	EAnimDataModelNotifyType__EAnimDataModelNotifyType_MAX20                         = 20
};

/// Enum /Script/Engine.EMovementMode
/// Size: 0x08
enum EMovementMode : uint8_t
{
	MOVE_None0                                                                       = 0,
	MOVE_Walking1                                                                    = 1,
	MOVE_NavWalking2                                                                 = 2,
	MOVE_Falling3                                                                    = 3,
	MOVE_Swimming4                                                                   = 4,
	MOVE_Flying5                                                                     = 5,
	MOVE_Custom6                                                                     = 6,
	MOVE_MAX7                                                                        = 7
};

/// Enum /Script/Engine.EAudioComponentPlayState
/// Size: 0x07
enum EAudioComponentPlayState : uint8_t
{
	EAudioComponentPlayState__Playing0                                               = 0,
	EAudioComponentPlayState__Stopped1                                               = 1,
	EAudioComponentPlayState__Paused2                                                = 2,
	EAudioComponentPlayState__FadingIn3                                              = 3,
	EAudioComponentPlayState__FadingOut4                                             = 4,
	EAudioComponentPlayState__Count5                                                 = 5,
	EAudioComponentPlayState__EAudioComponentPlayState_MAX6                          = 6
};

/// Enum /Script/Engine.EDataLayerRuntimeState
/// Size: 0x04
enum EDataLayerRuntimeState : uint8_t
{
	EDataLayerRuntimeState__Unloaded0                                                = 0,
	EDataLayerRuntimeState__Loaded1                                                  = 1,
	EDataLayerRuntimeState__Activated2                                               = 2,
	EDataLayerRuntimeState__EDataLayerRuntimeState_MAX3                              = 3
};

/// Enum /Script/Engine.EQuartzCommandDelegateSubType
/// Size: 0x07
enum EQuartzCommandDelegateSubType : uint8_t
{
	EQuartzCommandDelegateSubType__CommandOnFailedToQueue0                           = 0,
	EQuartzCommandDelegateSubType__CommandOnQueued1                                  = 1,
	EQuartzCommandDelegateSubType__CommandOnCanceled2                                = 2,
	EQuartzCommandDelegateSubType__CommandOnAboutToStart3                            = 3,
	EQuartzCommandDelegateSubType__CommandOnStarted4                                 = 4,
	EQuartzCommandDelegateSubType__Count5                                            = 5,
	EQuartzCommandDelegateSubType__EQuartzCommandDelegateSubType_MAX6                = 6
};

/// Enum /Script/Engine.EQuartzCommandQuantization
/// Size: 0x21
enum EQuartzCommandQuantization : uint8_t
{
	EQuartzCommandQuantization__Bar0                                                 = 0,
	EQuartzCommandQuantization__Beat1                                                = 1,
	EQuartzCommandQuantization__ThirtySecondNote2                                    = 2,
	EQuartzCommandQuantization__SixteenthNote3                                       = 3,
	EQuartzCommandQuantization__EighthNote4                                          = 4,
	EQuartzCommandQuantization__QuarterNote5                                         = 5,
	EQuartzCommandQuantization__HalfNote6                                            = 6,
	EQuartzCommandQuantization__WholeNote7                                           = 7,
	EQuartzCommandQuantization__DottedSixteenthNote8                                 = 8,
	EQuartzCommandQuantization__DottedEighthNote9                                    = 9,
	EQuartzCommandQuantization__DottedQuarterNote10                                  = 10,
	EQuartzCommandQuantization__DottedHalfNote11                                     = 11,
	EQuartzCommandQuantization__DottedWholeNote12                                    = 12,
	EQuartzCommandQuantization__SixteenthNoteTriplet13                               = 13,
	EQuartzCommandQuantization__EighthNoteTriplet14                                  = 14,
	EQuartzCommandQuantization__QuarterNoteTriplet15                                 = 15,
	EQuartzCommandQuantization__HalfNoteTriplet16                                    = 16,
	EQuartzCommandQuantization__Tick17                                               = 17,
	EQuartzCommandQuantization__Count18                                              = 18,
	EQuartzCommandQuantization__None19                                               = 19,
	EQuartzCommandQuantization__EQuartzCommandQuantization_MAX20                     = 20
};

/// Enum /Script/Engine.EPlatformInterfaceDataType
/// Size: 0x07
enum EPlatformInterfaceDataType : uint8_t
{
	PIDT_None0                                                                       = 0,
	PIDT_Int1                                                                        = 1,
	PIDT_Float2                                                                      = 2,
	PIDT_String3                                                                     = 3,
	PIDT_Object4                                                                     = 4,
	PIDT_Custom5                                                                     = 5,
	PIDT_MAX6                                                                        = 6
};

/// Enum /Script/Engine.EEndPlayReason
/// Size: 0x06
enum EEndPlayReason : uint8_t
{
	EEndPlayReason__Destroyed0                                                       = 0,
	EEndPlayReason__LevelTransition1                                                 = 1,
	EEndPlayReason__EndPlayInEditor2                                                 = 2,
	EEndPlayReason__RemovedFromWorld3                                                = 3,
	EEndPlayReason__Quit4                                                            = 4,
	EEndPlayReason__EEndPlayReason_MAX5                                              = 5
};

/// Enum /Script/Engine.ETickingGroup
/// Size: 0x09
enum ETickingGroup : uint8_t
{
	TG_PrePhysics0                                                                   = 0,
	TG_StartPhysics1                                                                 = 1,
	TG_DuringPhysics2                                                                = 2,
	TG_EndPhysics3                                                                   = 3,
	TG_PostPhysics4                                                                  = 4,
	TG_PostUpdateWork5                                                               = 5,
	TG_LastDemotable6                                                                = 6,
	TG_NewlySpawned7                                                                 = 7,
	TG_MAX8                                                                          = 8
};

/// Enum /Script/Engine.EComponentCreationMethod
/// Size: 0x05
enum EComponentCreationMethod : uint8_t
{
	EComponentCreationMethod__Native0                                                = 0,
	EComponentCreationMethod__SimpleConstructionScript1                              = 1,
	EComponentCreationMethod__UserConstructionScript2                                = 2,
	EComponentCreationMethod__Instance3                                              = 3,
	EComponentCreationMethod__EComponentCreationMethod_MAX4                          = 4
};

/// Enum /Script/Engine.ETemperatureSeverityType
/// Size: 0x07
enum ETemperatureSeverityType : uint8_t
{
	ETemperatureSeverityType__Unknown0                                               = 0,
	ETemperatureSeverityType__Good1                                                  = 1,
	ETemperatureSeverityType__Bad2                                                   = 2,
	ETemperatureSeverityType__Serious3                                               = 3,
	ETemperatureSeverityType__Critical4                                              = 4,
	ETemperatureSeverityType__NumSeverities5                                         = 5,
	ETemperatureSeverityType__ETemperatureSeverityType_MAX6                          = 6
};

/// Enum /Script/Engine.EPlaneConstraintAxisSetting
/// Size: 0x06
enum EPlaneConstraintAxisSetting : uint8_t
{
	EPlaneConstraintAxisSetting__Custom0                                             = 0,
	EPlaneConstraintAxisSetting__X1                                                  = 1,
	EPlaneConstraintAxisSetting__Y2                                                  = 2,
	EPlaneConstraintAxisSetting__Z3                                                  = 3,
	EPlaneConstraintAxisSetting__UseGlobalPhysicsSetting4                            = 4,
	EPlaneConstraintAxisSetting__EPlaneConstraintAxisSetting_MAX5                    = 5
};

/// Enum /Script/Engine.EInterpToBehaviourType
/// Size: 0x05
enum EInterpToBehaviourType : uint8_t
{
	EInterpToBehaviourType__OneShot0                                                 = 0,
	EInterpToBehaviourType__OneShot_Reverse1                                         = 1,
	EInterpToBehaviourType__Loop_Reset2                                              = 2,
	EInterpToBehaviourType__PingPong3                                                = 3,
	EInterpToBehaviourType__EInterpToBehaviourType_MAX4                              = 4
};

/// Enum /Script/Engine.ETeleportType
/// Size: 0x04
enum ETeleportType : uint8_t
{
	ETeleportType__None0                                                             = 0,
	ETeleportType__TeleportPhysics1                                                  = 1,
	ETeleportType__ResetPhysics2                                                     = 2,
	ETeleportType__ETeleportType_MAX3                                                = 3
};

/// Enum /Script/Engine.EObjectTypeQuery
/// Size: 0x34
enum EObjectTypeQuery : uint8_t
{
	ObjectTypeQuery10                                                                = 0,
	ObjectTypeQuery21                                                                = 1,
	ObjectTypeQuery32                                                                = 2,
	ObjectTypeQuery43                                                                = 3,
	ObjectTypeQuery54                                                                = 4,
	ObjectTypeQuery65                                                                = 5,
	ObjectTypeQuery76                                                                = 6,
	ObjectTypeQuery87                                                                = 7,
	ObjectTypeQuery98                                                                = 8,
	ObjectTypeQuery109                                                               = 9,
	ObjectTypeQuery1110                                                              = 10,
	ObjectTypeQuery1211                                                              = 11,
	ObjectTypeQuery1312                                                              = 12,
	ObjectTypeQuery1413                                                              = 13,
	ObjectTypeQuery1514                                                              = 14,
	ObjectTypeQuery1615                                                              = 15,
	ObjectTypeQuery1716                                                              = 16,
	ObjectTypeQuery1817                                                              = 17,
	ObjectTypeQuery1918                                                              = 18,
	ObjectTypeQuery2019                                                              = 19,
	ObjectTypeQuery2120                                                              = 20,
	ObjectTypeQuery2221                                                              = 21,
	ObjectTypeQuery2322                                                              = 22,
	ObjectTypeQuery2423                                                              = 23,
	ObjectTypeQuery2524                                                              = 24,
	ObjectTypeQuery2625                                                              = 25,
	ObjectTypeQuery2726                                                              = 26,
	ObjectTypeQuery2827                                                              = 27,
	ObjectTypeQuery2928                                                              = 28,
	ObjectTypeQuery3029                                                              = 29,
	ObjectTypeQuery3130                                                              = 30,
	ObjectTypeQuery3231                                                              = 31,
	ObjectTypeQuery_MAX32                                                            = 32,
	EObjectTypeQuery_MAX33                                                           = 33
};

/// Enum /Script/Engine.EDrawDebugTrace
/// Size: 0x05
enum EDrawDebugTrace : uint8_t
{
	EDrawDebugTrace__None0                                                           = 0,
	EDrawDebugTrace__ForOneFrame1                                                    = 1,
	EDrawDebugTrace__ForDuration2                                                    = 2,
	EDrawDebugTrace__Persistent3                                                     = 3,
	EDrawDebugTrace__EDrawDebugTrace_MAX4                                            = 4
};

/// Enum /Script/Engine.ETraceTypeQuery
/// Size: 0x34
enum ETraceTypeQuery : uint8_t
{
	TraceTypeQuery10                                                                 = 0,
	TraceTypeQuery21                                                                 = 1,
	TraceTypeQuery32                                                                 = 2,
	TraceTypeQuery43                                                                 = 3,
	TraceTypeQuery54                                                                 = 4,
	TraceTypeQuery65                                                                 = 5,
	TraceTypeQuery76                                                                 = 6,
	TraceTypeQuery87                                                                 = 7,
	TraceTypeQuery98                                                                 = 8,
	TraceTypeQuery109                                                                = 9,
	TraceTypeQuery1110                                                               = 10,
	TraceTypeQuery1211                                                               = 11,
	TraceTypeQuery1312                                                               = 12,
	TraceTypeQuery1413                                                               = 13,
	TraceTypeQuery1514                                                               = 14,
	TraceTypeQuery1615                                                               = 15,
	TraceTypeQuery1716                                                               = 16,
	TraceTypeQuery1817                                                               = 17,
	TraceTypeQuery1918                                                               = 18,
	TraceTypeQuery2019                                                               = 19,
	TraceTypeQuery2120                                                               = 20,
	TraceTypeQuery2221                                                               = 21,
	TraceTypeQuery2322                                                               = 22,
	TraceTypeQuery2423                                                               = 23,
	TraceTypeQuery2524                                                               = 24,
	TraceTypeQuery2625                                                               = 25,
	TraceTypeQuery2726                                                               = 26,
	TraceTypeQuery2827                                                               = 27,
	TraceTypeQuery2928                                                               = 28,
	TraceTypeQuery3029                                                               = 29,
	TraceTypeQuery3130                                                               = 30,
	TraceTypeQuery3231                                                               = 31,
	TraceTypeQuery_MAX32                                                             = 32,
	ETraceTypeQuery_MAX33                                                            = 33
};

/// Enum /Script/Engine.EMoveComponentAction
/// Size: 0x04
enum EMoveComponentAction : uint8_t
{
	EMoveComponentAction__Move0                                                      = 0,
	EMoveComponentAction__Stop1                                                      = 1,
	EMoveComponentAction__Return2                                                    = 2,
	EMoveComponentAction__EMoveComponentAction_MAX3                                  = 3
};

/// Enum /Script/Engine.EQuitPreference
/// Size: 0x03
enum EQuitPreference : uint8_t
{
	EQuitPreference__Quit0                                                           = 0,
	EQuitPreference__Background1                                                     = 1,
	EQuitPreference__EQuitPreference_MAX2                                            = 2
};

/// Enum /Script/Engine.ETravelFailure
/// Size: 0x13
enum ETravelFailure : uint8_t
{
	ETravelFailure__NoLevel0                                                         = 0,
	ETravelFailure__LoadMapFailure1                                                  = 1,
	ETravelFailure__InvalidURL2                                                      = 2,
	ETravelFailure__PackageMissing3                                                  = 3,
	ETravelFailure__PackageVersion4                                                  = 4,
	ETravelFailure__NoDownload5                                                      = 5,
	ETravelFailure__TravelFailure6                                                   = 6,
	ETravelFailure__CheatCommands7                                                   = 7,
	ETravelFailure__PendingNetGameCreateFailure8                                     = 8,
	ETravelFailure__CloudSaveFailure9                                                = 9,
	ETravelFailure__ServerTravelFailure10                                            = 10,
	ETravelFailure__ClientTravelFailure11                                            = 11,
	ETravelFailure__ETravelFailure_MAX12                                             = 12
};

/// Enum /Script/Engine.EScreenOrientation
/// Size: 0x11
enum EScreenOrientation : uint8_t
{
	EScreenOrientation__Unknown0                                                     = 0,
	EScreenOrientation__Portrait1                                                    = 1,
	EScreenOrientation__PortraitUpsideDown2                                          = 2,
	EScreenOrientation__LandscapeLeft3                                               = 3,
	EScreenOrientation__LandscapeRight4                                              = 4,
	EScreenOrientation__FaceUp5                                                      = 5,
	EScreenOrientation__FaceDown6                                                    = 6,
	EScreenOrientation__PortraitSensor7                                              = 7,
	EScreenOrientation__LandscapeSensor8                                             = 8,
	EScreenOrientation__FullSensor9                                                  = 9,
	EScreenOrientation__EScreenOrientation_MAX10                                     = 10
};

/// Enum /Script/Engine.EApplicationState
/// Size: 0x05
enum EApplicationState : uint8_t
{
	EApplicationState__Unknown0                                                      = 0,
	EApplicationState__Inactive1                                                     = 1,
	EApplicationState__Background2                                                   = 2,
	EApplicationState__Active3                                                       = 3,
	EApplicationState__EApplicationState_MAX4                                        = 4
};

/// Enum /Script/Engine.EComponentPhysicsStateChange
/// Size: 0x03
enum EComponentPhysicsStateChange : uint8_t
{
	EComponentPhysicsStateChange__Created0                                           = 0,
	EComponentPhysicsStateChange__Destroyed1                                         = 1,
	EComponentPhysicsStateChange__EComponentPhysicsStateChange_MAX2                  = 2
};

/// Enum /Script/Engine.EMouseLockMode
/// Size: 0x05
enum EMouseLockMode : uint8_t
{
	EMouseLockMode__DoNotLock0                                                       = 0,
	EMouseLockMode__LockOnCapture1                                                   = 1,
	EMouseLockMode__LockAlways2                                                      = 2,
	EMouseLockMode__LockInFullscreen3                                                = 3,
	EMouseLockMode__EMouseLockMode_MAX4                                              = 4
};

/// Enum /Script/Engine.EWindowTitleBarMode
/// Size: 0x03
enum EWindowTitleBarMode : uint8_t
{
	EWindowTitleBarMode__Overlay0                                                    = 0,
	EWindowTitleBarMode__VerticalBox1                                                = 1,
	EWindowTitleBarMode__EWindowTitleBarMode_MAX2                                    = 2
};

/// Enum /Script/Engine.ERoundingMode
/// Size: 0x08
enum ERoundingMode : uint8_t
{
	HalfToEven0                                                                      = 0,
	HalfFromZero1                                                                    = 1,
	HalfToZero2                                                                      = 2,
	FromZero3                                                                        = 3,
	ToZero4                                                                          = 4,
	ToNegativeInfinity5                                                              = 5,
	ToPositiveInfinity6                                                              = 6,
	ERoundingMode_MAX7                                                               = 7
};

/// Enum /Script/Engine.EInputEvent
/// Size: 0x06
enum EInputEvent : uint8_t
{
	IE_Pressed0                                                                      = 0,
	IE_Released1                                                                     = 1,
	IE_Repeat2                                                                       = 2,
	IE_DoubleClick3                                                                  = 3,
	IE_Axis4                                                                         = 4,
	IE_MAX5                                                                          = 5
};

/// Enum /Script/Engine.ETimelineDirection
/// Size: 0x03
enum ETimelineDirection : uint8_t
{
	ETimelineDirection__Forward0                                                     = 0,
	ETimelineDirection__Backward1                                                    = 1,
	ETimelineDirection__ETimelineDirection_MAX2                                      = 2
};

/// Enum /Script/Engine.ERelativeTransformSpace
/// Size: 0x05
enum ERelativeTransformSpace : uint8_t
{
	RTS_World0                                                                       = 0,
	RTS_Actor1                                                                       = 1,
	RTS_Component2                                                                   = 2,
	RTS_ParentBoneSpace3                                                             = 3,
	RTS_MAX4                                                                         = 4
};

/// Enum /Script/Engine.EAttachLocation
/// Size: 0x05
enum EAttachLocation : uint8_t
{
	EAttachLocation__KeepRelativeOffset0                                             = 0,
	EAttachLocation__KeepWorldPosition1                                              = 1,
	EAttachLocation__SnapToTarget2                                                   = 2,
	EAttachLocation__SnapToTargetIncludingScale3                                     = 3,
	EAttachLocation__EAttachLocation_MAX4                                            = 4
};

/// Enum /Script/Engine.EAttachmentRule
/// Size: 0x04
enum EAttachmentRule : uint8_t
{
	EAttachmentRule__KeepRelative0                                                   = 0,
	EAttachmentRule__KeepWorld1                                                      = 1,
	EAttachmentRule__SnapToTarget2                                                   = 2,
	EAttachmentRule__EAttachmentRule_MAX3                                            = 3
};

/// Enum /Script/Engine.EDetachmentRule
/// Size: 0x03
enum EDetachmentRule : uint8_t
{
	EDetachmentRule__KeepRelative0                                                   = 0,
	EDetachmentRule__KeepWorld1                                                      = 1,
	EDetachmentRule__EDetachmentRule_MAX2                                            = 2
};

/// Enum /Script/Engine.EComponentMobility
/// Size: 0x04
enum EComponentMobility : uint8_t
{
	EComponentMobility__Static0                                                      = 0,
	EComponentMobility__Stationary1                                                  = 1,
	EComponentMobility__Movable2                                                     = 2,
	EComponentMobility__EComponentMobility_MAX3                                      = 3
};

/// Enum /Script/Engine.EDetailMode
/// Size: 0x04
enum EDetailMode : uint8_t
{
	DM_Low0                                                                          = 0,
	DM_Medium1                                                                       = 1,
	DM_High2                                                                         = 2,
	DM_MAX3                                                                          = 3
};

/// Enum /Script/Engine.ECollisionEnabled
/// Size: 0x07
enum ECollisionEnabled : uint8_t
{
	ECollisionEnabled__NoCollision0                                                  = 0,
	ECollisionEnabled__QueryOnly1                                                    = 1,
	ECollisionEnabled__PhysicsOnly2                                                  = 2,
	ECollisionEnabled__QueryAndPhysics3                                              = 3,
	ECollisionEnabled__ProbeOnly4                                                    = 4,
	ECollisionEnabled__QueryAndProbe5                                                = 5,
	ECollisionEnabled__ECollisionEnabled_MAX6                                        = 6
};

/// Enum /Script/Engine.ECollisionChannel
/// Size: 0x34
enum ECollisionChannel : uint8_t
{
	ECC_WorldStatic0                                                                 = 0,
	ECC_WorldDynamic1                                                                = 1,
	ECC_Pawn2                                                                        = 2,
	ECC_Visibility3                                                                  = 3,
	ECC_Camera4                                                                      = 4,
	ECC_PhysicsBody5                                                                 = 5,
	ECC_Vehicle6                                                                     = 6,
	ECC_Destructible7                                                                = 7,
	ECC_EngineTraceChannel18                                                         = 8,
	ECC_EngineTraceChannel29                                                         = 9,
	ECC_EngineTraceChannel310                                                        = 10,
	ECC_EngineTraceChannel411                                                        = 11,
	ECC_EngineTraceChannel512                                                        = 12,
	ECC_EngineTraceChannel613                                                        = 13,
	ECC_GameTraceChannel114                                                          = 14,
	ECC_GameTraceChannel215                                                          = 15,
	ECC_GameTraceChannel316                                                          = 16,
	ECC_GameTraceChannel417                                                          = 17,
	ECC_GameTraceChannel518                                                          = 18,
	ECC_GameTraceChannel619                                                          = 19,
	ECC_GameTraceChannel720                                                          = 20,
	ECC_GameTraceChannel821                                                          = 21,
	ECC_GameTraceChannel922                                                          = 22,
	ECC_GameTraceChannel1023                                                         = 23,
	ECC_GameTraceChannel1124                                                         = 24,
	ECC_GameTraceChannel1225                                                         = 25,
	ECC_GameTraceChannel1326                                                         = 26,
	ECC_GameTraceChannel1427                                                         = 27,
	ECC_GameTraceChannel1528                                                         = 28,
	ECC_GameTraceChannel1629                                                         = 29,
	ECC_GameTraceChannel1730                                                         = 30,
	ECC_GameTraceChannel1831                                                         = 31,
	ECC_OverlapAll_Deprecated32                                                      = 32,
	ECC_MAX33                                                                        = 33
};

/// Enum /Script/Engine.ECollisionResponse
/// Size: 0x04
enum ECollisionResponse : uint8_t
{
	ECR_Ignore0                                                                      = 0,
	ECR_Overlap1                                                                     = 1,
	ECR_Block2                                                                       = 2,
	ECR_MAX3                                                                         = 3
};

/// Enum /Script/Engine.EWalkableSlopeBehavior
/// Size: 0x05
enum EWalkableSlopeBehavior : uint8_t
{
	WalkableSlope_Default0                                                           = 0,
	WalkableSlope_Increase1                                                          = 1,
	WalkableSlope_Decrease2                                                          = 2,
	WalkableSlope_Unwalkable3                                                        = 3,
	WalkableSlope_Max4                                                               = 4
};

/// Enum /Script/Engine.EDOFMode
/// Size: 0x08
enum EDOFMode : uint8_t
{
	EDOFMode__Default0                                                               = 0,
	EDOFMode__SixDOF1                                                                = 1,
	EDOFMode__YZPlane2                                                               = 2,
	EDOFMode__XZPlane3                                                               = 3,
	EDOFMode__XYPlane4                                                               = 4,
	EDOFMode__CustomPlane5                                                           = 5,
	EDOFMode__None6                                                                  = 6,
	EDOFMode__EDOFMode_MAX7                                                          = 7
};

/// Enum /Script/Engine.ERendererStencilMask
/// Size: 0x11
enum ERendererStencilMask : uint8_t
{
	ERendererStencilMask__ERSM_Default0                                              = 0,
	ERendererStencilMask__ERSM1                                                      = 1,
	ERendererStencilMask__ERSM2                                                      = 2,
	ERendererStencilMask__ERSM3                                                      = 3,
	ERendererStencilMask__ERSM4                                                      = 4,
	ERendererStencilMask__ERSM5                                                      = 5,
	ERendererStencilMask__ERSM6                                                      = 6,
	ERendererStencilMask__ERSM7                                                      = 7,
	ERendererStencilMask__ERSM8                                                      = 8,
	ERendererStencilMask__ERSM9                                                      = 9,
	ERendererStencilMask__ERSM_MAX10                                                 = 10
};

/// Enum /Script/Engine.ERayTracingGroupCullingPriority
/// Size: 0x10
enum ERayTracingGroupCullingPriority : uint8_t
{
	ERayTracingGroupCullingPriority__CP_0_NEVER_CULL0                                = 0,
	ERayTracingGroupCullingPriority__CP1                                             = 1,
	ERayTracingGroupCullingPriority__CP2                                             = 2,
	ERayTracingGroupCullingPriority__CP3                                             = 3,
	ERayTracingGroupCullingPriority__CP_4_DEFAULT4                                   = 4,
	ERayTracingGroupCullingPriority__CP5                                             = 5,
	ERayTracingGroupCullingPriority__CP6                                             = 6,
	ERayTracingGroupCullingPriority__CP7                                             = 7,
	ERayTracingGroupCullingPriority__CP_8_QUICKLY_CULL8                              = 8,
	ERayTracingGroupCullingPriority__CP_MAX9                                         = 9
};

/// Enum /Script/Engine.ERuntimeVirtualTextureMainPassType
/// Size: 0x04
enum ERuntimeVirtualTextureMainPassType : uint8_t
{
	ERuntimeVirtualTextureMainPassType__Never0                                       = 0,
	ERuntimeVirtualTextureMainPassType__Exclusive1                                   = 1,
	ERuntimeVirtualTextureMainPassType__Always2                                      = 2,
	ERuntimeVirtualTextureMainPassType__ERuntimeVirtualTextureMainPassType_MAX3      = 3
};

/// Enum /Script/Engine.ECanBeCharacterBase
/// Size: 0x04
enum ECanBeCharacterBase : uint8_t
{
	ECB_No0                                                                          = 0,
	ECB_Yes1                                                                         = 1,
	ECB_Owner2                                                                       = 2,
	ECB_MAX3                                                                         = 3
};

/// Enum /Script/Engine.EHasCustomNavigableGeometry
/// Size: 0x05
enum EHasCustomNavigableGeometry : uint8_t
{
	EHasCustomNavigableGeometry__No0                                                 = 0,
	EHasCustomNavigableGeometry__Yes1                                                = 1,
	EHasCustomNavigableGeometry__EvenIfNotCollidable2                                = 2,
	EHasCustomNavigableGeometry__DontExport3                                         = 3,
	EHasCustomNavigableGeometry__EHasCustomNavigableGeometry_MAX4                    = 4
};

/// Enum /Script/Engine.ELightmapType
/// Size: 0x04
enum ELightmapType : uint8_t
{
	ELightmapType__Default0                                                          = 0,
	ELightmapType__ForceSurface1                                                     = 1,
	ELightmapType__ForceVolumetric2                                                  = 2,
	ELightmapType__ELightmapType_MAX3                                                = 3
};

/// Enum /Script/Engine.EIndirectLightingCacheQuality
/// Size: 0x04
enum EIndirectLightingCacheQuality : uint8_t
{
	ILCQ_Off0                                                                        = 0,
	ILCQ_Point1                                                                      = 1,
	ILCQ_Volume2                                                                     = 2,
	ILCQ_MAX3                                                                        = 3
};

/// Enum /Script/Engine.ESceneDepthPriorityGroup
/// Size: 0x03
enum ESceneDepthPriorityGroup : uint8_t
{
	SDPG_World0                                                                      = 0,
	SDPG_Foreground1                                                                 = 1,
	SDPG_MAX2                                                                        = 2
};

/// Enum /Script/Engine.AnimationKeyFormat
/// Size: 0x04
enum AnimationKeyFormat : uint8_t
{
	AKF_ConstantKeyLerp0                                                             = 0,
	AKF_VariableKeyLerp1                                                             = 1,
	AKF_PerTrackCompression2                                                         = 2,
	AKF_MAX3                                                                         = 3
};

/// Enum /Script/Engine.EAnimAssetCurveFlags
/// Size: 0x09
enum EAnimAssetCurveFlags : uint8_t
{
	AACF_NONE0                                                                       = 0,
	AACF_DriveMorphTarget_DEPRECATED1                                                = 1,
	AACF_DriveAttribute_DEPRECATED2                                                  = 2,
	AACF_Editable3                                                                   = 4,
	AACF_DriveMaterial_DEPRECATED4                                                   = 8,
	AACF_Metadata5                                                                   = 16,
	AACF_DriveTrack6                                                                 = 32,
	AACF_Disabled7                                                                   = 64,
	AACF_MAX8                                                                        = 65
};

/// Enum /Script/Engine.ERawCurveTrackTypes
/// Size: 0x04
enum ERawCurveTrackTypes : uint8_t
{
	ERawCurveTrackTypes__RCT_Float0                                                  = 0,
	ERawCurveTrackTypes__RCT_Vector1                                                 = 1,
	ERawCurveTrackTypes__RCT_Transform2                                              = 2,
	ERawCurveTrackTypes__RCT_MAX3                                                    = 3
};

/// Enum /Script/Engine.ERootMotionRootLock
/// Size: 0x04
enum ERootMotionRootLock : uint8_t
{
	ERootMotionRootLock__RefPose0                                                    = 0,
	ERootMotionRootLock__AnimFirstFrame1                                             = 1,
	ERootMotionRootLock__Zero2                                                       = 2,
	ERootMotionRootLock__ERootMotionRootLock_MAX3                                    = 3
};

/// Enum /Script/Engine.ERootMotionMode
/// Size: 0x05
enum ERootMotionMode : uint8_t
{
	ERootMotionMode__NoRootMotionExtraction0                                         = 0,
	ERootMotionMode__IgnoreRootMotion1                                               = 1,
	ERootMotionMode__RootMotionFromEverything2                                       = 2,
	ERootMotionMode__RootMotionFromMontagesOnly3                                     = 3,
	ERootMotionMode__ERootMotionMode_MAX4                                            = 4
};

/// Enum /Script/Engine.EAdditiveBasePoseType
/// Size: 0x06
enum EAdditiveBasePoseType : uint8_t
{
	ABPT_None0                                                                       = 0,
	ABPT_RefPose1                                                                    = 1,
	ABPT_AnimScaled2                                                                 = 2,
	ABPT_AnimFrame3                                                                  = 3,
	ABPT_LocalAnimFrame4                                                             = 4,
	ABPT_MAX5                                                                        = 5
};

/// Enum /Script/Engine.AnimationCompressionFormat
/// Size: 0x08
enum AnimationCompressionFormat : uint8_t
{
	ACF_None0                                                                        = 0,
	ACF_Float96NoW1                                                                  = 1,
	ACF_Fixed48NoW2                                                                  = 2,
	ACF_IntervalFixed32NoW3                                                          = 3,
	ACF_Fixed32NoW4                                                                  = 4,
	ACF_Float32NoW5                                                                  = 5,
	ACF_Identity6                                                                    = 6,
	ACF_MAX7                                                                         = 7
};

/// Enum /Script/Engine.AnimPhysTwistAxis
/// Size: 0x04
enum AnimPhysTwistAxis : uint8_t
{
	AnimPhysTwistAxis__AxisX0                                                        = 0,
	AnimPhysTwistAxis__AxisY1                                                        = 1,
	AnimPhysTwistAxis__AxisZ2                                                        = 2,
	AnimPhysTwistAxis__AnimPhysTwistAxis_MAX3                                        = 3
};

/// Enum /Script/Engine.AnimPhysCollisionType
/// Size: 0x05
enum AnimPhysCollisionType : uint8_t
{
	AnimPhysCollisionType__CoM0                                                      = 0,
	AnimPhysCollisionType__CustomSphere1                                             = 1,
	AnimPhysCollisionType__InnerSphere2                                              = 2,
	AnimPhysCollisionType__OuterSphere3                                              = 3,
	AnimPhysCollisionType__AnimPhysCollisionType_MAX4                                = 4
};

/// Enum /Script/Engine.ETypeAdvanceAnim
/// Size: 0x04
enum ETypeAdvanceAnim : uint8_t
{
	ETAA_Default0                                                                    = 0,
	ETAA_Finished1                                                                   = 1,
	ETAA_Looped2                                                                     = 2,
	ETAA_MAX3                                                                        = 3
};

/// Enum /Script/Engine.EBoneAxis
/// Size: 0x04
enum EBoneAxis : uint8_t
{
	BA_X0                                                                            = 0,
	BA_Y1                                                                            = 1,
	BA_Z2                                                                            = 2,
	BA_MAX3                                                                          = 3
};

/// Enum /Script/Engine.EBoneControlSpace
/// Size: 0x05
enum EBoneControlSpace : uint8_t
{
	BCS_WorldSpace0                                                                  = 0,
	BCS_ComponentSpace1                                                              = 1,
	BCS_ParentBoneSpace2                                                             = 2,
	BCS_BoneSpace3                                                                   = 3,
	BCS_MAX4                                                                         = 4
};

/// Enum /Script/Engine.EBoneRotationSource
/// Size: 0x04
enum EBoneRotationSource : uint8_t
{
	BRS_KeepComponentSpaceRotation0                                                  = 0,
	BRS_KeepLocalSpaceRotation1                                                      = 1,
	BRS_CopyFromTarget2                                                              = 2,
	BRS_MAX3                                                                         = 3
};

/// Enum /Script/Engine.EMontageNotifyTickType
/// Size: 0x03
enum EMontageNotifyTickType : uint8_t
{
	EMontageNotifyTickType__Queued0                                                  = 0,
	EMontageNotifyTickType__BranchingPoint1                                          = 1,
	EMontageNotifyTickType__EMontageNotifyTickType_MAX2                              = 2
};

/// Enum /Script/Engine.ENotifyFilterType
/// Size: 0x03
enum ENotifyFilterType : uint8_t
{
	ENotifyFilterType__NoFiltering0                                                  = 0,
	ENotifyFilterType__LOD1                                                          = 1,
	ENotifyFilterType__ENotifyFilterType_MAX2                                        = 2
};

/// Enum /Script/Engine.EAdditiveAnimationType
/// Size: 0x04
enum EAdditiveAnimationType : uint8_t
{
	AAT_None0                                                                        = 0,
	AAT_LocalSpaceBase1                                                              = 1,
	AAT_RotationOffsetMeshSpace2                                                     = 2,
	AAT_MAX3                                                                         = 3
};

/// Enum /Script/Engine.ECurveBlendOption
/// Size: 0x08
enum ECurveBlendOption : uint8_t
{
	ECurveBlendOption__Override0                                                     = 0,
	ECurveBlendOption__DoNotOverride1                                                = 1,
	ECurveBlendOption__NormalizeByWeight2                                            = 2,
	ECurveBlendOption__BlendByWeight3                                                = 3,
	ECurveBlendOption__UseBasePose4                                                  = 4,
	ECurveBlendOption__UseMaxValue5                                                  = 5,
	ECurveBlendOption__UseMinValue6                                                  = 6,
	ECurveBlendOption__ECurveBlendOption_MAX7                                        = 7
};

/// Enum /Script/Engine.EAnimInterpolationType
/// Size: 0x03
enum EAnimInterpolationType : uint8_t
{
	EAnimInterpolationType__Linear0                                                  = 0,
	EAnimInterpolationType__Step1                                                    = 1,
	EAnimInterpolationType__EAnimInterpolationType_MAX2                              = 2
};

/// Enum /Script/Engine.EAxisOption
/// Size: 0x08
enum EAxisOption : uint8_t
{
	EAxisOption__X0                                                                  = 0,
	EAxisOption__Y1                                                                  = 1,
	EAxisOption__Z2                                                                  = 2,
	EAxisOption__X_Neg3                                                              = 3,
	EAxisOption__Y_Neg4                                                              = 4,
	EAxisOption__Z_Neg5                                                              = 5,
	EAxisOption__Custom6                                                             = 6,
	EAxisOption__EAxisOption_MAX7                                                    = 7
};

/// Enum /Script/Engine.EComponentType
/// Size: 0x12
enum EComponentType : uint8_t
{
	EComponentType__None0                                                            = 0,
	EComponentType__TranslationX1                                                    = 1,
	EComponentType__TranslationY2                                                    = 2,
	EComponentType__TranslationZ3                                                    = 3,
	EComponentType__RotationX4                                                       = 4,
	EComponentType__RotationY5                                                       = 5,
	EComponentType__RotationZ6                                                       = 6,
	EComponentType__Scale7                                                           = 7,
	EComponentType__ScaleX8                                                          = 8,
	EComponentType__ScaleY9                                                          = 9,
	EComponentType__ScaleZ10                                                         = 10,
	EComponentType__EComponentType_MAX11                                             = 11
};

/// Enum /Script/Engine.EAudioOutputTarget
/// Size: 0x04
enum EAudioOutputTarget : uint8_t
{
	EAudioOutputTarget__Speaker0                                                     = 0,
	EAudioOutputTarget__Controller1                                                  = 1,
	EAudioOutputTarget__ControllerFallbackToSpeaker2                                 = 2,
	EAudioOutputTarget__EAudioOutputTarget_MAX3                                      = 3
};

/// Enum /Script/Engine.EBlendableLocation
/// Size: 0x06
enum EBlendableLocation : uint8_t
{
	BL_AfterTonemapping0                                                             = 0,
	BL_BeforeTonemapping1                                                            = 1,
	BL_BeforeTranslucency2                                                           = 2,
	BL_ReplacingTonemapper3                                                          = 3,
	BL_SSRInput4                                                                     = 4,
	BL_MAX5                                                                          = 5
};

/// Enum /Script/Engine.EBlendSpaceAxis
/// Size: 0x04
enum EBlendSpaceAxis : uint8_t
{
	BSA_None0                                                                        = 0,
	BSA_X1                                                                           = 1,
	BSA_Y2                                                                           = 2,
	BSA_MAX3                                                                         = 3
};

/// Enum /Script/Engine.EPreferredTriangulationDirection
/// Size: 0x04
enum EPreferredTriangulationDirection : uint8_t
{
	EPreferredTriangulationDirection__None0                                          = 0,
	EPreferredTriangulationDirection__Tangential1                                    = 1,
	EPreferredTriangulationDirection__Radial2                                        = 2,
	EPreferredTriangulationDirection__EPreferredTriangulationDirection_MAX3          = 3
};

/// Enum /Script/Engine.ENotifyTriggerMode
/// Size: 0x04
enum ENotifyTriggerMode : uint8_t
{
	ENotifyTriggerMode__AllAnimations0                                               = 0,
	ENotifyTriggerMode__HighestWeightedAnimation1                                    = 1,
	ENotifyTriggerMode__None2                                                        = 2,
	ENotifyTriggerMode__ENotifyTriggerMode_MAX3                                      = 3
};

/// Enum /Script/Engine.EBlueprintStatus
/// Size: 0x07
enum EBlueprintStatus : uint8_t
{
	BS_Unknown0                                                                      = 0,
	BS_Dirty1                                                                        = 1,
	BS_Error2                                                                        = 2,
	BS_UpToDate3                                                                     = 3,
	BS_BeingCreated4                                                                 = 4,
	BS_UpToDateWithWarnings5                                                         = 5,
	BS_MAX6                                                                          = 6
};

/// Enum /Script/Engine.EBlueprintType
/// Size: 0x07
enum EBlueprintType : uint8_t
{
	BPTYPE_Normal0                                                                   = 0,
	BPTYPE_Const1                                                                    = 1,
	BPTYPE_MacroLibrary2                                                             = 2,
	BPTYPE_Interface3                                                                = 3,
	BPTYPE_LevelScript4                                                              = 4,
	BPTYPE_FunctionLibrary5                                                          = 5,
	BPTYPE_MAX6                                                                      = 6
};

/// Enum /Script/Engine.EBlueprintCompileMode
/// Size: 0x04
enum EBlueprintCompileMode : uint8_t
{
	EBlueprintCompileMode__Default0                                                  = 0,
	EBlueprintCompileMode__Development1                                              = 1,
	EBlueprintCompileMode__FinalRelease2                                             = 2,
	EBlueprintCompileMode__EBlueprintCompileMode_MAX3                                = 3
};

/// Enum /Script/Engine.EBlueprintNativizationFlag
/// Size: 0x04
enum EBlueprintNativizationFlag : uint8_t
{
	EBlueprintNativizationFlag__Disabled0                                            = 0,
	EBlueprintNativizationFlag__Dependency1                                          = 1,
	EBlueprintNativizationFlag__ExplicitlyEnabled2                                   = 2,
	EBlueprintNativizationFlag__EBlueprintNativizationFlag_MAX3                      = 3
};

/// Enum /Script/Engine.EShouldCookBlueprintPropertyGuids
/// Size: 0x04
enum EShouldCookBlueprintPropertyGuids : uint8_t
{
	EShouldCookBlueprintPropertyGuids__No0                                           = 0,
	EShouldCookBlueprintPropertyGuids__Yes1                                          = 1,
	EShouldCookBlueprintPropertyGuids__Inherit2                                      = 2,
	EShouldCookBlueprintPropertyGuids__EShouldCookBlueprintPropertyGuids_MAX3        = 3
};

/// Enum /Script/Engine.ECsgOper
/// Size: 0x07
enum ECsgOper : uint8_t
{
	CSG_Active0                                                                      = 0,
	CSG_Add1                                                                         = 1,
	CSG_Subtract2                                                                    = 2,
	CSG_Intersect3                                                                   = 3,
	CSG_Deintersect4                                                                 = 4,
	CSG_None5                                                                        = 5,
	CSG_MAX6                                                                         = 6
};

/// Enum /Script/Engine.EBrushType
/// Size: 0x04
enum EBrushType : uint8_t
{
	Brush_Default0                                                                   = 0,
	Brush_Add1                                                                       = 1,
	Brush_Subtract2                                                                  = 2,
	Brush_MAX3                                                                       = 3
};

/// Enum /Script/Engine.ECameraProjectionMode
/// Size: 0x03
enum ECameraProjectionMode : uint8_t
{
	ECameraProjectionMode__Perspective0                                              = 0,
	ECameraProjectionMode__Orthographic1                                             = 1,
	ECameraProjectionMode__ECameraProjectionMode_MAX2                                = 2
};

/// Enum /Script/Engine.ECameraShakePlaySpace
/// Size: 0x04
enum ECameraShakePlaySpace : uint8_t
{
	ECameraShakePlaySpace__CameraLocal0                                              = 0,
	ECameraShakePlaySpace__World1                                                    = 1,
	ECameraShakePlaySpace__UserDefined2                                              = 2,
	ECameraShakePlaySpace__ECameraShakePlaySpace_MAX3                                = 3
};

/// Enum /Script/Engine.ECloudStorageDelegate
/// Size: 0x08
enum ECloudStorageDelegate : uint8_t
{
	CSD_KeyValueReadComplete0                                                        = 0,
	CSD_KeyValueWriteComplete1                                                       = 1,
	CSD_ValueChanged2                                                                = 2,
	CSD_DocumentQueryComplete3                                                       = 3,
	CSD_DocumentReadComplete4                                                        = 4,
	CSD_DocumentWriteComplete5                                                       = 5,
	CSD_DocumentConflictDetected6                                                    = 6,
	CSD_MAX7                                                                         = 7
};

/// Enum /Script/Engine.EContentBundleClientState
/// Size: 0x06
enum EContentBundleClientState : uint8_t
{
	EContentBundleClientState__Unregistered0                                         = 0,
	EContentBundleClientState__Registered1                                           = 1,
	EContentBundleClientState__ContentInjectionRequested2                            = 2,
	EContentBundleClientState__ContentRemovalRequested3                              = 3,
	EContentBundleClientState__RegistrationFailed4                                   = 4,
	EContentBundleClientState__EContentBundleClientState_MAX5                        = 5
};

/// Enum /Script/Engine.EWorldContentState
/// Size: 0x04
enum EWorldContentState : uint8_t
{
	EWorldContentState__NoContent0                                                   = 0,
	EWorldContentState__ContentBundleInjected1                                       = 1,
	EWorldContentState__ContentBundleInjectionFailed2                                = 2,
	EWorldContentState__EWorldContentState_MAX3                                      = 3
};

/// Enum /Script/Engine.EContentBundleStatus
/// Size: 0x06
enum EContentBundleStatus : uint8_t
{
	EContentBundleStatus__Registered0                                                = 0,
	EContentBundleStatus__ReadyToInject1                                             = 1,
	EContentBundleStatus__FailedToInject2                                            = 2,
	EContentBundleStatus__ContentInjected3                                           = 3,
	EContentBundleStatus__Unknown4                                                   = -1,
	EContentBundleStatus__EContentBundleStatus_MAX5                                  = 4
};

/// Enum /Script/Engine.ECustomAttributeBlendType
/// Size: 0x03
enum ECustomAttributeBlendType : uint8_t
{
	ECustomAttributeBlendType__Override0                                             = 0,
	ECustomAttributeBlendType__Blend1                                                = 1,
	ECustomAttributeBlendType__ECustomAttributeBlendType_MAX2                        = 2
};

/// Enum /Script/Engine.EDataLayerType
/// Size: 0x05
enum EDataLayerType : uint8_t
{
	EDataLayerType__Runtime0                                                         = 0,
	EDataLayerType__Editor1                                                          = 1,
	EDataLayerType__Unknown2                                                         = 2,
	EDataLayerType__Size3                                                            = 3,
	EDataLayerType__EDataLayerType_MAX4                                              = 4
};

/// Enum /Script/Engine.DistributionParamMode
/// Size: 0x04
enum DistributionParamMode : uint8_t
{
	DPM_Normal0                                                                      = 0,
	DPM_Abs1                                                                         = 1,
	DPM_Direct2                                                                      = 2,
	DPM_MAX3                                                                         = 3
};

/// Enum /Script/Engine.EDistributionVectorLockFlags
/// Size: 0x06
enum EDistributionVectorLockFlags : uint8_t
{
	EDVLF_None0                                                                      = 0,
	EDVLF_XY1                                                                        = 1,
	EDVLF_XZ2                                                                        = 2,
	EDVLF_YZ3                                                                        = 3,
	EDVLF_XYZ4                                                                       = 4,
	EDVLF_MAX5                                                                       = 5
};

/// Enum /Script/Engine.EDistributionVectorMirrorFlags
/// Size: 0x04
enum EDistributionVectorMirrorFlags : uint8_t
{
	EDVMF_Same0                                                                      = 0,
	EDVMF_Different1                                                                 = 1,
	EDVMF_Mirror2                                                                    = 2,
	EDVMF_MAX3                                                                       = 3
};

/// Enum /Script/Engine.EEdGraphPinDirection
/// Size: 0x03
enum EEdGraphPinDirection : uint8_t
{
	EGPD_Input0                                                                      = 0,
	EGPD_Output1                                                                     = 1,
	EGPD_MAX2                                                                        = 2
};

/// Enum /Script/Engine.EPinContainerType
/// Size: 0x05
enum EPinContainerType : uint8_t
{
	EPinContainerType__None0                                                         = 0,
	EPinContainerType__Array1                                                        = 1,
	EPinContainerType__Set2                                                          = 2,
	EPinContainerType__Map3                                                          = 3,
	EPinContainerType__EPinContainerType_MAX4                                        = 4
};

/// Enum /Script/Engine.ENodeTitleType
/// Size: 0x06
enum ENodeTitleType : uint8_t
{
	ENodeTitleType__FullTitle0                                                       = 0,
	ENodeTitleType__ListView1                                                        = 1,
	ENodeTitleType__EditableTitle2                                                   = 2,
	ENodeTitleType__MenuTitle3                                                       = 3,
	ENodeTitleType__MAX_TitleTypes4                                                  = 4,
	ENodeTitleType__ENodeTitleType_MAX5                                              = 5
};

/// Enum /Script/Engine.ENodeAdvancedPins
/// Size: 0x04
enum ENodeAdvancedPins : uint8_t
{
	ENodeAdvancedPins__NoPins0                                                       = 0,
	ENodeAdvancedPins__Shown1                                                        = 1,
	ENodeAdvancedPins__Hidden2                                                       = 2,
	ENodeAdvancedPins__ENodeAdvancedPins_MAX3                                        = 3
};

/// Enum /Script/Engine.ENodeEnabledState
/// Size: 0x04
enum ENodeEnabledState : uint8_t
{
	ENodeEnabledState__Enabled0                                                      = 0,
	ENodeEnabledState__Disabled1                                                     = 1,
	ENodeEnabledState__DevelopmentOnly2                                              = 2,
	ENodeEnabledState__ENodeEnabledState_MAX3                                        = 3
};

/// Enum /Script/Engine.EBlueprintPinStyleType
/// Size: 0x03
enum EBlueprintPinStyleType : uint8_t
{
	BPST_Original0                                                                   = 0,
	BPST_VariantA1                                                                   = 1,
	BPST_MAX2                                                                        = 2
};

/// Enum /Script/Engine.EGraphType
/// Size: 0x06
enum EGraphType : uint8_t
{
	GT_Function0                                                                     = 0,
	GT_Ubergraph1                                                                    = 1,
	GT_Macro2                                                                        = 2,
	GT_Animation3                                                                    = 3,
	GT_StateMachine4                                                                 = 4,
	GT_MAX5                                                                          = 5
};

/// Enum /Script/Engine.ECanCreateConnectionResponse
/// Size: 0x08
enum ECanCreateConnectionResponse : uint8_t
{
	CONNECT_RESPONSE_MAKE0                                                           = 0,
	CONNECT_RESPONSE_DISALLOW1                                                       = 1,
	CONNECT_RESPONSE_BREAK_OTHERS_A2                                                 = 2,
	CONNECT_RESPONSE_BREAK_OTHERS_B3                                                 = 3,
	CONNECT_RESPONSE_BREAK_OTHERS_AB4                                                = 4,
	CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE5                                      = 5,
	CONNECT_RESPONSE_MAKE_WITH_PROMOTION6                                            = 6,
	CONNECT_RESPONSE_MAX7                                                            = 7
};

/// Enum /Script/Engine.EFullyLoadPackageType
/// Size: 0x06
enum EFullyLoadPackageType : uint8_t
{
	FULLYLOAD_Map0                                                                   = 0,
	FULLYLOAD_Game_PreLoadClass1                                                     = 1,
	FULLYLOAD_Game_PostLoadClass2                                                    = 2,
	FULLYLOAD_Always3                                                                = 3,
	FULLYLOAD_Mutator4                                                               = 4,
	FULLYLOAD_MAX5                                                                   = 5
};

/// Enum /Script/Engine.ETransitionType
/// Size: 0x08
enum ETransitionType : uint8_t
{
	ETransitionType__None0                                                           = 0,
	ETransitionType__Paused1                                                         = 1,
	ETransitionType__Loading2                                                        = 2,
	ETransitionType__Saving3                                                         = 3,
	ETransitionType__Connecting4                                                     = 4,
	ETransitionType__Precaching5                                                     = 5,
	ETransitionType__WaitingToConnect6                                               = 6,
	ETransitionType__MAX7                                                            = 7
};

/// Enum /Script/Engine.EMouseCaptureMode
/// Size: 0x06
enum EMouseCaptureMode : uint8_t
{
	EMouseCaptureMode__NoCapture0                                                    = 0,
	EMouseCaptureMode__CapturePermanently1                                           = 1,
	EMouseCaptureMode__CapturePermanently_IncludingInitialMouseDown2                 = 2,
	EMouseCaptureMode__CaptureDuringMouseDown3                                       = 3,
	EMouseCaptureMode__CaptureDuringRightMouseDown4                                  = 4,
	EMouseCaptureMode__EMouseCaptureMode_MAX5                                        = 5
};

/// Enum /Script/Engine.ENetworkLagState
/// Size: 0x03
enum ENetworkLagState : uint8_t
{
	ENetworkLagState__NotLagging0                                                    = 0,
	ENetworkLagState__Lagging1                                                       = 1,
	ENetworkLagState__ENetworkLagState_MAX2                                          = 2
};

/// Enum /Script/Engine.ETravelType
/// Size: 0x04
enum ETravelType : uint8_t
{
	TRAVEL_Absolute0                                                                 = 0,
	TRAVEL_Partial1                                                                  = 1,
	TRAVEL_Relative2                                                                 = 2,
	TRAVEL_MAX3                                                                      = 3
};

/// Enum /Script/Engine.EDemoPlayFailure
/// Size: 0x10
enum EDemoPlayFailure : uint8_t
{
	EDemoPlayFailure__Generic0                                                       = 0,
	EDemoPlayFailure__DemoNotFound1                                                  = 1,
	EDemoPlayFailure__Corrupt2                                                       = 2,
	EDemoPlayFailure__InvalidVersion3                                                = 3,
	EDemoPlayFailure__InitBase4                                                      = 4,
	EDemoPlayFailure__GameSpecificHeader5                                            = 5,
	EDemoPlayFailure__ReplayStreamerInternal6                                        = 6,
	EDemoPlayFailure__LoadMap7                                                       = 7,
	EDemoPlayFailure__Serialization8                                                 = 8,
	EDemoPlayFailure__EDemoPlayFailure_MAX9                                          = 9
};

/// Enum /Script/Engine.EViewModeIndex
/// Size: 0x33
enum EViewModeIndex : uint8_t
{
	VMI_BrushWireframe0                                                              = 0,
	VMI_Wireframe1                                                                   = 1,
	VMI_Unlit2                                                                       = 2,
	VMI_Lit3                                                                         = 3,
	VMI_Lit_DetailLighting4                                                          = 4,
	VMI_LightingOnly5                                                                = 5,
	VMI_LightComplexity6                                                             = 6,
	VMI_ShaderComplexity7                                                            = 8,
	VMI_LightmapDensity8                                                             = 9,
	VMI_LitLightmapDensity9                                                          = 10,
	VMI_ReflectionOverride10                                                         = 11,
	VMI_VisualizeBuffer11                                                            = 12,
	VMI_StationaryLightOverlap12                                                     = 14,
	VMI_CollisionPawn13                                                              = 15,
	VMI_CollisionVisibility14                                                        = 16,
	VMI_LODColoration15                                                              = 18,
	VMI_QuadOverdraw16                                                               = 19,
	VMI_PrimitiveDistanceAccuracy17                                                  = 20,
	VMI_MeshUVDensityAccuracy18                                                      = 21,
	VMI_ShaderComplexityWithQuadOverdraw19                                           = 22,
	VMI_HLODColoration20                                                             = 23,
	VMI_GroupLODColoration21                                                         = 24,
	VMI_MaterialTextureScaleAccuracy22                                               = 25,
	VMI_RequiredTextureResolution23                                                  = 26,
	VMI_PathTracing24                                                                = 27,
	VMI_RayTracingDebug25                                                            = 28,
	VMI_VisualizeNanite26                                                            = 29,
	VMI_VirtualTexturePendingMips27                                                  = 30,
	VMI_VisualizeLumen28                                                             = 31,
	VMI_VisualizeVirtualShadowMap29                                                  = 32,
	VMI_VisualizeGPUSkinCache30                                                      = 33,
	VMI_Max31                                                                        = 34,
	VMI_Unknown32                                                                    = 255
};

/// Enum /Script/Engine.EAspectRatioAxisConstraint
/// Size: 0x04
enum EAspectRatioAxisConstraint : uint8_t
{
	AspectRatio_MaintainYFOV0                                                        = 0,
	AspectRatio_MaintainXFOV1                                                        = 1,
	AspectRatio_MajorAxisFOV2                                                        = 2,
	AspectRatio_MAX3                                                                 = 3
};

/// Enum /Script/Engine.EOcclusionCombineMode
/// Size: 0x03
enum EOcclusionCombineMode : uint8_t
{
	OCM_Minimum0                                                                     = 0,
	OCM_Multiply1                                                                    = 1,
	OCM_MAX2                                                                         = 2
};

/// Enum /Script/Engine.EBlendMode
/// Size: 0x08
enum EBlendMode : uint8_t
{
	BLEND_Opaque0                                                                    = 0,
	BLEND_Masked1                                                                    = 1,
	BLEND_Translucent2                                                               = 2,
	BLEND_Additive3                                                                  = 3,
	BLEND_Modulate4                                                                  = 4,
	BLEND_AlphaComposite5                                                            = 5,
	BLEND_AlphaHoldout6                                                              = 6,
	BLEND_MAX7                                                                       = 7
};

/// Enum /Script/Engine.EStrataBlendMode
/// Size: 0x07
enum EStrataBlendMode : uint8_t
{
	SBM_Opaque0                                                                      = 0,
	SBM_Masked1                                                                      = 1,
	SBM_TranslucentGreyTransmittance2                                                = 2,
	SBM_TranslucentColoredTransmittance3                                             = 3,
	SBM_ColoredTransmittanceOnly4                                                    = 4,
	SBM_AlphaHoldout5                                                                = 5,
	SBM_MAX6                                                                         = 6
};

/// Enum /Script/Engine.EMaterialFloatPrecisionMode
/// Size: 0x05
enum EMaterialFloatPrecisionMode : uint8_t
{
	MFPM_Default0                                                                    = 0,
	MFPM_Full_MaterialExpressionOnly1                                                = 1,
	MFPM_Full2                                                                       = 2,
	MFPM_Half3                                                                       = 3,
	MFPM_MAX4                                                                        = 4
};

/// Enum /Script/Engine.ESamplerSourceMode
/// Size: 0x05
enum ESamplerSourceMode : uint8_t
{
	SSM_FromTextureAsset0                                                            = 0,
	SSM_Wrap_WorldGroupSettings1                                                     = 1,
	SSM_Clamp_WorldGroupSettings2                                                    = 2,
	SSM_TerrainWeightmapGroupSettings3                                               = 3,
	SSM_MAX4                                                                         = 4
};

/// Enum /Script/Engine.ETextureMipValueMode
/// Size: 0x05
enum ETextureMipValueMode : uint8_t
{
	TMVM_None0                                                                       = 0,
	TMVM_MipLevel1                                                                   = 1,
	TMVM_MipBias2                                                                    = 2,
	TMVM_Derivative3                                                                 = 3,
	TMVM_MAX4                                                                        = 4
};

/// Enum /Script/Engine.ETranslucencyLightingMode
/// Size: 0x07
enum ETranslucencyLightingMode : uint8_t
{
	TLM_VolumetricNonDirectional0                                                    = 0,
	TLM_VolumetricDirectional1                                                       = 1,
	TLM_VolumetricPerVertexNonDirectional2                                           = 2,
	TLM_VolumetricPerVertexDirectional3                                              = 3,
	TLM_Surface4                                                                     = 4,
	TLM_SurfacePerPixelLighting5                                                     = 5,
	TLM_MAX6                                                                         = 6
};

/// Enum /Script/Engine.ERefractionMode
/// Size: 0x03
enum ERefractionMode : uint8_t
{
	RM_IndexOfRefraction0                                                            = 0,
	RM_PixelNormalOffset1                                                            = 1,
	RM_MAX2                                                                          = 2
};

/// Enum /Script/Engine.ETranslucentSortPolicy
/// Size: 0x04
enum ETranslucentSortPolicy : uint8_t
{
	ETranslucentSortPolicy__SortByDistance0                                          = 0,
	ETranslucentSortPolicy__SortByProjectedZ1                                        = 1,
	ETranslucentSortPolicy__SortAlongAxis2                                           = 2,
	ETranslucentSortPolicy__ETranslucentSortPolicy_MAX3                              = 3
};

/// Enum /Script/Engine.EDynamicGlobalIlluminationMethod
/// Size: 0x06
enum EDynamicGlobalIlluminationMethod : uint8_t
{
	EDynamicGlobalIlluminationMethod__None0                                          = 0,
	EDynamicGlobalIlluminationMethod__Lumen1                                         = 1,
	EDynamicGlobalIlluminationMethod__ScreenSpace2                                   = 2,
	EDynamicGlobalIlluminationMethod__RayTraced3                                     = 3,
	EDynamicGlobalIlluminationMethod__Plugin4                                        = 4,
	EDynamicGlobalIlluminationMethod__EDynamicGlobalIlluminationMethod_MAX5          = 5
};

/// Enum /Script/Engine.EReflectionMethod
/// Size: 0x05
enum EReflectionMethod : uint8_t
{
	EReflectionMethod__None0                                                         = 0,
	EReflectionMethod__Lumen1                                                        = 1,
	EReflectionMethod__ScreenSpace2                                                  = 2,
	EReflectionMethod__RayTraced3                                                    = 3,
	EReflectionMethod__EReflectionMethod_MAX4                                        = 4
};

/// Enum /Script/Engine.EShadowMapMethod
/// Size: 0x03
enum EShadowMapMethod : uint8_t
{
	EShadowMapMethod__ShadowMaps0                                                    = 0,
	EShadowMapMethod__VirtualShadowMaps1                                             = 1,
	EShadowMapMethod__EShadowMapMethod_MAX2                                          = 2
};

/// Enum /Script/Engine.ECastRayTracedShadow
/// Size: 0x04
enum ECastRayTracedShadow : uint8_t
{
	ECastRayTracedShadow__Disabled0                                                  = 0,
	ECastRayTracedShadow__UseProjectSetting1                                         = 1,
	ECastRayTracedShadow__Enabled2                                                   = 2,
	ECastRayTracedShadow__ECastRayTracedShadow_MAX3                                  = 3
};

/// Enum /Script/Engine.ESceneCaptureSource
/// Size: 0x11
enum ESceneCaptureSource : uint8_t
{
	SCS_SceneColorHDR0                                                               = 0,
	SCS_SceneColorHDRNoAlpha1                                                        = 1,
	SCS_FinalColorLDR2                                                               = 2,
	SCS_SceneColorSceneDepth3                                                        = 3,
	SCS_SceneDepth4                                                                  = 4,
	SCS_DeviceDepth5                                                                 = 5,
	SCS_Normal6                                                                      = 6,
	SCS_BaseColor7                                                                   = 7,
	SCS_FinalColorHDR8                                                               = 8,
	SCS_FinalToneCurveHDR9                                                           = 9,
	SCS_MAX10                                                                        = 10
};

/// Enum /Script/Engine.ESceneCaptureCompositeMode
/// Size: 0x04
enum ESceneCaptureCompositeMode : uint8_t
{
	SCCM_Overwrite0                                                                  = 0,
	SCCM_Additive1                                                                   = 1,
	SCCM_Composite2                                                                  = 2,
	SCCM_MAX3                                                                        = 3
};

/// Enum /Script/Engine.EGBufferFormat
/// Size: 0x05
enum EGBufferFormat : uint8_t
{
	EGBufferFormat__Force8BitsPerChannel0                                            = 0,
	EGBufferFormat__Default1                                                         = 1,
	EGBufferFormat__HighPrecisionNormals2                                            = 3,
	EGBufferFormat__Force16BitsPerChannel3                                           = 5,
	EGBufferFormat__EGBufferFormat_MAX4                                              = 6
};

/// Enum /Script/Engine.ETrailWidthMode
/// Size: 0x04
enum ETrailWidthMode : uint8_t
{
	ETrailWidthMode_FromCentre0                                                      = 0,
	ETrailWidthMode_FromFirst1                                                       = 1,
	ETrailWidthMode_FromSecond2                                                      = 2,
	ETrailWidthMode_MAX3                                                             = 3
};

/// Enum /Script/Engine.EParticleCollisionMode
/// Size: 0x03
enum EParticleCollisionMode : uint8_t
{
	EParticleCollisionMode__SceneDepth0                                              = 0,
	EParticleCollisionMode__DistanceField1                                           = 1,
	EParticleCollisionMode__EParticleCollisionMode_MAX2                              = 2
};

/// Enum /Script/Engine.EMaterialShadingModel
/// Size: 0x16
enum EMaterialShadingModel : uint8_t
{
	MSM_Unlit0                                                                       = 0,
	MSM_DefaultLit1                                                                  = 1,
	MSM_Subsurface2                                                                  = 2,
	MSM_PreintegratedSkin3                                                           = 3,
	MSM_ClearCoat4                                                                   = 4,
	MSM_SubsurfaceProfile5                                                           = 5,
	MSM_TwoSidedFoliage6                                                             = 6,
	MSM_Hair7                                                                        = 7,
	MSM_Cloth8                                                                       = 8,
	MSM_Eye9                                                                         = 9,
	MSM_SingleLayerWater10                                                           = 10,
	MSM_ThinTranslucent11                                                            = 11,
	MSM_Strata12                                                                     = 12,
	MSM_NUM13                                                                        = 13,
	MSM_FromMaterialExpression14                                                     = 14,
	MSM_MAX15                                                                        = 15
};

/// Enum /Script/Engine.EStrataShadingModel
/// Size: 0x11
enum EStrataShadingModel : uint8_t
{
	SSM_Unlit0                                                                       = 0,
	SSM_DefaultLit1                                                                  = 1,
	SSM_SubsurfaceLit2                                                               = 2,
	SSM_VolumetricFogCloud3                                                          = 3,
	SSM_Hair4                                                                        = 4,
	SSM_Eye5                                                                         = 5,
	SSM_SingleLayerWater6                                                            = 6,
	SSM_LightFunction7                                                               = 7,
	SSM_PostProcess8                                                                 = 8,
	SSM_Decal9                                                                       = 9,
	SSM_NUM10                                                                        = 10
};

/// Enum /Script/Engine.EMaterialSamplerType
/// Size: 0x18
enum EMaterialSamplerType : uint8_t
{
	SAMPLERTYPE_Color0                                                               = 0,
	SAMPLERTYPE_Grayscale1                                                           = 1,
	SAMPLERTYPE_Alpha2                                                               = 2,
	SAMPLERTYPE_Normal3                                                              = 3,
	SAMPLERTYPE_Masks4                                                               = 4,
	SAMPLERTYPE_DistanceFieldFont5                                                   = 5,
	SAMPLERTYPE_LinearColor6                                                         = 6,
	SAMPLERTYPE_LinearGrayscale7                                                     = 7,
	SAMPLERTYPE_Data8                                                                = 8,
	SAMPLERTYPE_External9                                                            = 9,
	SAMPLERTYPE_VirtualColor10                                                       = 10,
	SAMPLERTYPE_VirtualGrayscale11                                                   = 11,
	SAMPLERTYPE_VirtualAlpha12                                                       = 12,
	SAMPLERTYPE_VirtualNormal13                                                      = 13,
	SAMPLERTYPE_VirtualMasks14                                                       = 14,
	SAMPLERTYPE_VirtualLinearColor15                                                 = 15,
	SAMPLERTYPE_VirtualLinearGrayscale16                                             = 16,
	SAMPLERTYPE_MAX17                                                                = 17
};

/// Enum /Script/Engine.EMaterialStencilCompare
/// Size: 0x10
enum EMaterialStencilCompare : uint8_t
{
	MSC_Less0                                                                        = 0,
	MSC_LessEqual1                                                                   = 1,
	MSC_Greater2                                                                     = 2,
	MSC_GreaterEqual3                                                                = 3,
	MSC_Equal4                                                                       = 4,
	MSC_NotEqual5                                                                    = 5,
	MSC_Never6                                                                       = 6,
	MSC_Always7                                                                      = 7,
	MSC_Count8                                                                       = 8,
	MSC_MAX9                                                                         = 9
};

/// Enum /Script/Engine.EMaterialShadingRate
/// Size: 0x09
enum EMaterialShadingRate : uint8_t
{
	MSR_1x10                                                                         = 0,
	MSR_2x11                                                                         = 1,
	MSR_1x22                                                                         = 2,
	MSR_2x23                                                                         = 3,
	MSR_4x24                                                                         = 4,
	MSR_2x45                                                                         = 5,
	MSR_4x46                                                                         = 6,
	MSR_Count7                                                                       = 7,
	MSR_MAX8                                                                         = 8
};

/// Enum /Script/Engine.ELightingBuildQuality
/// Size: 0x05
enum ELightingBuildQuality : uint8_t
{
	Quality_Preview0                                                                 = 0,
	Quality_Medium1                                                                  = 1,
	Quality_High2                                                                    = 2,
	Quality_Production3                                                              = 3,
	Quality_MAX4                                                                     = 4
};

/// Enum /Script/Engine.ENetworkSmoothingMode
/// Size: 0x04
enum ENetworkSmoothingMode : uint8_t
{
	ENetworkSmoothingMode__Disabled0                                                 = 0,
	ENetworkSmoothingMode__Linear1                                                   = 1,
	ENetworkSmoothingMode__Exponential2                                              = 2,
	ENetworkSmoothingMode__ENetworkSmoothingMode_MAX3                                = 3
};

/// Enum /Script/Engine.EOverlapFilterOption
/// Size: 0x04
enum EOverlapFilterOption : uint8_t
{
	OverlapFilter_All0                                                               = 0,
	OverlapFilter_DynamicOnly1                                                       = 1,
	OverlapFilter_StaticOnly2                                                        = 2,
	OverlapFilter_MAX3                                                               = 3
};

/// Enum /Script/Engine.EFilterInterpolationType
/// Size: 0x07
enum EFilterInterpolationType : uint8_t
{
	BSIT_Average0                                                                    = 0,
	BSIT_Linear1                                                                     = 1,
	BSIT_Cubic2                                                                      = 2,
	BSIT_EaseInOut3                                                                  = 3,
	BSIT_ExponentialDecay4                                                           = 4,
	BSIT_SpringDamper5                                                               = 5,
	BSIT_MAX6                                                                        = 6
};

/// Enum /Script/Engine.ETimelineSigType
/// Size: 0x06
enum ETimelineSigType : uint8_t
{
	ETS_EventSignature0                                                              = 0,
	ETS_FloatSignature1                                                              = 1,
	ETS_VectorSignature2                                                             = 2,
	ETS_LinearColorSignature3                                                        = 3,
	ETS_InvalidSignature4                                                            = 4,
	ETS_MAX5                                                                         = 5
};

/// Enum /Script/Engine.ELightMapPaddingType
/// Size: 0x04
enum ELightMapPaddingType : uint8_t
{
	LMPT_NormalPadding0                                                              = 0,
	LMPT_PrePadding1                                                                 = 1,
	LMPT_NoPadding2                                                                  = 2,
	LMPT_MAX3                                                                        = 3
};

/// Enum /Script/Engine.EShadowMapFlags
/// Size: 0x03
enum EShadowMapFlags : uint8_t
{
	SMF_None0                                                                        = 0,
	SMF_Streamed1                                                                    = 1,
	SMF_MAX2                                                                         = 2
};

/// Enum /Script/Engine.EUpdateRateShiftBucket
/// Size: 0x08
enum EUpdateRateShiftBucket : uint8_t
{
	EUpdateRateShiftBucket__ShiftBucket00                                            = 0,
	EUpdateRateShiftBucket__ShiftBucket11                                            = 1,
	EUpdateRateShiftBucket__ShiftBucket22                                            = 2,
	EUpdateRateShiftBucket__ShiftBucket33                                            = 3,
	EUpdateRateShiftBucket__ShiftBucket44                                            = 4,
	EUpdateRateShiftBucket__ShiftBucket55                                            = 5,
	EUpdateRateShiftBucket__ShiftBucketMax6                                          = 6,
	EUpdateRateShiftBucket__EUpdateRateShiftBucket_MAX7                              = 7
};

/// Enum /Script/Engine.ENetRole
/// Size: 0x05
enum ENetRole : uint8_t
{
	ROLE_None0                                                                       = 0,
	ROLE_SimulatedProxy1                                                             = 1,
	ROLE_AutonomousProxy2                                                            = 2,
	ROLE_Authority3                                                                  = 3,
	ROLE_MAX4                                                                        = 4
};

/// Enum /Script/Engine.ENetDormancy
/// Size: 0x06
enum ENetDormancy : uint8_t
{
	DORM_Never0                                                                      = 0,
	DORM_Awake1                                                                      = 1,
	DORM_DormantAll2                                                                 = 2,
	DORM_DormantPartial3                                                             = 3,
	DORM_Initial4                                                                    = 4,
	DORM_MAX5                                                                        = 5
};

/// Enum /Script/Engine.EAutoReceiveInput
/// Size: 0x10
enum EAutoReceiveInput : uint8_t
{
	EAutoReceiveInput__Disabled0                                                     = 0,
	EAutoReceiveInput__Player01                                                      = 1,
	EAutoReceiveInput__Player12                                                      = 2,
	EAutoReceiveInput__Player23                                                      = 3,
	EAutoReceiveInput__Player34                                                      = 4,
	EAutoReceiveInput__Player45                                                      = 5,
	EAutoReceiveInput__Player56                                                      = 6,
	EAutoReceiveInput__Player67                                                      = 7,
	EAutoReceiveInput__Player78                                                      = 8,
	EAutoReceiveInput__EAutoReceiveInput_MAX9                                        = 9
};

/// Enum /Script/Engine.EAutoPossessAI
/// Size: 0x05
enum EAutoPossessAI : uint8_t
{
	EAutoPossessAI__Disabled0                                                        = 0,
	EAutoPossessAI__PlacedInWorld1                                                   = 1,
	EAutoPossessAI__Spawned2                                                         = 2,
	EAutoPossessAI__PlacedInWorldOrSpawned3                                          = 3,
	EAutoPossessAI__EAutoPossessAI_MAX4                                              = 4
};

/// Enum /Script/Engine.EPhysicalMaterialMaskColor
/// Size: 0x09
enum EPhysicalMaterialMaskColor : uint8_t
{
	EPhysicalMaterialMaskColor__Red0                                                 = 0,
	EPhysicalMaterialMaskColor__Green1                                               = 1,
	EPhysicalMaterialMaskColor__Blue2                                                = 2,
	EPhysicalMaterialMaskColor__Cyan3                                                = 3,
	EPhysicalMaterialMaskColor__Magenta4                                             = 4,
	EPhysicalMaterialMaskColor__Yellow5                                              = 5,
	EPhysicalMaterialMaskColor__White6                                               = 6,
	EPhysicalMaterialMaskColor__Black7                                               = 7,
	EPhysicalMaterialMaskColor__MAX8                                                 = 8
};

/// Enum /Script/Engine.EComponentSocketType
/// Size: 0x04
enum EComponentSocketType : uint8_t
{
	EComponentSocketType__Invalid0                                                   = 0,
	EComponentSocketType__Bone1                                                      = 1,
	EComponentSocketType__Socket2                                                    = 2,
	EComponentSocketType__EComponentSocketType_MAX3                                  = 3
};

/// Enum /Script/Engine.ESpawnActorCollisionHandlingMethod
/// Size: 0x06
enum ESpawnActorCollisionHandlingMethod : uint8_t
{
	ESpawnActorCollisionHandlingMethod__Undefined0                                   = 0,
	ESpawnActorCollisionHandlingMethod__AlwaysSpawn1                                 = 1,
	ESpawnActorCollisionHandlingMethod__AdjustIfPossibleButAlwaysSpawn2              = 2,
	ESpawnActorCollisionHandlingMethod__AdjustIfPossibleButDontSpawnIfColliding3     = 3,
	ESpawnActorCollisionHandlingMethod__DontSpawnIfColliding4                        = 4,
	ESpawnActorCollisionHandlingMethod__ESpawnActorCollisionHandlingMethod_MAX5      = 5
};

/// Enum /Script/Engine.EMeshBufferAccess
/// Size: 0x03
enum EMeshBufferAccess : uint8_t
{
	EMeshBufferAccess__Default0                                                      = 0,
	EMeshBufferAccess__ForceCPUAndGPU1                                               = 1,
	EMeshBufferAccess__EMeshBufferAccess_MAX2                                        = 2
};

/// Enum /Script/Engine.EFontImportCharacterSet
/// Size: 0x04
enum EFontImportCharacterSet : uint8_t
{
	FontICS_Default0                                                                 = 0,
	FontICS_Ansi1                                                                    = 1,
	FontICS_Symbol2                                                                  = 2,
	FontICS_MAX3                                                                     = 3
};

/// Enum /Script/Engine.EStandbyType
/// Size: 0x04
enum EStandbyType : uint8_t
{
	STDBY_Rx0                                                                        = 0,
	STDBY_Tx1                                                                        = 1,
	STDBY_BadPing2                                                                   = 2,
	STDBY_MAX3                                                                       = 3
};

/// Enum /Script/Engine.ESuggestProjVelocityTraceOption
/// Size: 0x04
enum ESuggestProjVelocityTraceOption : uint8_t
{
	ESuggestProjVelocityTraceOption__DoNotTrace0                                     = 0,
	ESuggestProjVelocityTraceOption__TraceFullPath1                                  = 1,
	ESuggestProjVelocityTraceOption__OnlyTraceWhileAscending2                        = 2,
	ESuggestProjVelocityTraceOption__ESuggestProjVelocityTraceOption_MAX3            = 3
};

/// Enum /Script/Engine.EHISMViewRelevanceType
/// Size: 0x04
enum EHISMViewRelevanceType : uint8_t
{
	EHISMViewRelevanceType__Grass0                                                   = 0,
	EHISMViewRelevanceType__Foliage1                                                 = 1,
	EHISMViewRelevanceType__HISM2                                                    = 2,
	EHISMViewRelevanceType__EHISMViewRelevanceType_MAX3                              = 3
};

/// Enum /Script/Engine.EHitProxyPriority
/// Size: 0x05
enum EHitProxyPriority : uint8_t
{
	HPP_World0                                                                       = 0,
	HPP_Wireframe1                                                                   = 1,
	HPP_Foreground2                                                                  = 2,
	HPP_UI3                                                                          = 3,
	HPP_MAX4                                                                         = 4
};

/// Enum /Script/Engine.EHLODBatchingPolicy
/// Size: 0x04
enum EHLODBatchingPolicy : uint8_t
{
	EHLODBatchingPolicy__None0                                                       = 0,
	EHLODBatchingPolicy__MeshSection1                                                = 1,
	EHLODBatchingPolicy__Instancing2                                                 = 2,
	EHLODBatchingPolicy__EHLODBatchingPolicy_MAX3                                    = 3
};

/// Enum /Script/Engine.EAdManagerDelegate
/// Size: 0x03
enum EAdManagerDelegate : uint8_t
{
	AMD_ClickedBanner0                                                               = 0,
	AMD_UserClosedAd1                                                                = 1,
	AMD_MAX2                                                                         = 2
};

/// Enum /Script/Engine.EScreenPercentageMode
/// Size: 0x04
enum EScreenPercentageMode : uint8_t
{
	EScreenPercentageMode__Manual0                                                   = 0,
	EScreenPercentageMode__BasedOnDisplayResolution1                                 = 1,
	EScreenPercentageMode__BasedOnDPIScale2                                          = 2,
	EScreenPercentageMode__EScreenPercentageMode_MAX3                                = 3
};

/// Enum /Script/Engine.ELevelInstanceRuntimeBehavior
/// Size: 0x05
enum ELevelInstanceRuntimeBehavior : uint8_t
{
	ELevelInstanceRuntimeBehavior__None0                                             = 0,
	ELevelInstanceRuntimeBehavior__Embedded_Deprecated1                              = 1,
	ELevelInstanceRuntimeBehavior__Partitioned2                                      = 2,
	ELevelInstanceRuntimeBehavior__LevelStreaming3                                   = 3,
	ELevelInstanceRuntimeBehavior__ELevelInstanceRuntimeBehavior_MAX4                = 4
};

/// Enum /Script/Engine.ELevelInstanceCreationType
/// Size: 0x03
enum ELevelInstanceCreationType : uint8_t
{
	ELevelInstanceCreationType__LevelInstance0                                       = 0,
	ELevelInstanceCreationType__PackedLevelActor1                                    = 1,
	ELevelInstanceCreationType__ELevelInstanceCreationType_MAX2                      = 2
};

/// Enum /Script/Engine.ELevelInstancePivotType
/// Size: 0x05
enum ELevelInstancePivotType : uint8_t
{
	ELevelInstancePivotType__CenterMinZ0                                             = 0,
	ELevelInstancePivotType__Center1                                                 = 1,
	ELevelInstancePivotType__Actor2                                                  = 2,
	ELevelInstancePivotType__WorldOrigin3                                            = 3,
	ELevelInstancePivotType__ELevelInstancePivotType_MAX4                            = 4
};

/// Enum /Script/Engine.EStreamingVolumeUsage
/// Size: 0x06
enum EStreamingVolumeUsage : uint8_t
{
	SVB_Loading0                                                                     = 0,
	SVB_LoadingAndVisibility1                                                        = 1,
	SVB_VisibilityBlockingOnLoad2                                                    = 2,
	SVB_BlockingOnLoad3                                                              = 3,
	SVB_LoadingNotVisible4                                                           = 4,
	SVB_MAX5                                                                         = 5
};

/// Enum /Script/Engine.EDecalBlendMode
/// Size: 0x18
enum EDecalBlendMode : uint8_t
{
	DBM_Translucent0                                                                 = 0,
	DBM_Stain1                                                                       = 1,
	DBM_Normal2                                                                      = 2,
	DBM_Emissive3                                                                    = 3,
	DBM_DBuffer_ColorNormalRoughness4                                                = 4,
	DBM_DBuffer_Color5                                                               = 5,
	DBM_DBuffer_ColorNormal6                                                         = 6,
	DBM_DBuffer_ColorRoughness7                                                      = 7,
	DBM_DBuffer_Normal8                                                              = 8,
	DBM_DBuffer_NormalRoughness9                                                     = 9,
	DBM_DBuffer_Roughness10                                                          = 10,
	DBM_DBuffer_Emissive11                                                           = 11,
	DBM_DBuffer_AlphaComposite12                                                     = 12,
	DBM_DBuffer_EmissiveAlphaComposite13                                             = 13,
	DBM_Volumetric_DistanceFunction14                                                = 14,
	DBM_AlphaComposite15                                                             = 15,
	DBM_AmbientOcclusion16                                                           = 16,
	DBM_MAX17                                                                        = 17
};

/// Enum /Script/Engine.EMaterialDecalResponse
/// Size: 0x09
enum EMaterialDecalResponse : uint8_t
{
	MDR_None0                                                                        = 0,
	MDR_ColorNormalRoughness1                                                        = 1,
	MDR_Color2                                                                       = 2,
	MDR_ColorNormal3                                                                 = 3,
	MDR_ColorRoughness4                                                              = 4,
	MDR_Normal5                                                                      = 5,
	MDR_NormalRoughness6                                                             = 6,
	MDR_Roughness7                                                                   = 7,
	MDR_MAX8                                                                         = 8
};

/// Enum /Script/Engine.EMaterialTranslucencyPass
/// Size: 0x04
enum EMaterialTranslucencyPass : uint8_t
{
	MTP_BeforeDOF0                                                                   = 0,
	MTP_AfterDOF1                                                                    = 1,
	MTP_AfterMotionBlur2                                                             = 2,
	MTP_MAX3                                                                         = 3
};

/// Enum /Script/Engine.ETextureColorChannel
/// Size: 0x05
enum ETextureColorChannel : uint8_t
{
	TCC_Red0                                                                         = 0,
	TCC_Green1                                                                       = 1,
	TCC_Blue2                                                                        = 2,
	TCC_Alpha3                                                                       = 3,
	TCC_MAX4                                                                         = 4
};

/// Enum /Script/Engine.EMaterialAttributeBlend
/// Size: 0x04
enum EMaterialAttributeBlend : uint8_t
{
	EMaterialAttributeBlend__Blend0                                                  = 0,
	EMaterialAttributeBlend__UseA1                                                   = 1,
	EMaterialAttributeBlend__UseB2                                                   = 2,
	EMaterialAttributeBlend__EMaterialAttributeBlend_MAX3                            = 3
};

/// Enum /Script/Engine.EChannelMaskParameterColor
/// Size: 0x05
enum EChannelMaskParameterColor : uint8_t
{
	EChannelMaskParameterColor__Red0                                                 = 0,
	EChannelMaskParameterColor__Green1                                               = 1,
	EChannelMaskParameterColor__Blue2                                                = 2,
	EChannelMaskParameterColor__Alpha3                                               = 3,
	EChannelMaskParameterColor__EChannelMaskParameterColor_MAX4                      = 4
};

/// Enum /Script/Engine.EClampMode
/// Size: 0x04
enum EClampMode : uint8_t
{
	CMODE_Clamp0                                                                     = 0,
	CMODE_ClampMin1                                                                  = 1,
	CMODE_ClampMax2                                                                  = 2,
	CMODE_MAX3                                                                       = 3
};

/// Enum /Script/Engine.ECustomMaterialOutputType
/// Size: 0x06
enum ECustomMaterialOutputType : uint8_t
{
	CMOT_Float10                                                                     = 0,
	CMOT_Float21                                                                     = 1,
	CMOT_Float32                                                                     = 2,
	CMOT_Float43                                                                     = 3,
	CMOT_MaterialAttributes4                                                         = 4,
	CMOT_MAX5                                                                        = 5
};

/// Enum /Script/Engine.EDBufferTextureId
/// Size: 0x04
enum EDBufferTextureId : uint8_t
{
	DBT_A0                                                                           = 0,
	DBT_B1                                                                           = 1,
	DBT_C2                                                                           = 2,
	DBT_MAX3                                                                         = 3
};

/// Enum /Script/Engine.EDepthOfFieldFunctionValue
/// Size: 0x05
enum EDepthOfFieldFunctionValue : uint8_t
{
	TDOF_NearAndFarMask0                                                             = 0,
	TDOF_NearMask1                                                                   = 1,
	TDOF_FarMask2                                                                    = 2,
	TDOF_CircleOfConfusionRadius3                                                    = 3,
	TDOF_MAX4                                                                        = 4
};

/// Enum /Script/Engine.EFunctionInputType
/// Size: 0x12
enum EFunctionInputType : uint8_t
{
	FunctionInput_Scalar0                                                            = 0,
	FunctionInput_Vector21                                                           = 1,
	FunctionInput_Vector32                                                           = 2,
	FunctionInput_Vector43                                                           = 3,
	FunctionInput_Texture2D4                                                         = 4,
	FunctionInput_TextureCube5                                                       = 5,
	FunctionInput_Texture2DArray6                                                    = 6,
	FunctionInput_VolumeTexture7                                                     = 7,
	FunctionInput_StaticBool8                                                        = 8,
	FunctionInput_MaterialAttributes9                                                = 9,
	FunctionInput_TextureExternal10                                                  = 10,
	FunctionInput_MAX11                                                              = 11
};

/// Enum /Script/Engine.ENoiseFunction
/// Size: 0x07
enum ENoiseFunction : uint8_t
{
	NOISEFUNCTION_SimplexTex0                                                        = 0,
	NOISEFUNCTION_GradientTex1                                                       = 1,
	NOISEFUNCTION_GradientTex3D2                                                     = 2,
	NOISEFUNCTION_GradientALU3                                                       = 3,
	NOISEFUNCTION_ValueALU4                                                          = 4,
	NOISEFUNCTION_VoronoiALU5                                                        = 5,
	NOISEFUNCTION_MAX6                                                               = 6
};

/// Enum /Script/Engine.ERuntimeVirtualTextureMipValueMode
/// Size: 0x05
enum ERuntimeVirtualTextureMipValueMode : uint8_t
{
	RVTMVM_None0                                                                     = 0,
	RVTMVM_MipLevel1                                                                 = 1,
	RVTMVM_MipBias2                                                                  = 2,
	RVTMVM_RecalculateDerivatives3                                                   = 3,
	RVTMVM_MAX4                                                                      = 4
};

/// Enum /Script/Engine.ERuntimeVirtualTextureTextureAddressMode
/// Size: 0x03
enum ERuntimeVirtualTextureTextureAddressMode : uint8_t
{
	RVTTA_Clamp0                                                                     = 0,
	RVTTA_Wrap1                                                                      = 1,
	RVTTA_MAX2                                                                       = 2
};

/// Enum /Script/Engine.EMaterialSceneAttributeInputMode
/// Size: 0x03
enum EMaterialSceneAttributeInputMode : uint8_t
{
	EMaterialSceneAttributeInputMode__Coordinates0                                   = 0,
	EMaterialSceneAttributeInputMode__OffsetFraction1                                = 1,
	EMaterialSceneAttributeInputMode__EMaterialSceneAttributeInputMode_MAX2          = 2
};

/// Enum /Script/Engine.ESpeedTreeGeometryType
/// Size: 0x06
enum ESpeedTreeGeometryType : uint8_t
{
	STG_Branch0                                                                      = 0,
	STG_Frond1                                                                       = 1,
	STG_Leaf2                                                                        = 2,
	STG_FacingLeaf3                                                                  = 3,
	STG_Billboard4                                                                   = 4,
	STG_MAX5                                                                         = 5
};

/// Enum /Script/Engine.ESpeedTreeWindType
/// Size: 0x08
enum ESpeedTreeWindType : uint8_t
{
	STW_None0                                                                        = 0,
	STW_Fastest1                                                                     = 1,
	STW_Fast2                                                                        = 2,
	STW_Better3                                                                      = 3,
	STW_Best4                                                                        = 4,
	STW_Palm5                                                                        = 5,
	STW_BestPlus6                                                                    = 6,
	STW_MAX7                                                                         = 7
};

/// Enum /Script/Engine.ESpeedTreeLODType
/// Size: 0x03
enum ESpeedTreeLODType : uint8_t
{
	STLOD_Pop0                                                                       = 0,
	STLOD_Smooth1                                                                    = 1,
	STLOD_MAX2                                                                       = 2
};

/// Enum /Script/Engine.EMaterialExposedTextureProperty
/// Size: 0x03
enum EMaterialExposedTextureProperty : uint8_t
{
	TMTM_TextureSize0                                                                = 0,
	TMTM_TexelSize1                                                                  = 1,
	TMTM_MAX2                                                                        = 2
};

/// Enum /Script/Engine.EMaterialVectorCoordTransformSource
/// Size: 0x08
enum EMaterialVectorCoordTransformSource : uint8_t
{
	TRANSFORMSOURCE_Tangent0                                                         = 0,
	TRANSFORMSOURCE_Local1                                                           = 1,
	TRANSFORMSOURCE_World2                                                           = 2,
	TRANSFORMSOURCE_View3                                                            = 3,
	TRANSFORMSOURCE_Camera4                                                          = 4,
	TRANSFORMSOURCE_ParticleWorld5                                                   = 5,
	TRANSFORMSOURCE_Instance6                                                        = 6,
	TRANSFORMSOURCE_MAX7                                                             = 7
};

/// Enum /Script/Engine.EMaterialVectorCoordTransform
/// Size: 0x08
enum EMaterialVectorCoordTransform : uint8_t
{
	TRANSFORM_Tangent0                                                               = 0,
	TRANSFORM_Local1                                                                 = 1,
	TRANSFORM_World2                                                                 = 2,
	TRANSFORM_View3                                                                  = 3,
	TRANSFORM_Camera4                                                                = 4,
	TRANSFORM_ParticleWorld5                                                         = 5,
	TRANSFORM_Instance6                                                              = 6,
	TRANSFORM_MAX7                                                                   = 7
};

/// Enum /Script/Engine.EMaterialPositionTransformSource
/// Size: 0x08
enum EMaterialPositionTransformSource : uint8_t
{
	TRANSFORMPOSSOURCE_Local0                                                        = 0,
	TRANSFORMPOSSOURCE_World1                                                        = 1,
	TRANSFORMPOSSOURCE_TranslatedWorld2                                              = 2,
	TRANSFORMPOSSOURCE_View3                                                         = 3,
	TRANSFORMPOSSOURCE_Camera4                                                       = 4,
	TRANSFORMPOSSOURCE_Particle5                                                     = 5,
	TRANSFORMPOSSOURCE_Instance6                                                     = 6,
	TRANSFORMPOSSOURCE_MAX7                                                          = 7
};

/// Enum /Script/Engine.EVectorNoiseFunction
/// Size: 0x06
enum EVectorNoiseFunction : uint8_t
{
	VNF_CellnoiseALU0                                                                = 0,
	VNF_VectorALU1                                                                   = 1,
	VNF_GradientALU2                                                                 = 2,
	VNF_CurlALU3                                                                     = 3,
	VNF_VoronoiALU4                                                                  = 4,
	VNF_MAX5                                                                         = 5
};

/// Enum /Script/Engine.EMaterialExposedViewProperty
/// Size: 0x16
enum EMaterialExposedViewProperty : uint8_t
{
	MEVP_BufferSize0                                                                 = 0,
	MEVP_FieldOfView1                                                                = 1,
	MEVP_TanHalfFieldOfView2                                                         = 2,
	MEVP_ViewSize3                                                                   = 3,
	MEVP_WorldSpaceViewPosition4                                                     = 4,
	MEVP_WorldSpaceCameraPosition5                                                   = 5,
	MEVP_ViewportOffset6                                                             = 6,
	MEVP_TemporalSampleCount7                                                        = 7,
	MEVP_TemporalSampleIndex8                                                        = 8,
	MEVP_TemporalSampleOffset9                                                       = 9,
	MEVP_RuntimeVirtualTextureOutputLevel10                                          = 10,
	MEVP_RuntimeVirtualTextureOutputDerivative11                                     = 11,
	MEVP_PreExposure12                                                               = 12,
	MEVP_RuntimeVirtualTextureMaxLevel13                                             = 13,
	MEVP_ResolutionFraction14                                                        = 14,
	MEVP_MAX15                                                                       = 15
};

/// Enum /Script/Engine.EWorldPositionIncludedOffsets
/// Size: 0x05
enum EWorldPositionIncludedOffsets : uint8_t
{
	WPT_Default0                                                                     = 0,
	WPT_ExcludeAllShaderOffsets1                                                     = 1,
	WPT_CameraRelative2                                                              = 2,
	WPT_CameraRelativeNoOffsets3                                                     = 3,
	WPT_MAX4                                                                         = 4
};

/// Enum /Script/Engine.EMaterialFunctionUsage
/// Size: 0x04
enum EMaterialFunctionUsage : uint8_t
{
	EMaterialFunctionUsage__Default0                                                 = 0,
	EMaterialFunctionUsage__MaterialLayer1                                           = 1,
	EMaterialFunctionUsage__MaterialLayerBlend2                                      = 2,
	EMaterialFunctionUsage__EMaterialFunctionUsage_MAX3                              = 3
};

/// Enum /Script/Engine.EMaterialUsage
/// Size: 0x20
enum EMaterialUsage : uint8_t
{
	MATUSAGE_SkeletalMesh0                                                           = 0,
	MATUSAGE_ParticleSprites1                                                        = 1,
	MATUSAGE_BeamTrails2                                                             = 2,
	MATUSAGE_MeshParticles3                                                          = 3,
	MATUSAGE_StaticLighting4                                                         = 4,
	MATUSAGE_MorphTargets5                                                           = 5,
	MATUSAGE_SplineMesh6                                                             = 6,
	MATUSAGE_InstancedStaticMeshes7                                                  = 7,
	MATUSAGE_GeometryCollections8                                                    = 8,
	MATUSAGE_Clothing9                                                               = 9,
	MATUSAGE_NiagaraSprites10                                                        = 10,
	MATUSAGE_NiagaraRibbons11                                                        = 11,
	MATUSAGE_NiagaraMeshParticles12                                                  = 12,
	MATUSAGE_GeometryCache13                                                         = 13,
	MATUSAGE_Water14                                                                 = 14,
	MATUSAGE_HairStrands15                                                           = 15,
	MATUSAGE_LidarPointCloud16                                                       = 16,
	MATUSAGE_VirtualHeightfieldMesh17                                                = 17,
	MATUSAGE_Nanite18                                                                = 18,
	MATUSAGE_MAX19                                                                   = 19
};

/// Enum /Script/Engine.EMaterialLayerLinkState
/// Size: 0x05
enum EMaterialLayerLinkState : uint8_t
{
	EMaterialLayerLinkState__Uninitialized0                                          = 0,
	EMaterialLayerLinkState__LinkedToParent1                                         = 1,
	EMaterialLayerLinkState__UnlinkedFromParent2                                     = 2,
	EMaterialLayerLinkState__NotFromParent3                                          = 3,
	EMaterialLayerLinkState__EMaterialLayerLinkState_MAX4                            = 4
};

/// Enum /Script/Engine.ETextureSizingType
/// Size: 0x08
enum ETextureSizingType : uint8_t
{
	TextureSizingType_UseSingleTextureSize0                                          = 0,
	TextureSizingType_UseAutomaticBiasedSizes1                                       = 1,
	TextureSizingType_UseManualOverrideTextureSize2                                  = 2,
	TextureSizingType_UseSimplygonAutomaticSizing3                                   = 3,
	TextureSizingType_AutomaticFromTexelDensity4                                     = 4,
	TextureSizingType_AutomaticFromMeshScreenSize5                                   = 5,
	TextureSizingType_AutomaticFromMeshDrawDistance6                                 = 6,
	TextureSizingType_MAX7                                                           = 7
};

/// Enum /Script/Engine.EMaterialMergeType
/// Size: 0x03
enum EMaterialMergeType : uint8_t
{
	MaterialMergeType_Default0                                                       = 0,
	MaterialMergeType_Simplygon1                                                     = 1,
	MaterialMergeType_MAX2                                                           = 2
};

/// Enum /Script/Engine.ESceneTextureId
/// Size: 0x32
enum ESceneTextureId : uint8_t
{
	PPI_SceneColor0                                                                  = 0,
	PPI_SceneDepth1                                                                  = 1,
	PPI_DiffuseColor2                                                                = 2,
	PPI_SpecularColor3                                                               = 3,
	PPI_SubsurfaceColor4                                                             = 4,
	PPI_BaseColor5                                                                   = 5,
	PPI_Specular6                                                                    = 6,
	PPI_Metallic7                                                                    = 7,
	PPI_WorldNormal8                                                                 = 8,
	PPI_SeparateTranslucency9                                                        = 9,
	PPI_Opacity10                                                                    = 10,
	PPI_Roughness11                                                                  = 11,
	PPI_MaterialAO12                                                                 = 12,
	PPI_CustomDepth13                                                                = 13,
	PPI_PostProcessInput014                                                          = 14,
	PPI_PostProcessInput115                                                          = 15,
	PPI_PostProcessInput216                                                          = 16,
	PPI_PostProcessInput317                                                          = 17,
	PPI_PostProcessInput418                                                          = 18,
	PPI_PostProcessInput519                                                          = 19,
	PPI_PostProcessInput620                                                          = 20,
	PPI_DecalMask21                                                                  = 21,
	PPI_ShadingModelColor22                                                          = 22,
	PPI_ShadingModelID23                                                             = 23,
	PPI_AmbientOcclusion24                                                           = 24,
	PPI_CustomStencil25                                                              = 25,
	PPI_StoredBaseColor26                                                            = 26,
	PPI_StoredSpecular27                                                             = 27,
	PPI_Velocity28                                                                   = 28,
	PPI_WorldTangent29                                                               = 29,
	PPI_Anisotropy30                                                                 = 30,
	PPI_MAX31                                                                        = 31
};

/// Enum /Script/Engine.EMaterialDomain
/// Size: 0x08
enum EMaterialDomain : uint8_t
{
	MD_Surface0                                                                      = 0,
	MD_DeferredDecal1                                                                = 1,
	MD_LightFunction2                                                                = 2,
	MD_Volume3                                                                       = 3,
	MD_PostProcess4                                                                  = 4,
	MD_UI5                                                                           = 5,
	MD_RuntimeVirtualTexture6                                                        = 6,
	MD_MAX7                                                                          = 7
};

/// Enum /Script/Engine.EMaterialParameterAssociation
/// Size: 0x04
enum EMaterialParameterAssociation : uint8_t
{
	LayerParameter0                                                                  = 0,
	BlendParameter1                                                                  = 1,
	GlobalParameter2                                                                 = 2,
	EMaterialParameterAssociation_MAX3                                               = 3
};

/// Enum /Script/Engine.EMicroTransactionDelegate
/// Size: 0x03
enum EMicroTransactionDelegate : uint8_t
{
	MTD_PurchaseQueryComplete0                                                       = 0,
	MTD_PurchaseComplete1                                                            = 1,
	MTD_MAX2                                                                         = 2
};

/// Enum /Script/Engine.EMicroTransactionResult
/// Size: 0x05
enum EMicroTransactionResult : uint8_t
{
	MTR_Succeeded0                                                                   = 0,
	MTR_Failed1                                                                      = 1,
	MTR_Canceled2                                                                    = 2,
	MTR_RestoredFromServer3                                                          = 3,
	MTR_MAX4                                                                         = 4
};

/// Enum /Script/Engine.ENavLinkDirection
/// Size: 0x04
enum ENavLinkDirection : uint8_t
{
	ENavLinkDirection__BothWays0                                                     = 0,
	ENavLinkDirection__LeftToRight1                                                  = 1,
	ENavLinkDirection__RightToLeft2                                                  = 2,
	ENavLinkDirection__ENavLinkDirection_MAX3                                        = 3
};

/// Enum /Script/Engine.EPingType
/// Size: 0x07
enum EPingType : uint8_t
{
	EPingType__None0                                                                 = 0,
	EPingType__RoundTrip1                                                            = 1,
	EPingType__RoundTripExclFrame2                                                   = 2,
	EPingType__ICMP3                                                                 = 4,
	EPingType__UDPQoS4                                                               = 8,
	EPingType__Max5                                                                  = 8,
	EPingType__Count6                                                                = 4
};

/// Enum /Script/Engine.EPingAverageType
/// Size: 0x04
enum EPingAverageType : uint8_t
{
	EPingAverageType__None0                                                          = 0,
	EPingAverageType__MovingAverage1                                                 = 1,
	EPingAverageType__PlayerStateAvg2                                                = 2,
	EPingAverageType__EPingAverageType_MAX3                                          = 3
};

/// Enum /Script/Engine.EParticleBurstMethod
/// Size: 0x03
enum EParticleBurstMethod : uint8_t
{
	EPBM_Instant0                                                                    = 0,
	EPBM_Interpolated1                                                               = 1,
	EPBM_MAX2                                                                        = 2
};

/// Enum /Script/Engine.EParticleSubUVInterpMethod
/// Size: 0x06
enum EParticleSubUVInterpMethod : uint8_t
{
	PSUVIM_None0                                                                     = 0,
	PSUVIM_Linear1                                                                   = 1,
	PSUVIM_Linear_Blend2                                                             = 2,
	PSUVIM_Random3                                                                   = 3,
	PSUVIM_Random_Blend4                                                             = 4,
	PSUVIM_MAX5                                                                      = 5
};

/// Enum /Script/Engine.EEmitterRenderMode
/// Size: 0x06
enum EEmitterRenderMode : uint8_t
{
	ERM_Normal0                                                                      = 0,
	ERM_Point1                                                                       = 1,
	ERM_Cross2                                                                       = 2,
	ERM_LightsOnly3                                                                  = 3,
	ERM_None4                                                                        = 4,
	ERM_MAX5                                                                         = 5
};

/// Enum /Script/Engine.EParticleDetailMode
/// Size: 0x04
enum EParticleDetailMode : uint8_t
{
	PDM_Low0                                                                         = 0,
	PDM_Medium1                                                                      = 1,
	PDM_High2                                                                        = 2,
	PDM_MAX3                                                                         = 3
};

/// Enum /Script/Engine.EParticleSignificanceLevel
/// Size: 0x06
enum EParticleSignificanceLevel : uint8_t
{
	EParticleSignificanceLevel__Low0                                                 = 0,
	EParticleSignificanceLevel__Medium1                                              = 1,
	EParticleSignificanceLevel__High2                                                = 2,
	EParticleSignificanceLevel__Critical3                                            = 3,
	EParticleSignificanceLevel__Num4                                                 = 4,
	EParticleSignificanceLevel__EParticleSignificanceLevel_MAX5                      = 5
};

/// Enum /Script/Engine.EParticleSystemInsignificanceReaction
/// Size: 0x06
enum EParticleSystemInsignificanceReaction : uint8_t
{
	EParticleSystemInsignificanceReaction__Auto0                                     = 0,
	EParticleSystemInsignificanceReaction__Complete1                                 = 1,
	EParticleSystemInsignificanceReaction__DisableTick2                              = 2,
	EParticleSystemInsignificanceReaction__DisableTickAndKill3                       = 3,
	EParticleSystemInsignificanceReaction__Num4                                      = 4,
	EParticleSystemInsignificanceReaction__EParticleSystemInsignificanceReaction_MAX5 = 5
};

/// Enum /Script/Engine.EModuleType
/// Size: 0x10
enum EModuleType : uint8_t
{
	EPMT_General0                                                                    = 0,
	EPMT_TypeData1                                                                   = 1,
	EPMT_Beam2                                                                       = 2,
	EPMT_Trail3                                                                      = 3,
	EPMT_Spawn4                                                                      = 4,
	EPMT_Required5                                                                   = 5,
	EPMT_Event6                                                                      = 6,
	EPMT_Light7                                                                      = 7,
	EPMT_SubUV8                                                                      = 8,
	EPMT_MAX9                                                                        = 9
};

/// Enum /Script/Engine.EParticleSourceSelectionMethod
/// Size: 0x03
enum EParticleSourceSelectionMethod : uint8_t
{
	EPSSM_Random0                                                                    = 0,
	EPSSM_Sequential1                                                                = 1,
	EPSSM_MAX2                                                                       = 2
};

/// Enum /Script/Engine.EAttractorParticleSelectionMethod
/// Size: 0x03
enum EAttractorParticleSelectionMethod : uint8_t
{
	EAPSM_Random0                                                                    = 0,
	EAPSM_Sequential1                                                                = 1,
	EAPSM_MAX2                                                                       = 2
};

/// Enum /Script/Engine.Beam2SourceTargetMethod
/// Size: 0x06
enum Beam2SourceTargetMethod : uint8_t
{
	PEB2STM_Default0                                                                 = 0,
	PEB2STM_UserSet1                                                                 = 1,
	PEB2STM_Emitter2                                                                 = 2,
	PEB2STM_Particle3                                                                = 3,
	PEB2STM_Actor4                                                                   = 4,
	PEB2STM_MAX5                                                                     = 5
};

/// Enum /Script/Engine.Beam2SourceTargetTangentMethod
/// Size: 0x05
enum Beam2SourceTargetTangentMethod : uint8_t
{
	PEB2STTM_Direct0                                                                 = 0,
	PEB2STTM_UserSet1                                                                = 1,
	PEB2STTM_Distribution2                                                           = 2,
	PEB2STTM_Emitter3                                                                = 3,
	PEB2STTM_MAX4                                                                    = 4
};

/// Enum /Script/Engine.BeamModifierType
/// Size: 0x03
enum BeamModifierType : uint8_t
{
	PEB2MT_Source0                                                                   = 0,
	PEB2MT_Target1                                                                   = 1,
	PEB2MT_MAX2                                                                      = 2
};

/// Enum /Script/Engine.EParticleCameraOffsetUpdateMethod
/// Size: 0x04
enum EParticleCameraOffsetUpdateMethod : uint8_t
{
	EPCOUM_DirectSet0                                                                = 0,
	EPCOUM_Additive1                                                                 = 1,
	EPCOUM_Scalar2                                                                   = 2,
	EPCOUM_MAX3                                                                      = 3
};

/// Enum /Script/Engine.EParticleCollisionComplete
/// Size: 0x07
enum EParticleCollisionComplete : uint8_t
{
	EPCC_Kill0                                                                       = 0,
	EPCC_Freeze1                                                                     = 1,
	EPCC_HaltCollisions2                                                             = 2,
	EPCC_FreezeTranslation3                                                          = 3,
	EPCC_FreezeRotation4                                                             = 4,
	EPCC_FreezeMovement5                                                             = 5,
	EPCC_MAX6                                                                        = 6
};

/// Enum /Script/Engine.EParticleCollisionResponse
/// Size: 0x04
enum EParticleCollisionResponse : uint8_t
{
	EParticleCollisionResponse__Bounce0                                              = 0,
	EParticleCollisionResponse__Stop1                                                = 1,
	EParticleCollisionResponse__Kill2                                                = 2,
	EParticleCollisionResponse__EParticleCollisionResponse_MAX3                      = 3
};

/// Enum /Script/Engine.ELocationBoneSocketSource
/// Size: 0x03
enum ELocationBoneSocketSource : uint8_t
{
	BONESOCKETSOURCE_Bones0                                                          = 0,
	BONESOCKETSOURCE_Sockets1                                                        = 1,
	BONESOCKETSOURCE_MAX2                                                            = 2
};

/// Enum /Script/Engine.ELocationBoneSocketSelectionMethod
/// Size: 0x03
enum ELocationBoneSocketSelectionMethod : uint8_t
{
	BONESOCKETSEL_Sequential0                                                        = 0,
	BONESOCKETSEL_Random1                                                            = 1,
	BONESOCKETSEL_MAX2                                                               = 2
};

/// Enum /Script/Engine.ELocationEmitterSelectionMethod
/// Size: 0x03
enum ELocationEmitterSelectionMethod : uint8_t
{
	ELESM_Random0                                                                    = 0,
	ELESM_Sequential1                                                                = 1,
	ELESM_MAX2                                                                       = 2
};

/// Enum /Script/Engine.CylinderHeightAxis
/// Size: 0x04
enum CylinderHeightAxis : uint8_t
{
	PMLPC_HEIGHTAXIS_X0                                                              = 0,
	PMLPC_HEIGHTAXIS_Y1                                                              = 1,
	PMLPC_HEIGHTAXIS_Z2                                                              = 2,
	PMLPC_HEIGHTAXIS_MAX3                                                            = 3
};

/// Enum /Script/Engine.ELocationSkelVertSurfaceSource
/// Size: 0x03
enum ELocationSkelVertSurfaceSource : uint8_t
{
	VERTSURFACESOURCE_Vert0                                                          = 0,
	VERTSURFACESOURCE_Surface1                                                       = 1,
	VERTSURFACESOURCE_MAX2                                                           = 2
};

/// Enum /Script/Engine.EOrbitChainMode
/// Size: 0x04
enum EOrbitChainMode : uint8_t
{
	EOChainMode_Add0                                                                 = 0,
	EOChainMode_Scale1                                                               = 1,
	EOChainMode_Link2                                                                = 2,
	EOChainMode_MAX3                                                                 = 3
};

/// Enum /Script/Engine.EParticleAxisLock
/// Size: 0x11
enum EParticleAxisLock : uint8_t
{
	EPAL_NONE0                                                                       = 0,
	EPAL_X1                                                                          = 1,
	EPAL_Y2                                                                          = 2,
	EPAL_Z3                                                                          = 3,
	EPAL_NEGATIVE_X4                                                                 = 4,
	EPAL_NEGATIVE_Y5                                                                 = 5,
	EPAL_NEGATIVE_Z6                                                                 = 6,
	EPAL_ROTATE_X7                                                                   = 7,
	EPAL_ROTATE_Y8                                                                   = 8,
	EPAL_ROTATE_Z9                                                                   = 9,
	EPAL_MAX10                                                                       = 10
};

/// Enum /Script/Engine.EEmitterDynamicParameterValue
/// Size: 0x07
enum EEmitterDynamicParameterValue : uint8_t
{
	EDPV_UserSet0                                                                    = 0,
	EDPV_AutoSet1                                                                    = 1,
	EDPV_VelocityX2                                                                  = 2,
	EDPV_VelocityY3                                                                  = 3,
	EDPV_VelocityZ4                                                                  = 4,
	EDPV_VelocityMag5                                                                = 5,
	EDPV_MAX6                                                                        = 6
};

/// Enum /Script/Engine.EParticleUVFlipMode
/// Size: 0x09
enum EParticleUVFlipMode : uint8_t
{
	EParticleUVFlipMode__None0                                                       = 0,
	EParticleUVFlipMode__FlipUV1                                                     = 1,
	EParticleUVFlipMode__FlipUOnly2                                                  = 2,
	EParticleUVFlipMode__FlipVOnly3                                                  = 3,
	EParticleUVFlipMode__RandomFlipUV4                                               = 4,
	EParticleUVFlipMode__RandomFlipUOnly5                                            = 5,
	EParticleUVFlipMode__RandomFlipVOnly6                                            = 6,
	EParticleUVFlipMode__RandomFlipUVIndependent7                                    = 7,
	EParticleUVFlipMode__EParticleUVFlipMode_MAX8                                    = 8
};

/// Enum /Script/Engine.EParticleSortMode
/// Size: 0x06
enum EParticleSortMode : uint8_t
{
	PSORTMODE_None0                                                                  = 0,
	PSORTMODE_ViewProjDepth1                                                         = 1,
	PSORTMODE_DistanceToView2                                                        = 2,
	PSORTMODE_Age_OldestFirst3                                                       = 3,
	PSORTMODE_Age_NewestFirst4                                                       = 4,
	PSORTMODE_MAX5                                                                   = 5
};

/// Enum /Script/Engine.EEmitterNormalsMode
/// Size: 0x04
enum EEmitterNormalsMode : uint8_t
{
	ENM_CameraFacing0                                                                = 0,
	ENM_Spherical1                                                                   = 1,
	ENM_Cylindrical2                                                                 = 2,
	ENM_MAX3                                                                         = 3
};

/// Enum /Script/Engine.ETrail2SourceMethod
/// Size: 0x04
enum ETrail2SourceMethod : uint8_t
{
	PET2SRCM_Default0                                                                = 0,
	PET2SRCM_Particle1                                                               = 1,
	PET2SRCM_Actor2                                                                  = 2,
	PET2SRCM_MAX3                                                                    = 3
};

/// Enum /Script/Engine.EBeam2Method
/// Size: 0x04
enum EBeam2Method : uint8_t
{
	PEB2M_Distance0                                                                  = 0,
	PEB2M_Target1                                                                    = 1,
	PEB2M_Branch2                                                                    = 2,
	PEB2M_MAX3                                                                       = 3
};

/// Enum /Script/Engine.EBeamTaperMethod
/// Size: 0x04
enum EBeamTaperMethod : uint8_t
{
	PEBTM_None0                                                                      = 0,
	PEBTM_Full1                                                                      = 1,
	PEBTM_Partial2                                                                   = 2,
	PEBTM_MAX3                                                                       = 3
};

/// Enum /Script/Engine.EMeshScreenAlignment
/// Size: 0x04
enum EMeshScreenAlignment : uint8_t
{
	PSMA_MeshFaceCameraWithRoll0                                                     = 0,
	PSMA_MeshFaceCameraWithSpin1                                                     = 1,
	PSMA_MeshFaceCameraWithLockedAxis2                                               = 2,
	PSMA_MAX3                                                                        = 3
};

/// Enum /Script/Engine.EMeshCameraFacingUpAxis
/// Size: 0x06
enum EMeshCameraFacingUpAxis : uint8_t
{
	CameraFacing_NoneUP0                                                             = 0,
	CameraFacing_ZUp1                                                                = 1,
	CameraFacing_NegativeZUp2                                                        = 2,
	CameraFacing_YUp3                                                                = 3,
	CameraFacing_NegativeYUp4                                                        = 4,
	CameraFacing_MAX5                                                                = 5
};

/// Enum /Script/Engine.EMeshCameraFacingOptions
/// Size: 0x14
enum EMeshCameraFacingOptions : uint8_t
{
	XAxisFacing_NoUp0                                                                = 0,
	XAxisFacing_ZUp1                                                                 = 1,
	XAxisFacing_NegativeZUp2                                                         = 2,
	XAxisFacing_YUp3                                                                 = 3,
	XAxisFacing_NegativeYUp4                                                         = 4,
	LockedAxis_ZAxisFacing5                                                          = 5,
	LockedAxis_NegativeZAxisFacing6                                                  = 6,
	LockedAxis_YAxisFacing7                                                          = 7,
	LockedAxis_NegativeYAxisFacing8                                                  = 8,
	VelocityAligned_ZAxisFacing9                                                     = 9,
	VelocityAligned_NegativeZAxisFacing10                                            = 10,
	VelocityAligned_YAxisFacing11                                                    = 11,
	VelocityAligned_NegativeYAxisFacing12                                            = 12,
	EMeshCameraFacingOptions_MAX13                                                   = 13
};

/// Enum /Script/Engine.ETrailsRenderAxisOption
/// Size: 0x04
enum ETrailsRenderAxisOption : uint8_t
{
	Trails_CameraUp0                                                                 = 0,
	Trails_SourceUp1                                                                 = 1,
	Trails_WorldUp2                                                                  = 2,
	Trails_MAX3                                                                      = 3
};

/// Enum /Script/Engine.EParticleScreenAlignment
/// Size: 0x08
enum EParticleScreenAlignment : uint8_t
{
	PSA_FacingCameraPosition0                                                        = 0,
	PSA_Square1                                                                      = 1,
	PSA_Rectangle2                                                                   = 2,
	PSA_Velocity3                                                                    = 3,
	PSA_AwayFromCenter4                                                              = 4,
	PSA_TypeSpecific5                                                                = 5,
	PSA_FacingCameraDistanceBlend6                                                   = 6,
	PSA_MAX7                                                                         = 7
};

/// Enum /Script/Engine.EParticleSystemUpdateMode
/// Size: 0x03
enum EParticleSystemUpdateMode : uint8_t
{
	EPSUM_RealTime0                                                                  = 0,
	EPSUM_FixedTime1                                                                 = 1,
	EPSUM_MAX2                                                                       = 2
};

/// Enum /Script/Engine.ParticleSystemLODMethod
/// Size: 0x04
enum ParticleSystemLODMethod : uint8_t
{
	PARTICLESYSTEMLODMETHOD_Automatic0                                               = 0,
	PARTICLESYSTEMLODMETHOD_DirectSet1                                               = 1,
	PARTICLESYSTEMLODMETHOD_ActivateAutomatic2                                       = 2,
	PARTICLESYSTEMLODMETHOD_MAX3                                                     = 3
};

/// Enum /Script/Engine.EParticleSystemOcclusionBoundsMethod
/// Size: 0x04
enum EParticleSystemOcclusionBoundsMethod : uint8_t
{
	EPSOBM_None0                                                                     = 0,
	EPSOBM_ParticleBounds1                                                           = 1,
	EPSOBM_CustomBounds2                                                             = 2,
	EPSOBM_MAX3                                                                      = 3
};

/// Enum /Script/Engine.EParticleSysParamType
/// Size: 0x10
enum EParticleSysParamType : uint8_t
{
	PSPT_None0                                                                       = 0,
	PSPT_Scalar1                                                                     = 1,
	PSPT_ScalarRand2                                                                 = 2,
	PSPT_Vector3                                                                     = 3,
	PSPT_VectorRand4                                                                 = 4,
	PSPT_Color5                                                                      = 5,
	PSPT_Actor6                                                                      = 6,
	PSPT_Material7                                                                   = 7,
	PSPT_VectorUnitRand8                                                             = 8,
	PSPT_MAX9                                                                        = 9
};

/// Enum /Script/Engine.ParticleReplayState
/// Size: 0x04
enum ParticleReplayState : uint8_t
{
	PRS_Disabled0                                                                    = 0,
	PRS_Capturing1                                                                   = 1,
	PRS_Replaying2                                                                   = 2,
	PRS_MAX3                                                                         = 3
};

/// Enum /Script/Engine.EParticleEventType
/// Size: 0x07
enum EParticleEventType : uint8_t
{
	EPET_Any0                                                                        = 0,
	EPET_Spawn1                                                                      = 1,
	EPET_Death2                                                                      = 2,
	EPET_Collision3                                                                  = 3,
	EPET_Burst4                                                                      = 4,
	EPET_Blueprint5                                                                  = 5,
	EPET_MAX6                                                                        = 6
};

/// Enum /Script/Engine.EViewTargetBlendFunction
/// Size: 0x07
enum EViewTargetBlendFunction : uint8_t
{
	VTBlend_Linear0                                                                  = 0,
	VTBlend_Cubic1                                                                   = 1,
	VTBlend_EaseIn2                                                                  = 2,
	VTBlend_EaseOut3                                                                 = 3,
	VTBlend_EaseInOut4                                                               = 4,
	VTBlend_PreBlended5                                                              = 5,
	VTBlend_MAX6                                                                     = 6
};

/// Enum /Script/Engine.ERichCurveInterpMode
/// Size: 0x05
enum ERichCurveInterpMode : uint8_t
{
	RCIM_Linear0                                                                     = 0,
	RCIM_Constant1                                                                   = 1,
	RCIM_Cubic2                                                                      = 2,
	RCIM_None3                                                                       = 3,
	RCIM_MAX4                                                                        = 4
};

/// Enum /Script/Engine.ERichCurveExtrapolation
/// Size: 0x07
enum ERichCurveExtrapolation : uint8_t
{
	RCCE_Cycle0                                                                      = 0,
	RCCE_CycleWithOffset1                                                            = 1,
	RCCE_Oscillate2                                                                  = 2,
	RCCE_Linear3                                                                     = 3,
	RCCE_Constant4                                                                   = 4,
	RCCE_None5                                                                       = 5,
	RCCE_MAX6                                                                        = 6
};

/// Enum /Script/Engine.EReplayResult
/// Size: 0x13
enum EReplayResult : uint8_t
{
	EReplayResult__Success0                                                          = 0,
	EReplayResult__ReplayNotFound1                                                   = 1,
	EReplayResult__Corrupt2                                                          = 2,
	EReplayResult__UnsupportedCheckpoint3                                            = 3,
	EReplayResult__GameSpecific4                                                     = 4,
	EReplayResult__InitConnect5                                                      = 5,
	EReplayResult__LoadMap6                                                          = 6,
	EReplayResult__Serialization7                                                    = 7,
	EReplayResult__StreamerError8                                                    = 8,
	EReplayResult__ConnectionClosed9                                                 = 9,
	EReplayResult__MissingArchive10                                                  = 10,
	EReplayResult__Unknown11                                                         = 11,
	EReplayResult__EReplayResult_MAX12                                               = 12
};

/// Enum /Script/Engine.ReverbPreset
/// Size: 0x24
enum ReverbPreset : uint8_t
{
	REVERB_Default0                                                                  = 0,
	REVERB_Bathroom1                                                                 = 1,
	REVERB_StoneRoom2                                                                = 2,
	REVERB_Auditorium3                                                               = 3,
	REVERB_ConcertHall4                                                              = 4,
	REVERB_Cave5                                                                     = 5,
	REVERB_Hallway6                                                                  = 6,
	REVERB_StoneCorridor7                                                            = 7,
	REVERB_Alley8                                                                    = 8,
	REVERB_Forest9                                                                   = 9,
	REVERB_City10                                                                    = 10,
	REVERB_Mountains11                                                               = 11,
	REVERB_Quarry12                                                                  = 12,
	REVERB_Plain13                                                                   = 13,
	REVERB_ParkingLot14                                                              = 14,
	REVERB_SewerPipe15                                                               = 15,
	REVERB_Underwater16                                                              = 16,
	REVERB_SmallRoom17                                                               = 17,
	REVERB_MediumRoom18                                                              = 18,
	REVERB_LargeRoom19                                                               = 19,
	REVERB_MediumHall20                                                              = 20,
	REVERB_LargeHall21                                                               = 21,
	REVERB_Plate22                                                                   = 22,
	REVERB_MAX23                                                                     = 23
};

/// Enum /Script/Engine.ERichCurveTangentMode
/// Size: 0x05
enum ERichCurveTangentMode : uint8_t
{
	RCTM_Auto0                                                                       = 0,
	RCTM_User1                                                                       = 1,
	RCTM_Break2                                                                      = 2,
	RCTM_None3                                                                       = 3,
	RCTM_MAX4                                                                        = 4
};

/// Enum /Script/Engine.ERichCurveTangentWeightMode
/// Size: 0x05
enum ERichCurveTangentWeightMode : uint8_t
{
	RCTWM_WeightedNone0                                                              = 0,
	RCTWM_WeightedArrive1                                                            = 1,
	RCTWM_WeightedLeave2                                                             = 2,
	RCTWM_WeightedBoth3                                                              = 3,
	RCTWM_MAX4                                                                       = 4
};

/// Enum /Script/Engine.ERichCurveCompressionFormat
/// Size: 0x07
enum ERichCurveCompressionFormat : uint8_t
{
	RCCF_Empty0                                                                      = 0,
	RCCF_Constant1                                                                   = 1,
	RCCF_Linear2                                                                     = 2,
	RCCF_Cubic3                                                                      = 3,
	RCCF_Mixed4                                                                      = 4,
	RCCF_Weighted5                                                                   = 5,
	RCCF_MAX6                                                                        = 6
};

/// Enum /Script/Engine.ERichCurveKeyTimeCompressionFormat
/// Size: 0x03
enum ERichCurveKeyTimeCompressionFormat : uint8_t
{
	RCKTCF_uint160                                                                   = 0,
	RCKTCF_float321                                                                  = 1,
	RCKTCF_MAX2                                                                      = 2
};

/// Enum /Script/Engine.ERuntimeVirtualTextureMaterialType
/// Size: 0x09
enum ERuntimeVirtualTextureMaterialType : uint8_t
{
	ERuntimeVirtualTextureMaterialType__BaseColor0                                   = 0,
	ERuntimeVirtualTextureMaterialType__BaseColor_Normal_DEPRECATED1                 = 1,
	ERuntimeVirtualTextureMaterialType__BaseColor_Normal_Roughness2                  = 2,
	ERuntimeVirtualTextureMaterialType__BaseColor_Normal_Specular3                   = 3,
	ERuntimeVirtualTextureMaterialType__BaseColor_Normal_Specular_YCoCg4             = 4,
	ERuntimeVirtualTextureMaterialType__BaseColor_Normal_Specular_Mask_YCoCg5        = 5,
	ERuntimeVirtualTextureMaterialType__WorldHeight6                                 = 6,
	ERuntimeVirtualTextureMaterialType__Count7                                       = 7,
	ERuntimeVirtualTextureMaterialType__ERuntimeVirtualTextureMaterialType_MAX8      = 8
};

/// Enum /Script/Engine.EDepthOfFieldMethod
/// Size: 0x04
enum EDepthOfFieldMethod : uint8_t
{
	DOFM_BokehDOF0                                                                   = 0,
	DOFM_Gaussian1                                                                   = 1,
	DOFM_CircleDOF2                                                                  = 2,
	DOFM_MAX3                                                                        = 3
};

/// Enum /Script/Engine.EAutoExposureMethod
/// Size: 0x04
enum EAutoExposureMethod : uint8_t
{
	AEM_Histogram0                                                                   = 0,
	AEM_Basic1                                                                       = 1,
	AEM_Manual2                                                                      = 2,
	AEM_MAX3                                                                         = 3
};

/// Enum /Script/Engine.EBloomMethod
/// Size: 0x03
enum EBloomMethod : uint8_t
{
	BM_SOG0                                                                          = 0,
	BM_FFT1                                                                          = 1,
	BM_MAX2                                                                          = 2
};

/// Enum /Script/Engine.ETemperatureMethod
/// Size: 0x03
enum ETemperatureMethod : uint8_t
{
	TEMP_WhiteBalance0                                                               = 0,
	TEMP_ColorTemperature1                                                           = 1,
	TEMP_MAX2                                                                        = 2
};

/// Enum /Script/Engine.ELightUnits
/// Size: 0x04
enum ELightUnits : uint8_t
{
	ELightUnits__Unitless0                                                           = 0,
	ELightUnits__Candelas1                                                           = 1,
	ELightUnits__Lumens2                                                             = 2,
	ELightUnits__ELightUnits_MAX3                                                    = 3
};

/// Enum /Script/Engine.EReflectionsType
/// Size: 0x03
enum EReflectionsType : uint8_t
{
	EReflectionsType__ScreenSpace0                                                   = 0,
	EReflectionsType__RayTracing1                                                    = 1,
	EReflectionsType__EReflectionsType_MAX2                                          = 2
};

/// Enum /Script/Engine.ELumenRayLightingModeOverride
/// Size: 0x04
enum ELumenRayLightingModeOverride : uint8_t
{
	ELumenRayLightingModeOverride__Default0                                          = 0,
	ELumenRayLightingModeOverride__SurfaceCache1                                     = 1,
	ELumenRayLightingModeOverride__HitLighting2                                      = 2,
	ELumenRayLightingModeOverride__ELumenRayLightingModeOverride_MAX3                = 3
};

/// Enum /Script/Engine.ETranslucencyType
/// Size: 0x03
enum ETranslucencyType : uint8_t
{
	ETranslucencyType__Raster0                                                       = 0,
	ETranslucencyType__RayTracing1                                                   = 1,
	ETranslucencyType__ETranslucencyType_MAX2                                        = 2
};

/// Enum /Script/Engine.ERayTracingGlobalIlluminationType
/// Size: 0x04
enum ERayTracingGlobalIlluminationType : uint8_t
{
	ERayTracingGlobalIlluminationType__Disabled0                                     = 0,
	ERayTracingGlobalIlluminationType__BruteForce1                                   = 1,
	ERayTracingGlobalIlluminationType__FinalGather2                                  = 2,
	ERayTracingGlobalIlluminationType__ERayTracingGlobalIlluminationType_MAX3        = 3
};

/// Enum /Script/Engine.EReflectedAndRefractedRayTracedShadows
/// Size: 0x04
enum EReflectedAndRefractedRayTracedShadows : uint8_t
{
	EReflectedAndRefractedRayTracedShadows__Disabled0                                = 0,
	EReflectedAndRefractedRayTracedShadows__Hard_shadows1                            = 1,
	EReflectedAndRefractedRayTracedShadows__Area_shadows2                            = 2,
	EReflectedAndRefractedRayTracedShadows__EReflectedAndRefractedRayTracedShadows_MAX3 = 3
};

/// Enum /Script/Engine.EMobilePlanarReflectionMode
/// Size: 0x04
enum EMobilePlanarReflectionMode : uint8_t
{
	EMobilePlanarReflectionMode__Usual0                                              = 0,
	EMobilePlanarReflectionMode__MobilePPRExclusive1                                 = 1,
	EMobilePlanarReflectionMode__MobilePPR2                                          = 2,
	EMobilePlanarReflectionMode__EMobilePlanarReflectionMode_MAX3                    = 3
};

/// Enum /Script/Engine.EMobilePixelProjectedReflectionQuality
/// Size: 0x05
enum EMobilePixelProjectedReflectionQuality : uint8_t
{
	EMobilePixelProjectedReflectionQuality__Disabled0                                = 0,
	EMobilePixelProjectedReflectionQuality__BestPerformance1                         = 1,
	EMobilePixelProjectedReflectionQuality__BetterQuality2                           = 2,
	EMobilePixelProjectedReflectionQuality__BestQuality3                             = 3,
	EMobilePixelProjectedReflectionQuality__EMobilePixelProjectedReflectionQuality_MAX4 = 4
};

/// Enum /Script/Engine.EMaterialProperty
/// Size: 0x34
enum EMaterialProperty : uint8_t
{
	MP_EmissiveColor0                                                                = 0,
	MP_Opacity1                                                                      = 1,
	MP_OpacityMask2                                                                  = 2,
	MP_DiffuseColor3                                                                 = 3,
	MP_SpecularColor4                                                                = 4,
	MP_BaseColor5                                                                    = 5,
	MP_Metallic6                                                                     = 6,
	MP_Specular7                                                                     = 7,
	MP_Roughness8                                                                    = 8,
	MP_Anisotropy9                                                                   = 9,
	MP_Normal10                                                                      = 10,
	MP_Tangent11                                                                     = 11,
	MP_WorldPositionOffset12                                                         = 12,
	MP_WorldDisplacement_DEPRECATED13                                                = 13,
	MP_TessellationMultiplier_DEPRECATED14                                           = 14,
	MP_SubsurfaceColor15                                                             = 15,
	MP_CustomData016                                                                 = 16,
	MP_CustomData117                                                                 = 17,
	MP_AmbientOcclusion18                                                            = 18,
	MP_Refraction19                                                                  = 19,
	MP_CustomizedUVs020                                                              = 20,
	MP_CustomizedUVs121                                                              = 21,
	MP_CustomizedUVs222                                                              = 22,
	MP_CustomizedUVs323                                                              = 23,
	MP_CustomizedUVs424                                                              = 24,
	MP_CustomizedUVs525                                                              = 25,
	MP_CustomizedUVs626                                                              = 26,
	MP_CustomizedUVs727                                                              = 27,
	MP_PixelDepthOffset28                                                            = 28,
	MP_ShadingModel29                                                                = 29,
	MP_FrontMaterial30                                                               = 30,
	MP_MaterialAttributes31                                                          = 31,
	MP_CustomOutput32                                                                = 32,
	MP_MAX33                                                                         = 33
};

/// Enum /Script/Engine.EAntiAliasingMethod
/// Size: 0x06
enum EAntiAliasingMethod : uint8_t
{
	AAM_None0                                                                        = 0,
	AAM_FXAA1                                                                        = 1,
	AAM_TemporalAA2                                                                  = 2,
	AAM_MSAA3                                                                        = 3,
	AAM_TSR4                                                                         = 4,
	AAM_MAX5                                                                         = 5
};

/// Enum /Script/Engine.ESkeletalMeshGeoImportVersions
/// Size: 0x05
enum ESkeletalMeshGeoImportVersions : uint8_t
{
	ESkeletalMeshGeoImportVersions__Before_Versionning0                              = 0,
	ESkeletalMeshGeoImportVersions__SkeletalMeshBuildRefactor1                       = 1,
	ESkeletalMeshGeoImportVersions__VersionPlusOne2                                  = 2,
	ESkeletalMeshGeoImportVersions__LatestVersion3                                   = 1,
	ESkeletalMeshGeoImportVersions__ESkeletalMeshGeoImportVersions_MAX4              = 3
};

/// Enum /Script/Engine.ESkeletalMeshSkinningImportVersions
/// Size: 0x05
enum ESkeletalMeshSkinningImportVersions : uint8_t
{
	ESkeletalMeshSkinningImportVersions__Before_Versionning0                         = 0,
	ESkeletalMeshSkinningImportVersions__SkeletalMeshBuildRefactor1                  = 1,
	ESkeletalMeshSkinningImportVersions__VersionPlusOne2                             = 2,
	ESkeletalMeshSkinningImportVersions__LatestVersion3                              = 1,
	ESkeletalMeshSkinningImportVersions__ESkeletalMeshSkinningImportVersions_MAX4    = 3
};

/// Enum /Script/Engine.SkeletalMeshTerminationCriterion
/// Size: 0x07
enum SkeletalMeshTerminationCriterion : uint8_t
{
	SMTC_NumOfTriangles0                                                             = 0,
	SMTC_NumOfVerts1                                                                 = 1,
	SMTC_TriangleOrVert2                                                             = 2,
	SMTC_AbsNumOfTriangles3                                                          = 3,
	SMTC_AbsNumOfVerts4                                                              = 4,
	SMTC_AbsTriangleOrVert5                                                          = 5,
	SMTC_MAX6                                                                        = 6
};

/// Enum /Script/Engine.SkeletalMeshOptimizationType
/// Size: 0x04
enum SkeletalMeshOptimizationType : uint8_t
{
	SMOT_NumOfTriangles0                                                             = 0,
	SMOT_MaxDeviation1                                                               = 1,
	SMOT_TriangleOrDeviation2                                                        = 2,
	SMOT_MAX3                                                                        = 3
};

/// Enum /Script/Engine.SkeletalMeshOptimizationImportance
/// Size: 0x07
enum SkeletalMeshOptimizationImportance : uint8_t
{
	SMOI_Off0                                                                        = 0,
	SMOI_Lowest1                                                                     = 1,
	SMOI_Low2                                                                        = 2,
	SMOI_Normal3                                                                     = 3,
	SMOI_High4                                                                       = 4,
	SMOI_Highest5                                                                    = 5,
	SMOI_MAX6                                                                        = 6
};

/// Enum /Script/Engine.ESkinCacheUsage
/// Size: 0x04
enum ESkinCacheUsage : uint8_t
{
	ESkinCacheUsage__Auto0                                                           = 0,
	ESkinCacheUsage__Disabled1                                                       = 255,
	ESkinCacheUsage__Enabled2                                                        = 1,
	ESkinCacheUsage__ESkinCacheUsage_MAX3                                            = 256
};

/// Enum /Script/Engine.ESkinCacheDefaultBehavior
/// Size: 0x03
enum ESkinCacheDefaultBehavior : uint8_t
{
	ESkinCacheDefaultBehavior__Exclusive0                                            = 0,
	ESkinCacheDefaultBehavior__Inclusive1                                            = 1,
	ESkinCacheDefaultBehavior__ESkinCacheDefaultBehavior_MAX2                        = 2
};

/// Enum /Script/Engine.EBoneVisibilityStatus
/// Size: 0x04
enum EBoneVisibilityStatus : uint8_t
{
	BVS_HiddenByParent0                                                              = 0,
	BVS_Visible1                                                                     = 1,
	BVS_ExplicitlyHidden2                                                            = 2,
	BVS_MAX3                                                                         = 3
};

/// Enum /Script/Engine.EPhysBodyOp
/// Size: 0x03
enum EPhysBodyOp : uint8_t
{
	PBO_None0                                                                        = 0,
	PBO_Term1                                                                        = 1,
	PBO_MAX2                                                                         = 2
};

/// Enum /Script/Engine.EVisibilityBasedAnimTickOption
/// Size: 0x05
enum EVisibilityBasedAnimTickOption : uint8_t
{
	EVisibilityBasedAnimTickOption__AlwaysTickPoseAndRefreshBones0                   = 0,
	EVisibilityBasedAnimTickOption__AlwaysTickPose1                                  = 1,
	EVisibilityBasedAnimTickOption__OnlyTickMontagesWhenNotRendered2                 = 2,
	EVisibilityBasedAnimTickOption__OnlyTickPoseWhenRendered3                        = 3,
	EVisibilityBasedAnimTickOption__EVisibilityBasedAnimTickOption_MAX4              = 4
};

/// Enum /Script/Engine.EBoneSpaces
/// Size: 0x03
enum EBoneSpaces : uint8_t
{
	EBoneSpaces__WorldSpace0                                                         = 0,
	EBoneSpaces__ComponentSpace1                                                     = 1,
	EBoneSpaces__EBoneSpaces_MAX2                                                    = 2
};

/// Enum /Script/Engine.ESkyLightSourceType
/// Size: 0x03
enum ESkyLightSourceType : uint8_t
{
	SLS_CapturedScene0                                                               = 0,
	SLS_SpecifiedCubemap1                                                            = 1,
	SLS_MAX2                                                                         = 2
};

/// Enum /Script/Engine.ESoundDistanceCalc
/// Size: 0x05
enum ESoundDistanceCalc : uint8_t
{
	SOUNDDISTANCE_Normal0                                                            = 0,
	SOUNDDISTANCE_InfiniteXYPlane1                                                   = 1,
	SOUNDDISTANCE_InfiniteXZPlane2                                                   = 2,
	SOUNDDISTANCE_InfiniteYZPlane3                                                   = 3,
	SOUNDDISTANCE_MAX4                                                               = 4
};

/// Enum /Script/Engine.ESoundSpatializationAlgorithm
/// Size: 0x03
enum ESoundSpatializationAlgorithm : uint8_t
{
	SPATIALIZATION_Default0                                                          = 0,
	SPATIALIZATION_HRTF1                                                             = 1,
	SPATIALIZATION_MAX2                                                              = 2
};

/// Enum /Script/Engine.EAirAbsorptionMethod
/// Size: 0x03
enum EAirAbsorptionMethod : uint8_t
{
	EAirAbsorptionMethod__Linear0                                                    = 0,
	EAirAbsorptionMethod__CustomCurve1                                               = 1,
	EAirAbsorptionMethod__EAirAbsorptionMethod_MAX2                                  = 2
};

/// Enum /Script/Engine.EReverbSendMethod
/// Size: 0x04
enum EReverbSendMethod : uint8_t
{
	EReverbSendMethod__Linear0                                                       = 0,
	EReverbSendMethod__CustomCurve1                                                  = 1,
	EReverbSendMethod__Manual2                                                       = 2,
	EReverbSendMethod__EReverbSendMethod_MAX3                                        = 3
};

/// Enum /Script/Engine.ESubmixSendMethod
/// Size: 0x04
enum ESubmixSendMethod : uint8_t
{
	ESubmixSendMethod__Linear0                                                       = 0,
	ESubmixSendMethod__CustomCurve1                                                  = 1,
	ESubmixSendMethod__Manual2                                                       = 2,
	ESubmixSendMethod__ESubmixSendMethod_MAX3                                        = 3
};

/// Enum /Script/Engine.EPriorityAttenuationMethod
/// Size: 0x04
enum EPriorityAttenuationMethod : uint8_t
{
	EPriorityAttenuationMethod__Linear0                                              = 0,
	EPriorityAttenuationMethod__CustomCurve1                                         = 1,
	EPriorityAttenuationMethod__Manual2                                              = 2,
	EPriorityAttenuationMethod__EPriorityAttenuationMethod_MAX3                      = 3
};

/// Enum /Script/Engine.ESoundGroup
/// Size: 0x26
enum ESoundGroup : uint8_t
{
	SOUNDGROUP_Default0                                                              = 0,
	SOUNDGROUP_Effects1                                                              = 1,
	SOUNDGROUP_UI2                                                                   = 2,
	SOUNDGROUP_Music3                                                                = 3,
	SOUNDGROUP_Voice4                                                                = 4,
	SOUNDGROUP_GameSoundGroup15                                                      = 5,
	SOUNDGROUP_GameSoundGroup26                                                      = 6,
	SOUNDGROUP_GameSoundGroup37                                                      = 7,
	SOUNDGROUP_GameSoundGroup48                                                      = 8,
	SOUNDGROUP_GameSoundGroup59                                                      = 9,
	SOUNDGROUP_GameSoundGroup610                                                     = 10,
	SOUNDGROUP_GameSoundGroup711                                                     = 11,
	SOUNDGROUP_GameSoundGroup812                                                     = 12,
	SOUNDGROUP_GameSoundGroup913                                                     = 13,
	SOUNDGROUP_GameSoundGroup1014                                                    = 14,
	SOUNDGROUP_GameSoundGroup1115                                                    = 15,
	SOUNDGROUP_GameSoundGroup1216                                                    = 16,
	SOUNDGROUP_GameSoundGroup1317                                                    = 17,
	SOUNDGROUP_GameSoundGroup1418                                                    = 18,
	SOUNDGROUP_GameSoundGroup1519                                                    = 19,
	SOUNDGROUP_GameSoundGroup1620                                                    = 20,
	SOUNDGROUP_GameSoundGroup1721                                                    = 21,
	SOUNDGROUP_GameSoundGroup1822                                                    = 22,
	SOUNDGROUP_GameSoundGroup1923                                                    = 23,
	SOUNDGROUP_GameSoundGroup2024                                                    = 24,
	SOUNDGROUP_MAX25                                                                 = 25
};

/// Enum /Script/Engine.ModulationParamMode
/// Size: 0x04
enum ModulationParamMode : uint8_t
{
	MPM_Normal0                                                                      = 0,
	MPM_Abs1                                                                         = 1,
	MPM_Direct2                                                                      = 2,
	MPM_MAX3                                                                         = 3
};

/// Enum /Script/Engine.ESourceBusSendLevelControlMethod
/// Size: 0x04
enum ESourceBusSendLevelControlMethod : uint8_t
{
	ESourceBusSendLevelControlMethod__Linear0                                        = 0,
	ESourceBusSendLevelControlMethod__CustomCurve1                                   = 1,
	ESourceBusSendLevelControlMethod__Manual2                                        = 2,
	ESourceBusSendLevelControlMethod__ESourceBusSendLevelControlMethod_MAX3          = 3
};

/// Enum /Script/Engine.EDecompressionType
/// Size: 0x09
enum EDecompressionType : uint8_t
{
	DTYPE_Setup0                                                                     = 0,
	DTYPE_Invalid1                                                                   = 1,
	DTYPE_Preview2                                                                   = 2,
	DTYPE_Native3                                                                    = 3,
	DTYPE_RealTime4                                                                  = 4,
	DTYPE_Procedural5                                                                = 5,
	DTYPE_Xenon6                                                                     = 6,
	DTYPE_Streaming7                                                                 = 7,
	DTYPE_MAX8                                                                       = 8
};

/// Enum /Script/Engine.ESoundWaveFFTSize
/// Size: 0x06
enum ESoundWaveFFTSize : uint8_t
{
	ESoundWaveFFTSize__VerySmall0                                                    = 0,
	ESoundWaveFFTSize__Small1                                                        = 1,
	ESoundWaveFFTSize__Medium2                                                       = 2,
	ESoundWaveFFTSize__Large3                                                        = 3,
	ESoundWaveFFTSize__VeryLarge4                                                    = 4,
	ESoundWaveFFTSize__ESoundWaveFFTSize_MAX5                                        = 5
};

/// Enum /Script/Engine.ESoundAssetCompressionType
/// Size: 0x06
enum ESoundAssetCompressionType : uint8_t
{
	ESoundAssetCompressionType__BinkAudio0                                           = 0,
	ESoundAssetCompressionType__ADPCM1                                               = 1,
	ESoundAssetCompressionType__PCM2                                                 = 2,
	ESoundAssetCompressionType__PlatformSpecific3                                    = 3,
	ESoundAssetCompressionType__ProjectDefined4                                      = 4,
	ESoundAssetCompressionType__ESoundAssetCompressionType_MAX5                      = 5
};

/// Enum /Script/Engine.ESoundWaveLoadingBehavior
/// Size: 0x07
enum ESoundWaveLoadingBehavior : uint8_t
{
	ESoundWaveLoadingBehavior__Inherited0                                            = 0,
	ESoundWaveLoadingBehavior__RetainOnLoad1                                         = 1,
	ESoundWaveLoadingBehavior__PrimeOnLoad2                                          = 2,
	ESoundWaveLoadingBehavior__LoadOnDemand3                                         = 3,
	ESoundWaveLoadingBehavior__ForceInline4                                          = 4,
	ESoundWaveLoadingBehavior__Uninitialized5                                        = 255,
	ESoundWaveLoadingBehavior__ESoundWaveLoadingBehavior_MAX6                        = 256
};

/// Enum /Script/Engine.ENormalMode
/// Size: 0x06
enum ENormalMode : uint8_t
{
	NM_PreserveSmoothingGroups0                                                      = 0,
	NM_RecalculateNormals1                                                           = 1,
	NM_RecalculateNormalsSmooth2                                                     = 2,
	NM_RecalculateNormalsHard3                                                       = 3,
	TEMP_BROKEN4                                                                     = 4,
	ENormalMode_MAX5                                                                 = 5
};

/// Enum /Script/Engine.EImportanceLevel
/// Size: 0x08
enum EImportanceLevel : uint8_t
{
	IL_Off0                                                                          = 0,
	IL_Lowest1                                                                       = 1,
	IL_Low2                                                                          = 2,
	IL_Normal3                                                                       = 3,
	IL_High4                                                                         = 4,
	IL_Highest5                                                                      = 5,
	TEMP_BROKEN26                                                                    = 6,
	EImportanceLevel_MAX7                                                            = 7
};

/// Enum /Script/Engine.EOptimizationType
/// Size: 0x03
enum EOptimizationType : uint8_t
{
	OT_NumOfTriangles0                                                               = 0,
	OT_MaxDeviation1                                                                 = 1,
	OT_MAX2                                                                          = 2
};

/// Enum /Script/Engine.EStereoLayerType
/// Size: 0x04
enum EStereoLayerType : uint8_t
{
	SLT_WorldLocked0                                                                 = 0,
	SLT_TrackerLocked1                                                               = 1,
	SLT_FaceLocked2                                                                  = 2,
	SLT_MAX3                                                                         = 3
};

/// Enum /Script/Engine.EStereoLayerShape
/// Size: 0x05
enum EStereoLayerShape : uint8_t
{
	SLSH_QuadLayer0                                                                  = 0,
	SLSH_CylinderLayer1                                                              = 1,
	SLSH_CubemapLayer2                                                               = 2,
	SLSH_EquirectLayer3                                                              = 3,
	SLSH_MAX4                                                                        = 4
};

/// Enum /Script/Engine.ESubUVBoundingVertexCount
/// Size: 0x03
enum ESubUVBoundingVertexCount : uint8_t
{
	BVC_FourVertices0                                                                = 0,
	BVC_EightVertices1                                                               = 1,
	BVC_MAX2                                                                         = 2
};

/// Enum /Script/Engine.EOpacitySourceMode
/// Size: 0x06
enum EOpacitySourceMode : uint8_t
{
	OSM_Alpha0                                                                       = 0,
	OSM_ColorBrightness1                                                             = 1,
	OSM_RedChannel2                                                                  = 2,
	OSM_GreenChannel3                                                                = 3,
	OSM_BlueChannel4                                                                 = 4,
	OSM_MAX5                                                                         = 5
};

/// Enum /Script/Engine.EHorizTextAligment
/// Size: 0x04
enum EHorizTextAligment : uint8_t
{
	EHTA_Left0                                                                       = 0,
	EHTA_Center1                                                                     = 1,
	EHTA_Right2                                                                      = 2,
	EHTA_MAX3                                                                        = 3
};

/// Enum /Script/Engine.EVerticalTextAligment
/// Size: 0x05
enum EVerticalTextAligment : uint8_t
{
	EVRTA_TextTop0                                                                   = 0,
	EVRTA_TextCenter1                                                                = 1,
	EVRTA_TextBottom2                                                                = 2,
	EVRTA_QuadTop3                                                                   = 3,
	EVRTA_MAX4                                                                       = 4
};

/// Enum /Script/Engine.TextureFilter
/// Size: 0x05
enum TextureFilter : uint8_t
{
	TF_Nearest0                                                                      = 0,
	TF_Bilinear1                                                                     = 1,
	TF_Trilinear2                                                                    = 2,
	TF_Default3                                                                      = 3,
	TF_MAX4                                                                          = 4
};

/// Enum /Script/Engine.TextureAddress
/// Size: 0x04
enum TextureAddress : uint8_t
{
	TA_Wrap0                                                                         = 0,
	TA_Clamp1                                                                        = 1,
	TA_Mirror2                                                                       = 2,
	TA_MAX3                                                                          = 3
};

/// Enum /Script/Engine.ETextureMipCount
/// Size: 0x04
enum ETextureMipCount : uint8_t
{
	TMC_ResidentMips0                                                                = 0,
	TMC_AllMips1                                                                     = 1,
	TMC_AllMipsBiased2                                                               = 2,
	TMC_MAX3                                                                         = 3
};

/// Enum /Script/Engine.ETextureCompressionQuality
/// Size: 0x07
enum ETextureCompressionQuality : uint8_t
{
	TCQ_Default0                                                                     = 0,
	TCQ_Lowest1                                                                      = 1,
	TCQ_Low2                                                                         = 2,
	TCQ_Medium3                                                                      = 3,
	TCQ_High4                                                                        = 4,
	TCQ_Highest5                                                                     = 5,
	TCQ_MAX6                                                                         = 6
};

/// Enum /Script/Engine.TextureGroup
/// Size: 0x53
enum TextureGroup : uint8_t
{
	TEXTUREGROUP_World0                                                              = 0,
	TEXTUREGROUP_WorldNormalMap1                                                     = 1,
	TEXTUREGROUP_WorldSpecular2                                                      = 2,
	TEXTUREGROUP_Character3                                                          = 3,
	TEXTUREGROUP_CharacterNormalMap4                                                 = 4,
	TEXTUREGROUP_CharacterSpecular5                                                  = 5,
	TEXTUREGROUP_Weapon6                                                             = 6,
	TEXTUREGROUP_WeaponNormalMap7                                                    = 7,
	TEXTUREGROUP_WeaponSpecular8                                                     = 8,
	TEXTUREGROUP_Vehicle9                                                            = 9,
	TEXTUREGROUP_VehicleNormalMap10                                                  = 10,
	TEXTUREGROUP_VehicleSpecular11                                                   = 11,
	TEXTUREGROUP_Cinematic12                                                         = 12,
	TEXTUREGROUP_Effects13                                                           = 13,
	TEXTUREGROUP_EffectsNotFiltered14                                                = 14,
	TEXTUREGROUP_Skybox15                                                            = 15,
	TEXTUREGROUP_UI16                                                                = 16,
	TEXTUREGROUP_Lightmap17                                                          = 17,
	TEXTUREGROUP_RenderTarget18                                                      = 18,
	TEXTUREGROUP_MobileFlattened19                                                   = 19,
	TEXTUREGROUP_ProcBuilding_Face20                                                 = 20,
	TEXTUREGROUP_ProcBuilding_LightMap21                                             = 21,
	TEXTUREGROUP_Shadowmap22                                                         = 22,
	TEXTUREGROUP_ColorLookupTable23                                                  = 23,
	TEXTUREGROUP_Terrain_Heightmap24                                                 = 24,
	TEXTUREGROUP_Terrain_Weightmap25                                                 = 25,
	TEXTUREGROUP_Bokeh26                                                             = 26,
	TEXTUREGROUP_IESLightProfile27                                                   = 27,
	TEXTUREGROUP_Pixels2D28                                                          = 28,
	TEXTUREGROUP_HierarchicalLOD29                                                   = 29,
	TEXTUREGROUP_Impostor30                                                          = 30,
	TEXTUREGROUP_ImpostorNormalDepth31                                               = 31,
	TEXTUREGROUP_8BitData32                                                          = 32,
	TEXTUREGROUP_16BitData33                                                         = 33,
	TEXTUREGROUP_Project0134                                                         = 34,
	TEXTUREGROUP_Project0235                                                         = 35,
	TEXTUREGROUP_Project0336                                                         = 36,
	TEXTUREGROUP_Project0437                                                         = 37,
	TEXTUREGROUP_Project0538                                                         = 38,
	TEXTUREGROUP_Project0639                                                         = 39,
	TEXTUREGROUP_Project0740                                                         = 40,
	TEXTUREGROUP_Project0841                                                         = 41,
	TEXTUREGROUP_Project0942                                                         = 42,
	TEXTUREGROUP_Project1043                                                         = 43,
	TEXTUREGROUP_Project1144                                                         = 44,
	TEXTUREGROUP_Project1245                                                         = 45,
	TEXTUREGROUP_Project1346                                                         = 46,
	TEXTUREGROUP_Project1447                                                         = 47,
	TEXTUREGROUP_Project1548                                                         = 48,
	TEXTUREGROUP_Project1649                                                         = 49,
	TEXTUREGROUP_Project1750                                                         = 50,
	TEXTUREGROUP_Project1851                                                         = 51,
	TEXTUREGROUP_MAX52                                                               = 52
};

/// Enum /Script/Engine.TextureMipGenSettings
/// Size: 0x23
enum TextureMipGenSettings : uint8_t
{
	TMGS_FromTextureGroup0                                                           = 0,
	TMGS_SimpleAverage1                                                              = 1,
	TMGS_Sharpen02                                                                   = 2,
	TMGS_Sharpen13                                                                   = 3,
	TMGS_Sharpen24                                                                   = 4,
	TMGS_Sharpen35                                                                   = 5,
	TMGS_Sharpen46                                                                   = 6,
	TMGS_Sharpen57                                                                   = 7,
	TMGS_Sharpen68                                                                   = 8,
	TMGS_Sharpen79                                                                   = 9,
	TMGS_Sharpen810                                                                  = 10,
	TMGS_Sharpen911                                                                  = 11,
	TMGS_Sharpen1012                                                                 = 12,
	TMGS_NoMipmaps13                                                                 = 13,
	TMGS_LeaveExistingMips14                                                         = 14,
	TMGS_Blur115                                                                     = 15,
	TMGS_Blur216                                                                     = 16,
	TMGS_Blur317                                                                     = 17,
	TMGS_Blur418                                                                     = 18,
	TMGS_Blur519                                                                     = 19,
	TMGS_Unfiltered20                                                                = 20,
	TMGS_Angular21                                                                   = 21,
	TMGS_MAX22                                                                       = 22
};

/// Enum /Script/Engine.ETexturePowerOfTwoSetting
/// Size: 0x04
enum ETexturePowerOfTwoSetting : uint8_t
{
	ETexturePowerOfTwoSetting__None0                                                 = 0,
	ETexturePowerOfTwoSetting__PadToPowerOfTwo1                                      = 1,
	ETexturePowerOfTwoSetting__PadToSquarePowerOfTwo2                                = 2,
	ETexturePowerOfTwoSetting__ETexturePowerOfTwoSetting_MAX3                        = 3
};

/// Enum /Script/Engine.ETextureSamplerFilter
/// Size: 0x06
enum ETextureSamplerFilter : uint8_t
{
	ETextureSamplerFilter__Point0                                                    = 0,
	ETextureSamplerFilter__Bilinear1                                                 = 1,
	ETextureSamplerFilter__Trilinear2                                                = 2,
	ETextureSamplerFilter__AnisotropicPoint3                                         = 3,
	ETextureSamplerFilter__AnisotropicLinear4                                        = 4,
	ETextureSamplerFilter__ETextureSamplerFilter_MAX5                                = 5
};

/// Enum /Script/Engine.ETextureMipLoadOptions
/// Size: 0x04
enum ETextureMipLoadOptions : uint8_t
{
	ETextureMipLoadOptions__Default0                                                 = 0,
	ETextureMipLoadOptions__AllMips1                                                 = 1,
	ETextureMipLoadOptions__OnlyFirstMip2                                            = 2,
	ETextureMipLoadOptions__ETextureMipLoadOptions_MAX3                              = 3
};

/// Enum /Script/Engine.ETextureDownscaleOptions
/// Size: 0x15
enum ETextureDownscaleOptions : uint8_t
{
	ETextureDownscaleOptions__Default0                                               = 0,
	ETextureDownscaleOptions__Unfiltered1                                            = 1,
	ETextureDownscaleOptions__SimpleAverage2                                         = 2,
	ETextureDownscaleOptions__Sharpen03                                              = 3,
	ETextureDownscaleOptions__Sharpen14                                              = 4,
	ETextureDownscaleOptions__Sharpen25                                              = 5,
	ETextureDownscaleOptions__Sharpen36                                              = 6,
	ETextureDownscaleOptions__Sharpen47                                              = 7,
	ETextureDownscaleOptions__Sharpen58                                              = 8,
	ETextureDownscaleOptions__Sharpen69                                              = 9,
	ETextureDownscaleOptions__Sharpen710                                             = 10,
	ETextureDownscaleOptions__Sharpen811                                             = 11,
	ETextureDownscaleOptions__Sharpen912                                             = 12,
	ETextureDownscaleOptions__Sharpen1013                                            = 13,
	ETextureDownscaleOptions__ETextureDownscaleOptions_MAX14                         = 14
};

/// Enum /Script/Engine.ETextureLossyCompressionAmount
/// Size: 0x08
enum ETextureLossyCompressionAmount : uint8_t
{
	TLCA_Default0                                                                    = 0,
	TLCA_None1                                                                       = 1,
	TLCA_Lowest2                                                                     = 2,
	TLCA_Low3                                                                        = 3,
	TLCA_Medium4                                                                     = 4,
	TLCA_High5                                                                       = 5,
	TLCA_Highest6                                                                    = 6,
	TLCA_MAX7                                                                        = 7
};

/// Enum /Script/Engine.ETextureEncodeSpeed
/// Size: 0x04
enum ETextureEncodeSpeed : uint8_t
{
	ETextureEncodeSpeed__Final0                                                      = 0,
	ETextureEncodeSpeed__FinalIfAvailable1                                           = 1,
	ETextureEncodeSpeed__Fast2                                                       = 2,
	ETextureEncodeSpeed__ETextureEncodeSpeed_MAX3                                    = 3
};

/// Enum /Script/Engine.ETextureClass
/// Size: 0x11
enum ETextureClass : uint8_t
{
	ETextureClass__Invalid0                                                          = 0,
	ETextureClass__TwoD1                                                             = 1,
	ETextureClass__Cube2                                                             = 2,
	ETextureClass__Array3                                                            = 3,
	ETextureClass__CubeArray4                                                        = 4,
	ETextureClass__Volume5                                                           = 5,
	ETextureClass__TwoDDynamic6                                                      = 6,
	ETextureClass__RenderTarget7                                                     = 7,
	ETextureClass__Other2DNoSource8                                                  = 8,
	ETextureClass__OtherUnknown9                                                     = 9,
	ETextureClass__ETextureClass_MAX10                                               = 10
};

/// Enum /Script/Engine.ECompositeTextureMode
/// Size: 0x06
enum ECompositeTextureMode : uint8_t
{
	CTM_Disabled0                                                                    = 0,
	CTM_NormalRoughnessToRed1                                                        = 1,
	CTM_NormalRoughnessToGreen2                                                      = 2,
	CTM_NormalRoughnessToBlue3                                                       = 3,
	CTM_NormalRoughnessToAlpha4                                                      = 4,
	CTM_MAX5                                                                         = 5
};

/// Enum /Script/Engine.ETextureSourceCompressionFormat
/// Size: 0x04
enum ETextureSourceCompressionFormat : uint8_t
{
	TSCF_None0                                                                       = 0,
	TSCF_PNG1                                                                        = 1,
	TSCF_JPEG2                                                                       = 2,
	TSCF_MAX3                                                                        = 3
};

/// Enum /Script/Engine.ETextureSourceFormat
/// Size: 0x15
enum ETextureSourceFormat : uint8_t
{
	TSF_Invalid0                                                                     = 0,
	TSF_G81                                                                          = 1,
	TSF_BGRA82                                                                       = 2,
	TSF_BGRE83                                                                       = 3,
	TSF_RGBA164                                                                      = 4,
	TSF_RGBA16F5                                                                     = 5,
	TSF_RGBA8_DEPRECATED6                                                            = 6,
	TSF_RGBE8_DEPRECATED7                                                            = 7,
	TSF_G168                                                                         = 8,
	TSF_RGBA32F9                                                                     = 9,
	TSF_R16F10                                                                       = 10,
	TSF_R32F11                                                                       = 11,
	TSF_MAX12                                                                        = 12,
	TSF_RGBA813                                                                      = 6,
	TSF_RGBE814                                                                      = 7
};

/// Enum /Script/Engine.TextureCompressionSettings
/// Size: 0x18
enum TextureCompressionSettings : uint8_t
{
	TC_Default0                                                                      = 0,
	TC_Normalmap1                                                                    = 1,
	TC_Masks2                                                                        = 2,
	TC_Grayscale3                                                                    = 3,
	TC_Displacementmap4                                                              = 4,
	TC_VectorDisplacementmap5                                                        = 5,
	TC_HDR6                                                                          = 6,
	TC_EditorIcon7                                                                   = 7,
	TC_Alpha8                                                                        = 8,
	TC_DistanceFieldFont9                                                            = 9,
	TC_HDR_Compressed10                                                              = 10,
	TC_BC711                                                                         = 11,
	TC_HalfFloat12                                                                   = 12,
	TC_LQ13                                                                          = 13,
	TC_EncodedReflectionCapture14                                                    = 14,
	TC_SingleFloat15                                                                 = 15,
	TC_HDR_F3216                                                                     = 16,
	TC_MAX17                                                                         = 17
};

/// Enum /Script/Engine.ETextureSourceEncoding
/// Size: 0x18
enum ETextureSourceEncoding : uint8_t
{
	ETextureSourceEncoding__TSE_None0                                                = 0,
	ETextureSourceEncoding__TSE_Linear1                                              = 1,
	ETextureSourceEncoding__TSE_sRGB2                                                = 2,
	ETextureSourceEncoding__TSE_ST20843                                              = 3,
	ETextureSourceEncoding__TSE_Gamma224                                             = 4,
	ETextureSourceEncoding__TSE_BT18865                                              = 5,
	ETextureSourceEncoding__TSE_Gamma266                                             = 6,
	ETextureSourceEncoding__TSE_Cineon7                                              = 7,
	ETextureSourceEncoding__TSE_REDLog8                                              = 8,
	ETextureSourceEncoding__TSE_REDLog3G109                                          = 9,
	ETextureSourceEncoding__TSE_SLog110                                              = 10,
	ETextureSourceEncoding__TSE_SLog211                                              = 11,
	ETextureSourceEncoding__TSE_SLog312                                              = 12,
	ETextureSourceEncoding__TSE_AlexaV3LogC13                                        = 13,
	ETextureSourceEncoding__TSE_CanonLog14                                           = 14,
	ETextureSourceEncoding__TSE_ProTune15                                            = 15,
	ETextureSourceEncoding__TSE_VLog16                                               = 16,
	ETextureSourceEncoding__TSE_MAX17                                                = 17
};

/// Enum /Script/Engine.ETextureColorSpace
/// Size: 0x16
enum ETextureColorSpace : uint8_t
{
	ETextureColorSpace__TCS_None0                                                    = 0,
	ETextureColorSpace__TCS_sRGB1                                                    = 1,
	ETextureColorSpace__TCS_Rec20202                                                 = 2,
	ETextureColorSpace__TCS_ACESAP03                                                 = 3,
	ETextureColorSpace__TCS_ACESAP14                                                 = 4,
	ETextureColorSpace__TCS_P3DCI5                                                   = 5,
	ETextureColorSpace__TCS_P3D656                                                   = 6,
	ETextureColorSpace__TCS_REDWideGamut7                                            = 7,
	ETextureColorSpace__TCS_SonySGamut38                                             = 8,
	ETextureColorSpace__TCS_SonySGamut3Cine9                                         = 9,
	ETextureColorSpace__TCS_AlexaWideGamut10                                         = 10,
	ETextureColorSpace__TCS_CanonCinemaGamut11                                       = 11,
	ETextureColorSpace__TCS_GoProProtuneNative12                                     = 12,
	ETextureColorSpace__TCS_PanasonicVGamut13                                        = 13,
	ETextureColorSpace__TCS_Custom14                                                 = 99,
	ETextureColorSpace__TCS_MAX15                                                    = 100
};

/// Enum /Script/Engine.ETextureChromaticAdaptationMethod
/// Size: 0x04
enum ETextureChromaticAdaptationMethod : uint8_t
{
	ETextureChromaticAdaptationMethod__TCAM_None0                                    = 0,
	ETextureChromaticAdaptationMethod__TCAM_Bradford1                                = 1,
	ETextureChromaticAdaptationMethod__TCAM_CAT022                                   = 2,
	ETextureChromaticAdaptationMethod__TCAM_MAX3                                     = 3
};

/// Enum /Script/Engine.ETextureRenderTargetFormat
/// Size: 0x12
enum ETextureRenderTargetFormat : uint8_t
{
	RTF_R80                                                                          = 0,
	RTF_RG81                                                                         = 1,
	RTF_RGBA82                                                                       = 2,
	RTF_RGBA8_SRGB3                                                                  = 3,
	RTF_R16f4                                                                        = 4,
	RTF_RG16f5                                                                       = 5,
	RTF_RGBA16f6                                                                     = 6,
	RTF_R32f7                                                                        = 7,
	RTF_RG32f8                                                                       = 8,
	RTF_RGBA32f9                                                                     = 9,
	RTF_RGB10A210                                                                    = 10,
	RTF_MAX11                                                                        = 11
};

/// Enum /Script/Engine.ETimelineLengthMode
/// Size: 0x03
enum ETimelineLengthMode : uint8_t
{
	TL_TimelineLength0                                                               = 0,
	TL_LastKeyFrame1                                                                 = 1,
	TL_MAX2                                                                          = 2
};

/// Enum /Script/Engine.ETwitterRequestMethod
/// Size: 0x04
enum ETwitterRequestMethod : uint8_t
{
	TRM_Get0                                                                         = 0,
	TRM_Post1                                                                        = 1,
	TRM_Delete2                                                                      = 2,
	TRM_MAX3                                                                         = 3
};

/// Enum /Script/Engine.ETwitterIntegrationDelegate
/// Size: 0x04
enum ETwitterIntegrationDelegate : uint8_t
{
	TID_AuthorizeComplete0                                                           = 0,
	TID_TweetUIComplete1                                                             = 1,
	TID_RequestComplete2                                                             = 2,
	TID_MAX3                                                                         = 3
};

/// Enum /Script/Engine.EUserDefinedStructureStatus
/// Size: 0x05
enum EUserDefinedStructureStatus : uint8_t
{
	UDSS_UpToDate0                                                                   = 0,
	UDSS_Dirty1                                                                      = 1,
	UDSS_Error2                                                                      = 2,
	UDSS_Duplicate3                                                                  = 3,
	UDSS_MAX4                                                                        = 4
};

/// Enum /Script/Engine.EVectorFieldConstructionOp
/// Size: 0x03
enum EVectorFieldConstructionOp : uint8_t
{
	VFCO_Extrude0                                                                    = 0,
	VFCO_Revolve1                                                                    = 1,
	VFCO_MAX2                                                                        = 2
};

/// Enum /Script/Engine.ESplitScreenType
/// Size: 0x12
enum ESplitScreenType : uint8_t
{
	ESplitScreenType__None0                                                          = 0,
	ESplitScreenType__TwoPlayer_Horizontal1                                          = 1,
	ESplitScreenType__TwoPlayer_Vertical2                                            = 2,
	ESplitScreenType__ThreePlayer_FavorTop3                                          = 3,
	ESplitScreenType__ThreePlayer_FavorBottom4                                       = 4,
	ESplitScreenType__ThreePlayer_Vertical5                                          = 5,
	ESplitScreenType__ThreePlayer_Horizontal6                                        = 6,
	ESplitScreenType__FourPlayer_Grid7                                               = 7,
	ESplitScreenType__FourPlayer_Vertical8                                           = 8,
	ESplitScreenType__FourPlayer_Horizontal9                                         = 9,
	ESplitScreenType__SplitTypeCount10                                               = 10,
	ESplitScreenType__ESplitScreenType_MAX11                                         = 11
};

/// Enum /Script/Engine.EWindSourceType
/// Size: 0x03
enum EWindSourceType : uint8_t
{
	EWindSourceType__Directional0                                                    = 0,
	EWindSourceType__Point1                                                          = 1,
	EWindSourceType__EWindSourceType_MAX2                                            = 2
};

/// Enum /Script/Engine.EStreamingSourceTargetState
/// Size: 0x03
enum EStreamingSourceTargetState : uint8_t
{
	EStreamingSourceTargetState__Loaded0                                             = 0,
	EStreamingSourceTargetState__Activated1                                          = 1,
	EStreamingSourceTargetState__EStreamingSourceTargetState_MAX2                    = 2
};

/// Enum /Script/Engine.EStreamingSourcePriority
/// Size: 0x07
enum EStreamingSourcePriority : uint8_t
{
	EStreamingSourcePriority__Highest0                                               = 0,
	EStreamingSourcePriority__High1                                                  = 64,
	EStreamingSourcePriority__Normal2                                                = 128,
	EStreamingSourcePriority__Low3                                                   = 192,
	EStreamingSourcePriority__Lowest4                                                = 255,
	EStreamingSourcePriority__Default5                                               = 128,
	EStreamingSourcePriority__EStreamingSourcePriority_MAX6                          = 256
};

/// Enum /Script/Engine.EVisibilityAggressiveness
/// Size: 0x04
enum EVisibilityAggressiveness : uint8_t
{
	VIS_LeastAggressive0                                                             = 0,
	VIS_ModeratelyAggressive1                                                        = 1,
	VIS_MostAggressive2                                                              = 2,
	VIS_Max3                                                                         = 3
};

/// Enum /Script/Engine.EVolumeLightingMethod
/// Size: 0x03
enum EVolumeLightingMethod : uint8_t
{
	VLM_VolumetricLightmap0                                                          = 0,
	VLM_SparseVolumeLightingSamples1                                                 = 1,
	VLM_MAX2                                                                         = 2
};

/// Enum /Script/Engine.EHierarchicalSimplificationMethod
/// Size: 0x05
enum EHierarchicalSimplificationMethod : uint8_t
{
	EHierarchicalSimplificationMethod__None0                                         = 0,
	EHierarchicalSimplificationMethod__Merge1                                        = 1,
	EHierarchicalSimplificationMethod__Simplify2                                     = 2,
	EHierarchicalSimplificationMethod__Approximate3                                  = 3,
	EHierarchicalSimplificationMethod__EHierarchicalSimplificationMethod_MAX4        = 4
};

/// Enum /Script/Engine.EQuartzTimeSignatureQuantization
/// Size: 0x07
enum EQuartzTimeSignatureQuantization : uint8_t
{
	EQuartzTimeSignatureQuantization__HalfNote0                                      = 0,
	EQuartzTimeSignatureQuantization__QuarterNote1                                   = 1,
	EQuartzTimeSignatureQuantization__EighthNote2                                    = 2,
	EQuartzTimeSignatureQuantization__SixteenthNote3                                 = 3,
	EQuartzTimeSignatureQuantization__ThirtySecondNote4                              = 4,
	EQuartzTimeSignatureQuantization__Count5                                         = 5,
	EQuartzTimeSignatureQuantization__EQuartzTimeSignatureQuantization_MAX6          = 6
};

/// Enum /Script/Engine.EQuartzDelegateType
/// Size: 0x04
enum EQuartzDelegateType : uint8_t
{
	EQuartzDelegateType__MetronomeTick0                                              = 0,
	EQuartzDelegateType__CommandEvent1                                               = 1,
	EQuartzDelegateType__Count2                                                      = 2,
	EQuartzDelegateType__EQuartzDelegateType_MAX3                                    = 3
};

/// Enum /Script/Engine.EQuarztQuantizationReference
/// Size: 0x05
enum EQuarztQuantizationReference : uint8_t
{
	EQuarztQuantizationReference__BarRelative0                                       = 0,
	EQuarztQuantizationReference__TransportRelative1                                 = 1,
	EQuarztQuantizationReference__CurrentTimeRelative2                               = 2,
	EQuarztQuantizationReference__Count3                                             = 3,
	EQuarztQuantizationReference__EQuarztQuantizationReference_MAX4                  = 4
};

/// Enum /Script/Engine.EQuartzCommandType
/// Size: 0x08
enum EQuartzCommandType : uint8_t
{
	EQuartzCommandType__PlaySound0                                                   = 0,
	EQuartzCommandType__QueueSoundToPlay1                                            = 1,
	EQuartzCommandType__RetriggerSound2                                              = 2,
	EQuartzCommandType__TickRateChange3                                              = 3,
	EQuartzCommandType__TransportReset4                                              = 4,
	EQuartzCommandType__StartOtherClock5                                             = 5,
	EQuartzCommandType__Custom6                                                      = 6,
	EQuartzCommandType__EQuartzCommandType_MAX7                                      = 7
};

/// Enum /Script/Engine.EActorUpdateOverlapsMethod
/// Size: 0x05
enum EActorUpdateOverlapsMethod : uint8_t
{
	EActorUpdateOverlapsMethod__UseConfigDefault0                                    = 0,
	EActorUpdateOverlapsMethod__AlwaysUpdate1                                        = 1,
	EActorUpdateOverlapsMethod__OnlyUpdateMovable2                                   = 2,
	EActorUpdateOverlapsMethod__NeverUpdate3                                         = 3,
	EActorUpdateOverlapsMethod__EActorUpdateOverlapsMethod_MAX4                      = 4
};

/// Enum /Script/Engine.FNavigationSystemRunMode
/// Size: 0x08
enum FNavigationSystemRunMode : uint8_t
{
	FNavigationSystemRunMode__InvalidMode0                                           = 0,
	FNavigationSystemRunMode__GameMode1                                              = 1,
	FNavigationSystemRunMode__EditorMode2                                            = 2,
	FNavigationSystemRunMode__SimulationMode3                                        = 3,
	FNavigationSystemRunMode__PIEMode4                                               = 4,
	FNavigationSystemRunMode__InferFromWorldMode5                                    = 5,
	FNavigationSystemRunMode__EditorWorldPartitionBuildMode6                         = 6,
	FNavigationSystemRunMode__FNavigationSystemRunMode_MAX7                          = 7
};

/// Enum /Script/Engine.ENavigationOptionFlag
/// Size: 0x04
enum ENavigationOptionFlag : uint8_t
{
	ENavigationOptionFlag__Default0                                                  = 0,
	ENavigationOptionFlag__Enable1                                                   = 1,
	ENavigationOptionFlag__Disable2                                                  = 2,
	ENavigationOptionFlag__MAX3                                                      = 3
};

/// Enum /Script/Engine.ENavDataGatheringMode
/// Size: 0x04
enum ENavDataGatheringMode : uint8_t
{
	ENavDataGatheringMode__Default0                                                  = 0,
	ENavDataGatheringMode__Instant1                                                  = 1,
	ENavDataGatheringMode__Lazy2                                                     = 2,
	ENavDataGatheringMode__ENavDataGatheringMode_MAX3                                = 3
};

/// Enum /Script/Engine.ENavDataGatheringModeConfig
/// Size: 0x04
enum ENavDataGatheringModeConfig : uint8_t
{
	ENavDataGatheringModeConfig__Invalid0                                            = 0,
	ENavDataGatheringModeConfig__Instant1                                            = 1,
	ENavDataGatheringModeConfig__Lazy2                                               = 2,
	ENavDataGatheringModeConfig__ENavDataGatheringModeConfig_MAX3                    = 3
};

/// Enum /Script/Engine.ENavPathEvent
/// Size: 0x09
enum ENavPathEvent : uint8_t
{
	ENavPathEvent__Cleared0                                                          = 0,
	ENavPathEvent__NewPath1                                                          = 1,
	ENavPathEvent__UpdatedDueToGoalMoved2                                            = 2,
	ENavPathEvent__UpdatedDueToNavigationChanged3                                    = 3,
	ENavPathEvent__Invalidated4                                                      = 4,
	ENavPathEvent__RePathFailed5                                                     = 5,
	ENavPathEvent__MetaPathUpdate6                                                   = 6,
	ENavPathEvent__Custom7                                                           = 7,
	ENavPathEvent__ENavPathEvent_MAX8                                                = 8
};

/// Enum /Script/Engine.ENavigationQueryResult
/// Size: 0x05
enum ENavigationQueryResult : uint8_t
{
	ENavigationQueryResult__Invalid0                                                 = 0,
	ENavigationQueryResult__Error1                                                   = 1,
	ENavigationQueryResult__Fail2                                                    = 2,
	ENavigationQueryResult__Success3                                                 = 3,
	ENavigationQueryResult__ENavigationQueryResult_MAX4                              = 4
};

/// Enum /Script/Engine.EAlphaBlendOption
/// Size: 0x16
enum EAlphaBlendOption : uint8_t
{
	EAlphaBlendOption__Linear0                                                       = 0,
	EAlphaBlendOption__Cubic1                                                        = 1,
	EAlphaBlendOption__HermiteCubic2                                                 = 2,
	EAlphaBlendOption__Sinusoidal3                                                   = 3,
	EAlphaBlendOption__QuadraticInOut4                                               = 4,
	EAlphaBlendOption__CubicInOut5                                                   = 5,
	EAlphaBlendOption__QuarticInOut6                                                 = 6,
	EAlphaBlendOption__QuinticInOut7                                                 = 7,
	EAlphaBlendOption__CircularIn8                                                   = 8,
	EAlphaBlendOption__CircularOut9                                                  = 9,
	EAlphaBlendOption__CircularInOut10                                               = 10,
	EAlphaBlendOption__ExpIn11                                                       = 11,
	EAlphaBlendOption__ExpOut12                                                      = 12,
	EAlphaBlendOption__ExpInOut13                                                    = 13,
	EAlphaBlendOption__Custom14                                                      = 14,
	EAlphaBlendOption__EAlphaBlendOption_MAX15                                       = 15
};

/// Enum /Script/Engine.EAnimGroupRole
/// Size: 0x06
enum EAnimGroupRole : uint8_t
{
	EAnimGroupRole__CanBeLeader0                                                     = 0,
	EAnimGroupRole__AlwaysFollower1                                                  = 1,
	EAnimGroupRole__AlwaysLeader2                                                    = 2,
	EAnimGroupRole__TransitionLeader3                                                = 3,
	EAnimGroupRole__TransitionFollower4                                              = 4,
	EAnimGroupRole__EAnimGroupRole_MAX5                                              = 5
};

/// Enum /Script/Engine.EAnimSyncGroupScope
/// Size: 0x03
enum EAnimSyncGroupScope : uint8_t
{
	EAnimSyncGroupScope__Local0                                                      = 0,
	EAnimSyncGroupScope__Component1                                                  = 1,
	EAnimSyncGroupScope__EAnimSyncGroupScope_MAX2                                    = 2
};

/// Enum /Script/Engine.EAnimSyncMethod
/// Size: 0x04
enum EAnimSyncMethod : uint8_t
{
	EAnimSyncMethod__DoNotSync0                                                      = 0,
	EAnimSyncMethod__SyncGroup1                                                      = 1,
	EAnimSyncMethod__Graph2                                                          = 2,
	EAnimSyncMethod__EAnimSyncMethod_MAX3                                            = 3
};

/// Enum /Script/Engine.EAnimExecutionContextConversionResult
/// Size: 0x03
enum EAnimExecutionContextConversionResult : uint8_t
{
	EAnimExecutionContextConversionResult__Succeeded0                                = 1,
	EAnimExecutionContextConversionResult__Failed1                                   = 0,
	EAnimExecutionContextConversionResult__EAnimExecutionContextConversionResult_MAX2 = 2
};

/// Enum /Script/Engine.EMontagePlayReturnType
/// Size: 0x03
enum EMontagePlayReturnType : uint8_t
{
	EMontagePlayReturnType__MontageLength0                                           = 0,
	EMontagePlayReturnType__Duration1                                                = 1,
	EMontagePlayReturnType__EMontagePlayReturnType_MAX2                              = 2
};

/// Enum /Script/Engine.EDrawDebugItemType
/// Size: 0x09
enum EDrawDebugItemType : uint8_t
{
	EDrawDebugItemType__DirectionalArrow0                                            = 0,
	EDrawDebugItemType__Sphere1                                                      = 1,
	EDrawDebugItemType__Line2                                                        = 2,
	EDrawDebugItemType__OnScreenMessage3                                             = 3,
	EDrawDebugItemType__CoordinateSystem4                                            = 4,
	EDrawDebugItemType__Point5                                                       = 5,
	EDrawDebugItemType__Circle6                                                      = 6,
	EDrawDebugItemType__Cone7                                                        = 7,
	EDrawDebugItemType__EDrawDebugItemType_MAX8                                      = 8
};

/// Enum /Script/Engine.EAnimLinkMethod
/// Size: 0x04
enum EAnimLinkMethod : uint8_t
{
	EAnimLinkMethod__Absolute0                                                       = 0,
	EAnimLinkMethod__Relative1                                                       = 1,
	EAnimLinkMethod__Proportional2                                                   = 2,
	EAnimLinkMethod__EAnimLinkMethod_MAX3                                            = 3
};

/// Enum /Script/Engine.EAnimNotifyEventType
/// Size: 0x03
enum EAnimNotifyEventType : uint8_t
{
	EAnimNotifyEventType__Begin0                                                     = 0,
	EAnimNotifyEventType__End1                                                       = 1,
	EAnimNotifyEventType__EAnimNotifyEventType_MAX2                                  = 2
};

/// Enum /Script/Engine.EMontageBlendMode
/// Size: 0x03
enum EMontageBlendMode : uint8_t
{
	EMontageBlendMode__Standard0                                                     = 0,
	EMontageBlendMode__Inertialization1                                              = 1,
	EMontageBlendMode__EMontageBlendMode_MAX2                                        = 2
};

/// Enum /Script/Engine.EMontageSubStepResult
/// Size: 0x05
enum EMontageSubStepResult : uint8_t
{
	EMontageSubStepResult__Moved0                                                    = 0,
	EMontageSubStepResult__NotMoved1                                                 = 1,
	EMontageSubStepResult__InvalidSection2                                           = 2,
	EMontageSubStepResult__InvalidMontage3                                           = 3,
	EMontageSubStepResult__EMontageSubStepResult_MAX4                                = 4
};

/// Enum /Script/Engine.EPinHidingMode
/// Size: 0x05
enum EPinHidingMode : uint8_t
{
	EPinHidingMode__NeverAsPin0                                                      = 0,
	EPinHidingMode__PinHiddenByDefault1                                              = 1,
	EPinHidingMode__PinShownByDefault2                                               = 2,
	EPinHidingMode__AlwaysAsPin3                                                     = 3,
	EPinHidingMode__EPinHidingMode_MAX4                                              = 4
};

/// Enum /Script/Engine.EAnimNodeDataFlags
/// Size: 0x05
enum EAnimNodeDataFlags : uint8_t
{
	EAnimNodeDataFlags__None0                                                        = 0,
	EAnimNodeDataFlags__HasInitialUpdateFunction1                                    = 1,
	EAnimNodeDataFlags__HasBecomeRelevantFunction2                                   = 2,
	EAnimNodeDataFlags__HasUpdateFunction3                                           = 4,
	EAnimNodeDataFlags__EAnimNodeDataFlags_MAX4                                      = 5
};

/// Enum /Script/Engine.EAnimNodeReferenceConversionResult
/// Size: 0x03
enum EAnimNodeReferenceConversionResult : uint8_t
{
	EAnimNodeReferenceConversionResult__Succeeded0                                   = 1,
	EAnimNodeReferenceConversionResult__Failed1                                      = 0,
	EAnimNodeReferenceConversionResult__EAnimNodeReferenceConversionResult_MAX2      = 2
};

/// Enum /Script/Engine.EInertializationState
/// Size: 0x04
enum EInertializationState : uint8_t
{
	EInertializationState__Inactive0                                                 = 0,
	EInertializationState__Pending1                                                  = 1,
	EInertializationState__Active2                                                   = 2,
	EInertializationState__EInertializationState_MAX3                                = 3
};

/// Enum /Script/Engine.EInertializationBoneState
/// Size: 0x04
enum EInertializationBoneState : uint8_t
{
	EInertializationBoneState__Invalid0                                              = 0,
	EInertializationBoneState__Valid1                                                = 1,
	EInertializationBoneState__Excluded2                                             = 2,
	EInertializationBoneState__EInertializationBoneState_MAX3                        = 3
};

/// Enum /Script/Engine.EInertializationSpace
/// Size: 0x04
enum EInertializationSpace : uint8_t
{
	EInertializationSpace__Default0                                                  = 0,
	EInertializationSpace__WorldSpace1                                               = 1,
	EInertializationSpace__WorldRotation2                                            = 2,
	EInertializationSpace__EInertializationSpace_MAX3                                = 3
};

/// Enum /Script/Engine.EEvaluatorDataSource
/// Size: 0x03
enum EEvaluatorDataSource : uint8_t
{
	EEvaluatorDataSource__EDS_SourcePose0                                            = 0,
	EEvaluatorDataSource__EDS_DestinationPose1                                       = 1,
	EEvaluatorDataSource__EDS_MAX2                                                   = 2
};

/// Enum /Script/Engine.EEvaluatorMode
/// Size: 0x04
enum EEvaluatorMode : uint8_t
{
	EEvaluatorMode__EM_Standard0                                                     = 0,
	EEvaluatorMode__EM_Freeze1                                                       = 1,
	EEvaluatorMode__EM_DelayedFreeze2                                                = 2,
	EEvaluatorMode__EM_MAX3                                                          = 3
};

/// Enum /Script/Engine.ETransitionRequestQueueMode
/// Size: 0x03
enum ETransitionRequestQueueMode : uint8_t
{
	ETransitionRequestQueueMode__Shared0                                             = 0,
	ETransitionRequestQueueMode__Unique1                                             = 1,
	ETransitionRequestQueueMode__ETransitionRequestQueueMode_MAX2                    = 2
};

/// Enum /Script/Engine.ETransitionRequestOverwriteMode
/// Size: 0x04
enum ETransitionRequestOverwriteMode : uint8_t
{
	ETransitionRequestOverwriteMode__Append0                                         = 0,
	ETransitionRequestOverwriteMode__Ignore1                                         = 1,
	ETransitionRequestOverwriteMode__Overwrite2                                      = 2,
	ETransitionRequestOverwriteMode__ETransitionRequestOverwriteMode_MAX3            = 3
};

/// Enum /Script/Engine.ETransitionBlendMode
/// Size: 0x03
enum ETransitionBlendMode : uint8_t
{
	ETransitionBlendMode__TBM_Linear0                                                = 0,
	ETransitionBlendMode__TBM_Cubic1                                                 = 1,
	ETransitionBlendMode__TBM_MAX2                                                   = 2
};

/// Enum /Script/Engine.ETransitionLogicType
/// Size: 0x04
enum ETransitionLogicType : uint8_t
{
	ETransitionLogicType__TLT_StandardBlend0                                         = 0,
	ETransitionLogicType__TLT_Inertialization1                                       = 1,
	ETransitionLogicType__TLT_Custom2                                                = 2,
	ETransitionLogicType__TLT_MAX3                                                   = 3
};

/// Enum /Script/Engine.EAnimPropertyAccessCallSite
/// Size: 0x06
enum EAnimPropertyAccessCallSite : uint8_t
{
	EAnimPropertyAccessCallSite__WorkerThread_Unbatched0                             = 0,
	EAnimPropertyAccessCallSite__WorkerThread_Batched_PreEventGraph1                 = 1,
	EAnimPropertyAccessCallSite__WorkerThread_Batched_PostEventGraph2                = 2,
	EAnimPropertyAccessCallSite__GameThread_Batched_PreEventGraph3                   = 3,
	EAnimPropertyAccessCallSite__GameThread_Batched_PostEventGraph4                  = 4,
	EAnimPropertyAccessCallSite__EAnimPropertyAccessCallSite_MAX5                    = 5
};

/// Enum /Script/Engine.EBlendProfileMode
/// Size: 0x04
enum EBlendProfileMode : uint8_t
{
	EBlendProfileMode__TimeFactor0                                                   = 0,
	EBlendProfileMode__WeightFactor1                                                 = 1,
	EBlendProfileMode__BlendMask2                                                    = 2,
	EBlendProfileMode__EBlendProfileMode_MAX3                                        = 3
};

/// Enum /Script/Engine.ETransformCurveChannel
/// Size: 0x05
enum ETransformCurveChannel : uint8_t
{
	ETransformCurveChannel__Position0                                                = 0,
	ETransformCurveChannel__Rotation1                                                = 1,
	ETransformCurveChannel__Scale2                                                   = 2,
	ETransformCurveChannel__Invalid3                                                 = 3,
	ETransformCurveChannel__ETransformCurveChannel_MAX4                              = 4
};

/// Enum /Script/Engine.EVectorCurveChannel
/// Size: 0x05
enum EVectorCurveChannel : uint8_t
{
	EVectorCurveChannel__X0                                                          = 0,
	EVectorCurveChannel__Y1                                                          = 1,
	EVectorCurveChannel__Z2                                                          = 2,
	EVectorCurveChannel__Invalid3                                                    = 3,
	EVectorCurveChannel__EVectorCurveChannel_MAX4                                    = 4
};

/// Enum /Script/Engine.EPostCopyOperation
/// Size: 0x03
enum EPostCopyOperation : uint8_t
{
	EPostCopyOperation__None0                                                        = 0,
	EPostCopyOperation__LogicalNegateBool1                                           = 1,
	EPostCopyOperation__EPostCopyOperation_MAX2                                      = 2
};

/// Enum /Script/Engine.EAnimAlphaInputType
/// Size: 0x04
enum EAnimAlphaInputType : uint8_t
{
	EAnimAlphaInputType__Float0                                                      = 0,
	EAnimAlphaInputType__Bool1                                                       = 1,
	EAnimAlphaInputType__Curve2                                                      = 2,
	EAnimAlphaInputType__EAnimAlphaInputType_MAX3                                    = 3
};

/// Enum /Script/Engine.EMirrorRowType
/// Size: 0x06
enum EMirrorRowType : uint8_t
{
	EMirrorRowType__Bone0                                                            = 0,
	EMirrorRowType__AnimationNotify1                                                 = 1,
	EMirrorRowType__Curve2                                                           = 2,
	EMirrorRowType__SyncMarker3                                                      = 3,
	EMirrorRowType__Custom4                                                          = 4,
	EMirrorRowType__EMirrorRowType_MAX5                                              = 5
};

/// Enum /Script/Engine.EMirrorFindReplaceMethod
/// Size: 0x04
enum EMirrorFindReplaceMethod : uint8_t
{
	EMirrorFindReplaceMethod__Prefix0                                                = 0,
	EMirrorFindReplaceMethod__Suffix1                                                = 1,
	EMirrorFindReplaceMethod__RegularExpression2                                     = 2,
	EMirrorFindReplaceMethod__EMirrorFindReplaceMethod_MAX3                          = 3
};

/// Enum /Script/Engine.ETrajectorySampleDomain
/// Size: 0x04
enum ETrajectorySampleDomain : uint8_t
{
	ETrajectorySampleDomain__None0                                                   = 0,
	ETrajectorySampleDomain__Time1                                                   = 1,
	ETrajectorySampleDomain__Distance2                                               = 2,
	ETrajectorySampleDomain__ETrajectorySampleDomain_MAX3                            = 3
};

/// Enum /Script/Engine.EControlConstraint
/// Size: 0x03
enum EControlConstraint : uint8_t
{
	EControlConstraint__Orientation0                                                 = 0,
	EControlConstraint__Translation1                                                 = 1,
	EControlConstraint__MAX2                                                         = 2
};

/// Enum /Script/Engine.EConstraintTransform
/// Size: 0x03
enum EConstraintTransform : uint8_t
{
	EConstraintTransform__Absolute0                                                  = 0,
	EConstraintTransform__Relative1                                                  = 1,
	EConstraintTransform__EConstraintTransform_MAX2                                  = 2
};

/// Enum /Script/Engine.EBoneTranslationRetargetingMode
/// Size: 0x06
enum EBoneTranslationRetargetingMode : uint8_t
{
	EBoneTranslationRetargetingMode__Animation0                                      = 0,
	EBoneTranslationRetargetingMode__Skeleton1                                       = 1,
	EBoneTranslationRetargetingMode__AnimationScaled2                                = 2,
	EBoneTranslationRetargetingMode__AnimationRelative3                              = 3,
	EBoneTranslationRetargetingMode__OrientAndScale4                                 = 4,
	EBoneTranslationRetargetingMode__EBoneTranslationRetargetingMode_MAX5            = 5
};

/// Enum /Script/Engine.ETimeStretchCurveMapping
/// Size: 0x04
enum ETimeStretchCurveMapping : uint8_t
{
	ETimeStretchCurveMapping__T_Original0                                            = 0,
	ETimeStretchCurveMapping__T_TargetMin1                                           = 1,
	ETimeStretchCurveMapping__T_TargetMax2                                           = 2,
	ETimeStretchCurveMapping__MAX3                                                   = 3
};

/// Enum /Script/Engine.EPreviewAnimationBlueprintApplicationMethod
/// Size: 0x03
enum EPreviewAnimationBlueprintApplicationMethod : uint8_t
{
	EPreviewAnimationBlueprintApplicationMethod__LinkedLayers0                       = 0,
	EPreviewAnimationBlueprintApplicationMethod__LinkedAnimGraph1                    = 1,
	EPreviewAnimationBlueprintApplicationMethod__EPreviewAnimationBlueprintApplicationMethod_MAX2 = 2
};

/// Enum /Script/Engine.EPrimaryAssetCookRule
/// Size: 0x06
enum EPrimaryAssetCookRule : uint8_t
{
	EPrimaryAssetCookRule__Unknown0                                                  = 0,
	EPrimaryAssetCookRule__NeverCook1                                                = 1,
	EPrimaryAssetCookRule__DevelopmentCook2                                          = 2,
	EPrimaryAssetCookRule__DevelopmentAlwaysCook3                                    = 3,
	EPrimaryAssetCookRule__AlwaysCook4                                               = 4,
	EPrimaryAssetCookRule__EPrimaryAssetCookRule_MAX5                                = 5
};

/// Enum /Script/Engine.EAttenuationDistanceModel
/// Size: 0x07
enum EAttenuationDistanceModel : uint8_t
{
	EAttenuationDistanceModel__Linear0                                               = 0,
	EAttenuationDistanceModel__Logarithmic1                                          = 1,
	EAttenuationDistanceModel__Inverse2                                              = 2,
	EAttenuationDistanceModel__LogReverse3                                           = 3,
	EAttenuationDistanceModel__NaturalSound4                                         = 4,
	EAttenuationDistanceModel__Custom5                                               = 5,
	EAttenuationDistanceModel__EAttenuationDistanceModel_MAX6                        = 6
};

/// Enum /Script/Engine.EAttenuationShape
/// Size: 0x05
enum EAttenuationShape : uint8_t
{
	EAttenuationShape__Sphere0                                                       = 0,
	EAttenuationShape__Capsule1                                                      = 1,
	EAttenuationShape__Box2                                                          = 2,
	EAttenuationShape__Cone3                                                         = 3,
	EAttenuationShape__EAttenuationShape_MAX4                                        = 4
};

/// Enum /Script/Engine.ENaturalSoundFalloffMode
/// Size: 0x04
enum ENaturalSoundFalloffMode : uint8_t
{
	ENaturalSoundFalloffMode__Continues0                                             = 0,
	ENaturalSoundFalloffMode__Silent1                                                = 1,
	ENaturalSoundFalloffMode__Hold2                                                  = 2,
	ENaturalSoundFalloffMode__ENaturalSoundFalloffMode_MAX3                          = 3
};

/// Enum /Script/Engine.EAudioBusChannels
/// Size: 0x06
enum EAudioBusChannels : uint8_t
{
	EAudioBusChannels__Mono0                                                         = 0,
	EAudioBusChannels__Stereo1                                                       = 1,
	EAudioBusChannels__Quad2                                                         = 3,
	EAudioBusChannels__FivePointOne3                                                 = 5,
	EAudioBusChannels__SevenPointOne4                                                = 7,
	EAudioBusChannels__EAudioBusChannels_MAX5                                        = 8
};

/// Enum /Script/Engine.EVoiceSampleRate
/// Size: 0x03
enum EVoiceSampleRate : uint32_t
{
	EVoiceSampleRate__Low16000Hz0                                                    = 16000,
	EVoiceSampleRate__Normal24000Hz1                                                 = 24000,
	EVoiceSampleRate__EVoiceSampleRate_MAX2                                          = 24001
};

/// Enum /Script/Engine.EPanningMethod
/// Size: 0x03
enum EPanningMethod : uint8_t
{
	EPanningMethod__Linear0                                                          = 0,
	EPanningMethod__EqualPower1                                                      = 1,
	EPanningMethod__EPanningMethod_MAX2                                              = 2
};

/// Enum /Script/Engine.EMonoChannelUpmixMethod
/// Size: 0x04
enum EMonoChannelUpmixMethod : uint8_t
{
	EMonoChannelUpmixMethod__Linear0                                                 = 0,
	EMonoChannelUpmixMethod__EqualPower1                                             = 1,
	EMonoChannelUpmixMethod__FullVolume2                                             = 2,
	EMonoChannelUpmixMethod__EMonoChannelUpmixMethod_MAX3                            = 3
};

/// Enum /Script/Engine.EDefaultAudioCompressionType
/// Size: 0x05
enum EDefaultAudioCompressionType : uint8_t
{
	EDefaultAudioCompressionType__BinkAudio0                                         = 0,
	EDefaultAudioCompressionType__ADPCM1                                             = 1,
	EDefaultAudioCompressionType__PCM2                                               = 2,
	EDefaultAudioCompressionType__PlatformSpecific3                                  = 3,
	EDefaultAudioCompressionType__EDefaultAudioCompressionType_MAX4                  = 4
};

/// Enum /Script/Engine.EAudioVolumeLocationState
/// Size: 0x03
enum EAudioVolumeLocationState : uint8_t
{
	EAudioVolumeLocationState__InsideTheVolume0                                      = 0,
	EAudioVolumeLocationState__OutsideTheVolume1                                     = 1,
	EAudioVolumeLocationState__EAudioVolumeLocationState_MAX2                        = 2
};

/// Enum /Script/Engine.EInterfaceValidResult
/// Size: 0x03
enum EInterfaceValidResult : uint8_t
{
	EInterfaceValidResult__Valid0                                                    = 0,
	EInterfaceValidResult__Invalid1                                                  = 1,
	EInterfaceValidResult__EInterfaceValidResult_MAX2                                = 2
};

/// Enum /Script/Engine.ECameraShakeUpdateResultFlags
/// Size: 0x05
enum ECameraShakeUpdateResultFlags : uint8_t
{
	ECameraShakeUpdateResultFlags__ApplyAsAbsolute0                                  = 1,
	ECameraShakeUpdateResultFlags__SkipAutoScale1                                    = 2,
	ECameraShakeUpdateResultFlags__SkipAutoPlaySpace2                                = 4,
	ECameraShakeUpdateResultFlags__Default3                                          = 0,
	ECameraShakeUpdateResultFlags__ECameraShakeUpdateResultFlags_MAX4                = 5
};

/// Enum /Script/Engine.ECameraShakeDurationType
/// Size: 0x04
enum ECameraShakeDurationType : uint8_t
{
	ECameraShakeDurationType__Fixed0                                                 = 0,
	ECameraShakeDurationType__Infinite1                                              = 1,
	ECameraShakeDurationType__Custom2                                                = 2,
	ECameraShakeDurationType__ECameraShakeDurationType_MAX3                          = 3
};

/// Enum /Script/Engine.ECameraShakeAttenuation
/// Size: 0x03
enum ECameraShakeAttenuation : uint8_t
{
	ECameraShakeAttenuation__Linear0                                                 = 0,
	ECameraShakeAttenuation__Quadratic1                                              = 1,
	ECameraShakeAttenuation__ECameraShakeAttenuation_MAX2                            = 2
};

/// Enum /Script/Engine.ECameraAlphaBlendMode
/// Size: 0x03
enum ECameraAlphaBlendMode : uint8_t
{
	ECameraAlphaBlendMode__CABM_Linear0                                              = 0,
	ECameraAlphaBlendMode__CABM_Cubic1                                               = 1,
	ECameraAlphaBlendMode__CABM_MAX2                                                 = 2
};

/// Enum /Script/Engine.EAudioFaderCurve
/// Size: 0x06
enum EAudioFaderCurve : uint8_t
{
	EAudioFaderCurve__Linear0                                                        = 0,
	EAudioFaderCurve__Logarithmic1                                                   = 1,
	EAudioFaderCurve__SCurve2                                                        = 2,
	EAudioFaderCurve__Sin3                                                           = 3,
	EAudioFaderCurve__Count4                                                         = 4,
	EAudioFaderCurve__EAudioFaderCurve_MAX5                                          = 5
};

/// Enum /Script/Engine.EControllerAnalogStick
/// Size: 0x03
enum EControllerAnalogStick : uint8_t
{
	EControllerAnalogStick__CAS_LeftStick0                                           = 0,
	EControllerAnalogStick__CAS_RightStick1                                          = 1,
	EControllerAnalogStick__CAS_MAX2                                                 = 2
};

/// Enum /Script/Engine.ESyncOption
/// Size: 0x04
enum ESyncOption : uint8_t
{
	ESyncOption__Drive0                                                              = 0,
	ESyncOption__Passive1                                                            = 1,
	ESyncOption__Disabled2                                                           = 2,
	ESyncOption__ESyncOption_MAX3                                                    = 3
};

/// Enum /Script/Engine.EReflectionSourceType
/// Size: 0x03
enum EReflectionSourceType : uint8_t
{
	EReflectionSourceType__CapturedScene0                                            = 0,
	EReflectionSourceType__SpecifiedCubemap1                                         = 1,
	EReflectionSourceType__EReflectionSourceType_MAX2                                = 2
};

/// Enum /Script/Engine.ESceneCapturePrimitiveRenderMode
/// Size: 0x04
enum ESceneCapturePrimitiveRenderMode : uint8_t
{
	ESceneCapturePrimitiveRenderMode__PRM_LegacySceneCapture0                        = 0,
	ESceneCapturePrimitiveRenderMode__PRM_RenderScenePrimitives1                     = 1,
	ESceneCapturePrimitiveRenderMode__PRM_UseShowOnlyList2                           = 2,
	ESceneCapturePrimitiveRenderMode__PRM_MAX3                                       = 3
};

/// Enum /Script/Engine.EAnimCurveType
/// Size: 0x05
enum EAnimCurveType : uint8_t
{
	EAnimCurveType__AttributeCurve0                                                  = 0,
	EAnimCurveType__MaterialCurve1                                                   = 1,
	EAnimCurveType__MorphTargetCurve2                                                = 2,
	EAnimCurveType__MaxAnimCurveType3                                                = 3,
	EAnimCurveType__EAnimCurveType_MAX4                                              = 4
};

/// Enum /Script/Engine.ECustomBoneAttributeLookup
/// Size: 0x04
enum ECustomBoneAttributeLookup : uint8_t
{
	ECustomBoneAttributeLookup__BoneOnly0                                            = 0,
	ECustomBoneAttributeLookup__ImmediateParent1                                     = 1,
	ECustomBoneAttributeLookup__ParentHierarchy2                                     = 2,
	ECustomBoneAttributeLookup__ECustomBoneAttributeLookup_MAX3                      = 3
};

/// Enum /Script/Engine.EKinematicBonesUpdateToPhysics
/// Size: 0x03
enum EKinematicBonesUpdateToPhysics : uint8_t
{
	EKinematicBonesUpdateToPhysics__SkipSimulatingBones0                             = 0,
	EKinematicBonesUpdateToPhysics__SkipAllBones1                                    = 1,
	EKinematicBonesUpdateToPhysics__EKinematicBonesUpdateToPhysics_MAX2              = 2
};

/// Enum /Script/Engine.EAnimationMode
/// Size: 0x04
enum EAnimationMode : uint8_t
{
	EAnimationMode__AnimationBlueprint0                                              = 0,
	EAnimationMode__AnimationSingleNode1                                             = 1,
	EAnimationMode__AnimationCustomMode2                                             = 2,
	EAnimationMode__EAnimationMode_MAX3                                              = 3
};

/// Enum /Script/Engine.EPhysicsTransformUpdateMode
/// Size: 0x03
enum EPhysicsTransformUpdateMode : uint8_t
{
	EPhysicsTransformUpdateMode__SimulationUpatesComponentTransform0                 = 0,
	EPhysicsTransformUpdateMode__ComponentTransformIsKinematic1                      = 1,
	EPhysicsTransformUpdateMode__EPhysicsTransformUpdateMode_MAX2                    = 2
};

/// Enum /Script/Engine.ESkyAtmosphereTransformMode
/// Size: 0x04
enum ESkyAtmosphereTransformMode : uint8_t
{
	ESkyAtmosphereTransformMode__PlanetTopAtAbsoluteWorldOrigin0                     = 0,
	ESkyAtmosphereTransformMode__PlanetTopAtComponentTransform1                      = 1,
	ESkyAtmosphereTransformMode__PlanetCenterAtComponentTransform2                   = 2,
	ESkyAtmosphereTransformMode__ESkyAtmosphereTransformMode_MAX3                    = 3
};

/// Enum /Script/Engine.ESplinePointType
/// Size: 0x06
enum ESplinePointType : uint8_t
{
	ESplinePointType__Linear0                                                        = 0,
	ESplinePointType__Curve1                                                         = 1,
	ESplinePointType__Constant2                                                      = 2,
	ESplinePointType__CurveClamped3                                                  = 3,
	ESplinePointType__CurveCustomTangent4                                            = 4,
	ESplinePointType__ESplinePointType_MAX5                                          = 5
};

/// Enum /Script/Engine.ESplineCoordinateSpace
/// Size: 0x03
enum ESplineCoordinateSpace : uint8_t
{
	ESplineCoordinateSpace__Local0                                                   = 0,
	ESplineCoordinateSpace__World1                                                   = 1,
	ESplineCoordinateSpace__ESplineCoordinateSpace_MAX2                              = 2
};

/// Enum /Script/Engine.ESplineMeshAxis
/// Size: 0x04
enum ESplineMeshAxis : uint8_t
{
	ESplineMeshAxis__X0                                                              = 0,
	ESplineMeshAxis__Y1                                                              = 1,
	ESplineMeshAxis__Z2                                                              = 2,
	ESplineMeshAxis__ESplineMeshAxis_MAX3                                            = 3
};

/// Enum /Script/Engine.EVolumetricCloudTracingMaxDistanceMode
/// Size: 0x03
enum EVolumetricCloudTracingMaxDistanceMode : uint8_t
{
	EVolumetricCloudTracingMaxDistanceMode__DistanceFromCloudLayerEntryPoint0        = 0,
	EVolumetricCloudTracingMaxDistanceMode__DistanceFromPointOfView1                 = 1,
	EVolumetricCloudTracingMaxDistanceMode__EVolumetricCloudTracingMaxDistanceMode_MAX2 = 2
};

/// Enum /Script/Engine.ECurveTableMode
/// Size: 0x04
enum ECurveTableMode : uint8_t
{
	ECurveTableMode__Empty0                                                          = 0,
	ECurveTableMode__SimpleCurves1                                                   = 1,
	ECurveTableMode__RichCurves2                                                     = 2,
	ECurveTableMode__ECurveTableMode_MAX3                                            = 3
};

/// Enum /Script/Engine.FDataDrivenCVarType
/// Size: 0x04
enum FDataDrivenCVarType : uint8_t
{
	FDataDrivenCVarType__CVarFloat0                                                  = 0,
	FDataDrivenCVarType__CVarInt1                                                    = 1,
	FDataDrivenCVarType__CVarBool2                                                   = 2,
	FDataDrivenCVarType__FDataDrivenCVarType_MAX3                                    = 3
};

/// Enum /Script/Engine.EEvaluateCurveTableResult
/// Size: 0x03
enum EEvaluateCurveTableResult : uint8_t
{
	EEvaluateCurveTableResult__RowFound0                                             = 0,
	EEvaluateCurveTableResult__RowNotFound1                                          = 1,
	EEvaluateCurveTableResult__EEvaluateCurveTableResult_MAX2                        = 2
};

/// Enum /Script/Engine.EReporterLineStyle
/// Size: 0x03
enum EReporterLineStyle : uint8_t
{
	EReporterLineStyle__Line0                                                        = 0,
	EReporterLineStyle__Dash1                                                        = 1,
	EReporterLineStyle__EReporterLineStyle_MAX2                                      = 2
};

/// Enum /Script/Engine.EGraphAxisStyle
/// Size: 0x04
enum EGraphAxisStyle : uint8_t
{
	EGraphAxisStyle__Lines0                                                          = 0,
	EGraphAxisStyle__Notches1                                                        = 1,
	EGraphAxisStyle__Grid2                                                           = 2,
	EGraphAxisStyle__EGraphAxisStyle_MAX3                                            = 3
};

/// Enum /Script/Engine.EGraphDataStyle
/// Size: 0x03
enum EGraphDataStyle : uint8_t
{
	EGraphDataStyle__Lines0                                                          = 0,
	EGraphDataStyle__Filled1                                                         = 1,
	EGraphDataStyle__EGraphDataStyle_MAX2                                            = 2
};

/// Enum /Script/Engine.ELegendPosition
/// Size: 0x03
enum ELegendPosition : uint8_t
{
	ELegendPosition__Outside0                                                        = 0,
	ELegendPosition__Inside1                                                         = 1,
	ELegendPosition__ELegendPosition_MAX2                                            = 2
};

/// Enum /Script/Engine.EGrammaticalGender
/// Size: 0x05
enum EGrammaticalGender : uint8_t
{
	EGrammaticalGender__Neuter0                                                      = 0,
	EGrammaticalGender__Masculine1                                                   = 1,
	EGrammaticalGender__Feminine2                                                    = 2,
	EGrammaticalGender__Mixed3                                                       = 3,
	EGrammaticalGender__EGrammaticalGender_MAX4                                      = 4
};

/// Enum /Script/Engine.EGrammaticalNumber
/// Size: 0x03
enum EGrammaticalNumber : uint8_t
{
	EGrammaticalNumber__Singular0                                                    = 0,
	EGrammaticalNumber__Plural1                                                      = 1,
	EGrammaticalNumber__EGrammaticalNumber_MAX2                                      = 2
};

/// Enum /Script/Engine.ETypedElementWorldType
/// Size: 0x03
enum ETypedElementWorldType : uint8_t
{
	ETypedElementWorldType__Game0                                                    = 0,
	ETypedElementWorldType__Editor1                                                  = 1,
	ETypedElementWorldType__ETypedElementWorldType_MAX2                              = 2
};

/// Enum /Script/Engine.ECustomTimeStepSynchronizationState
/// Size: 0x05
enum ECustomTimeStepSynchronizationState : uint8_t
{
	ECustomTimeStepSynchronizationState__Closed0                                     = 0,
	ECustomTimeStepSynchronizationState__Error1                                      = 1,
	ECustomTimeStepSynchronizationState__Synchronized2                               = 2,
	ECustomTimeStepSynchronizationState__Synchronizing3                              = 3,
	ECustomTimeStepSynchronizationState__ECustomTimeStepSynchronizationState_MAX4    = 4
};

/// Enum /Script/Engine.EVectorQuantization
/// Size: 0x04
enum EVectorQuantization : uint8_t
{
	EVectorQuantization__RoundWholeNumber0                                           = 0,
	EVectorQuantization__RoundOneDecimal1                                            = 1,
	EVectorQuantization__RoundTwoDecimals2                                           = 2,
	EVectorQuantization__EVectorQuantization_MAX3                                    = 3
};

/// Enum /Script/Engine.ERotatorQuantization
/// Size: 0x03
enum ERotatorQuantization : uint8_t
{
	ERotatorQuantization__ByteComponents0                                            = 0,
	ERotatorQuantization__ShortComponents1                                           = 1,
	ERotatorQuantization__ERotatorQuantization_MAX2                                  = 2
};

/// Enum /Script/Engine.ETimecodeProviderSynchronizationState
/// Size: 0x05
enum ETimecodeProviderSynchronizationState : uint8_t
{
	ETimecodeProviderSynchronizationState__Closed0                                   = 0,
	ETimecodeProviderSynchronizationState__Error1                                    = 1,
	ETimecodeProviderSynchronizationState__Synchronized2                             = 2,
	ETimecodeProviderSynchronizationState__Synchronizing3                            = 3,
	ETimecodeProviderSynchronizationState__ETimecodeProviderSynchronizationState_MAX4 = 4
};

/// Enum /Script/Engine.EFontCacheType
/// Size: 0x03
enum EFontCacheType : uint8_t
{
	EFontCacheType__Offline0                                                         = 0,
	EFontCacheType__Runtime1                                                         = 1,
	EFontCacheType__EFontCacheType_MAX2                                              = 2
};

/// Enum /Script/Engine.ERootMotionAccumulateMode
/// Size: 0x03
enum ERootMotionAccumulateMode : uint8_t
{
	ERootMotionAccumulateMode__Override0                                             = 0,
	ERootMotionAccumulateMode__Additive1                                             = 1,
	ERootMotionAccumulateMode__ERootMotionAccumulateMode_MAX2                        = 2
};

/// Enum /Script/Engine.ERootMotionSourceStatusFlags
/// Size: 0x04
enum ERootMotionSourceStatusFlags : uint8_t
{
	ERootMotionSourceStatusFlags__Prepared0                                          = 1,
	ERootMotionSourceStatusFlags__Finished1                                          = 2,
	ERootMotionSourceStatusFlags__MarkedForRemoval2                                  = 4,
	ERootMotionSourceStatusFlags__ERootMotionSourceStatusFlags_MAX3                  = 5
};

/// Enum /Script/Engine.ERootMotionSourceSettingsFlags
/// Size: 0x04
enum ERootMotionSourceSettingsFlags : uint8_t
{
	ERootMotionSourceSettingsFlags__UseSensitiveLiftoffCheck0                        = 1,
	ERootMotionSourceSettingsFlags__DisablePartialEndTick1                           = 2,
	ERootMotionSourceSettingsFlags__IgnoreZAccumulate2                               = 4,
	ERootMotionSourceSettingsFlags__ERootMotionSourceSettingsFlags_MAX3              = 5
};

/// Enum /Script/Engine.ERootMotionFinishVelocityMode
/// Size: 0x04
enum ERootMotionFinishVelocityMode : uint8_t
{
	ERootMotionFinishVelocityMode__MaintainLastRootMotionVelocity0                   = 0,
	ERootMotionFinishVelocityMode__SetVelocity1                                      = 1,
	ERootMotionFinishVelocityMode__ClampVelocity2                                    = 2,
	ERootMotionFinishVelocityMode__ERootMotionFinishVelocityMode_MAX3                = 3
};

/// Enum /Script/Engine.EWindowMode
/// Size: 0x04
enum EWindowMode : uint8_t
{
	EWindowMode__Fullscreen0                                                         = 0,
	EWindowMode__WindowedFullscreen1                                                 = 1,
	EWindowMode__Windowed2                                                           = 2,
	EWindowMode__EWindowMode_MAX3                                                    = 3
};

/// Enum /Script/Engine.ESlateGesture
/// Size: 0x07
enum ESlateGesture : uint8_t
{
	ESlateGesture__None0                                                             = 0,
	ESlateGesture__Scroll1                                                           = 1,
	ESlateGesture__Magnify2                                                          = 2,
	ESlateGesture__Swipe3                                                            = 3,
	ESlateGesture__Rotate4                                                           = 4,
	ESlateGesture__LongPress5                                                        = 5,
	ESlateGesture__ESlateGesture_MAX6                                                = 6
};

/// Enum /Script/Engine.EMIDCreationFlags
/// Size: 0x03
enum EMIDCreationFlags : uint8_t
{
	EMIDCreationFlags__None0                                                         = 0,
	EMIDCreationFlags__Transient1                                                    = 1,
	EMIDCreationFlags__EMIDCreationFlags_MAX2                                        = 2
};

/// Enum /Script/Engine.EEasingFunc
/// Size: 0x15
enum EEasingFunc : uint8_t
{
	EEasingFunc__Linear0                                                             = 0,
	EEasingFunc__Step1                                                               = 1,
	EEasingFunc__SinusoidalIn2                                                       = 2,
	EEasingFunc__SinusoidalOut3                                                      = 3,
	EEasingFunc__SinusoidalInOut4                                                    = 4,
	EEasingFunc__EaseIn5                                                             = 5,
	EEasingFunc__EaseOut6                                                            = 6,
	EEasingFunc__EaseInOut7                                                          = 7,
	EEasingFunc__ExpoIn8                                                             = 8,
	EEasingFunc__ExpoOut9                                                            = 9,
	EEasingFunc__ExpoInOut10                                                         = 10,
	EEasingFunc__CircularIn11                                                        = 11,
	EEasingFunc__CircularOut12                                                       = 12,
	EEasingFunc__CircularInOut13                                                     = 13,
	EEasingFunc__EEasingFunc_MAX14                                                   = 14
};

/// Enum /Script/Engine.ELerpInterpolationMode
/// Size: 0x04
enum ELerpInterpolationMode : uint8_t
{
	ELerpInterpolationMode__QuatInterp0                                              = 0,
	ELerpInterpolationMode__EulerInterp1                                             = 1,
	ELerpInterpolationMode__DualQuatInterp2                                          = 2,
	ELerpInterpolationMode__ELerpInterpolationMode_MAX3                              = 3
};

/// Enum /Script/Engine.EMatrixColumns
/// Size: 0x05
enum EMatrixColumns : uint8_t
{
	EMatrixColumns__First0                                                           = 0,
	EMatrixColumns__Second1                                                          = 1,
	EMatrixColumns__Third2                                                           = 2,
	EMatrixColumns__Fourth3                                                          = 3,
	EMatrixColumns__EMatrixColumns_MAX4                                              = 4
};

/// Enum /Script/Engine.EImportanceWeight
/// Size: 0x06
enum EImportanceWeight : uint8_t
{
	EImportanceWeight__Luminance0                                                    = 0,
	EImportanceWeight__Red1                                                          = 1,
	EImportanceWeight__Green2                                                        = 2,
	EImportanceWeight__Blue3                                                         = 3,
	EImportanceWeight__Alpha4                                                        = 4,
	EImportanceWeight__EImportanceWeight_MAX5                                        = 5
};

/// Enum /Script/Engine.EMeshFeatureImportance
/// Size: 0x07
enum EMeshFeatureImportance : uint8_t
{
	EMeshFeatureImportance__Off0                                                     = 0,
	EMeshFeatureImportance__Lowest1                                                  = 1,
	EMeshFeatureImportance__Low2                                                     = 2,
	EMeshFeatureImportance__Normal3                                                  = 3,
	EMeshFeatureImportance__High4                                                    = 4,
	EMeshFeatureImportance__Highest5                                                 = 5,
	EMeshFeatureImportance__EMeshFeatureImportance_MAX6                              = 6
};

/// Enum /Script/Engine.EStaticMeshReductionTerimationCriterion
/// Size: 0x04
enum EStaticMeshReductionTerimationCriterion : uint8_t
{
	EStaticMeshReductionTerimationCriterion__Triangles0                              = 0,
	EStaticMeshReductionTerimationCriterion__Vertices1                               = 1,
	EStaticMeshReductionTerimationCriterion__Any2                                    = 2,
	EStaticMeshReductionTerimationCriterion__EStaticMeshReductionTerimationCriterion_MAX3 = 3
};

/// Enum /Script/Engine.ELandscapeCullingPrecision
/// Size: 0x04
enum ELandscapeCullingPrecision : uint8_t
{
	ELandscapeCullingPrecision__High0                                                = 0,
	ELandscapeCullingPrecision__Medium1                                              = 1,
	ELandscapeCullingPrecision__Low2                                                 = 2,
	ELandscapeCullingPrecision__ELandscapeCullingPrecision_MAX3                      = 3
};

/// Enum /Script/Engine.EProxyNormalComputationMethod
/// Size: 0x04
enum EProxyNormalComputationMethod : uint8_t
{
	EProxyNormalComputationMethod__AngleWeighted0                                    = 0,
	EProxyNormalComputationMethod__AreaWeighted1                                     = 1,
	EProxyNormalComputationMethod__EqualWeighted2                                    = 2,
	EProxyNormalComputationMethod__EProxyNormalComputationMethod_MAX3                = 3
};

/// Enum /Script/Engine.EMeshLODSelectionType
/// Size: 0x05
enum EMeshLODSelectionType : uint8_t
{
	EMeshLODSelectionType__AllLODs0                                                  = 0,
	EMeshLODSelectionType__SpecificLOD1                                              = 1,
	EMeshLODSelectionType__CalculateLOD2                                             = 2,
	EMeshLODSelectionType__LowestDetailLOD3                                          = 3,
	EMeshLODSelectionType__EMeshLODSelectionType_MAX4                                = 4
};

/// Enum /Script/Engine.EMeshMergeType
/// Size: 0x03
enum EMeshMergeType : uint8_t
{
	EMeshMergeType__MeshMergeType_Default0                                           = 0,
	EMeshMergeType__MeshMergeType_MergeActor1                                        = 1,
	EMeshMergeType__MeshMergeType_MAX2                                               = 2
};

/// Enum /Script/Engine.EUVOutput
/// Size: 0x03
enum EUVOutput : uint8_t
{
	EUVOutput__DoNotOutputChannel0                                                   = 0,
	EUVOutput__OutputChannel1                                                        = 1,
	EUVOutput__EUVOutput_MAX2                                                        = 2
};

/// Enum /Script/Engine.EMeshApproximationType
/// Size: 0x03
enum EMeshApproximationType : uint8_t
{
	EMeshApproximationType__MeshAndMaterials0                                        = 0,
	EMeshApproximationType__MeshShapeOnly1                                           = 1,
	EMeshApproximationType__EMeshApproximationType_MAX2                              = 2
};

/// Enum /Script/Engine.EMeshApproximationBaseCappingType
/// Size: 0x04
enum EMeshApproximationBaseCappingType : uint8_t
{
	EMeshApproximationBaseCappingType__NoBaseCapping0                                = 0,
	EMeshApproximationBaseCappingType__ConvexPolygon1                                = 1,
	EMeshApproximationBaseCappingType__ConvexSolid2                                  = 2,
	EMeshApproximationBaseCappingType__EMeshApproximationBaseCappingType_MAX3        = 3
};

/// Enum /Script/Engine.EOccludedGeometryFilteringPolicy
/// Size: 0x03
enum EOccludedGeometryFilteringPolicy : uint8_t
{
	EOccludedGeometryFilteringPolicy__NoOcclusionFiltering0                          = 0,
	EOccludedGeometryFilteringPolicy__VisibilityBasedFiltering1                      = 1,
	EOccludedGeometryFilteringPolicy__EOccludedGeometryFilteringPolicy_MAX2          = 2
};

/// Enum /Script/Engine.EMeshApproximationSimplificationPolicy
/// Size: 0x04
enum EMeshApproximationSimplificationPolicy : uint8_t
{
	EMeshApproximationSimplificationPolicy__FixedTriangleCount0                      = 0,
	EMeshApproximationSimplificationPolicy__TrianglesPerArea1                        = 1,
	EMeshApproximationSimplificationPolicy__GeometricTolerance2                      = 2,
	EMeshApproximationSimplificationPolicy__EMeshApproximationSimplificationPolicy_MAX3 = 3
};

/// Enum /Script/Engine.EMeshApproximationGroundPlaneClippingPolicy
/// Size: 0x05
enum EMeshApproximationGroundPlaneClippingPolicy : uint8_t
{
	EMeshApproximationGroundPlaneClippingPolicy__NoGroundClipping0                   = 0,
	EMeshApproximationGroundPlaneClippingPolicy__DiscardWithZPlane1                  = 1,
	EMeshApproximationGroundPlaneClippingPolicy__CutWithZPlane2                      = 2,
	EMeshApproximationGroundPlaneClippingPolicy__CutAndFillWithZPlane3               = 3,
	EMeshApproximationGroundPlaneClippingPolicy__EMeshApproximationGroundPlaneClippingPolicy_MAX4 = 4
};

/// Enum /Script/Engine.EMeshApproximationUVGenerationPolicy
/// Size: 0x04
enum EMeshApproximationUVGenerationPolicy : uint8_t
{
	EMeshApproximationUVGenerationPolicy__PreferUVAtlas0                             = 0,
	EMeshApproximationUVGenerationPolicy__PreferXAtlas1                              = 1,
	EMeshApproximationUVGenerationPolicy__PreferPatchBuilder2                        = 2,
	EMeshApproximationUVGenerationPolicy__EMeshApproximationUVGenerationPolicy_MAX3  = 3
};

/// Enum /Script/Engine.EVertexPaintAxis
/// Size: 0x04
enum EVertexPaintAxis : uint8_t
{
	EVertexPaintAxis__X0                                                             = 0,
	EVertexPaintAxis__Y1                                                             = 1,
	EVertexPaintAxis__Z2                                                             = 2,
	EVertexPaintAxis__EVertexPaintAxis_MAX3                                          = 3
};

/// Enum /Script/Engine.EPSCPoolMethod
/// Size: 0x06
enum EPSCPoolMethod : uint8_t
{
	EPSCPoolMethod__None0                                                            = 0,
	EPSCPoolMethod__AutoRelease1                                                     = 1,
	EPSCPoolMethod__ManualRelease2                                                   = 2,
	EPSCPoolMethod__ManualRelease_OnComplete3                                        = 3,
	EPSCPoolMethod__FreeInPool4                                                      = 4,
	EPSCPoolMethod__EPSCPoolMethod_MAX5                                              = 5
};

/// Enum /Script/Engine.EPerQualityLevels
/// Size: 0x07
enum EPerQualityLevels : uint8_t
{
	EPerQualityLevels__Low0                                                          = 0,
	EPerQualityLevels__Medium1                                                       = 1,
	EPerQualityLevels__High2                                                         = 2,
	EPerQualityLevels__Epic3                                                         = 3,
	EPerQualityLevels__Cinematic4                                                    = 4,
	EPerQualityLevels__Num5                                                          = 5,
	EPerQualityLevels__EPerQualityLevels_MAX6                                        = 6
};

/// Enum /Script/Engine.EAngularDriveMode
/// Size: 0x03
enum EAngularDriveMode : uint8_t
{
	EAngularDriveMode__SLERP0                                                        = 0,
	EAngularDriveMode__TwistAndSwing1                                                = 1,
	EAngularDriveMode__EAngularDriveMode_MAX2                                        = 2
};

/// Enum /Script/Engine.EConstraintTransformComponentFlags
/// Size: 0x11
enum EConstraintTransformComponentFlags : uint8_t
{
	EConstraintTransformComponentFlags__None0                                        = 0,
	EConstraintTransformComponentFlags__ChildPosition1                               = 1,
	EConstraintTransformComponentFlags__ChildRotation2                               = 2,
	EConstraintTransformComponentFlags__ParentPosition3                              = 4,
	EConstraintTransformComponentFlags__ParentRotation4                              = 8,
	EConstraintTransformComponentFlags__AllChild5                                    = 3,
	EConstraintTransformComponentFlags__AllParent6                                   = 12,
	EConstraintTransformComponentFlags__AllPosition7                                 = 5,
	EConstraintTransformComponentFlags__AllRotation8                                 = 10,
	EConstraintTransformComponentFlags__All9                                         = 15,
	EConstraintTransformComponentFlags__EConstraintTransformComponentFlags_MAX10     = 16
};

/// Enum /Script/Engine.EPhysicsAssetSolverType
/// Size: 0x03
enum EPhysicsAssetSolverType : uint8_t
{
	EPhysicsAssetSolverType__RBAN0                                                   = 0,
	EPhysicsAssetSolverType__World1                                                  = 1,
	EPhysicsAssetSolverType__EPhysicsAssetSolverType_MAX2                            = 2
};

/// Enum /Script/Engine.ESettingsDOF
/// Size: 0x05
enum ESettingsDOF : uint8_t
{
	ESettingsDOF__Full3D0                                                            = 0,
	ESettingsDOF__YZPlane1                                                           = 1,
	ESettingsDOF__XZPlane2                                                           = 2,
	ESettingsDOF__XYPlane3                                                           = 3,
	ESettingsDOF__ESettingsDOF_MAX4                                                  = 4
};

/// Enum /Script/Engine.ESettingsLockedAxis
/// Size: 0x06
enum ESettingsLockedAxis : uint8_t
{
	ESettingsLockedAxis__None0                                                       = 0,
	ESettingsLockedAxis__X1                                                          = 1,
	ESettingsLockedAxis__Y2                                                          = 2,
	ESettingsLockedAxis__Z3                                                          = 3,
	ESettingsLockedAxis__Invalid4                                                    = 4,
	ESettingsLockedAxis__ESettingsLockedAxis_MAX5                                    = 5
};

/// Enum /Script/Engine.EDynamicForceFeedbackAction
/// Size: 0x04
enum EDynamicForceFeedbackAction : uint8_t
{
	EDynamicForceFeedbackAction__Start0                                              = 0,
	EDynamicForceFeedbackAction__Update1                                             = 1,
	EDynamicForceFeedbackAction__Stop2                                               = 2,
	EDynamicForceFeedbackAction__EDynamicForceFeedbackAction_MAX3                    = 3
};

/// Enum /Script/Engine.EVoiceBlockReasons
/// Size: 0x07
enum EVoiceBlockReasons : uint8_t
{
	EVoiceBlockReasons__None0                                                        = 0,
	EVoiceBlockReasons__Muted1                                                       = 1,
	EVoiceBlockReasons__MutedBy2                                                     = 2,
	EVoiceBlockReasons__Gameplay3                                                    = 4,
	EVoiceBlockReasons__Blocked4                                                     = 8,
	EVoiceBlockReasons__BlockedBy5                                                   = 16,
	EVoiceBlockReasons__EVoiceBlockReasons_MAX6                                      = 17
};

/// Enum /Script/Engine.EPropertyAccessCopyBatch
/// Size: 0x06
enum EPropertyAccessCopyBatch : uint8_t
{
	EPropertyAccessCopyBatch__InternalUnbatched0                                     = 0,
	EPropertyAccessCopyBatch__ExternalUnbatched1                                     = 1,
	EPropertyAccessCopyBatch__InternalBatched2                                       = 2,
	EPropertyAccessCopyBatch__ExternalBatched3                                       = 3,
	EPropertyAccessCopyBatch__Count4                                                 = 4,
	EPropertyAccessCopyBatch__EPropertyAccessCopyBatch_MAX5                          = 5
};

/// Enum /Script/Engine.EPropertyAccessIndirectionType
/// Size: 0x06
enum EPropertyAccessIndirectionType : uint8_t
{
	EPropertyAccessIndirectionType__Offset0                                          = 0,
	EPropertyAccessIndirectionType__Object1                                          = 1,
	EPropertyAccessIndirectionType__Array2                                           = 2,
	EPropertyAccessIndirectionType__ScriptFunction3                                  = 3,
	EPropertyAccessIndirectionType__NativeFunction4                                  = 4,
	EPropertyAccessIndirectionType__EPropertyAccessIndirectionType_MAX5              = 5
};

/// Enum /Script/Engine.EPropertyAccessObjectType
/// Size: 0x05
enum EPropertyAccessObjectType : uint8_t
{
	EPropertyAccessObjectType__None0                                                 = 0,
	EPropertyAccessObjectType__Object1                                               = 1,
	EPropertyAccessObjectType__WeakObject2                                           = 2,
	EPropertyAccessObjectType__SoftObject3                                           = 3,
	EPropertyAccessObjectType__EPropertyAccessObjectType_MAX4                        = 4
};

/// Enum /Script/Engine.EPropertyAccessCopyType
/// Size: 0x27
enum EPropertyAccessCopyType : uint8_t
{
	EPropertyAccessCopyType__None0                                                   = 0,
	EPropertyAccessCopyType__Plain1                                                  = 1,
	EPropertyAccessCopyType__Complex2                                                = 2,
	EPropertyAccessCopyType__Bool3                                                   = 3,
	EPropertyAccessCopyType__Struct4                                                 = 4,
	EPropertyAccessCopyType__Object5                                                 = 5,
	EPropertyAccessCopyType__Name6                                                   = 6,
	EPropertyAccessCopyType__Array7                                                  = 7,
	EPropertyAccessCopyType__PromoteBoolToByte8                                      = 8,
	EPropertyAccessCopyType__PromoteBoolToInt329                                     = 9,
	EPropertyAccessCopyType__PromoteBoolToInt6410                                    = 10,
	EPropertyAccessCopyType__PromoteBoolToFloat11                                    = 11,
	EPropertyAccessCopyType__PromoteBoolToDouble12                                   = 12,
	EPropertyAccessCopyType__PromoteByteToInt3213                                    = 13,
	EPropertyAccessCopyType__PromoteByteToInt6414                                    = 14,
	EPropertyAccessCopyType__PromoteByteToFloat15                                    = 15,
	EPropertyAccessCopyType__PromoteByteToDouble16                                   = 16,
	EPropertyAccessCopyType__PromoteInt32ToInt6417                                   = 17,
	EPropertyAccessCopyType__PromoteInt32ToFloat18                                   = 18,
	EPropertyAccessCopyType__PromoteInt32ToDouble19                                  = 19,
	EPropertyAccessCopyType__PromoteFloatToDouble20                                  = 20,
	EPropertyAccessCopyType__DemoteDoubleToFloat21                                   = 21,
	EPropertyAccessCopyType__PromoteArrayFloatToDouble22                             = 22,
	EPropertyAccessCopyType__DemoteArrayDoubleToFloat23                              = 23,
	EPropertyAccessCopyType__PromoteMapValueFloatToDouble24                          = 24,
	EPropertyAccessCopyType__DemoteMapValueDoubleToFloat25                           = 25,
	EPropertyAccessCopyType__EPropertyAccessCopyType_MAX26                           = 26
};

/// Enum /Script/Engine.EClearSceneOptions
/// Size: 0x04
enum EClearSceneOptions : uint8_t
{
	EClearSceneOptions__NoClear0                                                     = 0,
	EClearSceneOptions__HardwareClear1                                               = 1,
	EClearSceneOptions__QuadAtMaxZ2                                                  = 2,
	EClearSceneOptions__EClearSceneOptions_MAX3                                      = 3
};

/// Enum /Script/Engine.ECompositingSampleCount
/// Size: 0x05
enum ECompositingSampleCount : uint8_t
{
	ECompositingSampleCount__One0                                                    = 1,
	ECompositingSampleCount__Two1                                                    = 2,
	ECompositingSampleCount__Four2                                                   = 4,
	ECompositingSampleCount__Eight3                                                  = 8,
	ECompositingSampleCount__ECompositingSampleCount_MAX4                            = 9
};

/// Enum /Script/Engine.ECustomDepthStencil
/// Size: 0x05
enum ECustomDepthStencil : uint8_t
{
	ECustomDepthStencil__Disabled0                                                   = 0,
	ECustomDepthStencil__Enabled1                                                    = 1,
	ECustomDepthStencil__EnabledOnDemand2                                            = 2,
	ECustomDepthStencil__EnabledWithStencil3                                         = 3,
	ECustomDepthStencil__ECustomDepthStencil_MAX4                                    = 4
};

/// Enum /Script/Engine.EEarlyZPass
/// Size: 0x05
enum EEarlyZPass : uint8_t
{
	EEarlyZPass__None0                                                               = 0,
	EEarlyZPass__OpaqueOnly1                                                         = 1,
	EEarlyZPass__OpaqueAndMasked2                                                    = 2,
	EEarlyZPass__Auto3                                                               = 3,
	EEarlyZPass__EEarlyZPass_MAX4                                                    = 4
};

/// Enum /Script/Engine.EVelocityOutputPass
/// Size: 0x04
enum EVelocityOutputPass : uint8_t
{
	EVelocityOutputPass__DepthPass0                                                  = 0,
	EVelocityOutputPass__BasePass1                                                   = 1,
	EVelocityOutputPass__AfterBasePass2                                              = 2,
	EVelocityOutputPass__EVelocityOutputPass_MAX3                                    = 3
};

/// Enum /Script/Engine.EVertexDeformationOutputsVelocity
/// Size: 0x04
enum EVertexDeformationOutputsVelocity : uint8_t
{
	EVertexDeformationOutputsVelocity__Off0                                          = 0,
	EVertexDeformationOutputsVelocity__On1                                           = 1,
	EVertexDeformationOutputsVelocity__Auto2                                         = 2,
	EVertexDeformationOutputsVelocity__EVertexDeformationOutputsVelocity_MAX3        = 3
};

/// Enum /Script/Engine.EAlphaChannelMode
/// Size: 0x04
enum EAlphaChannelMode : uint8_t
{
	EAlphaChannelMode__Disabled0                                                     = 0,
	EAlphaChannelMode__LinearColorSpaceOnly1                                         = 1,
	EAlphaChannelMode__AllowThroughTonemapper2                                       = 2,
	EAlphaChannelMode__EAlphaChannelMode_MAX3                                        = 3
};

/// Enum /Script/Engine.EAutoExposureMethodUI
/// Size: 0x04
enum EAutoExposureMethodUI : uint8_t
{
	EAutoExposureMethodUI__AEM_Histogram0                                            = 0,
	EAutoExposureMethodUI__AEM_Basic1                                                = 1,
	EAutoExposureMethodUI__AEM_Manual2                                               = 2,
	EAutoExposureMethodUI__AEM_MAX3                                                  = 3
};

/// Enum /Script/Engine.EDefaultBackBufferPixelFormat
/// Size: 0x06
enum EDefaultBackBufferPixelFormat : uint8_t
{
	EDefaultBackBufferPixelFormat__DBBPF_B8G8R8A80                                   = 0,
	EDefaultBackBufferPixelFormat__DBBPF_A16B16G16R16_DEPRECATED1                    = 1,
	EDefaultBackBufferPixelFormat__DBBPF_FloatRGB_DEPRECATED2                        = 2,
	EDefaultBackBufferPixelFormat__DBBPF_FloatRGBA3                                  = 3,
	EDefaultBackBufferPixelFormat__DBBPF_A2B10G10R104                                = 4,
	EDefaultBackBufferPixelFormat__DBBPF_MAX5                                        = 5
};

/// Enum /Script/Engine.EFixedFoveationLevels
/// Size: 0x06
enum EFixedFoveationLevels : uint8_t
{
	EFixedFoveationLevels__Disabled0                                                 = 0,
	EFixedFoveationLevels__Low1                                                      = 1,
	EFixedFoveationLevels__Medium2                                                   = 2,
	EFixedFoveationLevels__High3                                                     = 3,
	EFixedFoveationLevels__HighTop4                                                  = 4,
	EFixedFoveationLevels__EFixedFoveationLevels_MAX5                                = 5
};

/// Enum /Script/Engine.EMobileAntiAliasingMethod
/// Size: 0x05
enum EMobileAntiAliasingMethod : uint8_t
{
	EMobileAntiAliasingMethod__None0                                                 = 0,
	EMobileAntiAliasingMethod__FXAA1                                                 = 1,
	EMobileAntiAliasingMethod__TemporalAA2                                           = 2,
	EMobileAntiAliasingMethod__MSAA3                                                 = 3,
	EMobileAntiAliasingMethod__EMobileAntiAliasingMethod_MAX4                        = 4
};

/// Enum /Script/Engine.EMobileFloatPrecisionMode
/// Size: 0x04
enum EMobileFloatPrecisionMode : uint8_t
{
	EMobileFloatPrecisionMode__Half0                                                 = 0,
	EMobileFloatPrecisionMode__Full_MaterialExpressionOnly1                          = 1,
	EMobileFloatPrecisionMode__Full2                                                 = 2,
	EMobileFloatPrecisionMode__EMobileFloatPrecisionMode_MAX3                        = 3
};

/// Enum /Script/Engine.EMobileShadingPath
/// Size: 0x03
enum EMobileShadingPath : uint8_t
{
	EMobileShadingPath__Forward0                                                     = 0,
	EMobileShadingPath__Deferred1                                                    = 1,
	EMobileShadingPath__EMobileShadingPath_MAX2                                      = 2
};

/// Enum /Script/Engine.EShaderCompressionFormat
/// Size: 0x05
enum EShaderCompressionFormat : uint8_t
{
	EShaderCompressionFormat__None0                                                  = 0,
	EShaderCompressionFormat__LZ41                                                   = 1,
	EShaderCompressionFormat__Oodle2                                                 = 2,
	EShaderCompressionFormat__Zlib3                                                  = 3,
	EShaderCompressionFormat__EShaderCompressionFormat_MAX4                          = 4
};

/// Enum /Script/Engine.ELumenSoftwareTracingMode
/// Size: 0x03
enum ELumenSoftwareTracingMode : uint8_t
{
	ELumenSoftwareTracingMode__DetailTracing0                                        = 1,
	ELumenSoftwareTracingMode__GlobalTracing1                                        = 0,
	ELumenSoftwareTracingMode__ELumenSoftwareTracingMode_MAX2                        = 2
};

/// Enum /Script/Engine.ELumenRayLightingMode
/// Size: 0x03
enum ELumenRayLightingMode : uint8_t
{
	ELumenRayLightingMode__SurfaceCache0                                             = 0,
	ELumenRayLightingMode__HitLighting1                                              = 2,
	ELumenRayLightingMode__ELumenRayLightingMode_MAX2                                = 3
};

/// Enum /Script/Engine.EWorkingColorSpace
/// Size: 0x08
enum EWorkingColorSpace : uint8_t
{
	EWorkingColorSpace__sRGB0                                                        = 1,
	EWorkingColorSpace__Rec20201                                                     = 2,
	EWorkingColorSpace__ACESAP02                                                     = 3,
	EWorkingColorSpace__ACESAP13                                                     = 4,
	EWorkingColorSpace__P3DCI4                                                       = 5,
	EWorkingColorSpace__P3D655                                                       = 6,
	EWorkingColorSpace__Custom6                                                      = 7,
	EWorkingColorSpace__EWorkingColorSpace_MAX7                                      = 8
};

/// Enum /Script/Engine.ESkeletalMeshAsyncProperties
/// Size: 0x60
enum ESkeletalMeshAsyncProperties : uint32_t
{
	ESkeletalMeshAsyncProperties__None0                                              = 0,
	ESkeletalMeshAsyncProperties__Materials1                                         = 1,
	ESkeletalMeshAsyncProperties__Skeleton2                                          = 2,
	ESkeletalMeshAsyncProperties__RefSkeleton3                                       = 4,
	ESkeletalMeshAsyncProperties__RetargetBasePose4                                  = 8,
	ESkeletalMeshAsyncProperties__RefBasesInvMatrix5                                 = 16,
	ESkeletalMeshAsyncProperties__MeshClothingAssets6                                = 32,
	ESkeletalMeshAsyncProperties__UseLegacyMeshDerivedDataKey7                       = 64,
	ESkeletalMeshAsyncProperties__HasActiveClothingAssets8                           = 128,
	ESkeletalMeshAsyncProperties__LODSettings9                                       = 256,
	ESkeletalMeshAsyncProperties__HasVertexColors10                                  = 512,
	ESkeletalMeshAsyncProperties__VertexColorGuid11                                  = 1024,
	ESkeletalMeshAsyncProperties__MorphTargets12                                     = 2048,
	ESkeletalMeshAsyncProperties__SkeletalMeshRenderData13                           = 4096,
	ESkeletalMeshAsyncProperties__MeshEditorDataObject14                             = 8192,
	ESkeletalMeshAsyncProperties__NeverStream15                                      = 16384,
	ESkeletalMeshAsyncProperties__OverrideLODStreamingSettings16                     = 32768,
	ESkeletalMeshAsyncProperties__SupportLODStreaming17                              = 65536,
	ESkeletalMeshAsyncProperties__MaxNumStreamedLODs18                               = 131072,
	ESkeletalMeshAsyncProperties__MaxNumOptionalLODs19                               = 262144,
	ESkeletalMeshAsyncProperties__ImportedModel20                                    = 524288,
	ESkeletalMeshAsyncProperties__LODInfo21                                          = 1048576,
	ESkeletalMeshAsyncProperties__SkinWeightProfiles22                               = 2097152,
	ESkeletalMeshAsyncProperties__CachedComposedRefPoseMatrices23                    = 4194304,
	ESkeletalMeshAsyncProperties__SamplingInfo24                                     = 8388608,
	ESkeletalMeshAsyncProperties__NodeMappingData25                                  = 16777216,
	ESkeletalMeshAsyncProperties__ShadowPhysicsAsset26                               = 33554432,
	ESkeletalMeshAsyncProperties__SkelMirrorTable27                                  = 67108864,
	ESkeletalMeshAsyncProperties__MinLod28                                           = 134217728,
	ESkeletalMeshAsyncProperties__DisableBelowMinLodStripping29                      = 268435456,
	ESkeletalMeshAsyncProperties__SkelMirrorAxis30                                   = 536870912,
	ESkeletalMeshAsyncProperties__SkelMirrorFlipAxis31                               = 1073741824,
	ESkeletalMeshAsyncProperties__DefaultAnimationRig32                              = -2147483648,
	ESkeletalMeshAsyncProperties__NegativeBoundsExtension33                          = 0,
	ESkeletalMeshAsyncProperties__PositiveBoundsExtension34                          = 0,
	ESkeletalMeshAsyncProperties__ExtendedBounds35                                   = 0,
	ESkeletalMeshAsyncProperties__HasBeenSimplified36                                = 0,
	ESkeletalMeshAsyncProperties__EnablePerPolyCollision37                           = 0,
	ESkeletalMeshAsyncProperties__BodySetup38                                        = 0,
	ESkeletalMeshAsyncProperties__MorphTargetIndexMap39                              = 0,
	ESkeletalMeshAsyncProperties__FloorOffset40                                      = 0,
	ESkeletalMeshAsyncProperties__ImportedBounds41                                   = 0,
	ESkeletalMeshAsyncProperties__PhysicsAsset42                                     = 0,
	ESkeletalMeshAsyncProperties__AssetImportData43                                  = 0,
	ESkeletalMeshAsyncProperties__ThumbnailInfo44                                    = 0,
	ESkeletalMeshAsyncProperties__HasCustomDefaultEditorCamera45                     = 0,
	ESkeletalMeshAsyncProperties__DefaultEditorCameraLocation46                      = 0,
	ESkeletalMeshAsyncProperties__DefaultEditorCameraRotation47                      = 0,
	ESkeletalMeshAsyncProperties__RequiresLODScreenSizeConversion48                  = 0,
	ESkeletalMeshAsyncProperties__PostProcessAnimBlueprint49                         = 0,
	ESkeletalMeshAsyncProperties__DefaultEditorCameraLookAt50                        = 0,
	ESkeletalMeshAsyncProperties__PreviewAttachedAssetContainer51                    = 0,
	ESkeletalMeshAsyncProperties__DefaultEditorCameraOrthoZoom52                     = 0,
	ESkeletalMeshAsyncProperties__RequiresLODHysteresisConversion53                  = 0,
	ESkeletalMeshAsyncProperties__bSupportRayTracing54                               = 0,
	ESkeletalMeshAsyncProperties__RayTracingMinLOD55                                 = 0,
	ESkeletalMeshAsyncProperties__ClothLODBiasMode56                                 = 0,
	ESkeletalMeshAsyncProperties__DefaultMeshDeformer57                              = 0,
	ESkeletalMeshAsyncProperties__All58                                              = -1,
	ESkeletalMeshAsyncProperties__ESkeletalMeshAsyncProperties_MAX59                 = 1
};

/// Enum /Script/Engine.EClothLODBiasMode
/// Size: 0x04
enum EClothLODBiasMode : uint8_t
{
	EClothLODBiasMode__MappingsToSameLOD0                                            = 0,
	EClothLODBiasMode__MappingsToMinLOD1                                             = 1,
	EClothLODBiasMode__MappingsToAnyLOD2                                             = 2,
	EClothLODBiasMode__EClothLODBiasMode_MAX3                                        = 3
};

/// Enum /Script/Engine.EBoneFilterActionOption
/// Size: 0x04
enum EBoneFilterActionOption : uint8_t
{
	EBoneFilterActionOption__Remove0                                                 = 0,
	EBoneFilterActionOption__Keep1                                                   = 1,
	EBoneFilterActionOption__Invalid2                                                = 2,
	EBoneFilterActionOption__EBoneFilterActionOption_MAX3                            = 3
};

/// Enum /Script/Engine.EVirtualizationMode
/// Size: 0x04
enum EVirtualizationMode : uint8_t
{
	EVirtualizationMode__Disabled0                                                   = 0,
	EVirtualizationMode__PlayWhenSilent1                                             = 1,
	EVirtualizationMode__Restart2                                                    = 2,
	EVirtualizationMode__EVirtualizationMode_MAX3                                    = 3
};

/// Enum /Script/Engine.EMaxConcurrentResolutionRule
/// Size: 0x09
enum EMaxConcurrentResolutionRule : uint8_t
{
	EMaxConcurrentResolutionRule__PreventNew0                                        = 0,
	EMaxConcurrentResolutionRule__StopOldest1                                        = 1,
	EMaxConcurrentResolutionRule__StopFarthestThenPreventNew2                        = 2,
	EMaxConcurrentResolutionRule__StopFarthestThenOldest3                            = 3,
	EMaxConcurrentResolutionRule__StopLowestPriority4                                = 4,
	EMaxConcurrentResolutionRule__StopQuietest5                                      = 5,
	EMaxConcurrentResolutionRule__StopLowestPriorityThenPreventNew6                  = 6,
	EMaxConcurrentResolutionRule__Count7                                             = 7,
	EMaxConcurrentResolutionRule__EMaxConcurrentResolutionRule_MAX8                  = 8
};

/// Enum /Script/Engine.EConcurrencyVolumeScaleMode
/// Size: 0x04
enum EConcurrencyVolumeScaleMode : uint8_t
{
	EConcurrencyVolumeScaleMode__Default0                                            = 0,
	EConcurrencyVolumeScaleMode__Distance1                                           = 1,
	EConcurrencyVolumeScaleMode__Priority2                                           = 2,
	EConcurrencyVolumeScaleMode__EConcurrencyVolumeScaleMode_MAX3                    = 3
};

/// Enum /Script/Engine.EModulationRouting
/// Size: 0x05
enum EModulationRouting : uint8_t
{
	EModulationRouting__Disable0                                                     = 0,
	EModulationRouting__Inherit1                                                     = 1,
	EModulationRouting__Override2                                                    = 2,
	EModulationRouting__Union3                                                       = 3,
	EModulationRouting__EModulationRouting_MAX4                                      = 4
};

/// Enum /Script/Engine.ESourceBusChannels
/// Size: 0x03
enum ESourceBusChannels : uint8_t
{
	ESourceBusChannels__Mono0                                                        = 0,
	ESourceBusChannels__Stereo1                                                      = 1,
	ESourceBusChannels__ESourceBusChannels_MAX2                                      = 2
};

/// Enum /Script/Engine.EFFTSize
/// Size: 0x07
enum EFFTSize : uint8_t
{
	EFFTSize__DefaultSize0                                                           = 0,
	EFFTSize__Min1                                                                   = 1,
	EFFTSize__Small2                                                                 = 2,
	EFFTSize__Medium3                                                                = 3,
	EFFTSize__Large4                                                                 = 4,
	EFFTSize__VeryLarge5                                                             = 5,
	EFFTSize__Max6                                                                   = 6
};

/// Enum /Script/Engine.EFFTPeakInterpolationMethod
/// Size: 0x05
enum EFFTPeakInterpolationMethod : uint8_t
{
	EFFTPeakInterpolationMethod__NearestNeighbor0                                    = 0,
	EFFTPeakInterpolationMethod__Linear1                                             = 1,
	EFFTPeakInterpolationMethod__Quadratic2                                          = 2,
	EFFTPeakInterpolationMethod__ConstantQ3                                          = 3,
	EFFTPeakInterpolationMethod__EFFTPeakInterpolationMethod_MAX4                    = 4
};

/// Enum /Script/Engine.EFFTWindowType
/// Size: 0x05
enum EFFTWindowType : uint8_t
{
	EFFTWindowType__None0                                                            = 0,
	EFFTWindowType__Hamming1                                                         = 1,
	EFFTWindowType__Hann2                                                            = 2,
	EFFTWindowType__Blackman3                                                        = 3,
	EFFTWindowType__EFFTWindowType_MAX4                                              = 4
};

/// Enum /Script/Engine.EAudioSpectrumType
/// Size: 0x04
enum EAudioSpectrumType : uint8_t
{
	EAudioSpectrumType__MagnitudeSpectrum0                                           = 0,
	EAudioSpectrumType__PowerSpectrum1                                               = 1,
	EAudioSpectrumType__Decibel2                                                     = 2,
	EAudioSpectrumType__EAudioSpectrumType_MAX3                                      = 3
};

/// Enum /Script/Engine.EGainParamMode
/// Size: 0x03
enum EGainParamMode : uint8_t
{
	EGainParamMode__Linear0                                                          = 0,
	EGainParamMode__Decibels1                                                        = 1,
	EGainParamMode__EGainParamMode_MAX2                                              = 2
};

/// Enum /Script/Engine.EAudioSpectrumBandPresetType
/// Size: 0x05
enum EAudioSpectrumBandPresetType : uint8_t
{
	EAudioSpectrumBandPresetType__KickDrum0                                          = 0,
	EAudioSpectrumBandPresetType__SnareDrum1                                         = 1,
	EAudioSpectrumBandPresetType__Voice2                                             = 2,
	EAudioSpectrumBandPresetType__Cymbals3                                           = 3,
	EAudioSpectrumBandPresetType__EAudioSpectrumBandPresetType_MAX4                  = 4
};

/// Enum /Script/Engine.EAudioRecordingExportType
/// Size: 0x03
enum EAudioRecordingExportType : uint8_t
{
	EAudioRecordingExportType__SoundWave0                                            = 0,
	EAudioRecordingExportType__WavFile1                                              = 1,
	EAudioRecordingExportType__EAudioRecordingExportType_MAX2                        = 2
};

/// Enum /Script/Engine.ESendLevelControlMethod
/// Size: 0x04
enum ESendLevelControlMethod : uint8_t
{
	ESendLevelControlMethod__Linear0                                                 = 0,
	ESendLevelControlMethod__CustomCurve1                                            = 1,
	ESendLevelControlMethod__Manual2                                                 = 2,
	ESendLevelControlMethod__ESendLevelControlMethod_MAX3                            = 3
};

/// Enum /Script/Engine.ESubmixSendStage
/// Size: 0x03
enum ESubmixSendStage : uint8_t
{
	ESubmixSendStage__PostDistanceAttenuation0                                       = 0,
	ESubmixSendStage__PreDistanceAttenuation1                                        = 1,
	ESubmixSendStage__ESubmixSendStage_MAX2                                          = 2
};

/// Enum /Script/Engine.ETextureEncodeEffort
/// Size: 0x05
enum ETextureEncodeEffort : uint8_t
{
	ETextureEncodeEffort__Default0                                                   = 0,
	ETextureEncodeEffort__Low1                                                       = 10,
	ETextureEncodeEffort__Normal2                                                    = 20,
	ETextureEncodeEffort__High3                                                      = 30,
	ETextureEncodeEffort__ETextureEncodeEffort_MAX4                                  = 31
};

/// Enum /Script/Engine.ETextureUniversalTiling
/// Size: 0x04
enum ETextureUniversalTiling : uint8_t
{
	ETextureUniversalTiling__Disabled0                                               = 0,
	ETextureUniversalTiling__Enabled_256KB1                                          = 1,
	ETextureUniversalTiling__Enabled_64KB2                                           = 2,
	ETextureUniversalTiling__ETextureUniversalTiling_MAX3                            = 3
};

/// Enum /Script/Engine.ETextureEncodeSpeedOverride
/// Size: 0x05
enum ETextureEncodeSpeedOverride : uint8_t
{
	ETextureEncodeSpeedOverride__Disabled0                                           = 255,
	ETextureEncodeSpeedOverride__Final1                                              = 0,
	ETextureEncodeSpeedOverride__FinalIfAvailable2                                   = 1,
	ETextureEncodeSpeedOverride__Fast3                                               = 2,
	ETextureEncodeSpeedOverride__ETextureEncodeSpeedOverride_MAX4                    = 256
};

/// Enum /Script/Engine.ERenderFocusRule
/// Size: 0x05
enum ERenderFocusRule : uint8_t
{
	ERenderFocusRule__Always0                                                        = 0,
	ERenderFocusRule__NonPointer1                                                    = 1,
	ERenderFocusRule__NavigationOnly2                                                = 2,
	ERenderFocusRule__Never3                                                         = 3,
	ERenderFocusRule__ERenderFocusRule_MAX4                                          = 4
};

/// Enum /Script/Engine.EUIScalingRule
/// Size: 0x07
enum EUIScalingRule : uint8_t
{
	EUIScalingRule__ShortestSide0                                                    = 0,
	EUIScalingRule__LongestSide1                                                     = 1,
	EUIScalingRule__Horizontal2                                                      = 2,
	EUIScalingRule__Vertical3                                                        = 3,
	EUIScalingRule__ScaleToFit4                                                      = 4,
	EUIScalingRule__Custom5                                                          = 5,
	EUIScalingRule__EUIScalingRule_MAX6                                              = 6
};

/// Enum /Script/Engine.EDataLayerState
/// Size: 0x04
enum EDataLayerState : uint8_t
{
	EDataLayerState__Unloaded0                                                       = 0,
	EDataLayerState__Loaded1                                                         = 1,
	EDataLayerState__Activated2                                                      = 2,
	EDataLayerState__EDataLayerState_MAX3                                            = 3
};

/// Enum /Script/Engine.EHLODLayerType
/// Size: 0x06
enum EHLODLayerType : uint8_t
{
	EHLODLayerType__Instancing0                                                      = 0,
	EHLODLayerType__MeshMerge1                                                       = 1,
	EHLODLayerType__MeshSimplify2                                                    = 2,
	EHLODLayerType__MeshApproximate3                                                 = 3,
	EHLODLayerType__Custom4                                                          = 4,
	EHLODLayerType__EHLODLayerType_MAX5                                              = 5
};

/// Enum /Script/Engine.EWorldPartitionRuntimeCellState
/// Size: 0x04
enum EWorldPartitionRuntimeCellState : uint8_t
{
	EWorldPartitionRuntimeCellState__Unloaded0                                       = 0,
	EWorldPartitionRuntimeCellState__Loaded1                                         = 1,
	EWorldPartitionRuntimeCellState__Activated2                                      = 2,
	EWorldPartitionRuntimeCellState__EWorldPartitionRuntimeCellState_MAX3            = 3
};

/// Enum /Script/Engine.EWorldPartitionStreamingPerformance
/// Size: 0x04
enum EWorldPartitionStreamingPerformance : uint8_t
{
	EWorldPartitionStreamingPerformance__Good0                                       = 0,
	EWorldPartitionStreamingPerformance__Slow1                                       = 1,
	EWorldPartitionStreamingPerformance__Critical2                                   = 2,
	EWorldPartitionStreamingPerformance__EWorldPartitionStreamingPerformance_MAX3    = 3
};

